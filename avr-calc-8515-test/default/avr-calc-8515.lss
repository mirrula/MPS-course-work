
avr-calc-8515.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ce2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  00001ce2  00001d76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  008001a4  008001a4  00001eba  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  00001ebc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000110  00000000  00000000  00002fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  000030d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000381  00000000  00000000  000032f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002e97  00000000  00000000  00003671  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000016db  00000000  00000000  00006508  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000024f3  00000000  00000000  00007be3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000330  00000000  00000000  0000a0d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000658  00000000  00000000  0000a408  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000177e  00000000  00000000  0000aa60  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000006af  00000000  00000000  0000c1de  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000168  00000000  00000000  0000c88d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	a7 c0       	rjmp	.+334    	; 0x152 <__bad_interrupt>
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	a5 c0       	rjmp	.+330    	; 0x152 <__bad_interrupt>
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	a3 c0       	rjmp	.+326    	; 0x152 <__bad_interrupt>
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	a1 c0       	rjmp	.+322    	; 0x152 <__bad_interrupt>
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	9f c0       	rjmp	.+318    	; 0x152 <__bad_interrupt>
      14:	9e c0       	rjmp	.+316    	; 0x152 <__bad_interrupt>
      16:	9d c0       	rjmp	.+314    	; 0x152 <__bad_interrupt>
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	9b c0       	rjmp	.+310    	; 0x152 <__bad_interrupt>
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	99 c0       	rjmp	.+306    	; 0x152 <__bad_interrupt>
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 40       	sbci	r16, 0x00	; 0
      24:	7a 10       	cpse	r7, r10
      26:	f3 5a       	subi	r31, 0xA3	; 163
      28:	00 a0       	ldd	r0, Z+32	; 0x20
      2a:	72 4e       	sbci	r23, 0xE2	; 226
      2c:	18 09       	sbc	r17, r8
      2e:	00 10       	cpse	r0, r0
      30:	a5 d4       	rcall	.+2378   	; 0x97c <decide+0x3bc>
      32:	e8 00       	.word	0x00e8	; ????
      34:	00 e8       	ldi	r16, 0x80	; 128
      36:	76 48       	sbci	r23, 0x86	; 134
      38:	17 00       	.word	0x0017	; ????
      3a:	00 e4       	ldi	r16, 0x40	; 64
      3c:	0b 54       	subi	r16, 0x4B	; 75
      3e:	02 00       	.word	0x0002	; ????
      40:	00 ca       	rjmp	.-3072   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      42:	9a 3b       	cpi	r25, 0xBA	; 186
      44:	00 00       	nop
      46:	00 e1       	ldi	r16, 0x10	; 16
      48:	f5 05       	cpc	r31, r5
      4a:	00 00       	nop
      4c:	80 96       	adiw	r24, 0x20	; 32
      4e:	98 00       	.word	0x0098	; ????
      50:	00 00       	nop
      52:	40 42       	sbci	r20, 0x20	; 32
      54:	0f 00       	.word	0x000f	; ????
      56:	00 00       	nop
      58:	a0 86       	std	Z+8, r10	; 0x08
      5a:	01 00       	.word	0x0001	; ????
      5c:	00 00       	nop
      5e:	10 27       	eor	r17, r16
      60:	00 00       	nop
      62:	00 00       	nop
      64:	e8 03       	fmulsu	r22, r16
      66:	00 00       	nop
      68:	00 00       	nop
      6a:	64 00       	.word	0x0064	; ????
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	0a 00       	.word	0x000a	; ????
      72:	00 00       	nop
      74:	00 00       	nop
      76:	01 00       	.word	0x0001	; ????
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	2c 76       	andi	r18, 0x6C	; 108
      7e:	d8 88       	ldd	r13, Y+16	; 0x10
      80:	dc 67       	ori	r29, 0x7C	; 124
      82:	4f 08       	sbc	r4, r15
      84:	23 df       	rcall	.-442    	; 0xfffffecc <__eeprom_end+0xff7efecc>
      86:	c1 df       	rcall	.-126    	; 0xa <__zero_reg__+0x9>
      88:	ae 59       	subi	r26, 0x9E	; 158
      8a:	e1 b1       	in	r30, 0x01	; 1
      8c:	b7 96       	adiw	r30, 0x27	; 39
      8e:	e5 e3       	ldi	r30, 0x35	; 53
      90:	e4 53       	subi	r30, 0x34	; 52
      92:	c6 3a       	cpi	r28, 0xA6	; 166
      94:	e6 51       	subi	r30, 0x16	; 22
      96:	99 76       	andi	r25, 0x69	; 105
      98:	96 e8       	ldi	r25, 0x86	; 134
      9a:	e6 c2       	rjmp	.+1484   	; 0x668 <decide+0xa8>
      9c:	84 26       	eor	r8, r20
      9e:	eb 89       	ldd	r30, Y+19	; 0x13
      a0:	8c 9b       	sbis	0x11, 4	; 17
      a2:	62 ed       	ldi	r22, 0xD2	; 210
      a4:	40 7c       	andi	r20, 0xC0	; 192
      a6:	6f fc       	.word	0xfc6f	; ????
      a8:	ef bc       	out	0x2f, r14	; 47
      aa:	9c 9f       	mul	r25, r28
      ac:	40 f2       	brcs	.-112    	; 0x3e <__SP_H__>
      ae:	ba a5       	ldd	r27, Y+42	; 0x2a
      b0:	6f a5       	ldd	r22, Y+47	; 0x2f
      b2:	f4 90       	lpm	r15, Z+
      b4:	05 5a       	subi	r16, 0xA5	; 165
      b6:	2a f7       	brpl	.-54     	; 0x82 <__SREG__+0x43>
      b8:	5c 93       	st	X, r21
      ba:	6b 6c       	ori	r22, 0xCB	; 203
      bc:	f9 67       	ori	r31, 0x79	; 121
      be:	6d c1       	rjmp	.+730    	; 0x39a <calculate+0x74>
      c0:	1b fc       	.word	0xfc1b	; ????
      c2:	e0 e4       	ldi	r30, 0x40	; 64
      c4:	0d 47       	sbci	r16, 0x7D	; 125
      c6:	fe f5       	brtc	.+126    	; 0x146 <.do_clear_bss_loop>
      c8:	20 e6       	ldi	r18, 0x60	; 96
      ca:	b5 00       	.word	0x00b5	; ????
      cc:	d0 ed       	ldi	r29, 0xD0	; 208
      ce:	90 2e       	mov	r9, r16
      d0:	03 00       	.word	0x0003	; ????
      d2:	94 35       	cpi	r25, 0x54	; 84
      d4:	77 05       	cpc	r23, r7
      d6:	00 80       	ld	r0, Z
      d8:	84 1e       	adc	r8, r20
      da:	08 00       	.word	0x0008	; ????
      dc:	00 20       	and	r0, r0
      de:	4e 0a       	sbc	r4, r30
      e0:	00 00       	nop
      e2:	00 c8       	rjmp	.-4096   	; 0xfffff0e4 <__eeprom_end+0xff7ef0e4>
      e4:	0c 33       	cpi	r16, 0x3C	; 60
      e6:	33 33       	cpi	r19, 0x33	; 51
      e8:	33 0f       	add	r19, r19
      ea:	98 6e       	ori	r25, 0xE8	; 232
      ec:	12 83       	std	Z+2, r17	; 0x02
      ee:	11 41       	sbci	r17, 0x11	; 17
      f0:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f2:	21 14       	cp	r2, r1
      f4:	89 3b       	cpi	r24, 0xB9	; 185
      f6:	e6 55       	subi	r30, 0x56	; 86
      f8:	16 cf       	rjmp	.-468    	; 0xffffff26 <__eeprom_end+0xff7eff26>
      fa:	fe e6       	ldi	r31, 0x6E	; 110
      fc:	db 18       	sub	r13, r11
      fe:	d1 84       	ldd	r13, Z+9	; 0x09
     100:	4b 38       	cpi	r20, 0x8B	; 139
     102:	1b f7       	brvc	.-58     	; 0xca <__SREG__+0x8b>
     104:	7c 1d       	adc	r23, r12
     106:	90 1d       	adc	r25, r0
     108:	a4 bb       	out	0x14, r26	; 20
     10a:	e4 24       	eor	r14, r4
     10c:	20 32       	cpi	r18, 0x20	; 32
     10e:	84 72       	andi	r24, 0x24	; 36
     110:	5e 22       	and	r5, r30
     112:	81 00       	.word	0x0081	; ????
     114:	c9 f1       	breq	.+114    	; 0x188 <init_display+0x6>
     116:	24 ec       	ldi	r18, 0xC4	; 196
     118:	a1 e5       	ldi	r26, 0x51	; 81
     11a:	3d 27       	eor	r19, r29

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf e5       	ldi	r28, 0x5F	; 95
     122:	d2 e0       	ldi	r29, 0x02	; 2
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e6       	ldi	r26, 0x60	; 96
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	e2 ee       	ldi	r30, 0xE2	; 226
     130:	fc e1       	ldi	r31, 0x1C	; 28
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
     134:	05 90       	lpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a4 3a       	cpi	r26, 0xA4	; 164
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	a4 ea       	ldi	r26, 0xA4	; 164
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	aa 3c       	cpi	r26, 0xCA	; 202
     14a:	b1 07       	cpc	r27, r17
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	02 d0       	rcall	.+4      	; 0x154 <main>
     150:	c6 cd       	rjmp	.-1140   	; 0xfffffcde <__eeprom_end+0xff7efcde>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <main>:
# define F_CPU 4000000UL
#include "calculator.h"

int main(void){

    init_calculator();
     154:	e9 d4       	rcall	.+2514   	; 0xb28 <init_calculator>

	return 0;
}
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <trigger>:
}

//Функция генерирующая строб на линии E.
//По этому стробу производится запись команды/данных или чтение.
void trigger(){
    PORTC |= (1<<PC6); // Set PC6 (E).
     15c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	00 00       	nop
    _delay_us(1);
    PORTC &=~(1<<PC6); // Reset PC6 (E).
     160:	ae 98       	cbi	0x15, 6	; 21
     162:	00 00       	nop
	_delay_us(1);
}
     164:	08 95       	ret

00000166 <send_data>:
	_delay_us( 40 );
}

//Функция записи байта (символа) данных в lcd контроллер
void send_data(unsigned char data){
    PORTA = data;
     166:	8b bb       	out	0x1b, r24	; 27
    trigger();
     168:	f9 df       	rcall	.-14     	; 0x15c <trigger>
     16a:	8d e0       	ldi	r24, 0x0D	; 13
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <send_data+0x6>
     170:	00 00       	nop
	_delay_us( 40 );
}
     172:	08 95       	ret

00000174 <send_command>:
	on_flag = 1;
}

//Функция записи байта (символа) команды в lcd контроллер
void send_command(unsigned char command){
    PORTA = command;
     174:	8b bb       	out	0x1b, r24	; 27
    trigger();
     176:	f2 df       	rcall	.-28     	; 0x15c <trigger>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <send_command+0x6>
     17e:	00 00       	nop
	_delay_us( 40 );
}
     180:	08 95       	ret

00000182 <init_display>:

bool on_flag;

//Функция инициализации lcd контроллера hd44780
void init_display(){
    DDRC |= (1<<PC4)|(1<<PC6); 	// PC 4 is output for RS, 6 is output for Enable.
     182:	84 b3       	in	r24, 0x14	; 20
     184:	80 65       	ori	r24, 0x50	; 80
     186:	84 bb       	out	0x14, r24	; 20
    DDRA = 0xFF; 				// PA 0-7 is 8 bit data output bus.
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	8a bb       	out	0x1a, r24	; 26

	PORTC &=~(1<<PC6); // Reset PC6 (E).
     18c:	ae 98       	cbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	85 ea       	ldi	r24, 0xA5	; 165
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <init_display+0x10>
     196:	00 c0       	rjmp	.+0      	; 0x198 <init_display+0x16>
     198:	00 00       	nop

	_delay_ms(15); 

	send_command(0x38); // 2 line mode.
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	eb df       	rcall	.-42     	; 0x174 <send_command>
     19e:	81 ee       	ldi	r24, 0xE1	; 225
     1a0:	94 e0       	ldi	r25, 0x04	; 4
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <init_display+0x20>
     1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <init_display+0x26>
     1a8:	00 00       	nop
	_delay_ms(5); 
	send_command(0x38); // 2 line mode.
     1aa:	88 e3       	ldi	r24, 0x38	; 56
     1ac:	e3 df       	rcall	.-58     	; 0x174 <send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ae:	91 e2       	ldi	r25, 0x21	; 33
     1b0:	9a 95       	dec	r25
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <init_display+0x2e>
     1b4:	00 00       	nop
	_delay_us(100); 
	send_command(0x38); // 2 line mode.	
     1b6:	88 e3       	ldi	r24, 0x38	; 56
     1b8:	dd df       	rcall	.-70     	; 0x174 <send_command>

	send_command(0x0F);	// LCD ON, cursor ON
     1ba:	8f e0       	ldi	r24, 0x0F	; 15
     1bc:	db df       	rcall	.-74     	; 0x174 <send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1be:	83 ec       	ldi	r24, 0xC3	; 195
     1c0:	99 e0       	ldi	r25, 0x09	; 9
     1c2:	01 97       	sbiw	r24, 0x01	; 1
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <init_display+0x40>
     1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <init_display+0x46>
     1c8:	00 00       	nop
	_delay_ms(10);
	send_command(0x01); // Clear display screen
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	d3 df       	rcall	.-90     	; 0x174 <send_command>
     1ce:	83 ec       	ldi	r24, 0xC3	; 195
     1d0:	99 e0       	ldi	r25, 0x09	; 9
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <init_display+0x50>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <init_display+0x56>
     1d8:	00 00       	nop
	_delay_ms(10);
	send_command(0x81); 
     1da:	81 e8       	ldi	r24, 0x81	; 129
     1dc:	cb df       	rcall	.-106    	; 0x174 <send_command>
     1de:	83 ec       	ldi	r24, 0xC3	; 195
     1e0:	99 e0       	ldi	r25, 0x09	; 9
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <init_display+0x60>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <init_display+0x66>
     1e8:	00 00       	nop
	_delay_ms(10);

	PORTC |= (1<<PC6); // Set PC6 (E).
     1ea:	ae 9a       	sbi	0x15, 6	; 21

	on_flag = 1;
     1ec:	81 e0       	ldi	r24, 0x01	; 1
     1ee:	80 93 b4 01 	sts	0x01B4, r24
}
     1f2:	08 95       	ret

000001f4 <send_string>:
    PORTC &=~(1<<PC6); // Reset PC6 (E).
	_delay_us(1);
}

//Функция вывода строки
void send_string(const char *str){
     1f4:	ef 92       	push	r14
     1f6:	ff 92       	push	r15
     1f8:	cf 93       	push	r28
     1fa:	df 93       	push	r29
     1fc:	e8 2e       	mov	r14, r24
     1fe:	e7 01       	movw	r28, r14
     200:	7e 01       	movw	r14, r28
     202:	f9 2e       	mov	r15, r25
     204:	e7 01       	movw	r28, r14
    while(*str) send_data(*str++); // Send characters one by one.
     206:	01 c0       	rjmp	.+2      	; 0x20a <send_string+0x16>
     208:	ae df       	rcall	.-164    	; 0x166 <send_data>
     20a:	89 91       	ld	r24, Y+
     20c:	88 23       	and	r24, r24
     20e:	e1 f7       	brne	.-8      	; 0x208 <send_string+0x14>
}
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	ff 90       	pop	r15
     216:	ef 90       	pop	r14
     218:	08 95       	ret

0000021a <move_to>:

//Функция изменения текущей позиции курсора,
//x — номер символа в строке, y — номер строки
void move_to(unsigned char x, unsigned char y){
	unsigned char address = x;
	if ( y ) {
     21a:	61 11       	cpse	r22, r1
    	address += 0x40;
     21c:	80 5c       	subi	r24, 0xC0	; 192
  	}
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     21e:	ac 98       	cbi	0x15, 4	; 21
    send_command(1<<7 | address);
     220:	80 68       	ori	r24, 0x80	; 128
     222:	a8 df       	rcall	.-176    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     224:	ac 9a       	sbi	0x15, 4	; 21
}
     226:	08 95       	ret

00000228 <clear>:

void clear(){
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     228:	ac 98       	cbi	0x15, 4	; 21
    send_command(0x01);
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	a3 df       	rcall	.-186    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     22e:	ac 9a       	sbi	0x15, 4	; 21
}
     230:	08 95       	ret

00000232 <disp_on_off>:

void disp_on_off(){
	if (on_flag == 1) {
     232:	80 91 b4 01 	lds	r24, 0x01B4
     236:	88 23       	and	r24, r24
     238:	39 f0       	breq	.+14     	; 0x248 <disp_on_off+0x16>
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     23a:	ac 98       	cbi	0x15, 4	; 21
   		send_command(0x08);
     23c:	88 e0       	ldi	r24, 0x08	; 8
     23e:	9a df       	rcall	.-204    	; 0x174 <send_command>
		PORTC |=(1<<PC4); // Set PC4 (RS).
     240:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 0;
     242:	10 92 b4 01 	sts	0x01B4, r1
     246:	08 95       	ret
	}
	else {
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     248:	ac 98       	cbi	0x15, 4	; 21

		send_command(0x0F);	// LCD ON, cursor ON
     24a:	8f e0       	ldi	r24, 0x0F	; 15
     24c:	93 df       	rcall	.-218    	; 0x174 <send_command>
     24e:	83 ec       	ldi	r24, 0xC3	; 195
     250:	99 e0       	ldi	r25, 0x09	; 9
     252:	01 97       	sbiw	r24, 0x01	; 1
     254:	f1 f7       	brne	.-4      	; 0x252 <disp_on_off+0x20>
     256:	00 c0       	rjmp	.+0      	; 0x258 <disp_on_off+0x26>
     258:	00 00       	nop
		_delay_ms(10);
		send_command(0x01); // Clear display screen
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	8b df       	rcall	.-234    	; 0x174 <send_command>
     25e:	83 ec       	ldi	r24, 0xC3	; 195
     260:	99 e0       	ldi	r25, 0x09	; 9
     262:	01 97       	sbiw	r24, 0x01	; 1
     264:	f1 f7       	brne	.-4      	; 0x262 <__stack+0x3>
     266:	00 c0       	rjmp	.+0      	; 0x268 <__stack+0x9>
     268:	00 00       	nop
		_delay_ms(10);
		send_command(0x81); 
     26a:	81 e8       	ldi	r24, 0x81	; 129
     26c:	83 df       	rcall	.-250    	; 0x174 <send_command>
     26e:	83 ec       	ldi	r24, 0xC3	; 195
     270:	99 e0       	ldi	r25, 0x09	; 9
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <__stack+0x13>
     276:	00 c0       	rjmp	.+0      	; 0x278 <__stack+0x19>
     278:	00 00       	nop
		_delay_ms(10);

		PORTC |=(1<<PC4); // Set PC4 (RS).
     27a:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 1;
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	80 93 b4 01 	sts	0x01B4, r24
     282:	08 95       	ret

00000284 <init_keyboard>:
    {'1', '2', '3', '+', '-', '='},
    {'0', '.', 'p', 'r', 'A', '='}
};

void init_keyboard() {
    DDRC |= 0x0F; // PB 0-3 output for rows.
     284:	84 b3       	in	r24, 0x14	; 20
     286:	8f 60       	ori	r24, 0x0F	; 15
     288:	84 bb       	out	0x14, r24	; 20
    DDRD &= 0xC0; // PC 0-5 input for columns.
     28a:	81 b3       	in	r24, 0x11	; 17
     28c:	80 7c       	andi	r24, 0xC0	; 192
     28e:	81 bb       	out	0x11, r24	; 17
}
     290:	08 95       	ret

00000292 <scan_key>:

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
     292:	61 e0       	ldi	r22, 0x01	; 1
     294:	70 e0       	ldi	r23, 0x00	; 0
    DDRD &= 0xC0; // PC 0-5 input for columns.
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
     296:	82 b3       	in	r24, 0x12	; 18
     298:	8f 63       	ori	r24, 0x3F	; 63
     29a:	82 bb       	out	0x12, r24	; 18
        for(int i = 0;i<4;i++){
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
            PORTC = ~(1 << i);
     2a0:	cb 01       	movw	r24, r22
     2a2:	02 2e       	mov	r0, r18
     2a4:	02 c0       	rjmp	.+4      	; 0x2aa <scan_key+0x18>
     2a6:	88 0f       	add	r24, r24
     2a8:	99 1f       	adc	r25, r25
     2aa:	0a 94       	dec	r0
     2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <scan_key+0x14>
     2ae:	80 95       	com	r24
     2b0:	85 bb       	out	0x15, r24	; 21
            for(int j = 0;j < 6;j++){
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 e0       	ldi	r25, 0x00	; 0
                if(bit_is_clear(PIND, j)){
     2b6:	40 b3       	in	r20, 0x10	; 16
     2b8:	50 e0       	ldi	r21, 0x00	; 0
     2ba:	08 2e       	mov	r0, r24
     2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <scan_key+0x30>
     2be:	55 95       	asr	r21
     2c0:	47 95       	ror	r20
     2c2:	0a 94       	dec	r0
     2c4:	e2 f7       	brpl	.-8      	; 0x2be <scan_key+0x2c>
     2c6:	40 fd       	sbrc	r20, 0
     2c8:	23 c0       	rjmp	.+70     	; 0x310 <scan_key+0x7e>
     2ca:	41 e0       	ldi	r20, 0x01	; 1
     2cc:	50 e0       	ldi	r21, 0x00	; 0
     2ce:	08 2e       	mov	r0, r24
     2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <scan_key+0x44>
     2d2:	44 0f       	add	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	0a 94       	dec	r0
     2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <scan_key+0x40>
     2da:	06 c0       	rjmp	.+12     	; 0x2e8 <scan_key+0x56>
     2dc:	e3 ed       	ldi	r30, 0xD3	; 211
     2de:	f0 e3       	ldi	r31, 0x30	; 48
     2e0:	31 97       	sbiw	r30, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <scan_key+0x4e>
     2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <scan_key+0x54>
     2e6:	00 00       	nop
                    while(bit_is_clear(PIND, j)) _delay_ms(50);
     2e8:	60 b3       	in	r22, 0x10	; 16
     2ea:	70 e0       	ldi	r23, 0x00	; 0
     2ec:	64 23       	and	r22, r20
     2ee:	75 23       	and	r23, r21
     2f0:	61 15       	cp	r22, r1
     2f2:	71 05       	cpc	r23, r1
     2f4:	99 f3       	breq	.-26     	; 0x2dc <scan_key+0x4a>
                    return keys[i][j];
     2f6:	f9 01       	movw	r30, r18
     2f8:	ee 0f       	add	r30, r30
     2fa:	ff 1f       	adc	r31, r31
     2fc:	e2 0f       	add	r30, r18
     2fe:	f3 1f       	adc	r31, r19
     300:	ee 0f       	add	r30, r30
     302:	ff 1f       	adc	r31, r31
     304:	e8 0f       	add	r30, r24
     306:	f9 1f       	adc	r31, r25
     308:	e0 5a       	subi	r30, 0xA0	; 160
     30a:	ff 4f       	sbci	r31, 0xFF	; 255
                }
            }
        }
    }
}
     30c:	80 81       	ld	r24, Z
     30e:	08 95       	ret
unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
            for(int j = 0;j < 6;j++){
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	86 30       	cpi	r24, 0x06	; 6
     314:	91 05       	cpc	r25, r1
     316:	79 f6       	brne	.-98     	; 0x2b6 <scan_key+0x24>
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
     318:	2f 5f       	subi	r18, 0xFF	; 255
     31a:	3f 4f       	sbci	r19, 0xFF	; 255
     31c:	24 30       	cpi	r18, 0x04	; 4
     31e:	31 05       	cpc	r19, r1
     320:	09 f0       	breq	.+2      	; 0x324 <scan_key+0x92>
     322:	be cf       	rjmp	.-132    	; 0x2a0 <scan_key+0xe>
     324:	b8 cf       	rjmp	.-144    	; 0x296 <scan_key+0x4>

00000326 <calculate>:

    reset();
    run();
}

double calculate(float m, char operator, float n) {
     326:	6f 92       	push	r6
     328:	7f 92       	push	r7
     32a:	8f 92       	push	r8
     32c:	9f 92       	push	r9
     32e:	af 92       	push	r10
     330:	bf 92       	push	r11
     332:	cf 92       	push	r12
     334:	df 92       	push	r13
     336:	ef 92       	push	r14
     338:	ff 92       	push	r15
     33a:	0f 93       	push	r16
     33c:	1f 93       	push	r17
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	d6 2e       	mov	r13, r22
     344:	c7 2e       	mov	r12, r23
     346:	f8 2e       	mov	r15, r24
     348:	e9 2e       	mov	r14, r25
     34a:	48 01       	movw	r8, r16
     34c:	59 01       	movw	r10, r18
    switch (operator) {
     34e:	4d 36       	cpi	r20, 0x6D	; 109
     350:	09 f4       	brne	.+2      	; 0x354 <calculate+0x2e>
     352:	54 c0       	rjmp	.+168    	; 0x3fc <calculate+0xd6>
     354:	4e 36       	cpi	r20, 0x6E	; 110
     356:	70 f4       	brcc	.+28     	; 0x374 <calculate+0x4e>
     358:	4b 32       	cpi	r20, 0x2B	; 43
     35a:	b1 f0       	breq	.+44     	; 0x388 <calculate+0x62>
     35c:	4c 32       	cpi	r20, 0x2C	; 44
     35e:	20 f4       	brcc	.+8      	; 0x368 <calculate+0x42>
     360:	4a 32       	cpi	r20, 0x2A	; 42
     362:	09 f0       	breq	.+2      	; 0x366 <calculate+0x40>
     364:	a9 c0       	rjmp	.+338    	; 0x4b8 <calculate+0x192>
     366:	28 c0       	rjmp	.+80     	; 0x3b8 <calculate+0x92>
     368:	4d 32       	cpi	r20, 0x2D	; 45
     36a:	c1 f0       	breq	.+48     	; 0x39c <calculate+0x76>
     36c:	4f 32       	cpi	r20, 0x2F	; 47
     36e:	09 f0       	breq	.+2      	; 0x372 <calculate+0x4c>
     370:	a3 c0       	rjmp	.+326    	; 0x4b8 <calculate+0x192>
     372:	2c c0       	rjmp	.+88     	; 0x3cc <calculate+0xa6>
     374:	42 37       	cpi	r20, 0x72	; 114
     376:	09 f4       	brne	.+2      	; 0x37a <calculate+0x54>
     378:	7b c0       	rjmp	.+246    	; 0x470 <calculate+0x14a>
     37a:	46 37       	cpi	r20, 0x76	; 118
     37c:	09 f4       	brne	.+2      	; 0x380 <calculate+0x5a>
     37e:	52 c0       	rjmp	.+164    	; 0x424 <calculate+0xfe>
     380:	40 37       	cpi	r20, 0x70	; 112
     382:	09 f0       	breq	.+2      	; 0x386 <calculate+0x60>
     384:	99 c0       	rjmp	.+306    	; 0x4b8 <calculate+0x192>
     386:	2b c0       	rjmp	.+86     	; 0x3de <calculate+0xb8>
    case '+':
        return r = m + n;
     388:	a6 01       	movw	r20, r12
     38a:	97 01       	movw	r18, r14
     38c:	65 2f       	mov	r22, r21
     38e:	74 2f       	mov	r23, r20
     390:	83 2f       	mov	r24, r19
     392:	92 2f       	mov	r25, r18
     394:	a5 01       	movw	r20, r10
     396:	94 01       	movw	r18, r8
     398:	1d d5       	rcall	.+2618   	; 0xdd4 <__addsf3>
     39a:	09 c0       	rjmp	.+18     	; 0x3ae <calculate+0x88>
    case '-':
        return r = m - n;
     39c:	a6 01       	movw	r20, r12
     39e:	97 01       	movw	r18, r14
     3a0:	65 2f       	mov	r22, r21
     3a2:	74 2f       	mov	r23, r20
     3a4:	83 2f       	mov	r24, r19
     3a6:	92 2f       	mov	r25, r18
     3a8:	a5 01       	movw	r20, r10
     3aa:	94 01       	movw	r18, r8
     3ac:	3a d5       	rcall	.+2676   	; 0xe22 <__subsf3>
     3ae:	d6 2e       	mov	r13, r22
     3b0:	c7 2e       	mov	r12, r23
     3b2:	f8 2e       	mov	r15, r24
     3b4:	e9 2e       	mov	r14, r25
     3b6:	80 c0       	rjmp	.+256    	; 0x4b8 <calculate+0x192>
    case '*':
        return r = m * n;
     3b8:	a6 01       	movw	r20, r12
     3ba:	97 01       	movw	r18, r14
     3bc:	65 2f       	mov	r22, r21
     3be:	74 2f       	mov	r23, r20
     3c0:	83 2f       	mov	r24, r19
     3c2:	92 2f       	mov	r25, r18
     3c4:	a5 01       	movw	r20, r10
     3c6:	94 01       	movw	r18, r8
     3c8:	57 d5       	rcall	.+2734   	; 0xe78 <__mulsf3>
     3ca:	f1 cf       	rjmp	.-30     	; 0x3ae <calculate+0x88>
    case '/':
        return r = m / n;
     3cc:	a6 01       	movw	r20, r12
     3ce:	97 01       	movw	r18, r14
     3d0:	65 2f       	mov	r22, r21
     3d2:	74 2f       	mov	r23, r20
     3d4:	83 2f       	mov	r24, r19
     3d6:	92 2f       	mov	r25, r18
     3d8:	a5 01       	movw	r20, r10
     3da:	94 01       	movw	r18, r8
     3dc:	0d c0       	rjmp	.+26     	; 0x3f8 <calculate+0xd2>

    case 'p':
        return r = m * n / 100;
     3de:	a6 01       	movw	r20, r12
     3e0:	97 01       	movw	r18, r14
     3e2:	65 2f       	mov	r22, r21
     3e4:	74 2f       	mov	r23, r20
     3e6:	83 2f       	mov	r24, r19
     3e8:	92 2f       	mov	r25, r18
     3ea:	a5 01       	movw	r20, r10
     3ec:	94 01       	movw	r18, r8
     3ee:	44 d5       	rcall	.+2696   	; 0xe78 <__mulsf3>
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	30 e0       	ldi	r19, 0x00	; 0
     3f4:	48 ec       	ldi	r20, 0xC8	; 200
     3f6:	52 e4       	ldi	r21, 0x42	; 66
     3f8:	34 d6       	rcall	.+3176   	; 0x1062 <__divsf3>
     3fa:	d9 cf       	rjmp	.-78     	; 0x3ae <calculate+0x88>
    case 'm':
        return r = (int)m % (int)n;
     3fc:	a6 01       	movw	r20, r12
     3fe:	97 01       	movw	r18, r14
     400:	65 2f       	mov	r22, r21
     402:	74 2f       	mov	r23, r20
     404:	83 2f       	mov	r24, r19
     406:	92 2f       	mov	r25, r18
     408:	87 d7       	rcall	.+3854   	; 0x1318 <__fixsfsi>
     40a:	8b 01       	movw	r16, r22
     40c:	c5 01       	movw	r24, r10
     40e:	b4 01       	movw	r22, r8
     410:	83 d7       	rcall	.+3846   	; 0x1318 <__fixsfsi>
     412:	c8 01       	movw	r24, r16
     414:	b9 d9       	rcall	.-3214   	; 0xfffff788 <__eeprom_end+0xff7ef788>
     416:	9c 01       	movw	r18, r24
     418:	b9 01       	movw	r22, r18
     41a:	88 27       	eor	r24, r24
     41c:	77 fd       	sbrc	r23, 7
     41e:	80 95       	com	r24
     420:	98 2f       	mov	r25, r24
     422:	11 c0       	rjmp	.+34     	; 0x446 <calculate+0x120>
    case 'v':
        return r = (int)m / (int)n;
     424:	a6 01       	movw	r20, r12
     426:	97 01       	movw	r18, r14
     428:	65 2f       	mov	r22, r21
     42a:	74 2f       	mov	r23, r20
     42c:	83 2f       	mov	r24, r19
     42e:	92 2f       	mov	r25, r18
     430:	73 d7       	rcall	.+3814   	; 0x1318 <__fixsfsi>
     432:	8b 01       	movw	r16, r22
     434:	c5 01       	movw	r24, r10
     436:	b4 01       	movw	r22, r8
     438:	6f d7       	rcall	.+3806   	; 0x1318 <__fixsfsi>
     43a:	c8 01       	movw	r24, r16
     43c:	a5 d9       	rcall	.-3254   	; 0xfffff788 <__eeprom_end+0xff7ef788>
     43e:	88 27       	eor	r24, r24
     440:	77 fd       	sbrc	r23, 7
     442:	80 95       	com	r24
     444:	98 2f       	mov	r25, r24
     446:	0c d7       	rcall	.+3608   	; 0x1260 <__floatsisf>
     448:	b2 cf       	rjmp	.-156    	; 0x3ae <calculate+0x88>
    case 'r':
		r = 1;
		for (int i=0; i<n; i++) r = r * m;
     44a:	a8 01       	movw	r20, r16
     44c:	93 01       	movw	r18, r6
     44e:	65 2f       	mov	r22, r21
     450:	70 2f       	mov	r23, r16
     452:	83 2f       	mov	r24, r19
     454:	96 2d       	mov	r25, r6
     456:	d6 01       	movw	r26, r12
     458:	f7 01       	movw	r30, r14
     45a:	2b 2f       	mov	r18, r27
     45c:	3c 2d       	mov	r19, r12
     45e:	4f 2f       	mov	r20, r31
     460:	5e 2d       	mov	r21, r14
     462:	0a d5       	rcall	.+2580   	; 0xe78 <__mulsf3>
     464:	16 2f       	mov	r17, r22
     466:	07 2f       	mov	r16, r23
     468:	78 2e       	mov	r7, r24
     46a:	69 2e       	mov	r6, r25
     46c:	21 96       	adiw	r28, 0x01	; 1
     46e:	08 c0       	rjmp	.+16     	; 0x480 <calculate+0x15a>
    reset();
    run();
}

double calculate(float m, char operator, float n) {
    switch (operator) {
     470:	10 e0       	ldi	r17, 0x00	; 0
     472:	00 e0       	ldi	r16, 0x00	; 0
     474:	90 e8       	ldi	r25, 0x80	; 128
     476:	79 2e       	mov	r7, r25
     478:	8f e3       	ldi	r24, 0x3F	; 63
     47a:	68 2e       	mov	r6, r24
        return r = (int)m % (int)n;
    case 'v':
        return r = (int)m / (int)n;
    case 'r':
		r = 1;
		for (int i=0; i<n; i++) r = r * m;
     47c:	c0 e0       	ldi	r28, 0x00	; 0
     47e:	d0 e0       	ldi	r29, 0x00	; 0
     480:	be 01       	movw	r22, r28
     482:	88 27       	eor	r24, r24
     484:	77 fd       	sbrc	r23, 7
     486:	80 95       	com	r24
     488:	98 2f       	mov	r25, r24
     48a:	ea d6       	rcall	.+3540   	; 0x1260 <__floatsisf>
     48c:	a5 01       	movw	r20, r10
     48e:	94 01       	movw	r18, r8
     490:	91 d6       	rcall	.+3362   	; 0x11b4 <__ltsf2>
     492:	87 fd       	sbrc	r24, 7
     494:	da cf       	rjmp	.-76     	; 0x44a <calculate+0x124>
     496:	a8 01       	movw	r20, r16
     498:	93 01       	movw	r18, r6
     49a:	85 2f       	mov	r24, r21
     49c:	90 2f       	mov	r25, r16
     49e:	a3 2f       	mov	r26, r19
     4a0:	b6 2d       	mov	r27, r6
     4a2:	80 93 bc 01 	sts	0x01BC, r24
     4a6:	90 93 bd 01 	sts	0x01BD, r25
     4aa:	a0 93 be 01 	sts	0x01BE, r26
     4ae:	b0 93 bf 01 	sts	0x01BF, r27
        return r;
     4b2:	68 01       	movw	r12, r16
     4b4:	73 01       	movw	r14, r6
     4b6:	0e c0       	rjmp	.+28     	; 0x4d4 <calculate+0x1ae>

    }
    return r = m;
     4b8:	a6 01       	movw	r20, r12
     4ba:	97 01       	movw	r18, r14
     4bc:	85 2f       	mov	r24, r21
     4be:	9c 2d       	mov	r25, r12
     4c0:	a3 2f       	mov	r26, r19
     4c2:	be 2d       	mov	r27, r14
     4c4:	80 93 bc 01 	sts	0x01BC, r24
     4c8:	90 93 bd 01 	sts	0x01BD, r25
     4cc:	a0 93 be 01 	sts	0x01BE, r26
     4d0:	b0 93 bf 01 	sts	0x01BF, r27
}
     4d4:	a6 01       	movw	r20, r12
     4d6:	97 01       	movw	r18, r14
     4d8:	65 2f       	mov	r22, r21
     4da:	7c 2d       	mov	r23, r12
     4dc:	83 2f       	mov	r24, r19
     4de:	9e 2d       	mov	r25, r14
     4e0:	df 91       	pop	r29
     4e2:	cf 91       	pop	r28
     4e4:	1f 91       	pop	r17
     4e6:	0f 91       	pop	r16
     4e8:	ff 90       	pop	r15
     4ea:	ef 90       	pop	r14
     4ec:	df 90       	pop	r13
     4ee:	cf 90       	pop	r12
     4f0:	bf 90       	pop	r11
     4f2:	af 90       	pop	r10
     4f4:	9f 90       	pop	r9
     4f6:	8f 90       	pop	r8
     4f8:	7f 90       	pop	r7
     4fa:	6f 90       	pop	r6
     4fc:	08 95       	ret

000004fe <show_result>:

void show_result() {
     4fe:	ef 92       	push	r14
     500:	ff 92       	push	r15
     502:	0f 93       	push	r16
     504:	1f 93       	push	r17
    move_to(0, 1);			//начало нижней строки
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	87 de       	rcall	.-754    	; 0x21a <move_to>
    send_string("A=");
     50c:	88 e7       	ldi	r24, 0x78	; 120
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	71 de       	rcall	.-798    	; 0x1f4 <send_string>
    char *data = buffer;

    if (r <= 999999999999)
     512:	e0 90 bc 01 	lds	r14, 0x01BC
     516:	f0 90 bd 01 	lds	r15, 0x01BD
     51a:	00 91 be 01 	lds	r16, 0x01BE
     51e:	10 91 bf 01 	lds	r17, 0x01BF
     522:	c8 01       	movw	r24, r16
     524:	b7 01       	movw	r22, r14
     526:	25 ea       	ldi	r18, 0xA5	; 165
     528:	34 ed       	ldi	r19, 0xD4	; 212
     52a:	48 e6       	ldi	r20, 0x68	; 104
     52c:	53 e5       	ldi	r21, 0x53	; 83
     52e:	6d d6       	rcall	.+3290   	; 0x120a <__lesf2>
     530:	18 16       	cp	r1, r24
     532:	4c f0       	brlt	.+18     	; 0x546 <show_result+0x48>
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
     534:	c8 01       	movw	r24, r16
     536:	b7 01       	movw	r22, r14
     538:	49 e0       	ldi	r20, 0x09	; 9
     53a:	25 e0       	ldi	r18, 0x05	; 5
     53c:	04 ea       	ldi	r16, 0xA4	; 164
     53e:	11 e0       	ldi	r17, 0x01	; 1
     540:	81 d9       	rcall	.-3326   	; 0xfffff844 <__eeprom_end+0xff7ef844>
}

void show_result() {
    move_to(0, 1);			//начало нижней строки
    send_string("A=");
    char *data = buffer;
     542:	c8 01       	movw	r24, r16
     544:	02 c0       	rjmp	.+4      	; 0x54a <show_result+0x4c>

    if (r <= 999999999999)
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
    else 
		data = overflow;
     546:	8c e8       	ldi	r24, 0x8C	; 140
     548:	90 e0       	ldi	r25, 0x00	; 0

    send_string(data);
     54a:	54 de       	rcall	.-856    	; 0x1f4 <send_string>
    state = 4;
     54c:	84 e0       	ldi	r24, 0x04	; 4
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	90 93 bb 01 	sts	0x01BB, r25
     554:	80 93 ba 01 	sts	0x01BA, r24
}
     558:	1f 91       	pop	r17
     55a:	0f 91       	pop	r16
     55c:	ff 90       	pop	r15
     55e:	ef 90       	pop	r14
     560:	08 95       	ret

00000562 <send_digit>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
     562:	80 5d       	subi	r24, 0xD0	; 208
     564:	00 de       	rcall	.-1024   	; 0x166 <send_data>
}
     566:	08 95       	ret

00000568 <reset>:
        decide(scan_key(), is_dec_p, paw_p);
    }
}

void reset() {
    clear();
     568:	5f de       	rcall	.-834    	; 0x228 <clear>
    move_to(0, 0);		//начало верхней строки
     56a:	80 e0       	ldi	r24, 0x00	; 0
     56c:	60 e0       	ldi	r22, 0x00	; 0
     56e:	55 de       	rcall	.-854    	; 0x21a <move_to>
    r = a = b = op = state = count = 0;
     570:	10 92 c1 01 	sts	0x01C1, r1
     574:	10 92 c0 01 	sts	0x01C0, r1
     578:	10 92 bb 01 	sts	0x01BB, r1
     57c:	10 92 ba 01 	sts	0x01BA, r1
     580:	10 92 b5 01 	sts	0x01B5, r1
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	dc 01       	movw	r26, r24
     58a:	80 93 b6 01 	sts	0x01B6, r24
     58e:	90 93 b7 01 	sts	0x01B7, r25
     592:	a0 93 b8 01 	sts	0x01B8, r26
     596:	b0 93 b9 01 	sts	0x01B9, r27
     59a:	80 93 c6 01 	sts	0x01C6, r24
     59e:	90 93 c7 01 	sts	0x01C7, r25
     5a2:	a0 93 c8 01 	sts	0x01C8, r26
     5a6:	b0 93 c9 01 	sts	0x01C9, r27
     5aa:	80 93 bc 01 	sts	0x01BC, r24
     5ae:	90 93 bd 01 	sts	0x01BD, r25
     5b2:	a0 93 be 01 	sts	0x01BE, r26
     5b6:	b0 93 bf 01 	sts	0x01BF, r27
}
     5ba:	08 95       	ret

000005bc <on_off>:

void on_off(){ disp_on_off(); }
     5bc:	3a de       	rcall	.-908    	; 0x232 <disp_on_off>
     5be:	08 95       	ret

000005c0 <decide>:
2 - Middle Operator pressed, op.
3 - Input second operand, b.
4 - Result displayed.
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
     5c0:	4f 92       	push	r4
     5c2:	5f 92       	push	r5
     5c4:	6f 92       	push	r6
     5c6:	7f 92       	push	r7
     5c8:	8f 92       	push	r8
     5ca:	9f 92       	push	r9
     5cc:	af 92       	push	r10
     5ce:	bf 92       	push	r11
     5d0:	cf 92       	push	r12
     5d2:	df 92       	push	r13
     5d4:	ff 92       	push	r15
     5d6:	0f 93       	push	r16
     5d8:	1f 93       	push	r17
     5da:	cf 93       	push	r28
     5dc:	df 93       	push	r29
     5de:	f8 2e       	mov	r15, r24
     5e0:	eb 01       	movw	r28, r22
     5e2:	6a 01       	movw	r12, r20
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     5e4:	18 2f       	mov	r17, r24
     5e6:	10 53       	subi	r17, 0x30	; 48
            count++;
            break;

        case 4:
            if (digit) {
                line[0] = ' ';
     5e8:	00 e2       	ldi	r16, 0x20	; 32

                move_to(0, 0);					//начало верхней строки
                send_string(line); 				// Clear 1st line.

                move_to(0, 0);
                a = b = op = count = 0;
     5ea:	0f 2e       	mov	r0, r31
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	8f 2e       	mov	r8, r31
     5f0:	f0 e0       	ldi	r31, 0x00	; 0
     5f2:	9f 2e       	mov	r9, r31
     5f4:	f0 e0       	ldi	r31, 0x00	; 0
     5f6:	af 2e       	mov	r10, r31
     5f8:	f0 e0       	ldi	r31, 0x00	; 0
     5fa:	bf 2e       	mov	r11, r31
     5fc:	f0 2d       	mov	r31, r0
                state = 1;
     5fe:	a1 e0       	ldi	r26, 0x01	; 1
     600:	6a 2e       	mov	r6, r26
     602:	71 2c       	mov	r7, r1
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     604:	1a 30       	cpi	r17, 0x0A	; 10
     606:	08 f0       	brcs	.+2      	; 0x60a <decide+0x4a>
     608:	3b c1       	rjmp	.+630    	; 0x880 <decide+0x2c0>
    {
		unsigned char digit = key - '0'; // '2' --> 2

        switch (state) {
     60a:	80 91 ba 01 	lds	r24, 0x01BA
     60e:	90 91 bb 01 	lds	r25, 0x01BB
     612:	82 30       	cpi	r24, 0x02	; 2
     614:	91 05       	cpc	r25, r1
     616:	09 f4       	brne	.+2      	; 0x61a <decide+0x5a>
     618:	8a c0       	rjmp	.+276    	; 0x72e <decide+0x16e>
     61a:	83 30       	cpi	r24, 0x03	; 3
     61c:	91 05       	cpc	r25, r1
     61e:	38 f4       	brcc	.+14     	; 0x62e <decide+0x6e>
     620:	00 97       	sbiw	r24, 0x00	; 0
     622:	71 f0       	breq	.+28     	; 0x640 <decide+0x80>
     624:	81 30       	cpi	r24, 0x01	; 1
     626:	91 05       	cpc	r25, r1
     628:	09 f0       	breq	.+2      	; 0x62c <decide+0x6c>
     62a:	52 c2       	rjmp	.+1188   	; 0xad0 <decide+0x510>
     62c:	11 c0       	rjmp	.+34     	; 0x650 <decide+0x90>
     62e:	83 30       	cpi	r24, 0x03	; 3
     630:	91 05       	cpc	r25, r1
     632:	09 f4       	brne	.+2      	; 0x636 <decide+0x76>
     634:	84 c0       	rjmp	.+264    	; 0x73e <decide+0x17e>
     636:	84 30       	cpi	r24, 0x04	; 4
     638:	91 05       	cpc	r25, r1
     63a:	09 f0       	breq	.+2      	; 0x63e <decide+0x7e>
     63c:	49 c2       	rjmp	.+1170   	; 0xad0 <decide+0x510>
     63e:	f5 c0       	rjmp	.+490    	; 0x82a <decide+0x26a>

        case 0:
            if (digit) {
     640:	11 23       	and	r17, r17
     642:	31 f0       	breq	.+12     	; 0x650 <decide+0x90>
                //clear(); 						// Clear screen if input is non-zero.
                state = 1;
     644:	81 e0       	ldi	r24, 0x01	; 1
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	90 93 bb 01 	sts	0x01BB, r25
     64c:	80 93 ba 01 	sts	0x01BA, r24
            }

        case 1:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.
     650:	80 91 c0 01 	lds	r24, 0x01C0
     654:	90 91 c1 01 	lds	r25, 0x01C1
     658:	8e 30       	cpi	r24, 0x0E	; 14
     65a:	91 05       	cpc	r25, r1
     65c:	09 f4       	brne	.+2      	; 0x660 <decide+0xa0>
     65e:	38 c2       	rjmp	.+1136   	; 0xad0 <decide+0x510>

			if (*is_dec_p == 0) {
     660:	88 81       	ld	r24, Y
     662:	88 23       	and	r24, r24
     664:	41 f0       	breq	.+16     	; 0x676 <decide+0xb6>
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     666:	f6 01       	movw	r30, r12
     668:	c0 81       	ld	r28, Z
     66a:	d1 81       	ldd	r29, Z+1	; 0x01
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	61 e0       	ldi	r22, 0x01	; 1
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	2f c0       	rjmp	.+94     	; 0x6d4 <decide+0x114>

        case 1:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.

			if (*is_dec_p == 0) {
            	a = a * 10 + digit;				// append to a
     676:	60 91 c6 01 	lds	r22, 0x01C6
     67a:	70 91 c7 01 	lds	r23, 0x01C7
     67e:	80 91 c8 01 	lds	r24, 0x01C8
     682:	90 91 c9 01 	lds	r25, 0x01C9
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	40 e2       	ldi	r20, 0x20	; 32
     68c:	51 e4       	ldi	r21, 0x41	; 65
     68e:	f4 d3       	rcall	.+2024   	; 0xe78 <__mulsf3>
     690:	4b 01       	movw	r8, r22
     692:	5c 01       	movw	r10, r24
     694:	61 2f       	mov	r22, r17
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	88 27       	eor	r24, r24
     69a:	77 fd       	sbrc	r23, 7
     69c:	80 95       	com	r24
     69e:	98 2f       	mov	r25, r24
     6a0:	df d5       	rcall	.+3006   	; 0x1260 <__floatsisf>
     6a2:	9b 01       	movw	r18, r22
     6a4:	ac 01       	movw	r20, r24
     6a6:	c5 01       	movw	r24, r10
     6a8:	b4 01       	movw	r22, r8
     6aa:	94 d3       	rcall	.+1832   	; 0xdd4 <__addsf3>
     6ac:	60 93 c6 01 	sts	0x01C6, r22
     6b0:	70 93 c7 01 	sts	0x01C7, r23
     6b4:	80 93 c8 01 	sts	0x01C8, r24
     6b8:	90 93 c9 01 	sts	0x01C9, r25
     6bc:	aa c0       	rjmp	.+340    	; 0x812 <decide+0x252>

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     6be:	9b 01       	movw	r18, r22
     6c0:	22 0f       	add	r18, r18
     6c2:	33 1f       	adc	r19, r19
     6c4:	e3 e0       	ldi	r30, 0x03	; 3
     6c6:	66 0f       	add	r22, r22
     6c8:	77 1f       	adc	r23, r23
     6ca:	ea 95       	dec	r30
     6cc:	e1 f7       	brne	.-8      	; 0x6c6 <decide+0x106>
     6ce:	62 0f       	add	r22, r18
     6d0:	73 1f       	adc	r23, r19
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     6d2:	01 96       	adiw	r24, 0x01	; 1
     6d4:	8c 17       	cp	r24, r28
     6d6:	9d 07       	cpc	r25, r29
     6d8:	94 f3       	brlt	.-28     	; 0x6be <decide+0xfe>
					d = d * 10;
				}

				a = (a * d + digit) / d;
     6da:	88 27       	eor	r24, r24
     6dc:	77 fd       	sbrc	r23, 7
     6de:	80 95       	com	r24
     6e0:	98 2f       	mov	r25, r24
     6e2:	be d5       	rcall	.+2940   	; 0x1260 <__floatsisf>
     6e4:	4b 01       	movw	r8, r22
     6e6:	5c 01       	movw	r10, r24
     6e8:	20 91 c6 01 	lds	r18, 0x01C6
     6ec:	30 91 c7 01 	lds	r19, 0x01C7
     6f0:	40 91 c8 01 	lds	r20, 0x01C8
     6f4:	50 91 c9 01 	lds	r21, 0x01C9
     6f8:	bf d3       	rcall	.+1918   	; 0xe78 <__mulsf3>
     6fa:	2b 01       	movw	r4, r22
     6fc:	3c 01       	movw	r6, r24
     6fe:	61 2f       	mov	r22, r17
     700:	70 e0       	ldi	r23, 0x00	; 0
     702:	88 27       	eor	r24, r24
     704:	77 fd       	sbrc	r23, 7
     706:	80 95       	com	r24
     708:	98 2f       	mov	r25, r24
     70a:	aa d5       	rcall	.+2900   	; 0x1260 <__floatsisf>
     70c:	9b 01       	movw	r18, r22
     70e:	ac 01       	movw	r20, r24
     710:	c3 01       	movw	r24, r6
     712:	b2 01       	movw	r22, r4
     714:	5f d3       	rcall	.+1726   	; 0xdd4 <__addsf3>
     716:	a5 01       	movw	r20, r10
     718:	94 01       	movw	r18, r8
     71a:	a3 d4       	rcall	.+2374   	; 0x1062 <__divsf3>
     71c:	60 93 c6 01 	sts	0x01C6, r22
     720:	70 93 c7 01 	sts	0x01C7, r23
     724:	80 93 c8 01 	sts	0x01C8, r24
     728:	90 93 c9 01 	sts	0x01C9, r25
     72c:	6e c0       	rjmp	.+220    	; 0x80a <decide+0x24a>
            send_data(key);
            count++;
            break;

        case 2:
            if (digit) {
     72e:	11 23       	and	r17, r17
     730:	31 f0       	breq	.+12     	; 0x73e <decide+0x17e>
				state = 3;
     732:	83 e0       	ldi	r24, 0x03	; 3
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	90 93 bb 01 	sts	0x01BB, r25
     73a:	80 93 ba 01 	sts	0x01BA, r24
			}

        case 3:
			if (*is_dec_p == 0) {
     73e:	88 81       	ld	r24, Y
     740:	88 23       	and	r24, r24
     742:	41 f0       	breq	.+16     	; 0x754 <decide+0x194>
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     744:	f6 01       	movw	r30, r12
     746:	c0 81       	ld	r28, Z
     748:	d1 81       	ldd	r29, Z+1	; 0x01
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	61 e0       	ldi	r22, 0x01	; 1
     750:	70 e0       	ldi	r23, 0x00	; 0
     752:	2f c0       	rjmp	.+94     	; 0x7b2 <decide+0x1f2>
				state = 3;
			}

        case 3:
			if (*is_dec_p == 0) {
            	b = b * 10 + digit;				// append to b
     754:	60 91 b6 01 	lds	r22, 0x01B6
     758:	70 91 b7 01 	lds	r23, 0x01B7
     75c:	80 91 b8 01 	lds	r24, 0x01B8
     760:	90 91 b9 01 	lds	r25, 0x01B9
     764:	20 e0       	ldi	r18, 0x00	; 0
     766:	30 e0       	ldi	r19, 0x00	; 0
     768:	40 e2       	ldi	r20, 0x20	; 32
     76a:	51 e4       	ldi	r21, 0x41	; 65
     76c:	85 d3       	rcall	.+1802   	; 0xe78 <__mulsf3>
     76e:	4b 01       	movw	r8, r22
     770:	5c 01       	movw	r10, r24
     772:	61 2f       	mov	r22, r17
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	88 27       	eor	r24, r24
     778:	77 fd       	sbrc	r23, 7
     77a:	80 95       	com	r24
     77c:	98 2f       	mov	r25, r24
     77e:	70 d5       	rcall	.+2784   	; 0x1260 <__floatsisf>
     780:	9b 01       	movw	r18, r22
     782:	ac 01       	movw	r20, r24
     784:	c5 01       	movw	r24, r10
     786:	b4 01       	movw	r22, r8
     788:	25 d3       	rcall	.+1610   	; 0xdd4 <__addsf3>
     78a:	60 93 b6 01 	sts	0x01B6, r22
     78e:	70 93 b7 01 	sts	0x01B7, r23
     792:	80 93 b8 01 	sts	0x01B8, r24
     796:	90 93 b9 01 	sts	0x01B9, r25
     79a:	3b c0       	rjmp	.+118    	; 0x812 <decide+0x252>
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     79c:	9b 01       	movw	r18, r22
     79e:	22 0f       	add	r18, r18
     7a0:	33 1f       	adc	r19, r19
     7a2:	43 e0       	ldi	r20, 0x03	; 3
     7a4:	66 0f       	add	r22, r22
     7a6:	77 1f       	adc	r23, r23
     7a8:	4a 95       	dec	r20
     7aa:	e1 f7       	brne	.-8      	; 0x7a4 <decide+0x1e4>
     7ac:	62 0f       	add	r22, r18
     7ae:	73 1f       	adc	r23, r19
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     7b0:	01 96       	adiw	r24, 0x01	; 1
     7b2:	8c 17       	cp	r24, r28
     7b4:	9d 07       	cpc	r25, r29
     7b6:	94 f3       	brlt	.-28     	; 0x79c <decide+0x1dc>
					d = d * 10;
				}

				b = (b * d + digit) / d;
     7b8:	88 27       	eor	r24, r24
     7ba:	77 fd       	sbrc	r23, 7
     7bc:	80 95       	com	r24
     7be:	98 2f       	mov	r25, r24
     7c0:	4f d5       	rcall	.+2718   	; 0x1260 <__floatsisf>
     7c2:	4b 01       	movw	r8, r22
     7c4:	5c 01       	movw	r10, r24
     7c6:	20 91 b6 01 	lds	r18, 0x01B6
     7ca:	30 91 b7 01 	lds	r19, 0x01B7
     7ce:	40 91 b8 01 	lds	r20, 0x01B8
     7d2:	50 91 b9 01 	lds	r21, 0x01B9
     7d6:	50 d3       	rcall	.+1696   	; 0xe78 <__mulsf3>
     7d8:	2b 01       	movw	r4, r22
     7da:	3c 01       	movw	r6, r24
     7dc:	61 2f       	mov	r22, r17
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	88 27       	eor	r24, r24
     7e2:	77 fd       	sbrc	r23, 7
     7e4:	80 95       	com	r24
     7e6:	98 2f       	mov	r25, r24
     7e8:	3b d5       	rcall	.+2678   	; 0x1260 <__floatsisf>
     7ea:	9b 01       	movw	r18, r22
     7ec:	ac 01       	movw	r20, r24
     7ee:	c3 01       	movw	r24, r6
     7f0:	b2 01       	movw	r22, r4
     7f2:	f0 d2       	rcall	.+1504   	; 0xdd4 <__addsf3>
     7f4:	a5 01       	movw	r20, r10
     7f6:	94 01       	movw	r18, r8
     7f8:	34 d4       	rcall	.+2152   	; 0x1062 <__divsf3>
     7fa:	60 93 b6 01 	sts	0x01B6, r22
     7fe:	70 93 b7 01 	sts	0x01B7, r23
     802:	80 93 b8 01 	sts	0x01B8, r24
     806:	90 93 b9 01 	sts	0x01B9, r25

				*paw_p = *paw_p + 1;
     80a:	21 96       	adiw	r28, 0x01	; 1
     80c:	f6 01       	movw	r30, r12
     80e:	d1 83       	std	Z+1, r29	; 0x01
     810:	c0 83       	st	Z, r28
			}

            send_data(key);
     812:	8f 2d       	mov	r24, r15
     814:	a8 dc       	rcall	.-1712   	; 0x166 <send_data>
            count++;
     816:	80 91 c0 01 	lds	r24, 0x01C0
     81a:	90 91 c1 01 	lds	r25, 0x01C1
     81e:	01 96       	adiw	r24, 0x01	; 1
     820:	90 93 c1 01 	sts	0x01C1, r25
     824:	80 93 c0 01 	sts	0x01C0, r24
            break;
     828:	53 c1       	rjmp	.+678    	; 0xad0 <decide+0x510>

        case 4:
            if (digit) {
     82a:	11 23       	and	r17, r17
     82c:	09 f4       	brne	.+2      	; 0x830 <decide+0x270>
     82e:	50 c1       	rjmp	.+672    	; 0xad0 <decide+0x510>
                line[0] = ' ';
     830:	00 93 7b 00 	sts	0x007B, r16
                line[1] = ' ';
     834:	00 93 7c 00 	sts	0x007C, r16

                move_to(0, 0);					//начало верхней строки
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	60 e0       	ldi	r22, 0x00	; 0
     83c:	ee dc       	rcall	.-1572   	; 0x21a <move_to>
                send_string(line); 				// Clear 1st line.
     83e:	8b e7       	ldi	r24, 0x7B	; 123
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	d8 dc       	rcall	.-1616   	; 0x1f4 <send_string>

                move_to(0, 0);
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	60 e0       	ldi	r22, 0x00	; 0
     848:	e8 dc       	rcall	.-1584   	; 0x21a <move_to>
                a = b = op = count = 0;
     84a:	10 92 c1 01 	sts	0x01C1, r1
     84e:	10 92 c0 01 	sts	0x01C0, r1
     852:	10 92 b5 01 	sts	0x01B5, r1
     856:	80 92 b6 01 	sts	0x01B6, r8
     85a:	90 92 b7 01 	sts	0x01B7, r9
     85e:	a0 92 b8 01 	sts	0x01B8, r10
     862:	b0 92 b9 01 	sts	0x01B9, r11
     866:	80 92 c6 01 	sts	0x01C6, r8
     86a:	90 92 c7 01 	sts	0x01C7, r9
     86e:	a0 92 c8 01 	sts	0x01C8, r10
     872:	b0 92 c9 01 	sts	0x01C9, r11
                state = 1;
     876:	70 92 bb 01 	sts	0x01BB, r7
     87a:	60 92 ba 01 	sts	0x01BA, r6

                decide(key, is_dec_p, paw_p); 	// Recursively capture digit.
                return;
     87e:	c2 ce       	rjmp	.-636    	; 0x604 <decide+0x44>
            break;

        }
    } 

	else if (key == '.') {
     880:	ff 2d       	mov	r31, r15
     882:	fe 32       	cpi	r31, 0x2E	; 46
     884:	21 f4       	brne	.+8      	; 0x88e <decide+0x2ce>
		*is_dec_p = 1;
     886:	81 e0       	ldi	r24, 0x01	; 1
     888:	88 83       	st	Y, r24
		send_data(key);
     88a:	8e e2       	ldi	r24, 0x2E	; 46
     88c:	1e c1       	rjmp	.+572    	; 0xaca <decide+0x50a>
	}

	else {
		
		*is_dec_p = 0;
     88e:	18 82       	st	Y, r1
		*paw_p = 1;		
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	f6 01       	movw	r30, r12
     896:	91 83       	std	Z+1, r25	; 0x01
     898:	80 83       	st	Z, r24

        switch (key) {
     89a:	ff 2d       	mov	r31, r15
     89c:	f4 34       	cpi	r31, 0x44	; 68
     89e:	09 f4       	brne	.+2      	; 0x8a2 <decide+0x2e2>
     8a0:	10 c1       	rjmp	.+544    	; 0xac2 <decide+0x502>
     8a2:	f5 34       	cpi	r31, 0x45	; 69
     8a4:	c0 f4       	brcc	.+48     	; 0x8d6 <decide+0x316>
     8a6:	fd 33       	cpi	r31, 0x3D	; 61
     8a8:	09 f4       	brne	.+2      	; 0x8ac <decide+0x2ec>
     8aa:	b8 c0       	rjmp	.+368    	; 0xa1c <decide+0x45c>
     8ac:	fe 33       	cpi	r31, 0x3E	; 62
     8ae:	58 f4       	brcc	.+22     	; 0x8c6 <decide+0x306>
     8b0:	fa 32       	cpi	r31, 0x2A	; 42
     8b2:	08 f4       	brcc	.+2      	; 0x8b6 <decide+0x2f6>
     8b4:	0d c1       	rjmp	.+538    	; 0xad0 <decide+0x510>
     8b6:	fc 32       	cpi	r31, 0x2C	; 44
     8b8:	00 f1       	brcs	.+64     	; 0x8fa <decide+0x33a>
     8ba:	fd 32       	cpi	r31, 0x2D	; 45
     8bc:	f1 f0       	breq	.+60     	; 0x8fa <decide+0x33a>
     8be:	ff 32       	cpi	r31, 0x2F	; 47
     8c0:	09 f0       	breq	.+2      	; 0x8c4 <decide+0x304>
     8c2:	06 c1       	rjmp	.+524    	; 0xad0 <decide+0x510>
     8c4:	1a c0       	rjmp	.+52     	; 0x8fa <decide+0x33a>
     8c6:	8f 2d       	mov	r24, r15
     8c8:	81 34       	cpi	r24, 0x41	; 65
     8ca:	09 f4       	brne	.+2      	; 0x8ce <decide+0x30e>
     8cc:	e1 c0       	rjmp	.+450    	; 0xa90 <decide+0x4d0>
     8ce:	83 34       	cpi	r24, 0x43	; 67
     8d0:	09 f0       	breq	.+2      	; 0x8d4 <decide+0x314>
     8d2:	fe c0       	rjmp	.+508    	; 0xad0 <decide+0x510>
     8d4:	db c0       	rjmp	.+438    	; 0xa8c <decide+0x4cc>
     8d6:	ef 2d       	mov	r30, r15
     8d8:	e0 37       	cpi	r30, 0x70	; 112
     8da:	79 f0       	breq	.+30     	; 0x8fa <decide+0x33a>
     8dc:	e1 37       	cpi	r30, 0x71	; 113
     8de:	38 f4       	brcc	.+14     	; 0x8ee <decide+0x32e>
     8e0:	ef 34       	cpi	r30, 0x4F	; 79
     8e2:	09 f4       	brne	.+2      	; 0x8e6 <decide+0x326>
     8e4:	f4 c0       	rjmp	.+488    	; 0xace <decide+0x50e>
     8e6:	ed 36       	cpi	r30, 0x6D	; 109
     8e8:	09 f0       	breq	.+2      	; 0x8ec <decide+0x32c>
     8ea:	f2 c0       	rjmp	.+484    	; 0xad0 <decide+0x510>
     8ec:	06 c0       	rjmp	.+12     	; 0x8fa <decide+0x33a>
     8ee:	ff 2d       	mov	r31, r15
     8f0:	f2 37       	cpi	r31, 0x72	; 114
     8f2:	19 f0       	breq	.+6      	; 0x8fa <decide+0x33a>
     8f4:	f6 37       	cpi	r31, 0x76	; 118
     8f6:	09 f0       	breq	.+2      	; 0x8fa <decide+0x33a>
     8f8:	eb c0       	rjmp	.+470    	; 0xad0 <decide+0x510>
        case '-':
        case 'p':
        case 'm':
		case 'v':
		case 'r':
            switch (state) {
     8fa:	80 91 ba 01 	lds	r24, 0x01BA
     8fe:	90 91 bb 01 	lds	r25, 0x01BB
     902:	82 30       	cpi	r24, 0x02	; 2
     904:	91 05       	cpc	r25, r1
     906:	81 f0       	breq	.+32     	; 0x928 <decide+0x368>
     908:	83 30       	cpi	r24, 0x03	; 3
     90a:	91 05       	cpc	r25, r1
     90c:	28 f4       	brcc	.+10     	; 0x918 <decide+0x358>
     90e:	81 30       	cpi	r24, 0x01	; 1
     910:	91 05       	cpc	r25, r1
     912:	09 f0       	breq	.+2      	; 0x916 <decide+0x356>
     914:	80 c0       	rjmp	.+256    	; 0xa16 <decide+0x456>
     916:	0b c0       	rjmp	.+22     	; 0x92e <decide+0x36e>
     918:	83 30       	cpi	r24, 0x03	; 3
     91a:	91 05       	cpc	r25, r1
     91c:	d1 f0       	breq	.+52     	; 0x952 <decide+0x392>
     91e:	84 30       	cpi	r24, 0x04	; 4
     920:	91 05       	cpc	r25, r1
     922:	09 f0       	breq	.+2      	; 0x926 <decide+0x366>
     924:	78 c0       	rjmp	.+240    	; 0xa16 <decide+0x456>
     926:	44 c0       	rjmp	.+136    	; 0x9b0 <decide+0x3f0>

            case 2:
                move_to(0,0); 		// Modify the operand displayed.
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	60 e0       	ldi	r22, 0x00	; 0
     92c:	76 dc       	rcall	.-1812   	; 0x21a <move_to>

            case 1:
                send_data(key);
     92e:	8f 2d       	mov	r24, r15
     930:	1a dc       	rcall	.-1996   	; 0x166 <send_data>
                count++;
     932:	80 91 c0 01 	lds	r24, 0x01C0
     936:	90 91 c1 01 	lds	r25, 0x01C1
     93a:	01 96       	adiw	r24, 0x01	; 1
     93c:	90 93 c1 01 	sts	0x01C1, r25
     940:	80 93 c0 01 	sts	0x01C0, r24
                state = 2;
     944:	82 e0       	ldi	r24, 0x02	; 2
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	90 93 bb 01 	sts	0x01BB, r25
     94c:	80 93 ba 01 	sts	0x01BA, r24
                break;
     950:	62 c0       	rjmp	.+196    	; 0xa16 <decide+0x456>

            case 3:
                calculate(a, op, b);
     952:	60 91 c6 01 	lds	r22, 0x01C6
     956:	70 91 c7 01 	lds	r23, 0x01C7
     95a:	80 91 c8 01 	lds	r24, 0x01C8
     95e:	90 91 c9 01 	lds	r25, 0x01C9
     962:	00 91 b6 01 	lds	r16, 0x01B6
     966:	10 91 b7 01 	lds	r17, 0x01B7
     96a:	20 91 b8 01 	lds	r18, 0x01B8
     96e:	30 91 b9 01 	lds	r19, 0x01B9
     972:	40 91 b5 01 	lds	r20, 0x01B5
     976:	d7 dc       	rcall	.-1618   	; 0x326 <calculate>
                show_result();
     978:	c2 dd       	rcall	.-1148   	; 0x4fe <show_result>
				ans = calculate(a, op, b);
     97a:	60 91 c6 01 	lds	r22, 0x01C6
     97e:	70 91 c7 01 	lds	r23, 0x01C7
     982:	80 91 c8 01 	lds	r24, 0x01C8
     986:	90 91 c9 01 	lds	r25, 0x01C9
     98a:	00 91 b6 01 	lds	r16, 0x01B6
     98e:	10 91 b7 01 	lds	r17, 0x01B7
     992:	20 91 b8 01 	lds	r18, 0x01B8
     996:	30 91 b9 01 	lds	r19, 0x01B9
     99a:	40 91 b5 01 	lds	r20, 0x01B5
     99e:	c3 dc       	rcall	.-1658   	; 0x326 <calculate>
     9a0:	60 93 c2 01 	sts	0x01C2, r22
     9a4:	70 93 c3 01 	sts	0x01C3, r23
     9a8:	80 93 c4 01 	sts	0x01C4, r24
     9ac:	90 93 c5 01 	sts	0x01C5, r25

            case 4:
                move_to(0, 0);
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	60 e0       	ldi	r22, 0x00	; 0
     9b4:	32 dc       	rcall	.-1948   	; 0x21a <move_to>
                line[0] = 'A'; 		// 'A' represents current result.
     9b6:	81 e4       	ldi	r24, 0x41	; 65
     9b8:	80 93 7b 00 	sts	0x007B, r24
                line[1] = key; 		// Operator of the operation.
     9bc:	f0 92 7c 00 	sts	0x007C, r15
                send_string(line);
     9c0:	8b e7       	ldi	r24, 0x7B	; 123
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	17 dc       	rcall	.-2002   	; 0x1f4 <send_string>

                move_to(2,0);
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	60 e0       	ldi	r22, 0x00	; 0
     9ca:	27 dc       	rcall	.-1970   	; 0x21a <move_to>
                count = 2;
     9cc:	22 e0       	ldi	r18, 0x02	; 2
     9ce:	30 e0       	ldi	r19, 0x00	; 0
     9d0:	30 93 c1 01 	sts	0x01C1, r19
     9d4:	20 93 c0 01 	sts	0x01C0, r18
                a = r; 				// Put result into a.
     9d8:	80 91 bc 01 	lds	r24, 0x01BC
     9dc:	90 91 bd 01 	lds	r25, 0x01BD
     9e0:	a0 91 be 01 	lds	r26, 0x01BE
     9e4:	b0 91 bf 01 	lds	r27, 0x01BF
     9e8:	80 93 c6 01 	sts	0x01C6, r24
     9ec:	90 93 c7 01 	sts	0x01C7, r25
     9f0:	a0 93 c8 01 	sts	0x01C8, r26
     9f4:	b0 93 c9 01 	sts	0x01C9, r27
                b = 0; 				// Clear b.
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	dc 01       	movw	r26, r24
     9fe:	80 93 b6 01 	sts	0x01B6, r24
     a02:	90 93 b7 01 	sts	0x01B7, r25
     a06:	a0 93 b8 01 	sts	0x01B8, r26
     a0a:	b0 93 b9 01 	sts	0x01B9, r27
                state = 2;
     a0e:	30 93 bb 01 	sts	0x01BB, r19
     a12:	20 93 ba 01 	sts	0x01BA, r18

                break;
            }

            op = key;
     a16:	f0 92 b5 01 	sts	0x01B5, r15

            break;
     a1a:	5a c0       	rjmp	.+180    	; 0xad0 <decide+0x510>

        case '=':
            if(state == 3){
     a1c:	80 91 ba 01 	lds	r24, 0x01BA
     a20:	90 91 bb 01 	lds	r25, 0x01BB
     a24:	83 30       	cpi	r24, 0x03	; 3
     a26:	91 05       	cpc	r25, r1
     a28:	09 f0       	breq	.+2      	; 0xa2c <decide+0x46c>
     a2a:	52 c0       	rjmp	.+164    	; 0xad0 <decide+0x510>
                calculate(a, op, b);
     a2c:	60 91 c6 01 	lds	r22, 0x01C6
     a30:	70 91 c7 01 	lds	r23, 0x01C7
     a34:	80 91 c8 01 	lds	r24, 0x01C8
     a38:	90 91 c9 01 	lds	r25, 0x01C9
     a3c:	00 91 b6 01 	lds	r16, 0x01B6
     a40:	10 91 b7 01 	lds	r17, 0x01B7
     a44:	20 91 b8 01 	lds	r18, 0x01B8
     a48:	30 91 b9 01 	lds	r19, 0x01B9
     a4c:	40 91 b5 01 	lds	r20, 0x01B5
     a50:	6a dc       	rcall	.-1836   	; 0x326 <calculate>
                show_result();
     a52:	55 dd       	rcall	.-1366   	; 0x4fe <show_result>
				ans = calculate(a, op, b);
     a54:	60 91 c6 01 	lds	r22, 0x01C6
     a58:	70 91 c7 01 	lds	r23, 0x01C7
     a5c:	80 91 c8 01 	lds	r24, 0x01C8
     a60:	90 91 c9 01 	lds	r25, 0x01C9
     a64:	00 91 b6 01 	lds	r16, 0x01B6
     a68:	10 91 b7 01 	lds	r17, 0x01B7
     a6c:	20 91 b8 01 	lds	r18, 0x01B8
     a70:	30 91 b9 01 	lds	r19, 0x01B9
     a74:	40 91 b5 01 	lds	r20, 0x01B5
     a78:	56 dc       	rcall	.-1876   	; 0x326 <calculate>
     a7a:	60 93 c2 01 	sts	0x01C2, r22
     a7e:	70 93 c3 01 	sts	0x01C3, r23
     a82:	80 93 c4 01 	sts	0x01C4, r24
     a86:	90 93 c5 01 	sts	0x01C5, r25
     a8a:	22 c0       	rjmp	.+68     	; 0xad0 <decide+0x510>
            }
            break;

        case 'C': // "C" button.
            //if (state != 0) 
			reset();
     a8c:	6d dd       	rcall	.-1318   	; 0x568 <reset>
            break;
     a8e:	20 c0       	rjmp	.+64     	; 0xad0 <decide+0x510>

        case 'A': // "ANS" button.
			send_data('A');
     a90:	81 e4       	ldi	r24, 0x41	; 65
     a92:	69 db       	rcall	.-2350   	; 0x166 <send_data>
			b = ans;
     a94:	80 91 c2 01 	lds	r24, 0x01C2
     a98:	90 91 c3 01 	lds	r25, 0x01C3
     a9c:	a0 91 c4 01 	lds	r26, 0x01C4
     aa0:	b0 91 c5 01 	lds	r27, 0x01C5
     aa4:	80 93 b6 01 	sts	0x01B6, r24
     aa8:	90 93 b7 01 	sts	0x01B7, r25
     aac:	a0 93 b8 01 	sts	0x01B8, r26
     ab0:	b0 93 b9 01 	sts	0x01B9, r27
			state = 3;
     ab4:	83 e0       	ldi	r24, 0x03	; 3
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	90 93 bb 01 	sts	0x01BB, r25
     abc:	80 93 ba 01 	sts	0x01BA, r24
            break;
     ac0:	07 c0       	rjmp	.+14     	; 0xad0 <decide+0x510>

        case 'D': // "DEL" button.
			move_to(-1,0);
     ac2:	8f ef       	ldi	r24, 0xFF	; 255
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	a9 db       	rcall	.-2222   	; 0x21a <move_to>
			send_data(' ');
     ac8:	80 e2       	ldi	r24, 0x20	; 32
     aca:	4d db       	rcall	.-2406   	; 0x166 <send_data>
            break;
     acc:	01 c0       	rjmp	.+2      	; 0xad0 <decide+0x510>
    clear();
    move_to(0, 0);		//начало верхней строки
    r = a = b = op = state = count = 0;
}

void on_off(){ disp_on_off(); }
     ace:	b1 db       	rcall	.-2206   	; 0x232 <disp_on_off>
		case 'O':
			on_off();
			break;
        }
    }
}
     ad0:	df 91       	pop	r29
     ad2:	cf 91       	pop	r28
     ad4:	1f 91       	pop	r17
     ad6:	0f 91       	pop	r16
     ad8:	ff 90       	pop	r15
     ada:	df 90       	pop	r13
     adc:	cf 90       	pop	r12
     ade:	bf 90       	pop	r11
     ae0:	af 90       	pop	r10
     ae2:	9f 90       	pop	r9
     ae4:	8f 90       	pop	r8
     ae6:	7f 90       	pop	r7
     ae8:	6f 90       	pop	r6
     aea:	5f 90       	pop	r5
     aec:	4f 90       	pop	r4
     aee:	08 95       	ret

00000af0 <run>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
}

void run() {
     af0:	ef 92       	push	r14
     af2:	ff 92       	push	r15
     af4:	0f 93       	push	r16
     af6:	1f 93       	push	r17
     af8:	df 93       	push	r29
     afa:	cf 93       	push	r28
     afc:	00 d0       	rcall	.+0      	; 0xafe <run+0xe>
     afe:	0f 92       	push	r0
     b00:	cd b7       	in	r28, 0x3d	; 61
     b02:	de b7       	in	r29, 0x3e	; 62
	bool *is_dec_p;
	bool is_decimal = 0;		//флаг (0 - целая часть, 1 - дробная)
     b04:	19 82       	std	Y+1, r1	; 0x01
	is_dec_p = &is_decimal;

	int *paw_p;
	int paw = 1;				//разряд после запятой
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	9b 83       	std	Y+3, r25	; 0x03
     b0c:	8a 83       	std	Y+2, r24	; 0x02
	paw_p = &paw;
     b0e:	b2 e0       	ldi	r27, 0x02	; 2
     b10:	eb 2e       	mov	r14, r27
     b12:	f1 2c       	mov	r15, r1
     b14:	ec 0e       	add	r14, r28
     b16:	fd 1e       	adc	r15, r29

    while (1) {
        decide(scan_key(), is_dec_p, paw_p);
     b18:	8e 01       	movw	r16, r28
     b1a:	0f 5f       	subi	r16, 0xFF	; 255
     b1c:	1f 4f       	sbci	r17, 0xFF	; 255
     b1e:	b9 db       	rcall	.-2190   	; 0x292 <scan_key>
     b20:	b8 01       	movw	r22, r16
     b22:	a7 01       	movw	r20, r14
     b24:	4d dd       	rcall	.-1382   	; 0x5c0 <decide>
     b26:	fb cf       	rjmp	.-10     	; 0xb1e <run+0x2e>

00000b28 <init_calculator>:
     b28:	8f e9       	ldi	r24, 0x9F	; 159
     b2a:	96 e8       	ldi	r25, 0x86	; 134
     b2c:	a1 e0       	ldi	r26, 0x01	; 1
     b2e:	81 50       	subi	r24, 0x01	; 1
     b30:	90 40       	sbci	r25, 0x00	; 0
     b32:	a0 40       	sbci	r26, 0x00	; 0
     b34:	e1 f7       	brne	.-8      	; 0xb2e <init_calculator+0x6>
     b36:	00 c0       	rjmp	.+0      	; 0xb38 <init_calculator+0x10>
     b38:	00 00       	nop
static char buffer[16];
static char overflow[] = "   Overflow   ";

void init_calculator() {
    _delay_ms(500);
    init_display();
     b3a:	23 db       	rcall	.-2490   	; 0x182 <init_display>
    init_keyboard();
     b3c:	a3 db       	rcall	.-2234   	; 0x284 <init_keyboard>

    reset();
     b3e:	14 dd       	rcall	.-1496   	; 0x568 <reset>
    run();
     b40:	d7 df       	rcall	.-82     	; 0xaf0 <run>
}
     b42:	08 95       	ret

00000b44 <_fpadd_parts>:
     b44:	a0 e0       	ldi	r26, 0x00	; 0
     b46:	b0 e0       	ldi	r27, 0x00	; 0
     b48:	e7 ea       	ldi	r30, 0xA7	; 167
     b4a:	f5 e0       	ldi	r31, 0x05	; 5
     b4c:	48 c6       	rjmp	.+3216   	; 0x17de <__prologue_saves__+0x8>
     b4e:	fc 01       	movw	r30, r24
     b50:	ea 01       	movw	r28, r20
     b52:	80 81       	ld	r24, Z
     b54:	82 30       	cpi	r24, 0x02	; 2
     b56:	08 f4       	brcc	.+2      	; 0xb5a <_fpadd_parts+0x16>
     b58:	38 c1       	rjmp	.+624    	; 0xdca <_fpadd_parts+0x286>
     b5a:	db 01       	movw	r26, r22
     b5c:	9c 91       	ld	r25, X
     b5e:	92 30       	cpi	r25, 0x02	; 2
     b60:	08 f4       	brcc	.+2      	; 0xb64 <_fpadd_parts+0x20>
     b62:	30 c1       	rjmp	.+608    	; 0xdc4 <_fpadd_parts+0x280>
     b64:	84 30       	cpi	r24, 0x04	; 4
     b66:	59 f4       	brne	.+22     	; 0xb7e <_fpadd_parts+0x3a>
     b68:	94 30       	cpi	r25, 0x04	; 4
     b6a:	09 f0       	breq	.+2      	; 0xb6e <_fpadd_parts+0x2a>
     b6c:	2e c1       	rjmp	.+604    	; 0xdca <_fpadd_parts+0x286>
     b6e:	91 81       	ldd	r25, Z+1	; 0x01
     b70:	11 96       	adiw	r26, 0x01	; 1
     b72:	8c 91       	ld	r24, X
     b74:	11 97       	sbiw	r26, 0x01	; 1
     b76:	98 17       	cp	r25, r24
     b78:	09 f0       	breq	.+2      	; 0xb7c <_fpadd_parts+0x38>
     b7a:	21 c1       	rjmp	.+578    	; 0xdbe <_fpadd_parts+0x27a>
     b7c:	26 c1       	rjmp	.+588    	; 0xdca <_fpadd_parts+0x286>
     b7e:	94 30       	cpi	r25, 0x04	; 4
     b80:	09 f4       	brne	.+2      	; 0xb84 <_fpadd_parts+0x40>
     b82:	20 c1       	rjmp	.+576    	; 0xdc4 <_fpadd_parts+0x280>
     b84:	92 30       	cpi	r25, 0x02	; 2
     b86:	b1 f4       	brne	.+44     	; 0xbb4 <_fpadd_parts+0x70>
     b88:	82 30       	cpi	r24, 0x02	; 2
     b8a:	09 f0       	breq	.+2      	; 0xb8e <_fpadd_parts+0x4a>
     b8c:	1e c1       	rjmp	.+572    	; 0xdca <_fpadd_parts+0x286>
     b8e:	ca 01       	movw	r24, r20
     b90:	af 01       	movw	r20, r30
     b92:	28 e0       	ldi	r18, 0x08	; 8
     b94:	da 01       	movw	r26, r20
     b96:	0d 90       	ld	r0, X+
     b98:	ad 01       	movw	r20, r26
     b9a:	dc 01       	movw	r26, r24
     b9c:	0d 92       	st	X+, r0
     b9e:	cd 01       	movw	r24, r26
     ba0:	21 50       	subi	r18, 0x01	; 1
     ba2:	c1 f7       	brne	.-16     	; 0xb94 <_fpadd_parts+0x50>
     ba4:	db 01       	movw	r26, r22
     ba6:	11 96       	adiw	r26, 0x01	; 1
     ba8:	8c 91       	ld	r24, X
     baa:	11 97       	sbiw	r26, 0x01	; 1
     bac:	91 81       	ldd	r25, Z+1	; 0x01
     bae:	89 23       	and	r24, r25
     bb0:	89 83       	std	Y+1, r24	; 0x01
     bb2:	0a c1       	rjmp	.+532    	; 0xdc8 <_fpadd_parts+0x284>
     bb4:	82 30       	cpi	r24, 0x02	; 2
     bb6:	09 f4       	brne	.+2      	; 0xbba <_fpadd_parts+0x76>
     bb8:	05 c1       	rjmp	.+522    	; 0xdc4 <_fpadd_parts+0x280>
     bba:	c2 80       	ldd	r12, Z+2	; 0x02
     bbc:	d3 80       	ldd	r13, Z+3	; 0x03
     bbe:	db 01       	movw	r26, r22
     bc0:	12 96       	adiw	r26, 0x02	; 2
     bc2:	6d 90       	ld	r6, X+
     bc4:	7c 90       	ld	r7, X
     bc6:	13 97       	sbiw	r26, 0x03	; 3
     bc8:	24 81       	ldd	r18, Z+4	; 0x04
     bca:	35 81       	ldd	r19, Z+5	; 0x05
     bcc:	46 81       	ldd	r20, Z+6	; 0x06
     bce:	57 81       	ldd	r21, Z+7	; 0x07
     bd0:	14 96       	adiw	r26, 0x04	; 4
     bd2:	ed 90       	ld	r14, X+
     bd4:	fd 90       	ld	r15, X+
     bd6:	0d 91       	ld	r16, X+
     bd8:	1c 91       	ld	r17, X
     bda:	17 97       	sbiw	r26, 0x07	; 7
     bdc:	c6 01       	movw	r24, r12
     bde:	86 19       	sub	r24, r6
     be0:	97 09       	sbc	r25, r7
     be2:	5c 01       	movw	r10, r24
     be4:	97 ff       	sbrs	r25, 7
     be6:	04 c0       	rjmp	.+8      	; 0xbf0 <_fpadd_parts+0xac>
     be8:	aa 24       	eor	r10, r10
     bea:	bb 24       	eor	r11, r11
     bec:	a8 1a       	sub	r10, r24
     bee:	b9 0a       	sbc	r11, r25
     bf0:	b0 e2       	ldi	r27, 0x20	; 32
     bf2:	ab 16       	cp	r10, r27
     bf4:	b1 04       	cpc	r11, r1
     bf6:	0c f0       	brlt	.+2      	; 0xbfa <_fpadd_parts+0xb6>
     bf8:	61 c0       	rjmp	.+194    	; 0xcbc <_fpadd_parts+0x178>
     bfa:	18 16       	cp	r1, r24
     bfc:	19 06       	cpc	r1, r25
     bfe:	6c f5       	brge	.+90     	; 0xc5a <_fpadd_parts+0x116>
     c00:	37 01       	movw	r6, r14
     c02:	48 01       	movw	r8, r16
     c04:	0a 2c       	mov	r0, r10
     c06:	04 c0       	rjmp	.+8      	; 0xc10 <_fpadd_parts+0xcc>
     c08:	96 94       	lsr	r9
     c0a:	87 94       	ror	r8
     c0c:	77 94       	ror	r7
     c0e:	67 94       	ror	r6
     c10:	0a 94       	dec	r0
     c12:	d2 f7       	brpl	.-12     	; 0xc08 <_fpadd_parts+0xc4>
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	a0 e0       	ldi	r26, 0x00	; 0
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	0a 2c       	mov	r0, r10
     c1e:	04 c0       	rjmp	.+8      	; 0xc28 <_fpadd_parts+0xe4>
     c20:	88 0f       	add	r24, r24
     c22:	99 1f       	adc	r25, r25
     c24:	aa 1f       	adc	r26, r26
     c26:	bb 1f       	adc	r27, r27
     c28:	0a 94       	dec	r0
     c2a:	d2 f7       	brpl	.-12     	; 0xc20 <_fpadd_parts+0xdc>
     c2c:	01 97       	sbiw	r24, 0x01	; 1
     c2e:	a1 09       	sbc	r26, r1
     c30:	b1 09       	sbc	r27, r1
     c32:	8e 21       	and	r24, r14
     c34:	9f 21       	and	r25, r15
     c36:	a0 23       	and	r26, r16
     c38:	b1 23       	and	r27, r17
     c3a:	ee 24       	eor	r14, r14
     c3c:	ff 24       	eor	r15, r15
     c3e:	87 01       	movw	r16, r14
     c40:	e3 94       	inc	r14
     c42:	00 97       	sbiw	r24, 0x00	; 0
     c44:	a1 05       	cpc	r26, r1
     c46:	b1 05       	cpc	r27, r1
     c48:	19 f4       	brne	.+6      	; 0xc50 <_fpadd_parts+0x10c>
     c4a:	ee 24       	eor	r14, r14
     c4c:	ff 24       	eor	r15, r15
     c4e:	87 01       	movw	r16, r14
     c50:	e6 28       	or	r14, r6
     c52:	f7 28       	or	r15, r7
     c54:	08 29       	or	r16, r8
     c56:	19 29       	or	r17, r9
     c58:	3c c0       	rjmp	.+120    	; 0xcd2 <_fpadd_parts+0x18e>
     c5a:	00 97       	sbiw	r24, 0x00	; 0
     c5c:	d1 f1       	breq	.+116    	; 0xcd2 <_fpadd_parts+0x18e>
     c5e:	ca 0c       	add	r12, r10
     c60:	db 1c       	adc	r13, r11
     c62:	39 01       	movw	r6, r18
     c64:	4a 01       	movw	r8, r20
     c66:	0a 2c       	mov	r0, r10
     c68:	04 c0       	rjmp	.+8      	; 0xc72 <_fpadd_parts+0x12e>
     c6a:	96 94       	lsr	r9
     c6c:	87 94       	ror	r8
     c6e:	77 94       	ror	r7
     c70:	67 94       	ror	r6
     c72:	0a 94       	dec	r0
     c74:	d2 f7       	brpl	.-12     	; 0xc6a <_fpadd_parts+0x126>
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	a0 e0       	ldi	r26, 0x00	; 0
     c7c:	b0 e0       	ldi	r27, 0x00	; 0
     c7e:	0a 2c       	mov	r0, r10
     c80:	04 c0       	rjmp	.+8      	; 0xc8a <_fpadd_parts+0x146>
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	aa 1f       	adc	r26, r26
     c88:	bb 1f       	adc	r27, r27
     c8a:	0a 94       	dec	r0
     c8c:	d2 f7       	brpl	.-12     	; 0xc82 <_fpadd_parts+0x13e>
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	a1 09       	sbc	r26, r1
     c92:	b1 09       	sbc	r27, r1
     c94:	82 23       	and	r24, r18
     c96:	93 23       	and	r25, r19
     c98:	a4 23       	and	r26, r20
     c9a:	b5 23       	and	r27, r21
     c9c:	21 e0       	ldi	r18, 0x01	; 1
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	40 e0       	ldi	r20, 0x00	; 0
     ca2:	50 e0       	ldi	r21, 0x00	; 0
     ca4:	00 97       	sbiw	r24, 0x00	; 0
     ca6:	a1 05       	cpc	r26, r1
     ca8:	b1 05       	cpc	r27, r1
     caa:	19 f4       	brne	.+6      	; 0xcb2 <_fpadd_parts+0x16e>
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	a9 01       	movw	r20, r18
     cb2:	26 29       	or	r18, r6
     cb4:	37 29       	or	r19, r7
     cb6:	48 29       	or	r20, r8
     cb8:	59 29       	or	r21, r9
     cba:	0b c0       	rjmp	.+22     	; 0xcd2 <_fpadd_parts+0x18e>
     cbc:	6c 14       	cp	r6, r12
     cbe:	7d 04       	cpc	r7, r13
     cc0:	24 f4       	brge	.+8      	; 0xcca <_fpadd_parts+0x186>
     cc2:	ee 24       	eor	r14, r14
     cc4:	ff 24       	eor	r15, r15
     cc6:	87 01       	movw	r16, r14
     cc8:	04 c0       	rjmp	.+8      	; 0xcd2 <_fpadd_parts+0x18e>
     cca:	63 01       	movw	r12, r6
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	a9 01       	movw	r20, r18
     cd2:	81 81       	ldd	r24, Z+1	; 0x01
     cd4:	fb 01       	movw	r30, r22
     cd6:	91 81       	ldd	r25, Z+1	; 0x01
     cd8:	89 17       	cp	r24, r25
     cda:	09 f4       	brne	.+2      	; 0xcde <_fpadd_parts+0x19a>
     cdc:	45 c0       	rjmp	.+138    	; 0xd68 <_fpadd_parts+0x224>
     cde:	88 23       	and	r24, r24
     ce0:	49 f0       	breq	.+18     	; 0xcf4 <_fpadd_parts+0x1b0>
     ce2:	d8 01       	movw	r26, r16
     ce4:	c7 01       	movw	r24, r14
     ce6:	82 1b       	sub	r24, r18
     ce8:	93 0b       	sbc	r25, r19
     cea:	a4 0b       	sbc	r26, r20
     cec:	b5 0b       	sbc	r27, r21
     cee:	9c 01       	movw	r18, r24
     cf0:	ad 01       	movw	r20, r26
     cf2:	04 c0       	rjmp	.+8      	; 0xcfc <_fpadd_parts+0x1b8>
     cf4:	2e 19       	sub	r18, r14
     cf6:	3f 09       	sbc	r19, r15
     cf8:	40 0b       	sbc	r20, r16
     cfa:	51 0b       	sbc	r21, r17
     cfc:	57 fd       	sbrc	r21, 7
     cfe:	04 c0       	rjmp	.+8      	; 0xd08 <_fpadd_parts+0x1c4>
     d00:	19 82       	std	Y+1, r1	; 0x01
     d02:	db 82       	std	Y+3, r13	; 0x03
     d04:	ca 82       	std	Y+2, r12	; 0x02
     d06:	0b c0       	rjmp	.+22     	; 0xd1e <_fpadd_parts+0x1da>
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	89 83       	std	Y+1, r24	; 0x01
     d0c:	db 82       	std	Y+3, r13	; 0x03
     d0e:	ca 82       	std	Y+2, r12	; 0x02
     d10:	50 95       	com	r21
     d12:	40 95       	com	r20
     d14:	30 95       	com	r19
     d16:	21 95       	neg	r18
     d18:	3f 4f       	sbci	r19, 0xFF	; 255
     d1a:	4f 4f       	sbci	r20, 0xFF	; 255
     d1c:	5f 4f       	sbci	r21, 0xFF	; 255
     d1e:	2c 83       	std	Y+4, r18	; 0x04
     d20:	3d 83       	std	Y+5, r19	; 0x05
     d22:	4e 83       	std	Y+6, r20	; 0x06
     d24:	5f 83       	std	Y+7, r21	; 0x07
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <_fpadd_parts+0x1fe>
     d28:	88 0f       	add	r24, r24
     d2a:	99 1f       	adc	r25, r25
     d2c:	aa 1f       	adc	r26, r26
     d2e:	bb 1f       	adc	r27, r27
     d30:	8c 83       	std	Y+4, r24	; 0x04
     d32:	9d 83       	std	Y+5, r25	; 0x05
     d34:	ae 83       	std	Y+6, r26	; 0x06
     d36:	bf 83       	std	Y+7, r27	; 0x07
     d38:	8a 81       	ldd	r24, Y+2	; 0x02
     d3a:	9b 81       	ldd	r25, Y+3	; 0x03
     d3c:	01 97       	sbiw	r24, 0x01	; 1
     d3e:	9b 83       	std	Y+3, r25	; 0x03
     d40:	8a 83       	std	Y+2, r24	; 0x02
     d42:	8c 81       	ldd	r24, Y+4	; 0x04
     d44:	9d 81       	ldd	r25, Y+5	; 0x05
     d46:	ae 81       	ldd	r26, Y+6	; 0x06
     d48:	bf 81       	ldd	r27, Y+7	; 0x07
     d4a:	9c 01       	movw	r18, r24
     d4c:	ad 01       	movw	r20, r26
     d4e:	21 50       	subi	r18, 0x01	; 1
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	40 40       	sbci	r20, 0x00	; 0
     d54:	50 40       	sbci	r21, 0x00	; 0
     d56:	2f 3f       	cpi	r18, 0xFF	; 255
     d58:	ef ef       	ldi	r30, 0xFF	; 255
     d5a:	3e 07       	cpc	r19, r30
     d5c:	ef ef       	ldi	r30, 0xFF	; 255
     d5e:	4e 07       	cpc	r20, r30
     d60:	ef e3       	ldi	r30, 0x3F	; 63
     d62:	5e 07       	cpc	r21, r30
     d64:	08 f3       	brcs	.-62     	; 0xd28 <_fpadd_parts+0x1e4>
     d66:	0b c0       	rjmp	.+22     	; 0xd7e <_fpadd_parts+0x23a>
     d68:	89 83       	std	Y+1, r24	; 0x01
     d6a:	db 82       	std	Y+3, r13	; 0x03
     d6c:	ca 82       	std	Y+2, r12	; 0x02
     d6e:	2e 0d       	add	r18, r14
     d70:	3f 1d       	adc	r19, r15
     d72:	40 1f       	adc	r20, r16
     d74:	51 1f       	adc	r21, r17
     d76:	2c 83       	std	Y+4, r18	; 0x04
     d78:	3d 83       	std	Y+5, r19	; 0x05
     d7a:	4e 83       	std	Y+6, r20	; 0x06
     d7c:	5f 83       	std	Y+7, r21	; 0x07
     d7e:	83 e0       	ldi	r24, 0x03	; 3
     d80:	88 83       	st	Y, r24
     d82:	2c 81       	ldd	r18, Y+4	; 0x04
     d84:	3d 81       	ldd	r19, Y+5	; 0x05
     d86:	4e 81       	ldd	r20, Y+6	; 0x06
     d88:	5f 81       	ldd	r21, Y+7	; 0x07
     d8a:	57 ff       	sbrs	r21, 7
     d8c:	1d c0       	rjmp	.+58     	; 0xdc8 <_fpadd_parts+0x284>
     d8e:	da 01       	movw	r26, r20
     d90:	c9 01       	movw	r24, r18
     d92:	81 70       	andi	r24, 0x01	; 1
     d94:	90 70       	andi	r25, 0x00	; 0
     d96:	a0 70       	andi	r26, 0x00	; 0
     d98:	b0 70       	andi	r27, 0x00	; 0
     d9a:	56 95       	lsr	r21
     d9c:	47 95       	ror	r20
     d9e:	37 95       	ror	r19
     da0:	27 95       	ror	r18
     da2:	82 2b       	or	r24, r18
     da4:	93 2b       	or	r25, r19
     da6:	a4 2b       	or	r26, r20
     da8:	b5 2b       	or	r27, r21
     daa:	8c 83       	std	Y+4, r24	; 0x04
     dac:	9d 83       	std	Y+5, r25	; 0x05
     dae:	ae 83       	std	Y+6, r26	; 0x06
     db0:	bf 83       	std	Y+7, r27	; 0x07
     db2:	8a 81       	ldd	r24, Y+2	; 0x02
     db4:	9b 81       	ldd	r25, Y+3	; 0x03
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	9b 83       	std	Y+3, r25	; 0x03
     dba:	8a 83       	std	Y+2, r24	; 0x02
     dbc:	05 c0       	rjmp	.+10     	; 0xdc8 <_fpadd_parts+0x284>
     dbe:	eb e9       	ldi	r30, 0x9B	; 155
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	03 c0       	rjmp	.+6      	; 0xdca <_fpadd_parts+0x286>
     dc4:	fb 01       	movw	r30, r22
     dc6:	01 c0       	rjmp	.+2      	; 0xdca <_fpadd_parts+0x286>
     dc8:	fe 01       	movw	r30, r28
     dca:	cf 01       	movw	r24, r30
     dcc:	cd b7       	in	r28, 0x3d	; 61
     dce:	de b7       	in	r29, 0x3e	; 62
     dd0:	ee e0       	ldi	r30, 0x0E	; 14
     dd2:	21 c5       	rjmp	.+2626   	; 0x1816 <__epilogue_restores__+0x8>

00000dd4 <__addsf3>:
     dd4:	a0 e2       	ldi	r26, 0x20	; 32
     dd6:	b0 e0       	ldi	r27, 0x00	; 0
     dd8:	ef ee       	ldi	r30, 0xEF	; 239
     dda:	f6 e0       	ldi	r31, 0x06	; 6
     ddc:	08 c5       	rjmp	.+2576   	; 0x17ee <__prologue_saves__+0x18>
     dde:	69 83       	std	Y+1, r22	; 0x01
     de0:	7a 83       	std	Y+2, r23	; 0x02
     de2:	8b 83       	std	Y+3, r24	; 0x03
     de4:	9c 83       	std	Y+4, r25	; 0x04
     de6:	2d 83       	std	Y+5, r18	; 0x05
     de8:	3e 83       	std	Y+6, r19	; 0x06
     dea:	4f 83       	std	Y+7, r20	; 0x07
     dec:	58 87       	std	Y+8, r21	; 0x08
     dee:	89 e0       	ldi	r24, 0x09	; 9
     df0:	e8 2e       	mov	r14, r24
     df2:	f1 2c       	mov	r15, r1
     df4:	ec 0e       	add	r14, r28
     df6:	fd 1e       	adc	r15, r29
     df8:	ce 01       	movw	r24, r28
     dfa:	01 96       	adiw	r24, 0x01	; 1
     dfc:	b7 01       	movw	r22, r14
     dfe:	02 d4       	rcall	.+2052   	; 0x1604 <__unpack_f>
     e00:	8e 01       	movw	r16, r28
     e02:	0f 5e       	subi	r16, 0xEF	; 239
     e04:	1f 4f       	sbci	r17, 0xFF	; 255
     e06:	ce 01       	movw	r24, r28
     e08:	05 96       	adiw	r24, 0x05	; 5
     e0a:	b8 01       	movw	r22, r16
     e0c:	fb d3       	rcall	.+2038   	; 0x1604 <__unpack_f>
     e0e:	c7 01       	movw	r24, r14
     e10:	b8 01       	movw	r22, r16
     e12:	ae 01       	movw	r20, r28
     e14:	47 5e       	subi	r20, 0xE7	; 231
     e16:	5f 4f       	sbci	r21, 0xFF	; 255
     e18:	95 de       	rcall	.-726    	; 0xb44 <_fpadd_parts>
     e1a:	27 d3       	rcall	.+1614   	; 0x146a <__pack_f>
     e1c:	a0 96       	adiw	r28, 0x20	; 32
     e1e:	e6 e0       	ldi	r30, 0x06	; 6
     e20:	02 c5       	rjmp	.+2564   	; 0x1826 <__epilogue_restores__+0x18>

00000e22 <__subsf3>:
     e22:	a0 e2       	ldi	r26, 0x20	; 32
     e24:	b0 e0       	ldi	r27, 0x00	; 0
     e26:	e6 e1       	ldi	r30, 0x16	; 22
     e28:	f7 e0       	ldi	r31, 0x07	; 7
     e2a:	e1 c4       	rjmp	.+2498   	; 0x17ee <__prologue_saves__+0x18>
     e2c:	69 83       	std	Y+1, r22	; 0x01
     e2e:	7a 83       	std	Y+2, r23	; 0x02
     e30:	8b 83       	std	Y+3, r24	; 0x03
     e32:	9c 83       	std	Y+4, r25	; 0x04
     e34:	2d 83       	std	Y+5, r18	; 0x05
     e36:	3e 83       	std	Y+6, r19	; 0x06
     e38:	4f 83       	std	Y+7, r20	; 0x07
     e3a:	58 87       	std	Y+8, r21	; 0x08
     e3c:	8e 01       	movw	r16, r28
     e3e:	07 5f       	subi	r16, 0xF7	; 247
     e40:	1f 4f       	sbci	r17, 0xFF	; 255
     e42:	ce 01       	movw	r24, r28
     e44:	01 96       	adiw	r24, 0x01	; 1
     e46:	b8 01       	movw	r22, r16
     e48:	dd d3       	rcall	.+1978   	; 0x1604 <__unpack_f>
     e4a:	91 e1       	ldi	r25, 0x11	; 17
     e4c:	e9 2e       	mov	r14, r25
     e4e:	f1 2c       	mov	r15, r1
     e50:	ec 0e       	add	r14, r28
     e52:	fd 1e       	adc	r15, r29
     e54:	ce 01       	movw	r24, r28
     e56:	05 96       	adiw	r24, 0x05	; 5
     e58:	b7 01       	movw	r22, r14
     e5a:	d4 d3       	rcall	.+1960   	; 0x1604 <__unpack_f>
     e5c:	8a 89       	ldd	r24, Y+18	; 0x12
     e5e:	91 e0       	ldi	r25, 0x01	; 1
     e60:	89 27       	eor	r24, r25
     e62:	8a 8b       	std	Y+18, r24	; 0x12
     e64:	c8 01       	movw	r24, r16
     e66:	b7 01       	movw	r22, r14
     e68:	ae 01       	movw	r20, r28
     e6a:	47 5e       	subi	r20, 0xE7	; 231
     e6c:	5f 4f       	sbci	r21, 0xFF	; 255
     e6e:	6a de       	rcall	.-812    	; 0xb44 <_fpadd_parts>
     e70:	fc d2       	rcall	.+1528   	; 0x146a <__pack_f>
     e72:	a0 96       	adiw	r28, 0x20	; 32
     e74:	e6 e0       	ldi	r30, 0x06	; 6
     e76:	d7 c4       	rjmp	.+2478   	; 0x1826 <__epilogue_restores__+0x18>

00000e78 <__mulsf3>:
     e78:	a0 e2       	ldi	r26, 0x20	; 32
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	e1 e4       	ldi	r30, 0x41	; 65
     e7e:	f7 e0       	ldi	r31, 0x07	; 7
     e80:	aa c4       	rjmp	.+2388   	; 0x17d6 <__prologue_saves__>
     e82:	69 83       	std	Y+1, r22	; 0x01
     e84:	7a 83       	std	Y+2, r23	; 0x02
     e86:	8b 83       	std	Y+3, r24	; 0x03
     e88:	9c 83       	std	Y+4, r25	; 0x04
     e8a:	2d 83       	std	Y+5, r18	; 0x05
     e8c:	3e 83       	std	Y+6, r19	; 0x06
     e8e:	4f 83       	std	Y+7, r20	; 0x07
     e90:	58 87       	std	Y+8, r21	; 0x08
     e92:	ce 01       	movw	r24, r28
     e94:	01 96       	adiw	r24, 0x01	; 1
     e96:	be 01       	movw	r22, r28
     e98:	67 5f       	subi	r22, 0xF7	; 247
     e9a:	7f 4f       	sbci	r23, 0xFF	; 255
     e9c:	b3 d3       	rcall	.+1894   	; 0x1604 <__unpack_f>
     e9e:	ce 01       	movw	r24, r28
     ea0:	05 96       	adiw	r24, 0x05	; 5
     ea2:	be 01       	movw	r22, r28
     ea4:	6f 5e       	subi	r22, 0xEF	; 239
     ea6:	7f 4f       	sbci	r23, 0xFF	; 255
     ea8:	ad d3       	rcall	.+1882   	; 0x1604 <__unpack_f>
     eaa:	99 85       	ldd	r25, Y+9	; 0x09
     eac:	92 30       	cpi	r25, 0x02	; 2
     eae:	78 f0       	brcs	.+30     	; 0xece <__mulsf3+0x56>
     eb0:	89 89       	ldd	r24, Y+17	; 0x11
     eb2:	82 30       	cpi	r24, 0x02	; 2
     eb4:	c0 f0       	brcs	.+48     	; 0xee6 <__mulsf3+0x6e>
     eb6:	94 30       	cpi	r25, 0x04	; 4
     eb8:	19 f4       	brne	.+6      	; 0xec0 <__mulsf3+0x48>
     eba:	82 30       	cpi	r24, 0x02	; 2
     ebc:	41 f4       	brne	.+16     	; 0xece <__mulsf3+0x56>
     ebe:	cb c0       	rjmp	.+406    	; 0x1056 <__mulsf3+0x1de>
     ec0:	84 30       	cpi	r24, 0x04	; 4
     ec2:	19 f4       	brne	.+6      	; 0xeca <__mulsf3+0x52>
     ec4:	92 30       	cpi	r25, 0x02	; 2
     ec6:	79 f4       	brne	.+30     	; 0xee6 <__mulsf3+0x6e>
     ec8:	c6 c0       	rjmp	.+396    	; 0x1056 <__mulsf3+0x1de>
     eca:	92 30       	cpi	r25, 0x02	; 2
     ecc:	51 f4       	brne	.+20     	; 0xee2 <__mulsf3+0x6a>
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	2a 85       	ldd	r18, Y+10	; 0x0a
     ed2:	9a 89       	ldd	r25, Y+18	; 0x12
     ed4:	29 17       	cp	r18, r25
     ed6:	09 f4       	brne	.+2      	; 0xeda <__mulsf3+0x62>
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	8a 87       	std	Y+10, r24	; 0x0a
     edc:	ce 01       	movw	r24, r28
     ede:	09 96       	adiw	r24, 0x09	; 9
     ee0:	bc c0       	rjmp	.+376    	; 0x105a <__mulsf3+0x1e2>
     ee2:	82 30       	cpi	r24, 0x02	; 2
     ee4:	51 f4       	brne	.+20     	; 0xefa <__mulsf3+0x82>
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	2a 85       	ldd	r18, Y+10	; 0x0a
     eea:	9a 89       	ldd	r25, Y+18	; 0x12
     eec:	29 17       	cp	r18, r25
     eee:	09 f4       	brne	.+2      	; 0xef2 <__mulsf3+0x7a>
     ef0:	80 e0       	ldi	r24, 0x00	; 0
     ef2:	8a 8b       	std	Y+18, r24	; 0x12
     ef4:	ce 01       	movw	r24, r28
     ef6:	41 96       	adiw	r24, 0x11	; 17
     ef8:	b0 c0       	rjmp	.+352    	; 0x105a <__mulsf3+0x1e2>
     efa:	6d 84       	ldd	r6, Y+13	; 0x0d
     efc:	7e 84       	ldd	r7, Y+14	; 0x0e
     efe:	8f 84       	ldd	r8, Y+15	; 0x0f
     f00:	98 88       	ldd	r9, Y+16	; 0x10
     f02:	ed 88       	ldd	r14, Y+21	; 0x15
     f04:	fe 88       	ldd	r15, Y+22	; 0x16
     f06:	0f 89       	ldd	r16, Y+23	; 0x17
     f08:	18 8d       	ldd	r17, Y+24	; 0x18
     f0a:	e0 e2       	ldi	r30, 0x20	; 32
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	dc 01       	movw	r26, r24
     f14:	aa 24       	eor	r10, r10
     f16:	bb 24       	eor	r11, r11
     f18:	65 01       	movw	r12, r10
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	a9 01       	movw	r20, r18
     f20:	b3 01       	movw	r22, r6
     f22:	61 70       	andi	r22, 0x01	; 1
     f24:	70 70       	andi	r23, 0x00	; 0
     f26:	61 15       	cp	r22, r1
     f28:	71 05       	cpc	r23, r1
     f2a:	d1 f0       	breq	.+52     	; 0xf60 <__mulsf3+0xe8>
     f2c:	2e 0d       	add	r18, r14
     f2e:	3f 1d       	adc	r19, r15
     f30:	40 1f       	adc	r20, r16
     f32:	51 1f       	adc	r21, r17
     f34:	15 01       	movw	r2, r10
     f36:	26 01       	movw	r4, r12
     f38:	28 0e       	add	r2, r24
     f3a:	39 1e       	adc	r3, r25
     f3c:	4a 1e       	adc	r4, r26
     f3e:	5b 1e       	adc	r5, r27
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	a0 e0       	ldi	r26, 0x00	; 0
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	2e 15       	cp	r18, r14
     f4a:	3f 05       	cpc	r19, r15
     f4c:	40 07       	cpc	r20, r16
     f4e:	51 07       	cpc	r21, r17
     f50:	18 f0       	brcs	.+6      	; 0xf58 <__mulsf3+0xe0>
     f52:	80 e0       	ldi	r24, 0x00	; 0
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	dc 01       	movw	r26, r24
     f58:	82 0d       	add	r24, r2
     f5a:	93 1d       	adc	r25, r3
     f5c:	a4 1d       	adc	r26, r4
     f5e:	b5 1d       	adc	r27, r5
     f60:	aa 0c       	add	r10, r10
     f62:	bb 1c       	adc	r11, r11
     f64:	cc 1c       	adc	r12, r12
     f66:	dd 1c       	adc	r13, r13
     f68:	17 ff       	sbrs	r17, 7
     f6a:	09 c0       	rjmp	.+18     	; 0xf7e <__mulsf3+0x106>
     f6c:	61 e0       	ldi	r22, 0x01	; 1
     f6e:	26 2e       	mov	r2, r22
     f70:	31 2c       	mov	r3, r1
     f72:	41 2c       	mov	r4, r1
     f74:	51 2c       	mov	r5, r1
     f76:	a2 28       	or	r10, r2
     f78:	b3 28       	or	r11, r3
     f7a:	c4 28       	or	r12, r4
     f7c:	d5 28       	or	r13, r5
     f7e:	31 97       	sbiw	r30, 0x01	; 1
     f80:	49 f0       	breq	.+18     	; 0xf94 <__mulsf3+0x11c>
     f82:	ee 0c       	add	r14, r14
     f84:	ff 1c       	adc	r15, r15
     f86:	00 1f       	adc	r16, r16
     f88:	11 1f       	adc	r17, r17
     f8a:	96 94       	lsr	r9
     f8c:	87 94       	ror	r8
     f8e:	77 94       	ror	r7
     f90:	67 94       	ror	r6
     f92:	c6 cf       	rjmp	.-116    	; 0xf20 <__mulsf3+0xa8>
     f94:	6b 89       	ldd	r22, Y+19	; 0x13
     f96:	7c 89       	ldd	r23, Y+20	; 0x14
     f98:	eb 85       	ldd	r30, Y+11	; 0x0b
     f9a:	fc 85       	ldd	r31, Y+12	; 0x0c
     f9c:	6e 0f       	add	r22, r30
     f9e:	7f 1f       	adc	r23, r31
     fa0:	6e 5f       	subi	r22, 0xFE	; 254
     fa2:	7f 4f       	sbci	r23, 0xFF	; 255
     fa4:	7c 8f       	std	Y+28, r23	; 0x1c
     fa6:	6b 8f       	std	Y+27, r22	; 0x1b
     fa8:	61 e0       	ldi	r22, 0x01	; 1
     faa:	ea 85       	ldd	r30, Y+10	; 0x0a
     fac:	7a 89       	ldd	r23, Y+18	; 0x12
     fae:	e7 17       	cp	r30, r23
     fb0:	09 f4       	brne	.+2      	; 0xfb4 <__mulsf3+0x13c>
     fb2:	60 e0       	ldi	r22, 0x00	; 0
     fb4:	6a 8f       	std	Y+26, r22	; 0x1a
     fb6:	6b 8d       	ldd	r22, Y+27	; 0x1b
     fb8:	7c 8d       	ldd	r23, Y+28	; 0x1c
     fba:	10 c0       	rjmp	.+32     	; 0xfdc <__mulsf3+0x164>
     fbc:	fc 01       	movw	r30, r24
     fbe:	e1 70       	andi	r30, 0x01	; 1
     fc0:	f0 70       	andi	r31, 0x00	; 0
     fc2:	30 97       	sbiw	r30, 0x00	; 0
     fc4:	29 f0       	breq	.+10     	; 0xfd0 <__mulsf3+0x158>
     fc6:	56 95       	lsr	r21
     fc8:	47 95       	ror	r20
     fca:	37 95       	ror	r19
     fcc:	27 95       	ror	r18
     fce:	50 68       	ori	r21, 0x80	; 128
     fd0:	b6 95       	lsr	r27
     fd2:	a7 95       	ror	r26
     fd4:	97 95       	ror	r25
     fd6:	87 95       	ror	r24
     fd8:	6f 5f       	subi	r22, 0xFF	; 255
     fda:	7f 4f       	sbci	r23, 0xFF	; 255
     fdc:	b7 fd       	sbrc	r27, 7
     fde:	ee cf       	rjmp	.-36     	; 0xfbc <__mulsf3+0x144>
     fe0:	0c c0       	rjmp	.+24     	; 0xffa <__mulsf3+0x182>
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	aa 1f       	adc	r26, r26
     fe8:	bb 1f       	adc	r27, r27
     fea:	57 fd       	sbrc	r21, 7
     fec:	81 60       	ori	r24, 0x01	; 1
     fee:	22 0f       	add	r18, r18
     ff0:	33 1f       	adc	r19, r19
     ff2:	44 1f       	adc	r20, r20
     ff4:	55 1f       	adc	r21, r21
     ff6:	61 50       	subi	r22, 0x01	; 1
     ff8:	70 40       	sbci	r23, 0x00	; 0
     ffa:	80 30       	cpi	r24, 0x00	; 0
     ffc:	e0 e0       	ldi	r30, 0x00	; 0
     ffe:	9e 07       	cpc	r25, r30
    1000:	e0 e0       	ldi	r30, 0x00	; 0
    1002:	ae 07       	cpc	r26, r30
    1004:	e0 e4       	ldi	r30, 0x40	; 64
    1006:	be 07       	cpc	r27, r30
    1008:	60 f3       	brcs	.-40     	; 0xfe2 <__mulsf3+0x16a>
    100a:	6b 8f       	std	Y+27, r22	; 0x1b
    100c:	7c 8f       	std	Y+28, r23	; 0x1c
    100e:	6f e7       	ldi	r22, 0x7F	; 127
    1010:	e6 2e       	mov	r14, r22
    1012:	f1 2c       	mov	r15, r1
    1014:	01 2d       	mov	r16, r1
    1016:	11 2d       	mov	r17, r1
    1018:	e8 22       	and	r14, r24
    101a:	f9 22       	and	r15, r25
    101c:	0a 23       	and	r16, r26
    101e:	1b 23       	and	r17, r27
    1020:	60 e4       	ldi	r22, 0x40	; 64
    1022:	e6 16       	cp	r14, r22
    1024:	f1 04       	cpc	r15, r1
    1026:	01 05       	cpc	r16, r1
    1028:	11 05       	cpc	r17, r1
    102a:	61 f4       	brne	.+24     	; 0x1044 <__mulsf3+0x1cc>
    102c:	87 fd       	sbrc	r24, 7
    102e:	0a c0       	rjmp	.+20     	; 0x1044 <__mulsf3+0x1cc>
    1030:	21 15       	cp	r18, r1
    1032:	31 05       	cpc	r19, r1
    1034:	41 05       	cpc	r20, r1
    1036:	51 05       	cpc	r21, r1
    1038:	29 f0       	breq	.+10     	; 0x1044 <__mulsf3+0x1cc>
    103a:	80 5c       	subi	r24, 0xC0	; 192
    103c:	9f 4f       	sbci	r25, 0xFF	; 255
    103e:	af 4f       	sbci	r26, 0xFF	; 255
    1040:	bf 4f       	sbci	r27, 0xFF	; 255
    1042:	80 78       	andi	r24, 0x80	; 128
    1044:	8d 8f       	std	Y+29, r24	; 0x1d
    1046:	9e 8f       	std	Y+30, r25	; 0x1e
    1048:	af 8f       	std	Y+31, r26	; 0x1f
    104a:	b8 a3       	std	Y+32, r27	; 0x20
    104c:	83 e0       	ldi	r24, 0x03	; 3
    104e:	89 8f       	std	Y+25, r24	; 0x19
    1050:	ce 01       	movw	r24, r28
    1052:	49 96       	adiw	r24, 0x19	; 25
    1054:	02 c0       	rjmp	.+4      	; 0x105a <__mulsf3+0x1e2>
    1056:	8b e9       	ldi	r24, 0x9B	; 155
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	07 d2       	rcall	.+1038   	; 0x146a <__pack_f>
    105c:	a0 96       	adiw	r28, 0x20	; 32
    105e:	e2 e1       	ldi	r30, 0x12	; 18
    1060:	d6 c3       	rjmp	.+1964   	; 0x180e <__epilogue_restores__>

00001062 <__divsf3>:
    1062:	a8 e1       	ldi	r26, 0x18	; 24
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e6 e3       	ldi	r30, 0x36	; 54
    1068:	f8 e0       	ldi	r31, 0x08	; 8
    106a:	bd c3       	rjmp	.+1914   	; 0x17e6 <__prologue_saves__+0x10>
    106c:	69 83       	std	Y+1, r22	; 0x01
    106e:	7a 83       	std	Y+2, r23	; 0x02
    1070:	8b 83       	std	Y+3, r24	; 0x03
    1072:	9c 83       	std	Y+4, r25	; 0x04
    1074:	2d 83       	std	Y+5, r18	; 0x05
    1076:	3e 83       	std	Y+6, r19	; 0x06
    1078:	4f 83       	std	Y+7, r20	; 0x07
    107a:	58 87       	std	Y+8, r21	; 0x08
    107c:	8e 01       	movw	r16, r28
    107e:	07 5f       	subi	r16, 0xF7	; 247
    1080:	1f 4f       	sbci	r17, 0xFF	; 255
    1082:	ce 01       	movw	r24, r28
    1084:	01 96       	adiw	r24, 0x01	; 1
    1086:	b8 01       	movw	r22, r16
    1088:	bd d2       	rcall	.+1402   	; 0x1604 <__unpack_f>
    108a:	81 e1       	ldi	r24, 0x11	; 17
    108c:	e8 2e       	mov	r14, r24
    108e:	f1 2c       	mov	r15, r1
    1090:	ec 0e       	add	r14, r28
    1092:	fd 1e       	adc	r15, r29
    1094:	ce 01       	movw	r24, r28
    1096:	05 96       	adiw	r24, 0x05	; 5
    1098:	b7 01       	movw	r22, r14
    109a:	b4 d2       	rcall	.+1384   	; 0x1604 <__unpack_f>
    109c:	99 85       	ldd	r25, Y+9	; 0x09
    109e:	92 30       	cpi	r25, 0x02	; 2
    10a0:	08 f4       	brcc	.+2      	; 0x10a4 <__divsf3+0x42>
    10a2:	83 c0       	rjmp	.+262    	; 0x11aa <__divsf3+0x148>
    10a4:	89 89       	ldd	r24, Y+17	; 0x11
    10a6:	82 30       	cpi	r24, 0x02	; 2
    10a8:	08 f4       	brcc	.+2      	; 0x10ac <__divsf3+0x4a>
    10aa:	7b c0       	rjmp	.+246    	; 0x11a2 <__divsf3+0x140>
    10ac:	2a 85       	ldd	r18, Y+10	; 0x0a
    10ae:	3a 89       	ldd	r19, Y+18	; 0x12
    10b0:	23 27       	eor	r18, r19
    10b2:	2a 87       	std	Y+10, r18	; 0x0a
    10b4:	94 30       	cpi	r25, 0x04	; 4
    10b6:	11 f0       	breq	.+4      	; 0x10bc <__divsf3+0x5a>
    10b8:	92 30       	cpi	r25, 0x02	; 2
    10ba:	21 f4       	brne	.+8      	; 0x10c4 <__divsf3+0x62>
    10bc:	98 17       	cp	r25, r24
    10be:	09 f0       	breq	.+2      	; 0x10c2 <__divsf3+0x60>
    10c0:	6c c0       	rjmp	.+216    	; 0x119a <__divsf3+0x138>
    10c2:	71 c0       	rjmp	.+226    	; 0x11a6 <__divsf3+0x144>
    10c4:	84 30       	cpi	r24, 0x04	; 4
    10c6:	39 f4       	brne	.+14     	; 0x10d6 <__divsf3+0x74>
    10c8:	1d 86       	std	Y+13, r1	; 0x0d
    10ca:	1e 86       	std	Y+14, r1	; 0x0e
    10cc:	1f 86       	std	Y+15, r1	; 0x0f
    10ce:	18 8a       	std	Y+16, r1	; 0x10
    10d0:	1c 86       	std	Y+12, r1	; 0x0c
    10d2:	1b 86       	std	Y+11, r1	; 0x0b
    10d4:	6a c0       	rjmp	.+212    	; 0x11aa <__divsf3+0x148>
    10d6:	82 30       	cpi	r24, 0x02	; 2
    10d8:	19 f4       	brne	.+6      	; 0x10e0 <__divsf3+0x7e>
    10da:	84 e0       	ldi	r24, 0x04	; 4
    10dc:	89 87       	std	Y+9, r24	; 0x09
    10de:	65 c0       	rjmp	.+202    	; 0x11aa <__divsf3+0x148>
    10e0:	8b 85       	ldd	r24, Y+11	; 0x0b
    10e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    10e4:	2b 89       	ldd	r18, Y+19	; 0x13
    10e6:	3c 89       	ldd	r19, Y+20	; 0x14
    10e8:	82 1b       	sub	r24, r18
    10ea:	93 0b       	sbc	r25, r19
    10ec:	9c 87       	std	Y+12, r25	; 0x0c
    10ee:	8b 87       	std	Y+11, r24	; 0x0b
    10f0:	2d 85       	ldd	r18, Y+13	; 0x0d
    10f2:	3e 85       	ldd	r19, Y+14	; 0x0e
    10f4:	4f 85       	ldd	r20, Y+15	; 0x0f
    10f6:	58 89       	ldd	r21, Y+16	; 0x10
    10f8:	ed 88       	ldd	r14, Y+21	; 0x15
    10fa:	fe 88       	ldd	r15, Y+22	; 0x16
    10fc:	0f 89       	ldd	r16, Y+23	; 0x17
    10fe:	18 8d       	ldd	r17, Y+24	; 0x18
    1100:	2e 15       	cp	r18, r14
    1102:	3f 05       	cpc	r19, r15
    1104:	40 07       	cpc	r20, r16
    1106:	51 07       	cpc	r21, r17
    1108:	38 f4       	brcc	.+14     	; 0x1118 <__divsf3+0xb6>
    110a:	22 0f       	add	r18, r18
    110c:	33 1f       	adc	r19, r19
    110e:	44 1f       	adc	r20, r20
    1110:	55 1f       	adc	r21, r21
    1112:	01 97       	sbiw	r24, 0x01	; 1
    1114:	9c 87       	std	Y+12, r25	; 0x0c
    1116:	8b 87       	std	Y+11, r24	; 0x0b
    1118:	6f e1       	ldi	r22, 0x1F	; 31
    111a:	70 e0       	ldi	r23, 0x00	; 0
    111c:	a1 2c       	mov	r10, r1
    111e:	b1 2c       	mov	r11, r1
    1120:	c1 2c       	mov	r12, r1
    1122:	a0 e4       	ldi	r26, 0x40	; 64
    1124:	da 2e       	mov	r13, r26
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	dc 01       	movw	r26, r24
    112c:	2e 15       	cp	r18, r14
    112e:	3f 05       	cpc	r19, r15
    1130:	40 07       	cpc	r20, r16
    1132:	51 07       	cpc	r21, r17
    1134:	40 f0       	brcs	.+16     	; 0x1146 <__divsf3+0xe4>
    1136:	8a 29       	or	r24, r10
    1138:	9b 29       	or	r25, r11
    113a:	ac 29       	or	r26, r12
    113c:	bd 29       	or	r27, r13
    113e:	2e 19       	sub	r18, r14
    1140:	3f 09       	sbc	r19, r15
    1142:	40 0b       	sbc	r20, r16
    1144:	51 0b       	sbc	r21, r17
    1146:	d6 94       	lsr	r13
    1148:	c7 94       	ror	r12
    114a:	b7 94       	ror	r11
    114c:	a7 94       	ror	r10
    114e:	22 0f       	add	r18, r18
    1150:	33 1f       	adc	r19, r19
    1152:	44 1f       	adc	r20, r20
    1154:	55 1f       	adc	r21, r21
    1156:	61 50       	subi	r22, 0x01	; 1
    1158:	70 40       	sbci	r23, 0x00	; 0
    115a:	41 f7       	brne	.-48     	; 0x112c <__divsf3+0xca>
    115c:	6f e7       	ldi	r22, 0x7F	; 127
    115e:	e6 2e       	mov	r14, r22
    1160:	f1 2c       	mov	r15, r1
    1162:	01 2d       	mov	r16, r1
    1164:	11 2d       	mov	r17, r1
    1166:	e8 22       	and	r14, r24
    1168:	f9 22       	and	r15, r25
    116a:	0a 23       	and	r16, r26
    116c:	1b 23       	and	r17, r27
    116e:	60 e4       	ldi	r22, 0x40	; 64
    1170:	e6 16       	cp	r14, r22
    1172:	f1 04       	cpc	r15, r1
    1174:	01 05       	cpc	r16, r1
    1176:	11 05       	cpc	r17, r1
    1178:	61 f4       	brne	.+24     	; 0x1192 <__divsf3+0x130>
    117a:	87 fd       	sbrc	r24, 7
    117c:	0a c0       	rjmp	.+20     	; 0x1192 <__divsf3+0x130>
    117e:	21 15       	cp	r18, r1
    1180:	31 05       	cpc	r19, r1
    1182:	41 05       	cpc	r20, r1
    1184:	51 05       	cpc	r21, r1
    1186:	29 f0       	breq	.+10     	; 0x1192 <__divsf3+0x130>
    1188:	80 5c       	subi	r24, 0xC0	; 192
    118a:	9f 4f       	sbci	r25, 0xFF	; 255
    118c:	af 4f       	sbci	r26, 0xFF	; 255
    118e:	bf 4f       	sbci	r27, 0xFF	; 255
    1190:	80 78       	andi	r24, 0x80	; 128
    1192:	8d 87       	std	Y+13, r24	; 0x0d
    1194:	9e 87       	std	Y+14, r25	; 0x0e
    1196:	af 87       	std	Y+15, r26	; 0x0f
    1198:	b8 8b       	std	Y+16, r27	; 0x10
    119a:	8e 01       	movw	r16, r28
    119c:	07 5f       	subi	r16, 0xF7	; 247
    119e:	1f 4f       	sbci	r17, 0xFF	; 255
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <__divsf3+0x148>
    11a2:	87 01       	movw	r16, r14
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <__divsf3+0x148>
    11a6:	0b e9       	ldi	r16, 0x9B	; 155
    11a8:	10 e0       	ldi	r17, 0x00	; 0
    11aa:	c8 01       	movw	r24, r16
    11ac:	5e d1       	rcall	.+700    	; 0x146a <__pack_f>
    11ae:	68 96       	adiw	r28, 0x18	; 24
    11b0:	ea e0       	ldi	r30, 0x0A	; 10
    11b2:	35 c3       	rjmp	.+1642   	; 0x181e <__epilogue_restores__+0x10>

000011b4 <__ltsf2>:
    11b4:	a8 e1       	ldi	r26, 0x18	; 24
    11b6:	b0 e0       	ldi	r27, 0x00	; 0
    11b8:	ef ed       	ldi	r30, 0xDF	; 223
    11ba:	f8 e0       	ldi	r31, 0x08	; 8
    11bc:	18 c3       	rjmp	.+1584   	; 0x17ee <__prologue_saves__+0x18>
    11be:	69 83       	std	Y+1, r22	; 0x01
    11c0:	7a 83       	std	Y+2, r23	; 0x02
    11c2:	8b 83       	std	Y+3, r24	; 0x03
    11c4:	9c 83       	std	Y+4, r25	; 0x04
    11c6:	2d 83       	std	Y+5, r18	; 0x05
    11c8:	3e 83       	std	Y+6, r19	; 0x06
    11ca:	4f 83       	std	Y+7, r20	; 0x07
    11cc:	58 87       	std	Y+8, r21	; 0x08
    11ce:	8e 01       	movw	r16, r28
    11d0:	07 5f       	subi	r16, 0xF7	; 247
    11d2:	1f 4f       	sbci	r17, 0xFF	; 255
    11d4:	ce 01       	movw	r24, r28
    11d6:	01 96       	adiw	r24, 0x01	; 1
    11d8:	b8 01       	movw	r22, r16
    11da:	14 d2       	rcall	.+1064   	; 0x1604 <__unpack_f>
    11dc:	81 e1       	ldi	r24, 0x11	; 17
    11de:	e8 2e       	mov	r14, r24
    11e0:	f1 2c       	mov	r15, r1
    11e2:	ec 0e       	add	r14, r28
    11e4:	fd 1e       	adc	r15, r29
    11e6:	ce 01       	movw	r24, r28
    11e8:	05 96       	adiw	r24, 0x05	; 5
    11ea:	b7 01       	movw	r22, r14
    11ec:	0b d2       	rcall	.+1046   	; 0x1604 <__unpack_f>
    11ee:	89 85       	ldd	r24, Y+9	; 0x09
    11f0:	82 30       	cpi	r24, 0x02	; 2
    11f2:	38 f0       	brcs	.+14     	; 0x1202 <__ltsf2+0x4e>
    11f4:	89 89       	ldd	r24, Y+17	; 0x11
    11f6:	82 30       	cpi	r24, 0x02	; 2
    11f8:	20 f0       	brcs	.+8      	; 0x1202 <__ltsf2+0x4e>
    11fa:	c8 01       	movw	r24, r16
    11fc:	b7 01       	movw	r22, r14
    11fe:	6b d2       	rcall	.+1238   	; 0x16d6 <__fpcmp_parts_f>
    1200:	01 c0       	rjmp	.+2      	; 0x1204 <__ltsf2+0x50>
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	68 96       	adiw	r28, 0x18	; 24
    1206:	e6 e0       	ldi	r30, 0x06	; 6
    1208:	0e c3       	rjmp	.+1564   	; 0x1826 <__epilogue_restores__+0x18>

0000120a <__lesf2>:
    120a:	a8 e1       	ldi	r26, 0x18	; 24
    120c:	b0 e0       	ldi	r27, 0x00	; 0
    120e:	ea e0       	ldi	r30, 0x0A	; 10
    1210:	f9 e0       	ldi	r31, 0x09	; 9
    1212:	ed c2       	rjmp	.+1498   	; 0x17ee <__prologue_saves__+0x18>
    1214:	69 83       	std	Y+1, r22	; 0x01
    1216:	7a 83       	std	Y+2, r23	; 0x02
    1218:	8b 83       	std	Y+3, r24	; 0x03
    121a:	9c 83       	std	Y+4, r25	; 0x04
    121c:	2d 83       	std	Y+5, r18	; 0x05
    121e:	3e 83       	std	Y+6, r19	; 0x06
    1220:	4f 83       	std	Y+7, r20	; 0x07
    1222:	58 87       	std	Y+8, r21	; 0x08
    1224:	8e 01       	movw	r16, r28
    1226:	07 5f       	subi	r16, 0xF7	; 247
    1228:	1f 4f       	sbci	r17, 0xFF	; 255
    122a:	ce 01       	movw	r24, r28
    122c:	01 96       	adiw	r24, 0x01	; 1
    122e:	b8 01       	movw	r22, r16
    1230:	e9 d1       	rcall	.+978    	; 0x1604 <__unpack_f>
    1232:	81 e1       	ldi	r24, 0x11	; 17
    1234:	e8 2e       	mov	r14, r24
    1236:	f1 2c       	mov	r15, r1
    1238:	ec 0e       	add	r14, r28
    123a:	fd 1e       	adc	r15, r29
    123c:	ce 01       	movw	r24, r28
    123e:	05 96       	adiw	r24, 0x05	; 5
    1240:	b7 01       	movw	r22, r14
    1242:	e0 d1       	rcall	.+960    	; 0x1604 <__unpack_f>
    1244:	89 85       	ldd	r24, Y+9	; 0x09
    1246:	82 30       	cpi	r24, 0x02	; 2
    1248:	38 f0       	brcs	.+14     	; 0x1258 <__lesf2+0x4e>
    124a:	89 89       	ldd	r24, Y+17	; 0x11
    124c:	82 30       	cpi	r24, 0x02	; 2
    124e:	20 f0       	brcs	.+8      	; 0x1258 <__lesf2+0x4e>
    1250:	c8 01       	movw	r24, r16
    1252:	b7 01       	movw	r22, r14
    1254:	40 d2       	rcall	.+1152   	; 0x16d6 <__fpcmp_parts_f>
    1256:	01 c0       	rjmp	.+2      	; 0x125a <__lesf2+0x50>
    1258:	81 e0       	ldi	r24, 0x01	; 1
    125a:	68 96       	adiw	r28, 0x18	; 24
    125c:	e6 e0       	ldi	r30, 0x06	; 6
    125e:	e3 c2       	rjmp	.+1478   	; 0x1826 <__epilogue_restores__+0x18>

00001260 <__floatsisf>:
    1260:	a8 e0       	ldi	r26, 0x08	; 8
    1262:	b0 e0       	ldi	r27, 0x00	; 0
    1264:	e5 e3       	ldi	r30, 0x35	; 53
    1266:	f9 e0       	ldi	r31, 0x09	; 9
    1268:	c2 c2       	rjmp	.+1412   	; 0x17ee <__prologue_saves__+0x18>
    126a:	7b 01       	movw	r14, r22
    126c:	8c 01       	movw	r16, r24
    126e:	83 e0       	ldi	r24, 0x03	; 3
    1270:	89 83       	std	Y+1, r24	; 0x01
    1272:	d8 01       	movw	r26, r16
    1274:	c7 01       	movw	r24, r14
    1276:	88 27       	eor	r24, r24
    1278:	b7 fd       	sbrc	r27, 7
    127a:	83 95       	inc	r24
    127c:	99 27       	eor	r25, r25
    127e:	aa 27       	eor	r26, r26
    1280:	bb 27       	eor	r27, r27
    1282:	28 2f       	mov	r18, r24
    1284:	8a 83       	std	Y+2, r24	; 0x02
    1286:	e1 14       	cp	r14, r1
    1288:	f1 04       	cpc	r15, r1
    128a:	01 05       	cpc	r16, r1
    128c:	11 05       	cpc	r17, r1
    128e:	19 f4       	brne	.+6      	; 0x1296 <__floatsisf+0x36>
    1290:	82 e0       	ldi	r24, 0x02	; 2
    1292:	89 83       	std	Y+1, r24	; 0x01
    1294:	36 c0       	rjmp	.+108    	; 0x1302 <__floatsisf+0xa2>
    1296:	8e e1       	ldi	r24, 0x1E	; 30
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	9c 83       	std	Y+4, r25	; 0x04
    129c:	8b 83       	std	Y+3, r24	; 0x03
    129e:	22 23       	and	r18, r18
    12a0:	89 f0       	breq	.+34     	; 0x12c4 <__floatsisf+0x64>
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	e8 16       	cp	r14, r24
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	f8 06       	cpc	r15, r24
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	08 07       	cpc	r16, r24
    12ae:	80 e8       	ldi	r24, 0x80	; 128
    12b0:	18 07       	cpc	r17, r24
    12b2:	59 f1       	breq	.+86     	; 0x130a <__floatsisf+0xaa>
    12b4:	10 95       	com	r17
    12b6:	00 95       	com	r16
    12b8:	f0 94       	com	r15
    12ba:	e0 94       	com	r14
    12bc:	e1 1c       	adc	r14, r1
    12be:	f1 1c       	adc	r15, r1
    12c0:	01 1d       	adc	r16, r1
    12c2:	11 1d       	adc	r17, r1
    12c4:	ed 82       	std	Y+5, r14	; 0x05
    12c6:	fe 82       	std	Y+6, r15	; 0x06
    12c8:	0f 83       	std	Y+7, r16	; 0x07
    12ca:	18 87       	std	Y+8, r17	; 0x08
    12cc:	c8 01       	movw	r24, r16
    12ce:	b7 01       	movw	r22, r14
    12d0:	72 d0       	rcall	.+228    	; 0x13b6 <__clzsi2>
    12d2:	9c 01       	movw	r18, r24
    12d4:	21 50       	subi	r18, 0x01	; 1
    12d6:	30 40       	sbci	r19, 0x00	; 0
    12d8:	12 16       	cp	r1, r18
    12da:	13 06       	cpc	r1, r19
    12dc:	94 f4       	brge	.+36     	; 0x1302 <__floatsisf+0xa2>
    12de:	02 2e       	mov	r0, r18
    12e0:	04 c0       	rjmp	.+8      	; 0x12ea <__floatsisf+0x8a>
    12e2:	ee 0c       	add	r14, r14
    12e4:	ff 1c       	adc	r15, r15
    12e6:	00 1f       	adc	r16, r16
    12e8:	11 1f       	adc	r17, r17
    12ea:	0a 94       	dec	r0
    12ec:	d2 f7       	brpl	.-12     	; 0x12e2 <__floatsisf+0x82>
    12ee:	ed 82       	std	Y+5, r14	; 0x05
    12f0:	fe 82       	std	Y+6, r15	; 0x06
    12f2:	0f 83       	std	Y+7, r16	; 0x07
    12f4:	18 87       	std	Y+8, r17	; 0x08
    12f6:	8e e1       	ldi	r24, 0x1E	; 30
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	82 1b       	sub	r24, r18
    12fc:	93 0b       	sbc	r25, r19
    12fe:	9c 83       	std	Y+4, r25	; 0x04
    1300:	8b 83       	std	Y+3, r24	; 0x03
    1302:	ce 01       	movw	r24, r28
    1304:	01 96       	adiw	r24, 0x01	; 1
    1306:	b1 d0       	rcall	.+354    	; 0x146a <__pack_f>
    1308:	04 c0       	rjmp	.+8      	; 0x1312 <__floatsisf+0xb2>
    130a:	60 e0       	ldi	r22, 0x00	; 0
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	80 e0       	ldi	r24, 0x00	; 0
    1310:	9f ec       	ldi	r25, 0xCF	; 207
    1312:	28 96       	adiw	r28, 0x08	; 8
    1314:	e6 e0       	ldi	r30, 0x06	; 6
    1316:	87 c2       	rjmp	.+1294   	; 0x1826 <__epilogue_restores__+0x18>

00001318 <__fixsfsi>:
    1318:	ac e0       	ldi	r26, 0x0C	; 12
    131a:	b0 e0       	ldi	r27, 0x00	; 0
    131c:	e1 e9       	ldi	r30, 0x91	; 145
    131e:	f9 e0       	ldi	r31, 0x09	; 9
    1320:	6a c2       	rjmp	.+1236   	; 0x17f6 <__prologue_saves__+0x20>
    1322:	69 83       	std	Y+1, r22	; 0x01
    1324:	7a 83       	std	Y+2, r23	; 0x02
    1326:	8b 83       	std	Y+3, r24	; 0x03
    1328:	9c 83       	std	Y+4, r25	; 0x04
    132a:	ce 01       	movw	r24, r28
    132c:	01 96       	adiw	r24, 0x01	; 1
    132e:	be 01       	movw	r22, r28
    1330:	6b 5f       	subi	r22, 0xFB	; 251
    1332:	7f 4f       	sbci	r23, 0xFF	; 255
    1334:	67 d1       	rcall	.+718    	; 0x1604 <__unpack_f>
    1336:	8d 81       	ldd	r24, Y+5	; 0x05
    1338:	82 30       	cpi	r24, 0x02	; 2
    133a:	81 f1       	breq	.+96     	; 0x139c <__fixsfsi+0x84>
    133c:	82 30       	cpi	r24, 0x02	; 2
    133e:	70 f1       	brcs	.+92     	; 0x139c <__fixsfsi+0x84>
    1340:	84 30       	cpi	r24, 0x04	; 4
    1342:	21 f4       	brne	.+8      	; 0x134c <__fixsfsi+0x34>
    1344:	8e 81       	ldd	r24, Y+6	; 0x06
    1346:	88 23       	and	r24, r24
    1348:	69 f1       	breq	.+90     	; 0x13a4 <__fixsfsi+0x8c>
    134a:	0a c0       	rjmp	.+20     	; 0x1360 <__fixsfsi+0x48>
    134c:	2f 81       	ldd	r18, Y+7	; 0x07
    134e:	38 85       	ldd	r19, Y+8	; 0x08
    1350:	37 fd       	sbrc	r19, 7
    1352:	24 c0       	rjmp	.+72     	; 0x139c <__fixsfsi+0x84>
    1354:	6e 81       	ldd	r22, Y+6	; 0x06
    1356:	2f 31       	cpi	r18, 0x1F	; 31
    1358:	31 05       	cpc	r19, r1
    135a:	3c f0       	brlt	.+14     	; 0x136a <__fixsfsi+0x52>
    135c:	66 23       	and	r22, r22
    135e:	11 f1       	breq	.+68     	; 0x13a4 <__fixsfsi+0x8c>
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	40 e0       	ldi	r20, 0x00	; 0
    1366:	50 e8       	ldi	r21, 0x80	; 128
    1368:	21 c0       	rjmp	.+66     	; 0x13ac <__fixsfsi+0x94>
    136a:	8e e1       	ldi	r24, 0x1E	; 30
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	82 1b       	sub	r24, r18
    1370:	93 0b       	sbc	r25, r19
    1372:	29 85       	ldd	r18, Y+9	; 0x09
    1374:	3a 85       	ldd	r19, Y+10	; 0x0a
    1376:	4b 85       	ldd	r20, Y+11	; 0x0b
    1378:	5c 85       	ldd	r21, Y+12	; 0x0c
    137a:	04 c0       	rjmp	.+8      	; 0x1384 <__fixsfsi+0x6c>
    137c:	56 95       	lsr	r21
    137e:	47 95       	ror	r20
    1380:	37 95       	ror	r19
    1382:	27 95       	ror	r18
    1384:	8a 95       	dec	r24
    1386:	d2 f7       	brpl	.-12     	; 0x137c <__fixsfsi+0x64>
    1388:	66 23       	and	r22, r22
    138a:	81 f0       	breq	.+32     	; 0x13ac <__fixsfsi+0x94>
    138c:	50 95       	com	r21
    138e:	40 95       	com	r20
    1390:	30 95       	com	r19
    1392:	21 95       	neg	r18
    1394:	3f 4f       	sbci	r19, 0xFF	; 255
    1396:	4f 4f       	sbci	r20, 0xFF	; 255
    1398:	5f 4f       	sbci	r21, 0xFF	; 255
    139a:	08 c0       	rjmp	.+16     	; 0x13ac <__fixsfsi+0x94>
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	a9 01       	movw	r20, r18
    13a2:	04 c0       	rjmp	.+8      	; 0x13ac <__fixsfsi+0x94>
    13a4:	2f ef       	ldi	r18, 0xFF	; 255
    13a6:	3f ef       	ldi	r19, 0xFF	; 255
    13a8:	4f ef       	ldi	r20, 0xFF	; 255
    13aa:	5f e7       	ldi	r21, 0x7F	; 127
    13ac:	b9 01       	movw	r22, r18
    13ae:	ca 01       	movw	r24, r20
    13b0:	2c 96       	adiw	r28, 0x0c	; 12
    13b2:	e2 e0       	ldi	r30, 0x02	; 2
    13b4:	3c c2       	rjmp	.+1144   	; 0x182e <__epilogue_restores__+0x20>

000013b6 <__clzsi2>:
    13b6:	af 92       	push	r10
    13b8:	bf 92       	push	r11
    13ba:	cf 92       	push	r12
    13bc:	df 92       	push	r13
    13be:	ef 92       	push	r14
    13c0:	ff 92       	push	r15
    13c2:	0f 93       	push	r16
    13c4:	1f 93       	push	r17
    13c6:	7b 01       	movw	r14, r22
    13c8:	8c 01       	movw	r16, r24
    13ca:	80 e0       	ldi	r24, 0x00	; 0
    13cc:	e8 16       	cp	r14, r24
    13ce:	80 e0       	ldi	r24, 0x00	; 0
    13d0:	f8 06       	cpc	r15, r24
    13d2:	81 e0       	ldi	r24, 0x01	; 1
    13d4:	08 07       	cpc	r16, r24
    13d6:	80 e0       	ldi	r24, 0x00	; 0
    13d8:	18 07       	cpc	r17, r24
    13da:	58 f4       	brcc	.+22     	; 0x13f2 <__clzsi2+0x3c>
    13dc:	ef ef       	ldi	r30, 0xFF	; 255
    13de:	ee 16       	cp	r14, r30
    13e0:	f1 04       	cpc	r15, r1
    13e2:	01 05       	cpc	r16, r1
    13e4:	11 05       	cpc	r17, r1
    13e6:	09 f0       	breq	.+2      	; 0x13ea <__clzsi2+0x34>
    13e8:	90 f4       	brcc	.+36     	; 0x140e <__clzsi2+0x58>
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	dc 01       	movw	r26, r24
    13f0:	17 c0       	rjmp	.+46     	; 0x1420 <__clzsi2+0x6a>
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	ef 16       	cp	r14, r31
    13f6:	f0 e0       	ldi	r31, 0x00	; 0
    13f8:	ff 06       	cpc	r15, r31
    13fa:	f0 e0       	ldi	r31, 0x00	; 0
    13fc:	0f 07       	cpc	r16, r31
    13fe:	f1 e0       	ldi	r31, 0x01	; 1
    1400:	1f 07       	cpc	r17, r31
    1402:	50 f4       	brcc	.+20     	; 0x1418 <__clzsi2+0x62>
    1404:	80 e1       	ldi	r24, 0x10	; 16
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	a0 e0       	ldi	r26, 0x00	; 0
    140a:	b0 e0       	ldi	r27, 0x00	; 0
    140c:	09 c0       	rjmp	.+18     	; 0x1420 <__clzsi2+0x6a>
    140e:	88 e0       	ldi	r24, 0x08	; 8
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	a0 e0       	ldi	r26, 0x00	; 0
    1414:	b0 e0       	ldi	r27, 0x00	; 0
    1416:	04 c0       	rjmp	.+8      	; 0x1420 <__clzsi2+0x6a>
    1418:	88 e1       	ldi	r24, 0x18	; 24
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	a0 e0       	ldi	r26, 0x00	; 0
    141e:	b0 e0       	ldi	r27, 0x00	; 0
    1420:	20 e2       	ldi	r18, 0x20	; 32
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	40 e0       	ldi	r20, 0x00	; 0
    1426:	50 e0       	ldi	r21, 0x00	; 0
    1428:	28 1b       	sub	r18, r24
    142a:	39 0b       	sbc	r19, r25
    142c:	4a 0b       	sbc	r20, r26
    142e:	5b 0b       	sbc	r21, r27
    1430:	57 01       	movw	r10, r14
    1432:	68 01       	movw	r12, r16
    1434:	04 c0       	rjmp	.+8      	; 0x143e <__clzsi2+0x88>
    1436:	d6 94       	lsr	r13
    1438:	c7 94       	ror	r12
    143a:	b7 94       	ror	r11
    143c:	a7 94       	ror	r10
    143e:	8a 95       	dec	r24
    1440:	d2 f7       	brpl	.-12     	; 0x1436 <__clzsi2+0x80>
    1442:	d6 01       	movw	r26, r12
    1444:	c5 01       	movw	r24, r10
    1446:	8d 55       	subi	r24, 0x5D	; 93
    1448:	9f 4f       	sbci	r25, 0xFF	; 255
    144a:	fc 01       	movw	r30, r24
    144c:	80 81       	ld	r24, Z
    144e:	28 1b       	sub	r18, r24
    1450:	31 09       	sbc	r19, r1
    1452:	41 09       	sbc	r20, r1
    1454:	51 09       	sbc	r21, r1
    1456:	c9 01       	movw	r24, r18
    1458:	1f 91       	pop	r17
    145a:	0f 91       	pop	r16
    145c:	ff 90       	pop	r15
    145e:	ef 90       	pop	r14
    1460:	df 90       	pop	r13
    1462:	cf 90       	pop	r12
    1464:	bf 90       	pop	r11
    1466:	af 90       	pop	r10
    1468:	08 95       	ret

0000146a <__pack_f>:
    146a:	ef 92       	push	r14
    146c:	ff 92       	push	r15
    146e:	0f 93       	push	r16
    1470:	1f 93       	push	r17
    1472:	cf 93       	push	r28
    1474:	df 93       	push	r29
    1476:	fc 01       	movw	r30, r24
    1478:	24 81       	ldd	r18, Z+4	; 0x04
    147a:	35 81       	ldd	r19, Z+5	; 0x05
    147c:	46 81       	ldd	r20, Z+6	; 0x06
    147e:	57 81       	ldd	r21, Z+7	; 0x07
    1480:	61 81       	ldd	r22, Z+1	; 0x01
    1482:	80 81       	ld	r24, Z
    1484:	82 30       	cpi	r24, 0x02	; 2
    1486:	20 f4       	brcc	.+8      	; 0x1490 <__pack_f+0x26>
    1488:	40 61       	ori	r20, 0x10	; 16
    148a:	ef ef       	ldi	r30, 0xFF	; 255
    148c:	f0 e0       	ldi	r31, 0x00	; 0
    148e:	a3 c0       	rjmp	.+326    	; 0x15d6 <__pack_f+0x16c>
    1490:	84 30       	cpi	r24, 0x04	; 4
    1492:	09 f4       	brne	.+2      	; 0x1496 <__pack_f+0x2c>
    1494:	9b c0       	rjmp	.+310    	; 0x15cc <__pack_f+0x162>
    1496:	82 30       	cpi	r24, 0x02	; 2
    1498:	09 f4       	brne	.+2      	; 0x149c <__pack_f+0x32>
    149a:	92 c0       	rjmp	.+292    	; 0x15c0 <__pack_f+0x156>
    149c:	21 15       	cp	r18, r1
    149e:	31 05       	cpc	r19, r1
    14a0:	41 05       	cpc	r20, r1
    14a2:	51 05       	cpc	r21, r1
    14a4:	09 f4       	brne	.+2      	; 0x14a8 <__pack_f+0x3e>
    14a6:	8f c0       	rjmp	.+286    	; 0x15c6 <__pack_f+0x15c>
    14a8:	02 80       	ldd	r0, Z+2	; 0x02
    14aa:	f3 81       	ldd	r31, Z+3	; 0x03
    14ac:	e0 2d       	mov	r30, r0
    14ae:	8f ef       	ldi	r24, 0xFF	; 255
    14b0:	e2 38       	cpi	r30, 0x82	; 130
    14b2:	f8 07       	cpc	r31, r24
    14b4:	0c f0       	brlt	.+2      	; 0x14b8 <__pack_f+0x4e>
    14b6:	5a c0       	rjmp	.+180    	; 0x156c <__pack_f+0x102>
    14b8:	c2 e8       	ldi	r28, 0x82	; 130
    14ba:	df ef       	ldi	r29, 0xFF	; 255
    14bc:	ce 1b       	sub	r28, r30
    14be:	df 0b       	sbc	r29, r31
    14c0:	ca 31       	cpi	r28, 0x1A	; 26
    14c2:	d1 05       	cpc	r29, r1
    14c4:	6c f5       	brge	.+90     	; 0x1520 <__pack_f+0xb6>
    14c6:	79 01       	movw	r14, r18
    14c8:	8a 01       	movw	r16, r20
    14ca:	0c 2e       	mov	r0, r28
    14cc:	04 c0       	rjmp	.+8      	; 0x14d6 <__pack_f+0x6c>
    14ce:	16 95       	lsr	r17
    14d0:	07 95       	ror	r16
    14d2:	f7 94       	ror	r15
    14d4:	e7 94       	ror	r14
    14d6:	0a 94       	dec	r0
    14d8:	d2 f7       	brpl	.-12     	; 0x14ce <__pack_f+0x64>
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	a0 e0       	ldi	r26, 0x00	; 0
    14e0:	b0 e0       	ldi	r27, 0x00	; 0
    14e2:	0c 2e       	mov	r0, r28
    14e4:	04 c0       	rjmp	.+8      	; 0x14ee <__pack_f+0x84>
    14e6:	88 0f       	add	r24, r24
    14e8:	99 1f       	adc	r25, r25
    14ea:	aa 1f       	adc	r26, r26
    14ec:	bb 1f       	adc	r27, r27
    14ee:	0a 94       	dec	r0
    14f0:	d2 f7       	brpl	.-12     	; 0x14e6 <__pack_f+0x7c>
    14f2:	01 97       	sbiw	r24, 0x01	; 1
    14f4:	a1 09       	sbc	r26, r1
    14f6:	b1 09       	sbc	r27, r1
    14f8:	82 23       	and	r24, r18
    14fa:	93 23       	and	r25, r19
    14fc:	a4 23       	and	r26, r20
    14fe:	b5 23       	and	r27, r21
    1500:	21 e0       	ldi	r18, 0x01	; 1
    1502:	30 e0       	ldi	r19, 0x00	; 0
    1504:	40 e0       	ldi	r20, 0x00	; 0
    1506:	50 e0       	ldi	r21, 0x00	; 0
    1508:	00 97       	sbiw	r24, 0x00	; 0
    150a:	a1 05       	cpc	r26, r1
    150c:	b1 05       	cpc	r27, r1
    150e:	19 f4       	brne	.+6      	; 0x1516 <__pack_f+0xac>
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	a9 01       	movw	r20, r18
    1516:	2e 29       	or	r18, r14
    1518:	3f 29       	or	r19, r15
    151a:	40 2b       	or	r20, r16
    151c:	51 2b       	or	r21, r17
    151e:	03 c0       	rjmp	.+6      	; 0x1526 <__pack_f+0xbc>
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	a9 01       	movw	r20, r18
    1526:	da 01       	movw	r26, r20
    1528:	c9 01       	movw	r24, r18
    152a:	8f 77       	andi	r24, 0x7F	; 127
    152c:	90 70       	andi	r25, 0x00	; 0
    152e:	a0 70       	andi	r26, 0x00	; 0
    1530:	b0 70       	andi	r27, 0x00	; 0
    1532:	80 34       	cpi	r24, 0x40	; 64
    1534:	91 05       	cpc	r25, r1
    1536:	a1 05       	cpc	r26, r1
    1538:	b1 05       	cpc	r27, r1
    153a:	39 f4       	brne	.+14     	; 0x154a <__pack_f+0xe0>
    153c:	27 ff       	sbrs	r18, 7
    153e:	09 c0       	rjmp	.+18     	; 0x1552 <__pack_f+0xe8>
    1540:	20 5c       	subi	r18, 0xC0	; 192
    1542:	3f 4f       	sbci	r19, 0xFF	; 255
    1544:	4f 4f       	sbci	r20, 0xFF	; 255
    1546:	5f 4f       	sbci	r21, 0xFF	; 255
    1548:	04 c0       	rjmp	.+8      	; 0x1552 <__pack_f+0xe8>
    154a:	21 5c       	subi	r18, 0xC1	; 193
    154c:	3f 4f       	sbci	r19, 0xFF	; 255
    154e:	4f 4f       	sbci	r20, 0xFF	; 255
    1550:	5f 4f       	sbci	r21, 0xFF	; 255
    1552:	e1 e0       	ldi	r30, 0x01	; 1
    1554:	f0 e0       	ldi	r31, 0x00	; 0
    1556:	20 30       	cpi	r18, 0x00	; 0
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	38 07       	cpc	r19, r24
    155c:	80 e0       	ldi	r24, 0x00	; 0
    155e:	48 07       	cpc	r20, r24
    1560:	80 e4       	ldi	r24, 0x40	; 64
    1562:	58 07       	cpc	r21, r24
    1564:	28 f5       	brcc	.+74     	; 0x15b0 <__pack_f+0x146>
    1566:	e0 e0       	ldi	r30, 0x00	; 0
    1568:	f0 e0       	ldi	r31, 0x00	; 0
    156a:	22 c0       	rjmp	.+68     	; 0x15b0 <__pack_f+0x146>
    156c:	e0 38       	cpi	r30, 0x80	; 128
    156e:	f1 05       	cpc	r31, r1
    1570:	6c f5       	brge	.+90     	; 0x15cc <__pack_f+0x162>
    1572:	e1 58       	subi	r30, 0x81	; 129
    1574:	ff 4f       	sbci	r31, 0xFF	; 255
    1576:	da 01       	movw	r26, r20
    1578:	c9 01       	movw	r24, r18
    157a:	8f 77       	andi	r24, 0x7F	; 127
    157c:	90 70       	andi	r25, 0x00	; 0
    157e:	a0 70       	andi	r26, 0x00	; 0
    1580:	b0 70       	andi	r27, 0x00	; 0
    1582:	80 34       	cpi	r24, 0x40	; 64
    1584:	91 05       	cpc	r25, r1
    1586:	a1 05       	cpc	r26, r1
    1588:	b1 05       	cpc	r27, r1
    158a:	39 f4       	brne	.+14     	; 0x159a <__pack_f+0x130>
    158c:	27 ff       	sbrs	r18, 7
    158e:	09 c0       	rjmp	.+18     	; 0x15a2 <__pack_f+0x138>
    1590:	20 5c       	subi	r18, 0xC0	; 192
    1592:	3f 4f       	sbci	r19, 0xFF	; 255
    1594:	4f 4f       	sbci	r20, 0xFF	; 255
    1596:	5f 4f       	sbci	r21, 0xFF	; 255
    1598:	04 c0       	rjmp	.+8      	; 0x15a2 <__pack_f+0x138>
    159a:	21 5c       	subi	r18, 0xC1	; 193
    159c:	3f 4f       	sbci	r19, 0xFF	; 255
    159e:	4f 4f       	sbci	r20, 0xFF	; 255
    15a0:	5f 4f       	sbci	r21, 0xFF	; 255
    15a2:	57 ff       	sbrs	r21, 7
    15a4:	05 c0       	rjmp	.+10     	; 0x15b0 <__pack_f+0x146>
    15a6:	56 95       	lsr	r21
    15a8:	47 95       	ror	r20
    15aa:	37 95       	ror	r19
    15ac:	27 95       	ror	r18
    15ae:	31 96       	adiw	r30, 0x01	; 1
    15b0:	87 e0       	ldi	r24, 0x07	; 7
    15b2:	56 95       	lsr	r21
    15b4:	47 95       	ror	r20
    15b6:	37 95       	ror	r19
    15b8:	27 95       	ror	r18
    15ba:	8a 95       	dec	r24
    15bc:	d1 f7       	brne	.-12     	; 0x15b2 <__pack_f+0x148>
    15be:	0b c0       	rjmp	.+22     	; 0x15d6 <__pack_f+0x16c>
    15c0:	e0 e0       	ldi	r30, 0x00	; 0
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	05 c0       	rjmp	.+10     	; 0x15d0 <__pack_f+0x166>
    15c6:	e0 e0       	ldi	r30, 0x00	; 0
    15c8:	f0 e0       	ldi	r31, 0x00	; 0
    15ca:	05 c0       	rjmp	.+10     	; 0x15d6 <__pack_f+0x16c>
    15cc:	ef ef       	ldi	r30, 0xFF	; 255
    15ce:	f0 e0       	ldi	r31, 0x00	; 0
    15d0:	20 e0       	ldi	r18, 0x00	; 0
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	a9 01       	movw	r20, r18
    15d6:	8e 2f       	mov	r24, r30
    15d8:	87 95       	ror	r24
    15da:	88 27       	eor	r24, r24
    15dc:	87 95       	ror	r24
    15de:	94 2f       	mov	r25, r20
    15e0:	9f 77       	andi	r25, 0x7F	; 127
    15e2:	67 95       	ror	r22
    15e4:	66 27       	eor	r22, r22
    15e6:	67 95       	ror	r22
    15e8:	e6 95       	lsr	r30
    15ea:	e2 2e       	mov	r14, r18
    15ec:	a9 2f       	mov	r26, r25
    15ee:	a8 2b       	or	r26, r24
    15f0:	fe 2f       	mov	r31, r30
    15f2:	f6 2b       	or	r31, r22
    15f4:	62 2f       	mov	r22, r18
    15f6:	73 2f       	mov	r23, r19
    15f8:	8a 2f       	mov	r24, r26
    15fa:	9f 2f       	mov	r25, r31
    15fc:	cd b7       	in	r28, 0x3d	; 61
    15fe:	de b7       	in	r29, 0x3e	; 62
    1600:	e6 e0       	ldi	r30, 0x06	; 6
    1602:	11 c1       	rjmp	.+546    	; 0x1826 <__epilogue_restores__+0x18>

00001604 <__unpack_f>:
    1604:	dc 01       	movw	r26, r24
    1606:	fb 01       	movw	r30, r22
    1608:	2c 91       	ld	r18, X
    160a:	11 96       	adiw	r26, 0x01	; 1
    160c:	3c 91       	ld	r19, X
    160e:	11 97       	sbiw	r26, 0x01	; 1
    1610:	12 96       	adiw	r26, 0x02	; 2
    1612:	8c 91       	ld	r24, X
    1614:	12 97       	sbiw	r26, 0x02	; 2
    1616:	48 2f       	mov	r20, r24
    1618:	4f 77       	andi	r20, 0x7F	; 127
    161a:	50 e0       	ldi	r21, 0x00	; 0
    161c:	98 2f       	mov	r25, r24
    161e:	99 1f       	adc	r25, r25
    1620:	99 27       	eor	r25, r25
    1622:	99 1f       	adc	r25, r25
    1624:	13 96       	adiw	r26, 0x03	; 3
    1626:	6c 91       	ld	r22, X
    1628:	13 97       	sbiw	r26, 0x03	; 3
    162a:	86 2f       	mov	r24, r22
    162c:	88 0f       	add	r24, r24
    162e:	89 2b       	or	r24, r25
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	66 1f       	adc	r22, r22
    1634:	66 27       	eor	r22, r22
    1636:	66 1f       	adc	r22, r22
    1638:	61 83       	std	Z+1, r22	; 0x01
    163a:	00 97       	sbiw	r24, 0x00	; 0
    163c:	39 f5       	brne	.+78     	; 0x168c <__unpack_f+0x88>
    163e:	21 15       	cp	r18, r1
    1640:	31 05       	cpc	r19, r1
    1642:	41 05       	cpc	r20, r1
    1644:	51 05       	cpc	r21, r1
    1646:	11 f4       	brne	.+4      	; 0x164c <__unpack_f+0x48>
    1648:	82 e0       	ldi	r24, 0x02	; 2
    164a:	29 c0       	rjmp	.+82     	; 0x169e <__unpack_f+0x9a>
    164c:	82 e8       	ldi	r24, 0x82	; 130
    164e:	9f ef       	ldi	r25, 0xFF	; 255
    1650:	93 83       	std	Z+3, r25	; 0x03
    1652:	82 83       	std	Z+2, r24	; 0x02
    1654:	67 e0       	ldi	r22, 0x07	; 7
    1656:	22 0f       	add	r18, r18
    1658:	33 1f       	adc	r19, r19
    165a:	44 1f       	adc	r20, r20
    165c:	55 1f       	adc	r21, r21
    165e:	6a 95       	dec	r22
    1660:	d1 f7       	brne	.-12     	; 0x1656 <__unpack_f+0x52>
    1662:	83 e0       	ldi	r24, 0x03	; 3
    1664:	80 83       	st	Z, r24
    1666:	09 c0       	rjmp	.+18     	; 0x167a <__unpack_f+0x76>
    1668:	22 0f       	add	r18, r18
    166a:	33 1f       	adc	r19, r19
    166c:	44 1f       	adc	r20, r20
    166e:	55 1f       	adc	r21, r21
    1670:	82 81       	ldd	r24, Z+2	; 0x02
    1672:	93 81       	ldd	r25, Z+3	; 0x03
    1674:	01 97       	sbiw	r24, 0x01	; 1
    1676:	93 83       	std	Z+3, r25	; 0x03
    1678:	82 83       	std	Z+2, r24	; 0x02
    167a:	20 30       	cpi	r18, 0x00	; 0
    167c:	80 e0       	ldi	r24, 0x00	; 0
    167e:	38 07       	cpc	r19, r24
    1680:	80 e0       	ldi	r24, 0x00	; 0
    1682:	48 07       	cpc	r20, r24
    1684:	80 e4       	ldi	r24, 0x40	; 64
    1686:	58 07       	cpc	r21, r24
    1688:	78 f3       	brcs	.-34     	; 0x1668 <__unpack_f+0x64>
    168a:	20 c0       	rjmp	.+64     	; 0x16cc <__unpack_f+0xc8>
    168c:	8f 3f       	cpi	r24, 0xFF	; 255
    168e:	91 05       	cpc	r25, r1
    1690:	79 f4       	brne	.+30     	; 0x16b0 <__unpack_f+0xac>
    1692:	21 15       	cp	r18, r1
    1694:	31 05       	cpc	r19, r1
    1696:	41 05       	cpc	r20, r1
    1698:	51 05       	cpc	r21, r1
    169a:	19 f4       	brne	.+6      	; 0x16a2 <__unpack_f+0x9e>
    169c:	84 e0       	ldi	r24, 0x04	; 4
    169e:	80 83       	st	Z, r24
    16a0:	08 95       	ret
    16a2:	44 ff       	sbrs	r20, 4
    16a4:	03 c0       	rjmp	.+6      	; 0x16ac <__unpack_f+0xa8>
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	80 83       	st	Z, r24
    16aa:	10 c0       	rjmp	.+32     	; 0x16cc <__unpack_f+0xc8>
    16ac:	10 82       	st	Z, r1
    16ae:	0e c0       	rjmp	.+28     	; 0x16cc <__unpack_f+0xc8>
    16b0:	8f 57       	subi	r24, 0x7F	; 127
    16b2:	90 40       	sbci	r25, 0x00	; 0
    16b4:	93 83       	std	Z+3, r25	; 0x03
    16b6:	82 83       	std	Z+2, r24	; 0x02
    16b8:	83 e0       	ldi	r24, 0x03	; 3
    16ba:	80 83       	st	Z, r24
    16bc:	87 e0       	ldi	r24, 0x07	; 7
    16be:	22 0f       	add	r18, r18
    16c0:	33 1f       	adc	r19, r19
    16c2:	44 1f       	adc	r20, r20
    16c4:	55 1f       	adc	r21, r21
    16c6:	8a 95       	dec	r24
    16c8:	d1 f7       	brne	.-12     	; 0x16be <__unpack_f+0xba>
    16ca:	50 64       	ori	r21, 0x40	; 64
    16cc:	24 83       	std	Z+4, r18	; 0x04
    16ce:	35 83       	std	Z+5, r19	; 0x05
    16d0:	46 83       	std	Z+6, r20	; 0x06
    16d2:	57 83       	std	Z+7, r21	; 0x07
    16d4:	08 95       	ret

000016d6 <__fpcmp_parts_f>:
    16d6:	fc 01       	movw	r30, r24
    16d8:	db 01       	movw	r26, r22
    16da:	90 81       	ld	r25, Z
    16dc:	92 30       	cpi	r25, 0x02	; 2
    16de:	08 f4       	brcc	.+2      	; 0x16e2 <__fpcmp_parts_f+0xc>
    16e0:	49 c0       	rjmp	.+146    	; 0x1774 <__fpcmp_parts_f+0x9e>
    16e2:	8c 91       	ld	r24, X
    16e4:	82 30       	cpi	r24, 0x02	; 2
    16e6:	08 f4       	brcc	.+2      	; 0x16ea <__fpcmp_parts_f+0x14>
    16e8:	45 c0       	rjmp	.+138    	; 0x1774 <__fpcmp_parts_f+0x9e>
    16ea:	94 30       	cpi	r25, 0x04	; 4
    16ec:	51 f4       	brne	.+20     	; 0x1702 <__fpcmp_parts_f+0x2c>
    16ee:	61 81       	ldd	r22, Z+1	; 0x01
    16f0:	84 30       	cpi	r24, 0x04	; 4
    16f2:	b1 f5       	brne	.+108    	; 0x1760 <__fpcmp_parts_f+0x8a>
    16f4:	11 96       	adiw	r26, 0x01	; 1
    16f6:	2c 91       	ld	r18, X
    16f8:	11 97       	sbiw	r26, 0x01	; 1
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	26 1b       	sub	r18, r22
    16fe:	31 09       	sbc	r19, r1
    1700:	41 c0       	rjmp	.+130    	; 0x1784 <__fpcmp_parts_f+0xae>
    1702:	84 30       	cpi	r24, 0x04	; 4
    1704:	21 f0       	breq	.+8      	; 0x170e <__fpcmp_parts_f+0x38>
    1706:	92 30       	cpi	r25, 0x02	; 2
    1708:	41 f4       	brne	.+16     	; 0x171a <__fpcmp_parts_f+0x44>
    170a:	82 30       	cpi	r24, 0x02	; 2
    170c:	b1 f1       	breq	.+108    	; 0x177a <__fpcmp_parts_f+0xa4>
    170e:	11 96       	adiw	r26, 0x01	; 1
    1710:	8c 91       	ld	r24, X
    1712:	11 97       	sbiw	r26, 0x01	; 1
    1714:	88 23       	and	r24, r24
    1716:	a1 f1       	breq	.+104    	; 0x1780 <__fpcmp_parts_f+0xaa>
    1718:	2d c0       	rjmp	.+90     	; 0x1774 <__fpcmp_parts_f+0x9e>
    171a:	61 81       	ldd	r22, Z+1	; 0x01
    171c:	82 30       	cpi	r24, 0x02	; 2
    171e:	01 f1       	breq	.+64     	; 0x1760 <__fpcmp_parts_f+0x8a>
    1720:	11 96       	adiw	r26, 0x01	; 1
    1722:	8c 91       	ld	r24, X
    1724:	11 97       	sbiw	r26, 0x01	; 1
    1726:	68 17       	cp	r22, r24
    1728:	d9 f4       	brne	.+54     	; 0x1760 <__fpcmp_parts_f+0x8a>
    172a:	22 81       	ldd	r18, Z+2	; 0x02
    172c:	33 81       	ldd	r19, Z+3	; 0x03
    172e:	12 96       	adiw	r26, 0x02	; 2
    1730:	8d 91       	ld	r24, X+
    1732:	9c 91       	ld	r25, X
    1734:	13 97       	sbiw	r26, 0x03	; 3
    1736:	82 17       	cp	r24, r18
    1738:	93 07       	cpc	r25, r19
    173a:	94 f0       	brlt	.+36     	; 0x1760 <__fpcmp_parts_f+0x8a>
    173c:	28 17       	cp	r18, r24
    173e:	39 07       	cpc	r19, r25
    1740:	bc f0       	brlt	.+46     	; 0x1770 <__fpcmp_parts_f+0x9a>
    1742:	24 81       	ldd	r18, Z+4	; 0x04
    1744:	35 81       	ldd	r19, Z+5	; 0x05
    1746:	46 81       	ldd	r20, Z+6	; 0x06
    1748:	57 81       	ldd	r21, Z+7	; 0x07
    174a:	14 96       	adiw	r26, 0x04	; 4
    174c:	8d 91       	ld	r24, X+
    174e:	9d 91       	ld	r25, X+
    1750:	0d 90       	ld	r0, X+
    1752:	bc 91       	ld	r27, X
    1754:	a0 2d       	mov	r26, r0
    1756:	82 17       	cp	r24, r18
    1758:	93 07       	cpc	r25, r19
    175a:	a4 07       	cpc	r26, r20
    175c:	b5 07       	cpc	r27, r21
    175e:	18 f4       	brcc	.+6      	; 0x1766 <__fpcmp_parts_f+0x90>
    1760:	66 23       	and	r22, r22
    1762:	41 f0       	breq	.+16     	; 0x1774 <__fpcmp_parts_f+0x9e>
    1764:	0d c0       	rjmp	.+26     	; 0x1780 <__fpcmp_parts_f+0xaa>
    1766:	28 17       	cp	r18, r24
    1768:	39 07       	cpc	r19, r25
    176a:	4a 07       	cpc	r20, r26
    176c:	5b 07       	cpc	r21, r27
    176e:	28 f4       	brcc	.+10     	; 0x177a <__fpcmp_parts_f+0xa4>
    1770:	66 23       	and	r22, r22
    1772:	31 f0       	breq	.+12     	; 0x1780 <__fpcmp_parts_f+0xaa>
    1774:	21 e0       	ldi	r18, 0x01	; 1
    1776:	30 e0       	ldi	r19, 0x00	; 0
    1778:	05 c0       	rjmp	.+10     	; 0x1784 <__fpcmp_parts_f+0xae>
    177a:	20 e0       	ldi	r18, 0x00	; 0
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	02 c0       	rjmp	.+4      	; 0x1784 <__fpcmp_parts_f+0xae>
    1780:	2f ef       	ldi	r18, 0xFF	; 255
    1782:	3f ef       	ldi	r19, 0xFF	; 255
    1784:	c9 01       	movw	r24, r18
    1786:	08 95       	ret

00001788 <__divmodhi4>:
    1788:	97 fb       	bst	r25, 7
    178a:	09 2e       	mov	r0, r25
    178c:	07 26       	eor	r0, r23
    178e:	0a d0       	rcall	.+20     	; 0x17a4 <__divmodhi4_neg1>
    1790:	77 fd       	sbrc	r23, 7
    1792:	04 d0       	rcall	.+8      	; 0x179c <__divmodhi4_neg2>
    1794:	0c d0       	rcall	.+24     	; 0x17ae <__udivmodhi4>
    1796:	06 d0       	rcall	.+12     	; 0x17a4 <__divmodhi4_neg1>
    1798:	00 20       	and	r0, r0
    179a:	1a f4       	brpl	.+6      	; 0x17a2 <__divmodhi4_exit>

0000179c <__divmodhi4_neg2>:
    179c:	70 95       	com	r23
    179e:	61 95       	neg	r22
    17a0:	7f 4f       	sbci	r23, 0xFF	; 255

000017a2 <__divmodhi4_exit>:
    17a2:	08 95       	ret

000017a4 <__divmodhi4_neg1>:
    17a4:	f6 f7       	brtc	.-4      	; 0x17a2 <__divmodhi4_exit>
    17a6:	90 95       	com	r25
    17a8:	81 95       	neg	r24
    17aa:	9f 4f       	sbci	r25, 0xFF	; 255
    17ac:	08 95       	ret

000017ae <__udivmodhi4>:
    17ae:	aa 1b       	sub	r26, r26
    17b0:	bb 1b       	sub	r27, r27
    17b2:	51 e1       	ldi	r21, 0x11	; 17
    17b4:	07 c0       	rjmp	.+14     	; 0x17c4 <__udivmodhi4_ep>

000017b6 <__udivmodhi4_loop>:
    17b6:	aa 1f       	adc	r26, r26
    17b8:	bb 1f       	adc	r27, r27
    17ba:	a6 17       	cp	r26, r22
    17bc:	b7 07       	cpc	r27, r23
    17be:	10 f0       	brcs	.+4      	; 0x17c4 <__udivmodhi4_ep>
    17c0:	a6 1b       	sub	r26, r22
    17c2:	b7 0b       	sbc	r27, r23

000017c4 <__udivmodhi4_ep>:
    17c4:	88 1f       	adc	r24, r24
    17c6:	99 1f       	adc	r25, r25
    17c8:	5a 95       	dec	r21
    17ca:	a9 f7       	brne	.-22     	; 0x17b6 <__udivmodhi4_loop>
    17cc:	80 95       	com	r24
    17ce:	90 95       	com	r25
    17d0:	bc 01       	movw	r22, r24
    17d2:	cd 01       	movw	r24, r26
    17d4:	08 95       	ret

000017d6 <__prologue_saves__>:
    17d6:	2f 92       	push	r2
    17d8:	3f 92       	push	r3
    17da:	4f 92       	push	r4
    17dc:	5f 92       	push	r5
    17de:	6f 92       	push	r6
    17e0:	7f 92       	push	r7
    17e2:	8f 92       	push	r8
    17e4:	9f 92       	push	r9
    17e6:	af 92       	push	r10
    17e8:	bf 92       	push	r11
    17ea:	cf 92       	push	r12
    17ec:	df 92       	push	r13
    17ee:	ef 92       	push	r14
    17f0:	ff 92       	push	r15
    17f2:	0f 93       	push	r16
    17f4:	1f 93       	push	r17
    17f6:	cf 93       	push	r28
    17f8:	df 93       	push	r29
    17fa:	cd b7       	in	r28, 0x3d	; 61
    17fc:	de b7       	in	r29, 0x3e	; 62
    17fe:	ca 1b       	sub	r28, r26
    1800:	db 0b       	sbc	r29, r27
    1802:	0f b6       	in	r0, 0x3f	; 63
    1804:	f8 94       	cli
    1806:	de bf       	out	0x3e, r29	; 62
    1808:	0f be       	out	0x3f, r0	; 63
    180a:	cd bf       	out	0x3d, r28	; 61
    180c:	09 94       	ijmp

0000180e <__epilogue_restores__>:
    180e:	2a 88       	ldd	r2, Y+18	; 0x12
    1810:	39 88       	ldd	r3, Y+17	; 0x11
    1812:	48 88       	ldd	r4, Y+16	; 0x10
    1814:	5f 84       	ldd	r5, Y+15	; 0x0f
    1816:	6e 84       	ldd	r6, Y+14	; 0x0e
    1818:	7d 84       	ldd	r7, Y+13	; 0x0d
    181a:	8c 84       	ldd	r8, Y+12	; 0x0c
    181c:	9b 84       	ldd	r9, Y+11	; 0x0b
    181e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1820:	b9 84       	ldd	r11, Y+9	; 0x09
    1822:	c8 84       	ldd	r12, Y+8	; 0x08
    1824:	df 80       	ldd	r13, Y+7	; 0x07
    1826:	ee 80       	ldd	r14, Y+6	; 0x06
    1828:	fd 80       	ldd	r15, Y+5	; 0x05
    182a:	0c 81       	ldd	r16, Y+4	; 0x04
    182c:	1b 81       	ldd	r17, Y+3	; 0x03
    182e:	aa 81       	ldd	r26, Y+2	; 0x02
    1830:	b9 81       	ldd	r27, Y+1	; 0x01
    1832:	ce 0f       	add	r28, r30
    1834:	d1 1d       	adc	r29, r1
    1836:	0f b6       	in	r0, 0x3f	; 63
    1838:	f8 94       	cli
    183a:	de bf       	out	0x3e, r29	; 62
    183c:	0f be       	out	0x3f, r0	; 63
    183e:	cd bf       	out	0x3d, r28	; 61
    1840:	ed 01       	movw	r28, r26
    1842:	08 95       	ret

00001844 <dtostrf>:
    1844:	ef 92       	push	r14
    1846:	ff 92       	push	r15
    1848:	0f 93       	push	r16
    184a:	1f 93       	push	r17
    184c:	32 2f       	mov	r19, r18
    184e:	f0 2e       	mov	r15, r16
    1850:	47 ff       	sbrs	r20, 7
    1852:	02 c0       	rjmp	.+4      	; 0x1858 <dtostrf+0x14>
    1854:	a4 e1       	ldi	r26, 0x14	; 20
    1856:	01 c0       	rjmp	.+2      	; 0x185a <dtostrf+0x16>
    1858:	a4 e0       	ldi	r26, 0x04	; 4
    185a:	e4 2f       	mov	r30, r20
    185c:	ff 27       	eor	r31, r31
    185e:	e7 fd       	sbrc	r30, 7
    1860:	f0 95       	com	r31
    1862:	f7 ff       	sbrs	r31, 7
    1864:	03 c0       	rjmp	.+6      	; 0x186c <dtostrf+0x28>
    1866:	f0 95       	com	r31
    1868:	e1 95       	neg	r30
    186a:	ff 4f       	sbci	r31, 0xFF	; 255
    186c:	4f 2d       	mov	r20, r15
    186e:	51 2f       	mov	r21, r17
    1870:	2e 2f       	mov	r18, r30
    1872:	03 2f       	mov	r16, r19
    1874:	ea 2e       	mov	r14, r26
    1876:	07 d0       	rcall	.+14     	; 0x1886 <dtoa_prf>
    1878:	8f 2d       	mov	r24, r15
    187a:	91 2f       	mov	r25, r17
    187c:	1f 91       	pop	r17
    187e:	0f 91       	pop	r16
    1880:	ff 90       	pop	r15
    1882:	ef 90       	pop	r14
    1884:	08 95       	ret

00001886 <dtoa_prf>:
    1886:	a9 e0       	ldi	r26, 0x09	; 9
    1888:	b0 e0       	ldi	r27, 0x00	; 0
    188a:	e8 e4       	ldi	r30, 0x48	; 72
    188c:	fc e0       	ldi	r31, 0x0C	; 12
    188e:	ab cf       	rjmp	.-170    	; 0x17e6 <__prologue_saves__+0x10>
    1890:	6a 01       	movw	r12, r20
    1892:	f2 2e       	mov	r15, r18
    1894:	10 2f       	mov	r17, r16
    1896:	0c 33       	cpi	r16, 0x3C	; 60
    1898:	18 f4       	brcc	.+6      	; 0x18a0 <dtoa_prf+0x1a>
    189a:	b0 2e       	mov	r11, r16
    189c:	b3 94       	inc	r11
    189e:	02 c0       	rjmp	.+4      	; 0x18a4 <dtoa_prf+0x1e>
    18a0:	ec e3       	ldi	r30, 0x3C	; 60
    18a2:	be 2e       	mov	r11, r30
    18a4:	ae 01       	movw	r20, r28
    18a6:	4f 5f       	subi	r20, 0xFF	; 255
    18a8:	5f 4f       	sbci	r21, 0xFF	; 255
    18aa:	27 e0       	ldi	r18, 0x07	; 7
    18ac:	0b 2d       	mov	r16, r11
    18ae:	3f d1       	rcall	.+638    	; 0x1b2e <__ftoa_engine>
    18b0:	29 81       	ldd	r18, Y+1	; 0x01
    18b2:	30 e0       	ldi	r19, 0x00	; 0
    18b4:	a9 01       	movw	r20, r18
    18b6:	49 70       	andi	r20, 0x09	; 9
    18b8:	50 70       	andi	r21, 0x00	; 0
    18ba:	41 30       	cpi	r20, 0x01	; 1
    18bc:	51 05       	cpc	r21, r1
    18be:	31 f0       	breq	.+12     	; 0x18cc <dtoa_prf+0x46>
    18c0:	e1 fc       	sbrc	r14, 1
    18c2:	06 c0       	rjmp	.+12     	; 0x18d0 <dtoa_prf+0x4a>
    18c4:	e0 fe       	sbrs	r14, 0
    18c6:	06 c0       	rjmp	.+12     	; 0x18d4 <dtoa_prf+0x4e>
    18c8:	e0 e2       	ldi	r30, 0x20	; 32
    18ca:	05 c0       	rjmp	.+10     	; 0x18d6 <dtoa_prf+0x50>
    18cc:	ed e2       	ldi	r30, 0x2D	; 45
    18ce:	03 c0       	rjmp	.+6      	; 0x18d6 <dtoa_prf+0x50>
    18d0:	eb e2       	ldi	r30, 0x2B	; 43
    18d2:	01 c0       	rjmp	.+2      	; 0x18d6 <dtoa_prf+0x50>
    18d4:	e0 e0       	ldi	r30, 0x00	; 0
    18d6:	23 ff       	sbrs	r18, 3
    18d8:	37 c0       	rjmp	.+110    	; 0x1948 <dtoa_prf+0xc2>
    18da:	ee 23       	and	r30, r30
    18dc:	11 f0       	breq	.+4      	; 0x18e2 <dtoa_prf+0x5c>
    18de:	84 e0       	ldi	r24, 0x04	; 4
    18e0:	01 c0       	rjmp	.+2      	; 0x18e4 <dtoa_prf+0x5e>
    18e2:	83 e0       	ldi	r24, 0x03	; 3
    18e4:	8f 15       	cp	r24, r15
    18e6:	18 f4       	brcc	.+6      	; 0x18ee <dtoa_prf+0x68>
    18e8:	f8 1a       	sub	r15, r24
    18ea:	8f 2d       	mov	r24, r15
    18ec:	01 c0       	rjmp	.+2      	; 0x18f0 <dtoa_prf+0x6a>
    18ee:	80 e0       	ldi	r24, 0x00	; 0
    18f0:	e4 fc       	sbrc	r14, 4
    18f2:	0b c0       	rjmp	.+22     	; 0x190a <dtoa_prf+0x84>
    18f4:	98 2f       	mov	r25, r24
    18f6:	d6 01       	movw	r26, r12
    18f8:	20 e2       	ldi	r18, 0x20	; 32
    18fa:	02 c0       	rjmp	.+4      	; 0x1900 <dtoa_prf+0x7a>
    18fc:	2d 93       	st	X+, r18
    18fe:	91 50       	subi	r25, 0x01	; 1
    1900:	99 23       	and	r25, r25
    1902:	e1 f7       	brne	.-8      	; 0x18fc <dtoa_prf+0x76>
    1904:	c8 0e       	add	r12, r24
    1906:	d1 1c       	adc	r13, r1
    1908:	80 e0       	ldi	r24, 0x00	; 0
    190a:	ee 23       	and	r30, r30
    190c:	19 f0       	breq	.+6      	; 0x1914 <dtoa_prf+0x8e>
    190e:	d6 01       	movw	r26, r12
    1910:	ed 93       	st	X+, r30
    1912:	6d 01       	movw	r12, r26
    1914:	f6 01       	movw	r30, r12
    1916:	31 96       	adiw	r30, 0x01	; 1
    1918:	e2 fe       	sbrs	r14, 2
    191a:	05 c0       	rjmp	.+10     	; 0x1926 <dtoa_prf+0xa0>
    191c:	9e e4       	ldi	r25, 0x4E	; 78
    191e:	d6 01       	movw	r26, r12
    1920:	9c 93       	st	X, r25
    1922:	21 e4       	ldi	r18, 0x41	; 65
    1924:	04 c0       	rjmp	.+8      	; 0x192e <dtoa_prf+0xa8>
    1926:	9e e6       	ldi	r25, 0x6E	; 110
    1928:	d6 01       	movw	r26, r12
    192a:	9c 93       	st	X, r25
    192c:	21 e6       	ldi	r18, 0x61	; 97
    192e:	11 96       	adiw	r26, 0x01	; 1
    1930:	2c 93       	st	X, r18
    1932:	91 83       	std	Z+1, r25	; 0x01
    1934:	32 96       	adiw	r30, 0x02	; 2
    1936:	98 2f       	mov	r25, r24
    1938:	df 01       	movw	r26, r30
    193a:	20 e2       	ldi	r18, 0x20	; 32
    193c:	02 c0       	rjmp	.+4      	; 0x1942 <dtoa_prf+0xbc>
    193e:	2d 93       	st	X+, r18
    1940:	91 50       	subi	r25, 0x01	; 1
    1942:	99 23       	and	r25, r25
    1944:	e1 f7       	brne	.-8      	; 0x193e <dtoa_prf+0xb8>
    1946:	3d c0       	rjmp	.+122    	; 0x19c2 <dtoa_prf+0x13c>
    1948:	22 ff       	sbrs	r18, 2
    194a:	41 c0       	rjmp	.+130    	; 0x19ce <dtoa_prf+0x148>
    194c:	ee 23       	and	r30, r30
    194e:	11 f0       	breq	.+4      	; 0x1954 <dtoa_prf+0xce>
    1950:	84 e0       	ldi	r24, 0x04	; 4
    1952:	01 c0       	rjmp	.+2      	; 0x1956 <dtoa_prf+0xd0>
    1954:	83 e0       	ldi	r24, 0x03	; 3
    1956:	8f 15       	cp	r24, r15
    1958:	18 f4       	brcc	.+6      	; 0x1960 <dtoa_prf+0xda>
    195a:	f8 1a       	sub	r15, r24
    195c:	8f 2d       	mov	r24, r15
    195e:	01 c0       	rjmp	.+2      	; 0x1962 <dtoa_prf+0xdc>
    1960:	80 e0       	ldi	r24, 0x00	; 0
    1962:	e4 fc       	sbrc	r14, 4
    1964:	0b c0       	rjmp	.+22     	; 0x197c <dtoa_prf+0xf6>
    1966:	98 2f       	mov	r25, r24
    1968:	d6 01       	movw	r26, r12
    196a:	20 e2       	ldi	r18, 0x20	; 32
    196c:	02 c0       	rjmp	.+4      	; 0x1972 <dtoa_prf+0xec>
    196e:	2d 93       	st	X+, r18
    1970:	91 50       	subi	r25, 0x01	; 1
    1972:	99 23       	and	r25, r25
    1974:	e1 f7       	brne	.-8      	; 0x196e <dtoa_prf+0xe8>
    1976:	c8 0e       	add	r12, r24
    1978:	d1 1c       	adc	r13, r1
    197a:	80 e0       	ldi	r24, 0x00	; 0
    197c:	ee 23       	and	r30, r30
    197e:	19 f0       	breq	.+6      	; 0x1986 <dtoa_prf+0x100>
    1980:	d6 01       	movw	r26, r12
    1982:	ed 93       	st	X+, r30
    1984:	6d 01       	movw	r12, r26
    1986:	f6 01       	movw	r30, r12
    1988:	31 96       	adiw	r30, 0x01	; 1
    198a:	e2 fe       	sbrs	r14, 2
    198c:	09 c0       	rjmp	.+18     	; 0x19a0 <dtoa_prf+0x11a>
    198e:	99 e4       	ldi	r25, 0x49	; 73
    1990:	d6 01       	movw	r26, r12
    1992:	9c 93       	st	X, r25
    1994:	9e e4       	ldi	r25, 0x4E	; 78
    1996:	11 96       	adiw	r26, 0x01	; 1
    1998:	9c 93       	st	X, r25
    199a:	11 97       	sbiw	r26, 0x01	; 1
    199c:	96 e4       	ldi	r25, 0x46	; 70
    199e:	07 c0       	rjmp	.+14     	; 0x19ae <dtoa_prf+0x128>
    19a0:	99 e6       	ldi	r25, 0x69	; 105
    19a2:	d6 01       	movw	r26, r12
    19a4:	9c 93       	st	X, r25
    19a6:	9e e6       	ldi	r25, 0x6E	; 110
    19a8:	11 96       	adiw	r26, 0x01	; 1
    19aa:	9c 93       	st	X, r25
    19ac:	96 e6       	ldi	r25, 0x66	; 102
    19ae:	91 83       	std	Z+1, r25	; 0x01
    19b0:	32 96       	adiw	r30, 0x02	; 2
    19b2:	98 2f       	mov	r25, r24
    19b4:	df 01       	movw	r26, r30
    19b6:	20 e2       	ldi	r18, 0x20	; 32
    19b8:	02 c0       	rjmp	.+4      	; 0x19be <dtoa_prf+0x138>
    19ba:	2d 93       	st	X+, r18
    19bc:	91 50       	subi	r25, 0x01	; 1
    19be:	99 23       	and	r25, r25
    19c0:	e1 f7       	brne	.-8      	; 0x19ba <dtoa_prf+0x134>
    19c2:	e8 0f       	add	r30, r24
    19c4:	f1 1d       	adc	r31, r1
    19c6:	10 82       	st	Z, r1
    19c8:	2e ef       	ldi	r18, 0xFE	; 254
    19ca:	3f ef       	ldi	r19, 0xFF	; 255
    19cc:	ac c0       	rjmp	.+344    	; 0x1b26 <dtoa_prf+0x2a0>
    19ce:	41 e0       	ldi	r20, 0x01	; 1
    19d0:	50 e0       	ldi	r21, 0x00	; 0
    19d2:	ee 23       	and	r30, r30
    19d4:	11 f4       	brne	.+4      	; 0x19da <dtoa_prf+0x154>
    19d6:	40 e0       	ldi	r20, 0x00	; 0
    19d8:	50 e0       	ldi	r21, 0x00	; 0
    19da:	18 16       	cp	r1, r24
    19dc:	19 06       	cpc	r1, r25
    19de:	24 f4       	brge	.+8      	; 0x19e8 <dtoa_prf+0x162>
    19e0:	bc 01       	movw	r22, r24
    19e2:	6f 5f       	subi	r22, 0xFF	; 255
    19e4:	7f 4f       	sbci	r23, 0xFF	; 255
    19e6:	02 c0       	rjmp	.+4      	; 0x19ec <dtoa_prf+0x166>
    19e8:	61 e0       	ldi	r22, 0x01	; 1
    19ea:	70 e0       	ldi	r23, 0x00	; 0
    19ec:	64 0f       	add	r22, r20
    19ee:	75 1f       	adc	r23, r21
    19f0:	11 23       	and	r17, r17
    19f2:	29 f0       	breq	.+10     	; 0x19fe <dtoa_prf+0x178>
    19f4:	41 2f       	mov	r20, r17
    19f6:	50 e0       	ldi	r21, 0x00	; 0
    19f8:	4f 5f       	subi	r20, 0xFF	; 255
    19fa:	5f 4f       	sbci	r21, 0xFF	; 255
    19fc:	02 c0       	rjmp	.+4      	; 0x1a02 <dtoa_prf+0x17c>
    19fe:	40 e0       	ldi	r20, 0x00	; 0
    1a00:	50 e0       	ldi	r21, 0x00	; 0
    1a02:	46 0f       	add	r20, r22
    1a04:	57 1f       	adc	r21, r23
    1a06:	6f 2d       	mov	r22, r15
    1a08:	70 e0       	ldi	r23, 0x00	; 0
    1a0a:	46 17       	cp	r20, r22
    1a0c:	57 07       	cpc	r21, r23
    1a0e:	1c f4       	brge	.+6      	; 0x1a16 <dtoa_prf+0x190>
    1a10:	0f 2d       	mov	r16, r15
    1a12:	04 1b       	sub	r16, r20
    1a14:	01 c0       	rjmp	.+2      	; 0x1a18 <dtoa_prf+0x192>
    1a16:	00 e0       	ldi	r16, 0x00	; 0
    1a18:	ff 24       	eor	r15, r15
    1a1a:	a7 01       	movw	r20, r14
    1a1c:	40 71       	andi	r20, 0x10	; 16
    1a1e:	50 70       	andi	r21, 0x00	; 0
    1a20:	e4 fc       	sbrc	r14, 4
    1a22:	0d c0       	rjmp	.+26     	; 0x1a3e <dtoa_prf+0x1b8>
    1a24:	e3 fc       	sbrc	r14, 3
    1a26:	0b c0       	rjmp	.+22     	; 0x1a3e <dtoa_prf+0x1b8>
    1a28:	60 2f       	mov	r22, r16
    1a2a:	d6 01       	movw	r26, r12
    1a2c:	70 e2       	ldi	r23, 0x20	; 32
    1a2e:	02 c0       	rjmp	.+4      	; 0x1a34 <dtoa_prf+0x1ae>
    1a30:	7d 93       	st	X+, r23
    1a32:	61 50       	subi	r22, 0x01	; 1
    1a34:	66 23       	and	r22, r22
    1a36:	e1 f7       	brne	.-8      	; 0x1a30 <dtoa_prf+0x1aa>
    1a38:	c0 0e       	add	r12, r16
    1a3a:	d1 1c       	adc	r13, r1
    1a3c:	00 e0       	ldi	r16, 0x00	; 0
    1a3e:	ee 23       	and	r30, r30
    1a40:	19 f0       	breq	.+6      	; 0x1a48 <dtoa_prf+0x1c2>
    1a42:	d6 01       	movw	r26, r12
    1a44:	ed 93       	st	X+, r30
    1a46:	6d 01       	movw	r12, r26
    1a48:	41 15       	cp	r20, r1
    1a4a:	51 05       	cpc	r21, r1
    1a4c:	59 f4       	brne	.+22     	; 0x1a64 <dtoa_prf+0x1de>
    1a4e:	40 2f       	mov	r20, r16
    1a50:	f6 01       	movw	r30, r12
    1a52:	50 e3       	ldi	r21, 0x30	; 48
    1a54:	02 c0       	rjmp	.+4      	; 0x1a5a <dtoa_prf+0x1d4>
    1a56:	51 93       	st	Z+, r21
    1a58:	41 50       	subi	r20, 0x01	; 1
    1a5a:	44 23       	and	r20, r20
    1a5c:	e1 f7       	brne	.-8      	; 0x1a56 <dtoa_prf+0x1d0>
    1a5e:	c0 0e       	add	r12, r16
    1a60:	d1 1c       	adc	r13, r1
    1a62:	00 e0       	ldi	r16, 0x00	; 0
    1a64:	b8 0e       	add	r11, r24
    1a66:	fa 80       	ldd	r15, Y+2	; 0x02
    1a68:	a9 01       	movw	r20, r18
    1a6a:	40 71       	andi	r20, 0x10	; 16
    1a6c:	50 70       	andi	r21, 0x00	; 0
    1a6e:	24 ff       	sbrs	r18, 4
    1a70:	04 c0       	rjmp	.+8      	; 0x1a7a <dtoa_prf+0x1f4>
    1a72:	bf 2d       	mov	r27, r15
    1a74:	b1 33       	cpi	r27, 0x31	; 49
    1a76:	09 f4       	brne	.+2      	; 0x1a7a <dtoa_prf+0x1f4>
    1a78:	ba 94       	dec	r11
    1a7a:	1b 14       	cp	r1, r11
    1a7c:	2c f4       	brge	.+10     	; 0x1a88 <dtoa_prf+0x202>
    1a7e:	ab 2d       	mov	r26, r11
    1a80:	a9 30       	cpi	r26, 0x09	; 9
    1a82:	18 f0       	brcs	.+6      	; 0x1a8a <dtoa_prf+0x204>
    1a84:	a8 e0       	ldi	r26, 0x08	; 8
    1a86:	01 c0       	rjmp	.+2      	; 0x1a8a <dtoa_prf+0x204>
    1a88:	a1 e0       	ldi	r26, 0x01	; 1
    1a8a:	9c 01       	movw	r18, r24
    1a8c:	97 ff       	sbrs	r25, 7
    1a8e:	02 c0       	rjmp	.+4      	; 0x1a94 <dtoa_prf+0x20e>
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	bc 01       	movw	r22, r24
    1a96:	6f 5f       	subi	r22, 0xFF	; 255
    1a98:	7f 4f       	sbci	r23, 0xFF	; 255
    1a9a:	62 1b       	sub	r22, r18
    1a9c:	73 0b       	sbc	r23, r19
    1a9e:	fe 01       	movw	r30, r28
    1aa0:	31 96       	adiw	r30, 0x01	; 1
    1aa2:	e6 0f       	add	r30, r22
    1aa4:	f7 1f       	adc	r31, r23
    1aa6:	6e e2       	ldi	r22, 0x2E	; 46
    1aa8:	e6 2e       	mov	r14, r22
    1aaa:	bc 01       	movw	r22, r24
    1aac:	6a 1b       	sub	r22, r26
    1aae:	71 09       	sbc	r23, r1
    1ab0:	a1 2f       	mov	r26, r17
    1ab2:	b0 e0       	ldi	r27, 0x00	; 0
    1ab4:	aa 24       	eor	r10, r10
    1ab6:	bb 24       	eor	r11, r11
    1ab8:	aa 1a       	sub	r10, r26
    1aba:	bb 0a       	sbc	r11, r27
    1abc:	1f ef       	ldi	r17, 0xFF	; 255
    1abe:	2f 3f       	cpi	r18, 0xFF	; 255
    1ac0:	31 07       	cpc	r19, r17
    1ac2:	19 f4       	brne	.+6      	; 0x1aca <dtoa_prf+0x244>
    1ac4:	d6 01       	movw	r26, r12
    1ac6:	ed 92       	st	X+, r14
    1ac8:	6d 01       	movw	r12, r26
    1aca:	82 17       	cp	r24, r18
    1acc:	93 07       	cpc	r25, r19
    1ace:	2c f0       	brlt	.+10     	; 0x1ada <dtoa_prf+0x254>
    1ad0:	62 17       	cp	r22, r18
    1ad2:	73 07       	cpc	r23, r19
    1ad4:	14 f4       	brge	.+4      	; 0x1ada <dtoa_prf+0x254>
    1ad6:	10 81       	ld	r17, Z
    1ad8:	01 c0       	rjmp	.+2      	; 0x1adc <dtoa_prf+0x256>
    1ada:	10 e3       	ldi	r17, 0x30	; 48
    1adc:	21 50       	subi	r18, 0x01	; 1
    1ade:	30 40       	sbci	r19, 0x00	; 0
    1ae0:	31 96       	adiw	r30, 0x01	; 1
    1ae2:	2a 15       	cp	r18, r10
    1ae4:	3b 05       	cpc	r19, r11
    1ae6:	24 f0       	brlt	.+8      	; 0x1af0 <dtoa_prf+0x26a>
    1ae8:	d6 01       	movw	r26, r12
    1aea:	1d 93       	st	X+, r17
    1aec:	6d 01       	movw	r12, r26
    1aee:	e6 cf       	rjmp	.-52     	; 0x1abc <dtoa_prf+0x236>
    1af0:	28 17       	cp	r18, r24
    1af2:	39 07       	cpc	r19, r25
    1af4:	49 f4       	brne	.+18     	; 0x1b08 <dtoa_prf+0x282>
    1af6:	bf 2d       	mov	r27, r15
    1af8:	b6 33       	cpi	r27, 0x36	; 54
    1afa:	28 f4       	brcc	.+10     	; 0x1b06 <dtoa_prf+0x280>
    1afc:	b5 33       	cpi	r27, 0x35	; 53
    1afe:	21 f4       	brne	.+8      	; 0x1b08 <dtoa_prf+0x282>
    1b00:	41 15       	cp	r20, r1
    1b02:	51 05       	cpc	r21, r1
    1b04:	09 f4       	brne	.+2      	; 0x1b08 <dtoa_prf+0x282>
    1b06:	11 e3       	ldi	r17, 0x31	; 49
    1b08:	f6 01       	movw	r30, r12
    1b0a:	11 93       	st	Z+, r17
    1b0c:	80 2f       	mov	r24, r16
    1b0e:	df 01       	movw	r26, r30
    1b10:	90 e2       	ldi	r25, 0x20	; 32
    1b12:	02 c0       	rjmp	.+4      	; 0x1b18 <dtoa_prf+0x292>
    1b14:	9d 93       	st	X+, r25
    1b16:	81 50       	subi	r24, 0x01	; 1
    1b18:	88 23       	and	r24, r24
    1b1a:	e1 f7       	brne	.-8      	; 0x1b14 <dtoa_prf+0x28e>
    1b1c:	e0 0f       	add	r30, r16
    1b1e:	f1 1d       	adc	r31, r1
    1b20:	10 82       	st	Z, r1
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	c9 01       	movw	r24, r18
    1b28:	29 96       	adiw	r28, 0x09	; 9
    1b2a:	ea e0       	ldi	r30, 0x0A	; 10
    1b2c:	78 ce       	rjmp	.-784    	; 0x181e <__epilogue_restores__+0x10>

00001b2e <__ftoa_engine>:
    1b2e:	28 30       	cpi	r18, 0x08	; 8
    1b30:	08 f0       	brcs	.+2      	; 0x1b34 <__ftoa_engine+0x6>
    1b32:	27 e0       	ldi	r18, 0x07	; 7
    1b34:	33 27       	eor	r19, r19
    1b36:	da 01       	movw	r26, r20
    1b38:	99 0f       	add	r25, r25
    1b3a:	31 1d       	adc	r19, r1
    1b3c:	87 fd       	sbrc	r24, 7
    1b3e:	91 60       	ori	r25, 0x01	; 1
    1b40:	00 96       	adiw	r24, 0x00	; 0
    1b42:	61 05       	cpc	r22, r1
    1b44:	71 05       	cpc	r23, r1
    1b46:	39 f4       	brne	.+14     	; 0x1b56 <__ftoa_engine+0x28>
    1b48:	32 60       	ori	r19, 0x02	; 2
    1b4a:	2e 5f       	subi	r18, 0xFE	; 254
    1b4c:	3d 93       	st	X+, r19
    1b4e:	30 e3       	ldi	r19, 0x30	; 48
    1b50:	2a 95       	dec	r18
    1b52:	e1 f7       	brne	.-8      	; 0x1b4c <__ftoa_engine+0x1e>
    1b54:	08 95       	ret
    1b56:	9f 3f       	cpi	r25, 0xFF	; 255
    1b58:	30 f0       	brcs	.+12     	; 0x1b66 <__ftoa_engine+0x38>
    1b5a:	80 38       	cpi	r24, 0x80	; 128
    1b5c:	71 05       	cpc	r23, r1
    1b5e:	61 05       	cpc	r22, r1
    1b60:	09 f0       	breq	.+2      	; 0x1b64 <__ftoa_engine+0x36>
    1b62:	3c 5f       	subi	r19, 0xFC	; 252
    1b64:	3c 5f       	subi	r19, 0xFC	; 252
    1b66:	3d 93       	st	X+, r19
    1b68:	91 30       	cpi	r25, 0x01	; 1
    1b6a:	08 f0       	brcs	.+2      	; 0x1b6e <__ftoa_engine+0x40>
    1b6c:	80 68       	ori	r24, 0x80	; 128
    1b6e:	91 1d       	adc	r25, r1
    1b70:	df 93       	push	r29
    1b72:	cf 93       	push	r28
    1b74:	1f 93       	push	r17
    1b76:	0f 93       	push	r16
    1b78:	ff 92       	push	r15
    1b7a:	ef 92       	push	r14
    1b7c:	19 2f       	mov	r17, r25
    1b7e:	98 7f       	andi	r25, 0xF8	; 248
    1b80:	96 95       	lsr	r25
    1b82:	e9 2f       	mov	r30, r25
    1b84:	96 95       	lsr	r25
    1b86:	96 95       	lsr	r25
    1b88:	e9 0f       	add	r30, r25
    1b8a:	ff 27       	eor	r31, r31
    1b8c:	e4 58       	subi	r30, 0x84	; 132
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	99 27       	eor	r25, r25
    1b92:	33 27       	eor	r19, r19
    1b94:	ee 24       	eor	r14, r14
    1b96:	ff 24       	eor	r15, r15
    1b98:	a7 01       	movw	r20, r14
    1b9a:	e7 01       	movw	r28, r14
    1b9c:	05 90       	lpm	r0, Z+
    1b9e:	08 94       	sec
    1ba0:	07 94       	ror	r0
    1ba2:	28 f4       	brcc	.+10     	; 0x1bae <__ftoa_engine+0x80>
    1ba4:	36 0f       	add	r19, r22
    1ba6:	e7 1e       	adc	r14, r23
    1ba8:	f8 1e       	adc	r15, r24
    1baa:	49 1f       	adc	r20, r25
    1bac:	51 1d       	adc	r21, r1
    1bae:	66 0f       	add	r22, r22
    1bb0:	77 1f       	adc	r23, r23
    1bb2:	88 1f       	adc	r24, r24
    1bb4:	99 1f       	adc	r25, r25
    1bb6:	06 94       	lsr	r0
    1bb8:	a1 f7       	brne	.-24     	; 0x1ba2 <__ftoa_engine+0x74>
    1bba:	05 90       	lpm	r0, Z+
    1bbc:	07 94       	ror	r0
    1bbe:	28 f4       	brcc	.+10     	; 0x1bca <__ftoa_engine+0x9c>
    1bc0:	e7 0e       	add	r14, r23
    1bc2:	f8 1e       	adc	r15, r24
    1bc4:	49 1f       	adc	r20, r25
    1bc6:	56 1f       	adc	r21, r22
    1bc8:	c1 1d       	adc	r28, r1
    1bca:	77 0f       	add	r23, r23
    1bcc:	88 1f       	adc	r24, r24
    1bce:	99 1f       	adc	r25, r25
    1bd0:	66 1f       	adc	r22, r22
    1bd2:	06 94       	lsr	r0
    1bd4:	a1 f7       	brne	.-24     	; 0x1bbe <__ftoa_engine+0x90>
    1bd6:	05 90       	lpm	r0, Z+
    1bd8:	07 94       	ror	r0
    1bda:	28 f4       	brcc	.+10     	; 0x1be6 <__ftoa_engine+0xb8>
    1bdc:	f8 0e       	add	r15, r24
    1bde:	49 1f       	adc	r20, r25
    1be0:	56 1f       	adc	r21, r22
    1be2:	c7 1f       	adc	r28, r23
    1be4:	d1 1d       	adc	r29, r1
    1be6:	88 0f       	add	r24, r24
    1be8:	99 1f       	adc	r25, r25
    1bea:	66 1f       	adc	r22, r22
    1bec:	77 1f       	adc	r23, r23
    1bee:	06 94       	lsr	r0
    1bf0:	a1 f7       	brne	.-24     	; 0x1bda <__ftoa_engine+0xac>
    1bf2:	05 90       	lpm	r0, Z+
    1bf4:	07 94       	ror	r0
    1bf6:	20 f4       	brcc	.+8      	; 0x1c00 <__ftoa_engine+0xd2>
    1bf8:	49 0f       	add	r20, r25
    1bfa:	56 1f       	adc	r21, r22
    1bfc:	c7 1f       	adc	r28, r23
    1bfe:	d8 1f       	adc	r29, r24
    1c00:	99 0f       	add	r25, r25
    1c02:	66 1f       	adc	r22, r22
    1c04:	77 1f       	adc	r23, r23
    1c06:	88 1f       	adc	r24, r24
    1c08:	06 94       	lsr	r0
    1c0a:	a9 f7       	brne	.-22     	; 0x1bf6 <__ftoa_engine+0xc8>
    1c0c:	84 91       	lpm	r24, Z+
    1c0e:	10 95       	com	r17
    1c10:	17 70       	andi	r17, 0x07	; 7
    1c12:	41 f0       	breq	.+16     	; 0x1c24 <__ftoa_engine+0xf6>
    1c14:	d6 95       	lsr	r29
    1c16:	c7 95       	ror	r28
    1c18:	57 95       	ror	r21
    1c1a:	47 95       	ror	r20
    1c1c:	f7 94       	ror	r15
    1c1e:	e7 94       	ror	r14
    1c20:	1a 95       	dec	r17
    1c22:	c1 f7       	brne	.-16     	; 0x1c14 <__ftoa_engine+0xe6>
    1c24:	e2 e2       	ldi	r30, 0x22	; 34
    1c26:	f0 e0       	ldi	r31, 0x00	; 0
    1c28:	68 94       	set
    1c2a:	15 90       	lpm	r1, Z+
    1c2c:	15 91       	lpm	r17, Z+
    1c2e:	35 91       	lpm	r19, Z+
    1c30:	65 91       	lpm	r22, Z+
    1c32:	95 91       	lpm	r25, Z+
    1c34:	05 90       	lpm	r0, Z+
    1c36:	7f e2       	ldi	r23, 0x2F	; 47
    1c38:	73 95       	inc	r23
    1c3a:	e1 18       	sub	r14, r1
    1c3c:	f1 0a       	sbc	r15, r17
    1c3e:	43 0b       	sbc	r20, r19
    1c40:	56 0b       	sbc	r21, r22
    1c42:	c9 0b       	sbc	r28, r25
    1c44:	d0 09       	sbc	r29, r0
    1c46:	c0 f7       	brcc	.-16     	; 0x1c38 <__ftoa_engine+0x10a>
    1c48:	e1 0c       	add	r14, r1
    1c4a:	f1 1e       	adc	r15, r17
    1c4c:	43 1f       	adc	r20, r19
    1c4e:	56 1f       	adc	r21, r22
    1c50:	c9 1f       	adc	r28, r25
    1c52:	d0 1d       	adc	r29, r0
    1c54:	7e f4       	brtc	.+30     	; 0x1c74 <__ftoa_engine+0x146>
    1c56:	70 33       	cpi	r23, 0x30	; 48
    1c58:	11 f4       	brne	.+4      	; 0x1c5e <__ftoa_engine+0x130>
    1c5a:	8a 95       	dec	r24
    1c5c:	e6 cf       	rjmp	.-52     	; 0x1c2a <__ftoa_engine+0xfc>
    1c5e:	e8 94       	clt
    1c60:	01 50       	subi	r16, 0x01	; 1
    1c62:	30 f0       	brcs	.+12     	; 0x1c70 <__ftoa_engine+0x142>
    1c64:	08 0f       	add	r16, r24
    1c66:	0a f4       	brpl	.+2      	; 0x1c6a <__ftoa_engine+0x13c>
    1c68:	00 27       	eor	r16, r16
    1c6a:	02 17       	cp	r16, r18
    1c6c:	08 f4       	brcc	.+2      	; 0x1c70 <__ftoa_engine+0x142>
    1c6e:	20 2f       	mov	r18, r16
    1c70:	23 95       	inc	r18
    1c72:	02 2f       	mov	r16, r18
    1c74:	7a 33       	cpi	r23, 0x3A	; 58
    1c76:	28 f0       	brcs	.+10     	; 0x1c82 <__ftoa_engine+0x154>
    1c78:	79 e3       	ldi	r23, 0x39	; 57
    1c7a:	7d 93       	st	X+, r23
    1c7c:	2a 95       	dec	r18
    1c7e:	e9 f7       	brne	.-6      	; 0x1c7a <__ftoa_engine+0x14c>
    1c80:	10 c0       	rjmp	.+32     	; 0x1ca2 <__ftoa_engine+0x174>
    1c82:	7d 93       	st	X+, r23
    1c84:	2a 95       	dec	r18
    1c86:	89 f6       	brne	.-94     	; 0x1c2a <__ftoa_engine+0xfc>
    1c88:	06 94       	lsr	r0
    1c8a:	97 95       	ror	r25
    1c8c:	67 95       	ror	r22
    1c8e:	37 95       	ror	r19
    1c90:	17 95       	ror	r17
    1c92:	17 94       	ror	r1
    1c94:	e1 18       	sub	r14, r1
    1c96:	f1 0a       	sbc	r15, r17
    1c98:	43 0b       	sbc	r20, r19
    1c9a:	56 0b       	sbc	r21, r22
    1c9c:	c9 0b       	sbc	r28, r25
    1c9e:	d0 09       	sbc	r29, r0
    1ca0:	98 f0       	brcs	.+38     	; 0x1cc8 <__ftoa_engine+0x19a>
    1ca2:	23 95       	inc	r18
    1ca4:	7e 91       	ld	r23, -X
    1ca6:	73 95       	inc	r23
    1ca8:	7a 33       	cpi	r23, 0x3A	; 58
    1caa:	08 f0       	brcs	.+2      	; 0x1cae <__ftoa_engine+0x180>
    1cac:	70 e3       	ldi	r23, 0x30	; 48
    1cae:	7c 93       	st	X, r23
    1cb0:	20 13       	cpse	r18, r16
    1cb2:	b8 f7       	brcc	.-18     	; 0x1ca2 <__ftoa_engine+0x174>
    1cb4:	7e 91       	ld	r23, -X
    1cb6:	70 61       	ori	r23, 0x10	; 16
    1cb8:	7d 93       	st	X+, r23
    1cba:	30 f0       	brcs	.+12     	; 0x1cc8 <__ftoa_engine+0x19a>
    1cbc:	83 95       	inc	r24
    1cbe:	71 e3       	ldi	r23, 0x31	; 49
    1cc0:	7d 93       	st	X+, r23
    1cc2:	70 e3       	ldi	r23, 0x30	; 48
    1cc4:	2a 95       	dec	r18
    1cc6:	e1 f7       	brne	.-8      	; 0x1cc0 <__ftoa_engine+0x192>
    1cc8:	11 24       	eor	r1, r1
    1cca:	ef 90       	pop	r14
    1ccc:	ff 90       	pop	r15
    1cce:	0f 91       	pop	r16
    1cd0:	1f 91       	pop	r17
    1cd2:	cf 91       	pop	r28
    1cd4:	df 91       	pop	r29
    1cd6:	99 27       	eor	r25, r25
    1cd8:	87 fd       	sbrc	r24, 7
    1cda:	90 95       	com	r25
    1cdc:	08 95       	ret

00001cde <_exit>:
    1cde:	f8 94       	cli

00001ce0 <__stop_program>:
    1ce0:	ff cf       	rjmp	.-2      	; 0x1ce0 <__stop_program>
