
avr-calc-8515.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001bc0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  00001bc0  00001c54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  008001a4  008001a4  00001d98  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  00001d98  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000110  00000000  00000000  00002e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  00002fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000038e  00000000  00000000  000031cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002cf8  00000000  00000000  0000355a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001611  00000000  00000000  00006252  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000024cc  00000000  00000000  00007863  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000340  00000000  00000000  00009d30  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006a3  00000000  00000000  0000a070  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000016f0  00000000  00000000  0000a713  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000064b  00000000  00000000  0000be03  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000150  00000000  00000000  0000c44e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	a7 c0       	rjmp	.+334    	; 0x152 <__bad_interrupt>
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	a5 c0       	rjmp	.+330    	; 0x152 <__bad_interrupt>
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	a3 c0       	rjmp	.+326    	; 0x152 <__bad_interrupt>
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	a1 c0       	rjmp	.+322    	; 0x152 <__bad_interrupt>
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	9f c0       	rjmp	.+318    	; 0x152 <__bad_interrupt>
      14:	9e c0       	rjmp	.+316    	; 0x152 <__bad_interrupt>
      16:	9d c0       	rjmp	.+314    	; 0x152 <__bad_interrupt>
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	9b c0       	rjmp	.+310    	; 0x152 <__bad_interrupt>
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	99 c0       	rjmp	.+306    	; 0x152 <__bad_interrupt>
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 40       	sbci	r16, 0x00	; 0
      24:	7a 10       	cpse	r7, r10
      26:	f3 5a       	subi	r31, 0xA3	; 163
      28:	00 a0       	ldd	r0, Z+32	; 0x20
      2a:	72 4e       	sbci	r23, 0xE2	; 226
      2c:	18 09       	sbc	r17, r8
      2e:	00 10       	cpse	r0, r0
      30:	a5 d4       	rcall	.+2378   	; 0x97c <decide+0x47c>
      32:	e8 00       	.word	0x00e8	; ????
      34:	00 e8       	ldi	r16, 0x80	; 128
      36:	76 48       	sbci	r23, 0x86	; 134
      38:	17 00       	.word	0x0017	; ????
      3a:	00 e4       	ldi	r16, 0x40	; 64
      3c:	0b 54       	subi	r16, 0x4B	; 75
      3e:	02 00       	.word	0x0002	; ????
      40:	00 ca       	rjmp	.-3072   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      42:	9a 3b       	cpi	r25, 0xBA	; 186
      44:	00 00       	nop
      46:	00 e1       	ldi	r16, 0x10	; 16
      48:	f5 05       	cpc	r31, r5
      4a:	00 00       	nop
      4c:	80 96       	adiw	r24, 0x20	; 32
      4e:	98 00       	.word	0x0098	; ????
      50:	00 00       	nop
      52:	40 42       	sbci	r20, 0x20	; 32
      54:	0f 00       	.word	0x000f	; ????
      56:	00 00       	nop
      58:	a0 86       	std	Z+8, r10	; 0x08
      5a:	01 00       	.word	0x0001	; ????
      5c:	00 00       	nop
      5e:	10 27       	eor	r17, r16
      60:	00 00       	nop
      62:	00 00       	nop
      64:	e8 03       	fmulsu	r22, r16
      66:	00 00       	nop
      68:	00 00       	nop
      6a:	64 00       	.word	0x0064	; ????
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	0a 00       	.word	0x000a	; ????
      72:	00 00       	nop
      74:	00 00       	nop
      76:	01 00       	.word	0x0001	; ????
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	2c 76       	andi	r18, 0x6C	; 108
      7e:	d8 88       	ldd	r13, Y+16	; 0x10
      80:	dc 67       	ori	r29, 0x7C	; 124
      82:	4f 08       	sbc	r4, r15
      84:	23 df       	rcall	.-442    	; 0xfffffecc <__eeprom_end+0xff7efecc>
      86:	c1 df       	rcall	.-126    	; 0xa <__zero_reg__+0x9>
      88:	ae 59       	subi	r26, 0x9E	; 158
      8a:	e1 b1       	in	r30, 0x01	; 1
      8c:	b7 96       	adiw	r30, 0x27	; 39
      8e:	e5 e3       	ldi	r30, 0x35	; 53
      90:	e4 53       	subi	r30, 0x34	; 52
      92:	c6 3a       	cpi	r28, 0xA6	; 166
      94:	e6 51       	subi	r30, 0x16	; 22
      96:	99 76       	andi	r25, 0x69	; 105
      98:	96 e8       	ldi	r25, 0x86	; 134
      9a:	e6 c2       	rjmp	.+1484   	; 0x668 <decide+0x168>
      9c:	84 26       	eor	r8, r20
      9e:	eb 89       	ldd	r30, Y+19	; 0x13
      a0:	8c 9b       	sbis	0x11, 4	; 17
      a2:	62 ed       	ldi	r22, 0xD2	; 210
      a4:	40 7c       	andi	r20, 0xC0	; 192
      a6:	6f fc       	.word	0xfc6f	; ????
      a8:	ef bc       	out	0x2f, r14	; 47
      aa:	9c 9f       	mul	r25, r28
      ac:	40 f2       	brcs	.-112    	; 0x3e <__SP_H__>
      ae:	ba a5       	ldd	r27, Y+42	; 0x2a
      b0:	6f a5       	ldd	r22, Y+47	; 0x2f
      b2:	f4 90       	lpm	r15, Z+
      b4:	05 5a       	subi	r16, 0xA5	; 165
      b6:	2a f7       	brpl	.-54     	; 0x82 <__SREG__+0x43>
      b8:	5c 93       	st	X, r21
      ba:	6b 6c       	ori	r22, 0xCB	; 203
      bc:	f9 67       	ori	r31, 0x79	; 121
      be:	6d c1       	rjmp	.+730    	; 0x39a <calculate+0x1a>
      c0:	1b fc       	.word	0xfc1b	; ????
      c2:	e0 e4       	ldi	r30, 0x40	; 64
      c4:	0d 47       	sbci	r16, 0x7D	; 125
      c6:	fe f5       	brtc	.+126    	; 0x146 <.do_clear_bss_loop>
      c8:	20 e6       	ldi	r18, 0x60	; 96
      ca:	b5 00       	.word	0x00b5	; ????
      cc:	d0 ed       	ldi	r29, 0xD0	; 208
      ce:	90 2e       	mov	r9, r16
      d0:	03 00       	.word	0x0003	; ????
      d2:	94 35       	cpi	r25, 0x54	; 84
      d4:	77 05       	cpc	r23, r7
      d6:	00 80       	ld	r0, Z
      d8:	84 1e       	adc	r8, r20
      da:	08 00       	.word	0x0008	; ????
      dc:	00 20       	and	r0, r0
      de:	4e 0a       	sbc	r4, r30
      e0:	00 00       	nop
      e2:	00 c8       	rjmp	.-4096   	; 0xfffff0e4 <__eeprom_end+0xff7ef0e4>
      e4:	0c 33       	cpi	r16, 0x3C	; 60
      e6:	33 33       	cpi	r19, 0x33	; 51
      e8:	33 0f       	add	r19, r19
      ea:	98 6e       	ori	r25, 0xE8	; 232
      ec:	12 83       	std	Z+2, r17	; 0x02
      ee:	11 41       	sbci	r17, 0x11	; 17
      f0:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f2:	21 14       	cp	r2, r1
      f4:	89 3b       	cpi	r24, 0xB9	; 185
      f6:	e6 55       	subi	r30, 0x56	; 86
      f8:	16 cf       	rjmp	.-468    	; 0xffffff26 <__eeprom_end+0xff7eff26>
      fa:	fe e6       	ldi	r31, 0x6E	; 110
      fc:	db 18       	sub	r13, r11
      fe:	d1 84       	ldd	r13, Z+9	; 0x09
     100:	4b 38       	cpi	r20, 0x8B	; 139
     102:	1b f7       	brvc	.-58     	; 0xca <__SREG__+0x8b>
     104:	7c 1d       	adc	r23, r12
     106:	90 1d       	adc	r25, r0
     108:	a4 bb       	out	0x14, r26	; 20
     10a:	e4 24       	eor	r14, r4
     10c:	20 32       	cpi	r18, 0x20	; 32
     10e:	84 72       	andi	r24, 0x24	; 36
     110:	5e 22       	and	r5, r30
     112:	81 00       	.word	0x0081	; ????
     114:	c9 f1       	breq	.+114    	; 0x188 <init_display+0x6>
     116:	24 ec       	ldi	r18, 0xC4	; 196
     118:	a1 e5       	ldi	r26, 0x51	; 81
     11a:	3d 27       	eor	r19, r29

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf e5       	ldi	r28, 0x5F	; 95
     122:	d2 e0       	ldi	r29, 0x02	; 2
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e6       	ldi	r26, 0x60	; 96
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	e0 ec       	ldi	r30, 0xC0	; 192
     130:	fb e1       	ldi	r31, 0x1B	; 27
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
     134:	05 90       	lpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a4 3a       	cpi	r26, 0xA4	; 164
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	a4 ea       	ldi	r26, 0xA4	; 164
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	a9 3c       	cpi	r26, 0xC9	; 201
     14a:	b1 07       	cpc	r27, r17
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	02 d0       	rcall	.+4      	; 0x154 <main>
     150:	35 cd       	rjmp	.-1430   	; 0xfffffbbc <__eeprom_end+0xff7efbbc>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <main>:
# define F_CPU 1000000UL
#include "calculator.h"

int main(void){

    init_calculator();
     154:	60 d4       	rcall	.+2240   	; 0xa16 <init_calculator>

	return 0;
}
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <trigger>:
}

//Функция генерирующая строб на линии E.
//По этому стробу производится запись команды/данных или чтение.
void trigger(){
    PORTC |= (1<<PC6); // Set PC6 (E).
     15c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	00 00       	nop
    _delay_us(1);
    PORTC &=~(1<<PC6); // Reset PC6 (E).
     160:	ae 98       	cbi	0x15, 6	; 21
     162:	00 00       	nop
	_delay_us(1);
}
     164:	08 95       	ret

00000166 <send_data>:
	_delay_us( 40 );
}

//Функция записи байта (символа) данных в lcd контроллер
void send_data(unsigned char data){
    PORTA = data;
     166:	8b bb       	out	0x1b, r24	; 27
    trigger();
     168:	f9 df       	rcall	.-14     	; 0x15c <trigger>
     16a:	8d e0       	ldi	r24, 0x0D	; 13
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <send_data+0x6>
     170:	00 00       	nop
	_delay_us( 40 );
}
     172:	08 95       	ret

00000174 <send_command>:
	on_flag = 1;
}

//Функция записи байта (символа) команды в lcd контроллер
void send_command(unsigned char command){
    PORTA = command;
     174:	8b bb       	out	0x1b, r24	; 27
    trigger();
     176:	f2 df       	rcall	.-28     	; 0x15c <trigger>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <send_command+0x6>
     17e:	00 00       	nop
	_delay_us( 40 );
}
     180:	08 95       	ret

00000182 <init_display>:

bool on_flag;

//Функция инициализации lcd контроллера hd44780
void init_display(){
    DDRC |= (1<<PC4)|(1<<PC6); 	// PC 4 is output for RS, 6 is output for Enable.
     182:	84 b3       	in	r24, 0x14	; 20
     184:	80 65       	ori	r24, 0x50	; 80
     186:	84 bb       	out	0x14, r24	; 20
    DDRA = 0xFF; 				// PA 0-7 is 8 bit data output bus.
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	8a bb       	out	0x1a, r24	; 26

	PORTC &=~(1<<PC6); // Reset PC6 (E).
     18c:	ae 98       	cbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	85 ea       	ldi	r24, 0xA5	; 165
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <init_display+0x10>
     196:	00 c0       	rjmp	.+0      	; 0x198 <init_display+0x16>
     198:	00 00       	nop

	_delay_ms(15); 

	send_command(0x38); // 2 line mode.
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	eb df       	rcall	.-42     	; 0x174 <send_command>
     19e:	81 ee       	ldi	r24, 0xE1	; 225
     1a0:	94 e0       	ldi	r25, 0x04	; 4
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <init_display+0x20>
     1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <init_display+0x26>
     1a8:	00 00       	nop
	_delay_ms(5); 
	send_command(0x38); // 2 line mode.
     1aa:	88 e3       	ldi	r24, 0x38	; 56
     1ac:	e3 df       	rcall	.-58     	; 0x174 <send_command>
     1ae:	87 ea       	ldi	r24, 0xA7	; 167
     1b0:	91 e6       	ldi	r25, 0x61	; 97
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <init_display+0x30>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <init_display+0x36>
     1b8:	00 00       	nop
	_delay_ms(100); 
	send_command(0x38); // 2 line mode.	
     1ba:	88 e3       	ldi	r24, 0x38	; 56
     1bc:	db df       	rcall	.-74     	; 0x174 <send_command>

	send_command(0x0F);	// LCD ON, cursor ON
     1be:	8f e0       	ldi	r24, 0x0F	; 15
     1c0:	d9 df       	rcall	.-78     	; 0x174 <send_command>
     1c2:	83 ec       	ldi	r24, 0xC3	; 195
     1c4:	99 e0       	ldi	r25, 0x09	; 9
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <init_display+0x44>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <init_display+0x4a>
     1cc:	00 00       	nop
	_delay_ms(10);
	send_command(0x01); // Clear display screen
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	d1 df       	rcall	.-94     	; 0x174 <send_command>
     1d2:	83 ec       	ldi	r24, 0xC3	; 195
     1d4:	99 e0       	ldi	r25, 0x09	; 9
     1d6:	01 97       	sbiw	r24, 0x01	; 1
     1d8:	f1 f7       	brne	.-4      	; 0x1d6 <init_display+0x54>
     1da:	00 c0       	rjmp	.+0      	; 0x1dc <init_display+0x5a>
     1dc:	00 00       	nop
	_delay_ms(10);
	send_command(0x81); 
     1de:	81 e8       	ldi	r24, 0x81	; 129
     1e0:	c9 df       	rcall	.-110    	; 0x174 <send_command>
     1e2:	83 ec       	ldi	r24, 0xC3	; 195
     1e4:	99 e0       	ldi	r25, 0x09	; 9
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <init_display+0x64>
     1ea:	00 c0       	rjmp	.+0      	; 0x1ec <init_display+0x6a>
     1ec:	00 00       	nop
	_delay_ms(10);

	PORTC |= (1<<PC6); // Set PC6 (E).
     1ee:	ae 9a       	sbi	0x15, 6	; 21

	on_flag = 1;
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	80 93 b4 01 	sts	0x01B4, r24
}
     1f6:	08 95       	ret

000001f8 <send_string>:
    PORTC &=~(1<<PC6); // Reset PC6 (E).
	_delay_us(1);
}

//Функция вывода строки
void send_string(const char *str){
     1f8:	ef 92       	push	r14
     1fa:	ff 92       	push	r15
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	e8 2e       	mov	r14, r24
     202:	e7 01       	movw	r28, r14
     204:	7e 01       	movw	r14, r28
     206:	f9 2e       	mov	r15, r25
     208:	e7 01       	movw	r28, r14
    while(*str) send_data(*str++); // Send characters one by one.
     20a:	01 c0       	rjmp	.+2      	; 0x20e <send_string+0x16>
     20c:	ac df       	rcall	.-168    	; 0x166 <send_data>
     20e:	89 91       	ld	r24, Y+
     210:	88 23       	and	r24, r24
     212:	e1 f7       	brne	.-8      	; 0x20c <send_string+0x14>
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	ff 90       	pop	r15
     21a:	ef 90       	pop	r14
     21c:	08 95       	ret

0000021e <move_to>:

//Функция изменения текущей позиции курсора,
//x — номер символа в строке, y — номер строки
void move_to(unsigned char x, unsigned char y){
	unsigned char address = x;
	if ( y ) {
     21e:	61 11       	cpse	r22, r1
    	address += 0x40;
     220:	80 5c       	subi	r24, 0xC0	; 192
  	}
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     222:	ac 98       	cbi	0x15, 4	; 21
    send_command(1<<7 | address);
     224:	80 68       	ori	r24, 0x80	; 128
     226:	a6 df       	rcall	.-180    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     228:	ac 9a       	sbi	0x15, 4	; 21
}
     22a:	08 95       	ret

0000022c <clear>:

void clear(){
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     22c:	ac 98       	cbi	0x15, 4	; 21
    send_command(0x01);
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	a1 df       	rcall	.-190    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     232:	ac 9a       	sbi	0x15, 4	; 21
}
     234:	08 95       	ret

00000236 <disp_on_off>:

void disp_on_off(){
	if (on_flag == 1) {
     236:	80 91 b4 01 	lds	r24, 0x01B4
     23a:	88 23       	and	r24, r24
     23c:	39 f0       	breq	.+14     	; 0x24c <disp_on_off+0x16>
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     23e:	ac 98       	cbi	0x15, 4	; 21
   		send_command(0x08);
     240:	88 e0       	ldi	r24, 0x08	; 8
     242:	98 df       	rcall	.-208    	; 0x174 <send_command>
		PORTC |=(1<<PC4); // Set PC4 (RS).
     244:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 0;
     246:	10 92 b4 01 	sts	0x01B4, r1
     24a:	08 95       	ret
	}
	else {
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     24c:	ac 98       	cbi	0x15, 4	; 21

		send_command(0x0F);	// LCD ON, cursor ON
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	91 df       	rcall	.-222    	; 0x174 <send_command>
     252:	83 ec       	ldi	r24, 0xC3	; 195
     254:	99 e0       	ldi	r25, 0x09	; 9
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <disp_on_off+0x20>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <disp_on_off+0x26>
     25c:	00 00       	nop
		_delay_ms(10);
		send_command(0x01); // Clear display screen
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	89 df       	rcall	.-238    	; 0x174 <send_command>
     262:	83 ec       	ldi	r24, 0xC3	; 195
     264:	99 e0       	ldi	r25, 0x09	; 9
     266:	01 97       	sbiw	r24, 0x01	; 1
     268:	f1 f7       	brne	.-4      	; 0x266 <__stack+0x7>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <__stack+0xd>
     26c:	00 00       	nop
		_delay_ms(10);
		send_command(0x81); 
     26e:	81 e8       	ldi	r24, 0x81	; 129
     270:	81 df       	rcall	.-254    	; 0x174 <send_command>
     272:	83 ec       	ldi	r24, 0xC3	; 195
     274:	99 e0       	ldi	r25, 0x09	; 9
     276:	01 97       	sbiw	r24, 0x01	; 1
     278:	f1 f7       	brne	.-4      	; 0x276 <__stack+0x17>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <__stack+0x1d>
     27c:	00 00       	nop
		_delay_ms(10);

		PORTC |=(1<<PC4); // Set PC4 (RS).
     27e:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 1;
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	80 93 b4 01 	sts	0x01B4, r24
     286:	08 95       	ret

00000288 <init_keyboard>:
    {'1', '2', '3', '+', '-', '='},
    {'0', '.', 'p', 'u', 'A', '='}
};

void init_keyboard() {
    DDRC |= 0x0F; // PB 0-3 output for rows.
     288:	84 b3       	in	r24, 0x14	; 20
     28a:	8f 60       	ori	r24, 0x0F	; 15
     28c:	84 bb       	out	0x14, r24	; 20
    DDRD &= 0x03; // PC 2-7 input for columns.
     28e:	81 b3       	in	r24, 0x11	; 17
     290:	83 70       	andi	r24, 0x03	; 3
     292:	81 bb       	out	0x11, r24	; 17
}
     294:	08 95       	ret

00000296 <scan_key>:
unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        
		for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	70 e0       	ldi	r23, 0x00	; 0
    DDRD &= 0x03; // PC 2-7 input for columns.
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
     29a:	82 b3       	in	r24, 0x12	; 18
     29c:	8c 6f       	ori	r24, 0xFC	; 252
     29e:	82 bb       	out	0x12, r24	; 18
        
		for(int i = 0;i<4;i++){
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
            PORTC = ~(1 << i);
     2a4:	cb 01       	movw	r24, r22
     2a6:	02 2e       	mov	r0, r18
     2a8:	02 c0       	rjmp	.+4      	; 0x2ae <scan_key+0x18>
     2aa:	88 0f       	add	r24, r24
     2ac:	99 1f       	adc	r25, r25
     2ae:	0a 94       	dec	r0
     2b0:	e2 f7       	brpl	.-8      	; 0x2aa <scan_key+0x14>
     2b2:	80 95       	com	r24
     2b4:	85 bb       	out	0x15, r24	; 21
            for(int j = 2;j < 8;j++){
     2b6:	82 e0       	ldi	r24, 0x02	; 2
     2b8:	90 e0       	ldi	r25, 0x00	; 0
                if(bit_is_clear(PIND, j)){
     2ba:	40 b3       	in	r20, 0x10	; 16
     2bc:	50 e0       	ldi	r21, 0x00	; 0
     2be:	08 2e       	mov	r0, r24
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <scan_key+0x30>
     2c2:	55 95       	asr	r21
     2c4:	47 95       	ror	r20
     2c6:	0a 94       	dec	r0
     2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <scan_key+0x2c>
     2ca:	40 fd       	sbrc	r20, 0
     2cc:	23 c0       	rjmp	.+70     	; 0x314 <scan_key+0x7e>
     2ce:	41 e0       	ldi	r20, 0x01	; 1
     2d0:	50 e0       	ldi	r21, 0x00	; 0
     2d2:	08 2e       	mov	r0, r24
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <scan_key+0x44>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	0a 94       	dec	r0
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <scan_key+0x40>
     2de:	06 c0       	rjmp	.+12     	; 0x2ec <scan_key+0x56>
     2e0:	e3 ed       	ldi	r30, 0xD3	; 211
     2e2:	f0 e3       	ldi	r31, 0x30	; 48
     2e4:	31 97       	sbiw	r30, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <scan_key+0x4e>
     2e8:	00 c0       	rjmp	.+0      	; 0x2ea <scan_key+0x54>
     2ea:	00 00       	nop
                    while(bit_is_clear(PIND, j)) _delay_ms(50);
     2ec:	60 b3       	in	r22, 0x10	; 16
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	64 23       	and	r22, r20
     2f2:	75 23       	and	r23, r21
     2f4:	61 15       	cp	r22, r1
     2f6:	71 05       	cpc	r23, r1
     2f8:	99 f3       	breq	.-26     	; 0x2e0 <scan_key+0x4a>
                    return keys[i][j-2];
     2fa:	f9 01       	movw	r30, r18
     2fc:	ee 0f       	add	r30, r30
     2fe:	ff 1f       	adc	r31, r31
     300:	e2 0f       	add	r30, r18
     302:	f3 1f       	adc	r31, r19
     304:	ee 0f       	add	r30, r30
     306:	ff 1f       	adc	r31, r31
     308:	e8 0f       	add	r30, r24
     30a:	f9 1f       	adc	r31, r25
     30c:	e2 5a       	subi	r30, 0xA2	; 162
     30e:	ff 4f       	sbci	r31, 0xFF	; 255
                }
            }
        }

    }
}
     310:	80 81       	ld	r24, Z
     312:	08 95       	ret
    while (1) {
        PORTD |= 0xFC;
        
		for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
            for(int j = 2;j < 8;j++){
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	88 30       	cpi	r24, 0x08	; 8
     318:	91 05       	cpc	r25, r1
     31a:	79 f6       	brne	.-98     	; 0x2ba <scan_key+0x24>

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        
		for(int i = 0;i<4;i++){
     31c:	2f 5f       	subi	r18, 0xFF	; 255
     31e:	3f 4f       	sbci	r19, 0xFF	; 255
     320:	24 30       	cpi	r18, 0x04	; 4
     322:	31 05       	cpc	r19, r1
     324:	09 f0       	breq	.+2      	; 0x328 <scan_key+0x92>
     326:	be cf       	rjmp	.-132    	; 0x2a4 <scan_key+0xe>
     328:	b8 cf       	rjmp	.-144    	; 0x29a <scan_key+0x4>

0000032a <reset>:
    reset();
    run();
}

void reset() {
    clear();
     32a:	80 df       	rcall	.-256    	; 0x22c <clear>
    move_to(0, 0);		//начало верхней строки
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	60 e0       	ldi	r22, 0x00	; 0
     330:	76 df       	rcall	.-276    	; 0x21e <move_to>
    r = a = b = op = count = 0;
     332:	10 92 c0 01 	sts	0x01C0, r1
     336:	10 92 bf 01 	sts	0x01BF, r1
     33a:	10 92 b5 01 	sts	0x01B5, r1
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	dc 01       	movw	r26, r24
     344:	80 93 b6 01 	sts	0x01B6, r24
     348:	90 93 b7 01 	sts	0x01B7, r25
     34c:	a0 93 b8 01 	sts	0x01B8, r26
     350:	b0 93 b9 01 	sts	0x01B9, r27
     354:	80 93 c5 01 	sts	0x01C5, r24
     358:	90 93 c6 01 	sts	0x01C6, r25
     35c:	a0 93 c7 01 	sts	0x01C7, r26
     360:	b0 93 c8 01 	sts	0x01C8, r27
     364:	80 93 bb 01 	sts	0x01BB, r24
     368:	90 93 bc 01 	sts	0x01BC, r25
     36c:	a0 93 bd 01 	sts	0x01BD, r26
     370:	b0 93 be 01 	sts	0x01BE, r27
	state = start_disp;
     374:	10 92 ba 01 	sts	0x01BA, r1
}
     378:	08 95       	ret

0000037a <send_digit>:
        decide(scan_key(), is_dec_p, paw_p);
    }
}

void send_digit(unsigned char digit) {
    send_data(digit + '0');
     37a:	80 5d       	subi	r24, 0xD0	; 208
     37c:	f4 de       	rcall	.-536    	; 0x166 <send_data>
}
     37e:	08 95       	ret

00000380 <calculate>:

double calculate(float m, char operator, float n) {
     380:	ef 92       	push	r14
     382:	ff 92       	push	r15
     384:	0f 93       	push	r16
     386:	1f 93       	push	r17
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	78 01       	movw	r14, r16
     38e:	89 01       	movw	r16, r18
    switch (operator) {
     390:	4d 36       	cpi	r20, 0x6D	; 109
     392:	59 f1       	breq	.+86     	; 0x3ea <calculate+0x6a>
     394:	4e 36       	cpi	r20, 0x6E	; 110
     396:	60 f4       	brcc	.+24     	; 0x3b0 <calculate+0x30>
     398:	4b 32       	cpi	r20, 0x2B	; 43
     39a:	79 f0       	breq	.+30     	; 0x3ba <calculate+0x3a>
     39c:	4c 32       	cpi	r20, 0x2C	; 44
     39e:	18 f4       	brcc	.+6      	; 0x3a6 <calculate+0x26>
     3a0:	4a 32       	cpi	r20, 0x2A	; 42
     3a2:	e9 f5       	brne	.+122    	; 0x41e <calculate+0x9e>
     3a4:	12 c0       	rjmp	.+36     	; 0x3ca <calculate+0x4a>
     3a6:	4d 32       	cpi	r20, 0x2D	; 45
     3a8:	61 f0       	breq	.+24     	; 0x3c2 <calculate+0x42>
     3aa:	4f 32       	cpi	r20, 0x2F	; 47
     3ac:	c1 f5       	brne	.+112    	; 0x41e <calculate+0x9e>
     3ae:	11 c0       	rjmp	.+34     	; 0x3d2 <calculate+0x52>
     3b0:	40 37       	cpi	r20, 0x70	; 112
     3b2:	91 f0       	breq	.+36     	; 0x3d8 <calculate+0x58>
     3b4:	46 37       	cpi	r20, 0x76	; 118
     3b6:	99 f5       	brne	.+102    	; 0x41e <calculate+0x9e>
     3b8:	26 c0       	rjmp	.+76     	; 0x406 <calculate+0x86>
    case '+':
        return r = m + n;
     3ba:	a8 01       	movw	r20, r16
     3bc:	97 01       	movw	r18, r14
     3be:	a4 d4       	rcall	.+2376   	; 0xd08 <__addsf3>
     3c0:	2e c0       	rjmp	.+92     	; 0x41e <calculate+0x9e>
    case '-':
        return r = m - n;
     3c2:	a8 01       	movw	r20, r16
     3c4:	97 01       	movw	r18, r14
     3c6:	c7 d4       	rcall	.+2446   	; 0xd56 <__subsf3>
     3c8:	2a c0       	rjmp	.+84     	; 0x41e <calculate+0x9e>
    case '*':
        return r = m * n;
     3ca:	a8 01       	movw	r20, r16
     3cc:	97 01       	movw	r18, r14
     3ce:	ee d4       	rcall	.+2524   	; 0xdac <__mulsf3>
     3d0:	26 c0       	rjmp	.+76     	; 0x41e <calculate+0x9e>
    case '/':
        return r = m / n;
     3d2:	a8 01       	movw	r20, r16
     3d4:	97 01       	movw	r18, r14
     3d6:	07 c0       	rjmp	.+14     	; 0x3e6 <calculate+0x66>
    case 'p'://%
        return r = m * n / 100;
     3d8:	a8 01       	movw	r20, r16
     3da:	97 01       	movw	r18, r14
     3dc:	e7 d4       	rcall	.+2510   	; 0xdac <__mulsf3>
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	48 ec       	ldi	r20, 0xC8	; 200
     3e4:	52 e4       	ldi	r21, 0x42	; 66
     3e6:	d7 d5       	rcall	.+2990   	; 0xf96 <__divsf3>
     3e8:	1a c0       	rjmp	.+52     	; 0x41e <calculate+0x9e>
    case 'm'://mod
        return r = (int)m % (int)n;
     3ea:	05 d7       	rcall	.+3594   	; 0x11f6 <__fixsfsi>
     3ec:	eb 01       	movw	r28, r22
     3ee:	c8 01       	movw	r24, r16
     3f0:	b7 01       	movw	r22, r14
     3f2:	01 d7       	rcall	.+3586   	; 0x11f6 <__fixsfsi>
     3f4:	ce 01       	movw	r24, r28
     3f6:	37 d9       	rcall	.-3474   	; 0xfffff666 <__eeprom_end+0xff7ef666>
     3f8:	9c 01       	movw	r18, r24
     3fa:	b9 01       	movw	r22, r18
     3fc:	88 27       	eor	r24, r24
     3fe:	77 fd       	sbrc	r23, 7
     400:	80 95       	com	r24
     402:	98 2f       	mov	r25, r24
     404:	0b c0       	rjmp	.+22     	; 0x41c <calculate+0x9c>
    case 'v'://div
        return r = (int)m / (int)n;
     406:	f7 d6       	rcall	.+3566   	; 0x11f6 <__fixsfsi>
     408:	eb 01       	movw	r28, r22
     40a:	c8 01       	movw	r24, r16
     40c:	b7 01       	movw	r22, r14
     40e:	f3 d6       	rcall	.+3558   	; 0x11f6 <__fixsfsi>
     410:	ce 01       	movw	r24, r28
     412:	29 d9       	rcall	.-3502   	; 0xfffff666 <__eeprom_end+0xff7ef666>
     414:	88 27       	eor	r24, r24
     416:	77 fd       	sbrc	r23, 7
     418:	80 95       	com	r24
     41a:	98 2f       	mov	r25, r24
     41c:	90 d6       	rcall	.+3360   	; 0x113e <__floatsisf>

    }
    return r = m;
     41e:	26 2f       	mov	r18, r22
     420:	37 2f       	mov	r19, r23
     422:	48 2f       	mov	r20, r24
     424:	59 2f       	mov	r21, r25
     426:	20 93 bb 01 	sts	0x01BB, r18
     42a:	30 93 bc 01 	sts	0x01BC, r19
     42e:	40 93 bd 01 	sts	0x01BD, r20
     432:	50 93 be 01 	sts	0x01BE, r21
}
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	1f 91       	pop	r17
     43c:	0f 91       	pop	r16
     43e:	ff 90       	pop	r15
     440:	ef 90       	pop	r14
     442:	08 95       	ret

00000444 <show_result>:

void show_result() {
     444:	ef 92       	push	r14
     446:	ff 92       	push	r15
     448:	0f 93       	push	r16
     44a:	1f 93       	push	r17
    move_to(0, 1);			//bottom line start
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	61 e0       	ldi	r22, 0x01	; 1
     450:	e6 de       	rcall	.-564    	; 0x21e <move_to>
    send_string("A=");
     452:	88 e7       	ldi	r24, 0x78	; 120
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	d0 de       	rcall	.-608    	; 0x1f8 <send_string>
    
	char* data = buffer;
    if (r <= 999999999999)
     458:	e0 90 bb 01 	lds	r14, 0x01BB
     45c:	f0 90 bc 01 	lds	r15, 0x01BC
     460:	00 91 bd 01 	lds	r16, 0x01BD
     464:	10 91 be 01 	lds	r17, 0x01BE
     468:	c8 01       	movw	r24, r16
     46a:	b7 01       	movw	r22, r14
     46c:	25 ea       	ldi	r18, 0xA5	; 165
     46e:	34 ed       	ldi	r19, 0xD4	; 212
     470:	48 e6       	ldi	r20, 0x68	; 104
     472:	53 e5       	ldi	r21, 0x53	; 83
     474:	39 d6       	rcall	.+3186   	; 0x10e8 <__lesf2>
     476:	18 16       	cp	r1, r24
     478:	4c f0       	brlt	.+18     	; 0x48c <show_result+0x48>
        dtostrf(r, 9, 5, buffer);	//float -> char* (r -> buffer)
     47a:	c8 01       	movw	r24, r16
     47c:	b7 01       	movw	r22, r14
     47e:	49 e0       	ldi	r20, 0x09	; 9
     480:	25 e0       	ldi	r18, 0x05	; 5
     482:	04 ea       	ldi	r16, 0xA4	; 164
     484:	11 e0       	ldi	r17, 0x01	; 1
     486:	4d d9       	rcall	.-3430   	; 0xfffff722 <__eeprom_end+0xff7ef722>

void show_result() {
    move_to(0, 1);			//bottom line start
    send_string("A=");
    
	char* data = buffer;
     488:	c8 01       	movw	r24, r16
     48a:	02 c0       	rjmp	.+4      	; 0x490 <show_result+0x4c>
    if (r <= 999999999999)
        dtostrf(r, 9, 5, buffer);	//float -> char* (r -> buffer)
    else 
		data = overflow;
     48c:	8c e8       	ldi	r24, 0x8C	; 140
     48e:	90 e0       	ldi	r25, 0x00	; 0
    send_string(data);
     490:	b3 de       	rcall	.-666    	; 0x1f8 <send_string>

    state = result_disp;
     492:	84 e0       	ldi	r24, 0x04	; 4
     494:	80 93 ba 01 	sts	0x01BA, r24
}
     498:	1f 91       	pop	r17
     49a:	0f 91       	pop	r16
     49c:	ff 90       	pop	r15
     49e:	ef 90       	pop	r14
     4a0:	08 95       	ret

000004a2 <uart>:

void uart() {
     4a2:	ef 92       	push	r14
     4a4:	ff 92       	push	r15
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	df 93       	push	r29
     4ac:	cf 93       	push	r28
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
     4b2:	c0 54       	subi	r28, 0x40	; 64
     4b4:	d0 40       	sbci	r29, 0x00	; 0
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	f8 94       	cli
     4ba:	de bf       	out	0x3e, r29	; 62
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	cd bf       	out	0x3d, r28	; 61
	char uart_ans[64];
	dtostrf(ans, 9, 5, uart_ans);	//float -> char* (ans -> uart_ans)
     4c0:	60 91 c1 01 	lds	r22, 0x01C1
     4c4:	70 91 c2 01 	lds	r23, 0x01C2
     4c8:	80 91 c3 01 	lds	r24, 0x01C3
     4cc:	90 91 c4 01 	lds	r25, 0x01C4
     4d0:	49 e0       	ldi	r20, 0x09	; 9
     4d2:	25 e0       	ldi	r18, 0x05	; 5
     4d4:	7e 01       	movw	r14, r28
     4d6:	08 94       	sec
     4d8:	e1 1c       	adc	r14, r1
     4da:	f1 1c       	adc	r15, r1
     4dc:	87 01       	movw	r16, r14
     4de:	21 d9       	rcall	.-3518   	; 0xfffff722 <__eeprom_end+0xff7ef722>
	Transmit(uart_ans);
     4e0:	c7 01       	movw	r24, r14
     4e2:	af d2       	rcall	.+1374   	; 0xa42 <Transmit>
}
     4e4:	c0 5c       	subi	r28, 0xC0	; 192
     4e6:	df 4f       	sbci	r29, 0xFF	; 255
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	cf 91       	pop	r28
     4f4:	df 91       	pop	r29
     4f6:	1f 91       	pop	r17
     4f8:	0f 91       	pop	r16
     4fa:	ff 90       	pop	r15
     4fc:	ef 90       	pop	r14
     4fe:	08 95       	ret

00000500 <decide>:

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
     500:	4f 92       	push	r4
     502:	5f 92       	push	r5
     504:	6f 92       	push	r6
     506:	7f 92       	push	r7
     508:	8f 92       	push	r8
     50a:	9f 92       	push	r9
     50c:	af 92       	push	r10
     50e:	bf 92       	push	r11
     510:	cf 92       	push	r12
     512:	df 92       	push	r13
     514:	ff 92       	push	r15
     516:	0f 93       	push	r16
     518:	1f 93       	push	r17
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	f8 2e       	mov	r15, r24
     520:	eb 01       	movw	r28, r22
     522:	6a 01       	movw	r12, r20
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     524:	18 2f       	mov	r17, r24
     526:	10 53       	subi	r17, 0x30	; 48
            count++;
            break;

        case result_disp:
            if (digit) {
                line[0] = ' ';
     528:	00 e2       	ldi	r16, 0x20	; 32

                move_to(0, 0);					//начало верхней строки
                send_string(line); 				// Clear 1st line.

                move_to(0, 0);
                a = b = op = count = 0;
     52a:	0f 2e       	mov	r0, r31
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	8f 2e       	mov	r8, r31
     530:	f0 e0       	ldi	r31, 0x00	; 0
     532:	9f 2e       	mov	r9, r31
     534:	f0 e0       	ldi	r31, 0x00	; 0
     536:	af 2e       	mov	r10, r31
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	bf 2e       	mov	r11, r31
     53c:	f0 2d       	mov	r31, r0
                state = a_input;
     53e:	44 24       	eor	r4, r4
     540:	43 94       	inc	r4
}

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     542:	1a 30       	cpi	r17, 0x0A	; 10
     544:	08 f0       	brcs	.+2      	; 0x548 <decide+0x48>
     546:	2c c1       	rjmp	.+600    	; 0x7a0 <decide+0x2a0>
    {
		unsigned char digit = key - '0'; // '2' --> 2

        switch (state) {
     548:	80 91 ba 01 	lds	r24, 0x01BA
     54c:	82 30       	cpi	r24, 0x02	; 2
     54e:	09 f4       	brne	.+2      	; 0x552 <decide+0x52>
     550:	83 c0       	rjmp	.+262    	; 0x658 <decide+0x158>
     552:	83 30       	cpi	r24, 0x03	; 3
     554:	30 f4       	brcc	.+12     	; 0x562 <decide+0x62>
     556:	88 23       	and	r24, r24
     558:	59 f0       	breq	.+22     	; 0x570 <decide+0x70>
     55a:	81 30       	cpi	r24, 0x01	; 1
     55c:	09 f0       	breq	.+2      	; 0x560 <decide+0x60>
     55e:	2f c2       	rjmp	.+1118   	; 0x9be <decide+0x4be>
     560:	0c c0       	rjmp	.+24     	; 0x57a <decide+0x7a>
     562:	83 30       	cpi	r24, 0x03	; 3
     564:	09 f4       	brne	.+2      	; 0x568 <decide+0x68>
     566:	7d c0       	rjmp	.+250    	; 0x662 <decide+0x162>
     568:	84 30       	cpi	r24, 0x04	; 4
     56a:	09 f0       	breq	.+2      	; 0x56e <decide+0x6e>
     56c:	28 c2       	rjmp	.+1104   	; 0x9be <decide+0x4be>
     56e:	ef c0       	rjmp	.+478    	; 0x74e <decide+0x24e>

        case start_disp:
            if (digit) {
     570:	11 23       	and	r17, r17
     572:	19 f0       	breq	.+6      	; 0x57a <decide+0x7a>
                state = a_input;
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	80 93 ba 01 	sts	0x01BA, r24
            }

        case a_input:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.
     57a:	80 91 bf 01 	lds	r24, 0x01BF
     57e:	90 91 c0 01 	lds	r25, 0x01C0
     582:	8e 30       	cpi	r24, 0x0E	; 14
     584:	91 05       	cpc	r25, r1
     586:	09 f4       	brne	.+2      	; 0x58a <decide+0x8a>
     588:	1a c2       	rjmp	.+1076   	; 0x9be <decide+0x4be>

			if (*is_dec_p == 0) {
     58a:	88 81       	ld	r24, Y
     58c:	88 23       	and	r24, r24
     58e:	41 f0       	breq	.+16     	; 0x5a0 <decide+0xa0>
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     590:	f6 01       	movw	r30, r12
     592:	c0 81       	ld	r28, Z
     594:	d1 81       	ldd	r29, Z+1	; 0x01
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	61 e0       	ldi	r22, 0x01	; 1
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	2f c0       	rjmp	.+94     	; 0x5fe <decide+0xfe>

        case a_input:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.

			if (*is_dec_p == 0) {
            	a = a * 10 + digit;				// append to a
     5a0:	60 91 c5 01 	lds	r22, 0x01C5
     5a4:	70 91 c6 01 	lds	r23, 0x01C6
     5a8:	80 91 c7 01 	lds	r24, 0x01C7
     5ac:	90 91 c8 01 	lds	r25, 0x01C8
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e2       	ldi	r20, 0x20	; 32
     5b6:	51 e4       	ldi	r21, 0x41	; 65
     5b8:	f9 d3       	rcall	.+2034   	; 0xdac <__mulsf3>
     5ba:	4b 01       	movw	r8, r22
     5bc:	5c 01       	movw	r10, r24
     5be:	61 2f       	mov	r22, r17
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	88 27       	eor	r24, r24
     5c4:	77 fd       	sbrc	r23, 7
     5c6:	80 95       	com	r24
     5c8:	98 2f       	mov	r25, r24
     5ca:	b9 d5       	rcall	.+2930   	; 0x113e <__floatsisf>
     5cc:	9b 01       	movw	r18, r22
     5ce:	ac 01       	movw	r20, r24
     5d0:	c5 01       	movw	r24, r10
     5d2:	b4 01       	movw	r22, r8
     5d4:	99 d3       	rcall	.+1842   	; 0xd08 <__addsf3>
     5d6:	60 93 c5 01 	sts	0x01C5, r22
     5da:	70 93 c6 01 	sts	0x01C6, r23
     5de:	80 93 c7 01 	sts	0x01C7, r24
     5e2:	90 93 c8 01 	sts	0x01C8, r25
     5e6:	a7 c0       	rjmp	.+334    	; 0x736 <decide+0x236>

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     5e8:	9b 01       	movw	r18, r22
     5ea:	22 0f       	add	r18, r18
     5ec:	33 1f       	adc	r19, r19
     5ee:	e3 e0       	ldi	r30, 0x03	; 3
     5f0:	66 0f       	add	r22, r22
     5f2:	77 1f       	adc	r23, r23
     5f4:	ea 95       	dec	r30
     5f6:	e1 f7       	brne	.-8      	; 0x5f0 <decide+0xf0>
     5f8:	62 0f       	add	r22, r18
     5fa:	73 1f       	adc	r23, r19
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     5fc:	01 96       	adiw	r24, 0x01	; 1
     5fe:	8c 17       	cp	r24, r28
     600:	9d 07       	cpc	r25, r29
     602:	94 f3       	brlt	.-28     	; 0x5e8 <decide+0xe8>
					d = d * 10;
				}

				a = (a * d + digit) / d;
     604:	88 27       	eor	r24, r24
     606:	77 fd       	sbrc	r23, 7
     608:	80 95       	com	r24
     60a:	98 2f       	mov	r25, r24
     60c:	98 d5       	rcall	.+2864   	; 0x113e <__floatsisf>
     60e:	4b 01       	movw	r8, r22
     610:	5c 01       	movw	r10, r24
     612:	20 91 c5 01 	lds	r18, 0x01C5
     616:	30 91 c6 01 	lds	r19, 0x01C6
     61a:	40 91 c7 01 	lds	r20, 0x01C7
     61e:	50 91 c8 01 	lds	r21, 0x01C8
     622:	c4 d3       	rcall	.+1928   	; 0xdac <__mulsf3>
     624:	2b 01       	movw	r4, r22
     626:	3c 01       	movw	r6, r24
     628:	61 2f       	mov	r22, r17
     62a:	70 e0       	ldi	r23, 0x00	; 0
     62c:	88 27       	eor	r24, r24
     62e:	77 fd       	sbrc	r23, 7
     630:	80 95       	com	r24
     632:	98 2f       	mov	r25, r24
     634:	84 d5       	rcall	.+2824   	; 0x113e <__floatsisf>
     636:	9b 01       	movw	r18, r22
     638:	ac 01       	movw	r20, r24
     63a:	c3 01       	movw	r24, r6
     63c:	b2 01       	movw	r22, r4
     63e:	64 d3       	rcall	.+1736   	; 0xd08 <__addsf3>
     640:	a5 01       	movw	r20, r10
     642:	94 01       	movw	r18, r8
     644:	a8 d4       	rcall	.+2384   	; 0xf96 <__divsf3>
     646:	60 93 c5 01 	sts	0x01C5, r22
     64a:	70 93 c6 01 	sts	0x01C6, r23
     64e:	80 93 c7 01 	sts	0x01C7, r24
     652:	90 93 c8 01 	sts	0x01C8, r25
     656:	6b c0       	rjmp	.+214    	; 0x72e <decide+0x22e>
            send_data(key);
            count++;
            break;

        case op_input:
            if (digit) {
     658:	11 23       	and	r17, r17
     65a:	19 f0       	breq	.+6      	; 0x662 <decide+0x162>
				state = b_input;
     65c:	83 e0       	ldi	r24, 0x03	; 3
     65e:	80 93 ba 01 	sts	0x01BA, r24
			}

        case b_input:
			if (*is_dec_p == 0) {
     662:	88 81       	ld	r24, Y
     664:	88 23       	and	r24, r24
     666:	41 f0       	breq	.+16     	; 0x678 <decide+0x178>
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     668:	f6 01       	movw	r30, r12
     66a:	c0 81       	ld	r28, Z
     66c:	d1 81       	ldd	r29, Z+1	; 0x01
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	61 e0       	ldi	r22, 0x01	; 1
     674:	70 e0       	ldi	r23, 0x00	; 0
     676:	2f c0       	rjmp	.+94     	; 0x6d6 <decide+0x1d6>
				state = b_input;
			}

        case b_input:
			if (*is_dec_p == 0) {
            	b = b * 10 + digit;				// append to b
     678:	60 91 b6 01 	lds	r22, 0x01B6
     67c:	70 91 b7 01 	lds	r23, 0x01B7
     680:	80 91 b8 01 	lds	r24, 0x01B8
     684:	90 91 b9 01 	lds	r25, 0x01B9
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	40 e2       	ldi	r20, 0x20	; 32
     68e:	51 e4       	ldi	r21, 0x41	; 65
     690:	8d d3       	rcall	.+1818   	; 0xdac <__mulsf3>
     692:	4b 01       	movw	r8, r22
     694:	5c 01       	movw	r10, r24
     696:	61 2f       	mov	r22, r17
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	88 27       	eor	r24, r24
     69c:	77 fd       	sbrc	r23, 7
     69e:	80 95       	com	r24
     6a0:	98 2f       	mov	r25, r24
     6a2:	4d d5       	rcall	.+2714   	; 0x113e <__floatsisf>
     6a4:	9b 01       	movw	r18, r22
     6a6:	ac 01       	movw	r20, r24
     6a8:	c5 01       	movw	r24, r10
     6aa:	b4 01       	movw	r22, r8
     6ac:	2d d3       	rcall	.+1626   	; 0xd08 <__addsf3>
     6ae:	60 93 b6 01 	sts	0x01B6, r22
     6b2:	70 93 b7 01 	sts	0x01B7, r23
     6b6:	80 93 b8 01 	sts	0x01B8, r24
     6ba:	90 93 b9 01 	sts	0x01B9, r25
     6be:	3b c0       	rjmp	.+118    	; 0x736 <decide+0x236>
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     6c0:	9b 01       	movw	r18, r22
     6c2:	22 0f       	add	r18, r18
     6c4:	33 1f       	adc	r19, r19
     6c6:	43 e0       	ldi	r20, 0x03	; 3
     6c8:	66 0f       	add	r22, r22
     6ca:	77 1f       	adc	r23, r23
     6cc:	4a 95       	dec	r20
     6ce:	e1 f7       	brne	.-8      	; 0x6c8 <decide+0x1c8>
     6d0:	62 0f       	add	r22, r18
     6d2:	73 1f       	adc	r23, r19
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     6d4:	01 96       	adiw	r24, 0x01	; 1
     6d6:	8c 17       	cp	r24, r28
     6d8:	9d 07       	cpc	r25, r29
     6da:	94 f3       	brlt	.-28     	; 0x6c0 <decide+0x1c0>
					d = d * 10;
				}

				b = (b * d + digit) / d;
     6dc:	88 27       	eor	r24, r24
     6de:	77 fd       	sbrc	r23, 7
     6e0:	80 95       	com	r24
     6e2:	98 2f       	mov	r25, r24
     6e4:	2c d5       	rcall	.+2648   	; 0x113e <__floatsisf>
     6e6:	4b 01       	movw	r8, r22
     6e8:	5c 01       	movw	r10, r24
     6ea:	20 91 b6 01 	lds	r18, 0x01B6
     6ee:	30 91 b7 01 	lds	r19, 0x01B7
     6f2:	40 91 b8 01 	lds	r20, 0x01B8
     6f6:	50 91 b9 01 	lds	r21, 0x01B9
     6fa:	58 d3       	rcall	.+1712   	; 0xdac <__mulsf3>
     6fc:	2b 01       	movw	r4, r22
     6fe:	3c 01       	movw	r6, r24
     700:	61 2f       	mov	r22, r17
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	88 27       	eor	r24, r24
     706:	77 fd       	sbrc	r23, 7
     708:	80 95       	com	r24
     70a:	98 2f       	mov	r25, r24
     70c:	18 d5       	rcall	.+2608   	; 0x113e <__floatsisf>
     70e:	9b 01       	movw	r18, r22
     710:	ac 01       	movw	r20, r24
     712:	c3 01       	movw	r24, r6
     714:	b2 01       	movw	r22, r4
     716:	f8 d2       	rcall	.+1520   	; 0xd08 <__addsf3>
     718:	a5 01       	movw	r20, r10
     71a:	94 01       	movw	r18, r8
     71c:	3c d4       	rcall	.+2168   	; 0xf96 <__divsf3>
     71e:	60 93 b6 01 	sts	0x01B6, r22
     722:	70 93 b7 01 	sts	0x01B7, r23
     726:	80 93 b8 01 	sts	0x01B8, r24
     72a:	90 93 b9 01 	sts	0x01B9, r25

				*paw_p = *paw_p + 1;
     72e:	21 96       	adiw	r28, 0x01	; 1
     730:	f6 01       	movw	r30, r12
     732:	d1 83       	std	Z+1, r29	; 0x01
     734:	c0 83       	st	Z, r28
			}

            send_data(key);
     736:	8f 2d       	mov	r24, r15
     738:	16 dd       	rcall	.-1492   	; 0x166 <send_data>
            count++;
     73a:	80 91 bf 01 	lds	r24, 0x01BF
     73e:	90 91 c0 01 	lds	r25, 0x01C0
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	90 93 c0 01 	sts	0x01C0, r25
     748:	80 93 bf 01 	sts	0x01BF, r24
            break;
     74c:	38 c1       	rjmp	.+624    	; 0x9be <decide+0x4be>

        case result_disp:
            if (digit) {
     74e:	11 23       	and	r17, r17
     750:	09 f4       	brne	.+2      	; 0x754 <decide+0x254>
     752:	35 c1       	rjmp	.+618    	; 0x9be <decide+0x4be>
                line[0] = ' ';
     754:	00 93 7b 00 	sts	0x007B, r16
                line[1] = ' ';
     758:	00 93 7c 00 	sts	0x007C, r16

                move_to(0, 0);					//начало верхней строки
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	5e dd       	rcall	.-1348   	; 0x21e <move_to>
                send_string(line); 				// Clear 1st line.
     762:	8b e7       	ldi	r24, 0x7B	; 123
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	48 dd       	rcall	.-1392   	; 0x1f8 <send_string>

                move_to(0, 0);
     768:	80 e0       	ldi	r24, 0x00	; 0
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	58 dd       	rcall	.-1360   	; 0x21e <move_to>
                a = b = op = count = 0;
     76e:	10 92 c0 01 	sts	0x01C0, r1
     772:	10 92 bf 01 	sts	0x01BF, r1
     776:	10 92 b5 01 	sts	0x01B5, r1
     77a:	80 92 b6 01 	sts	0x01B6, r8
     77e:	90 92 b7 01 	sts	0x01B7, r9
     782:	a0 92 b8 01 	sts	0x01B8, r10
     786:	b0 92 b9 01 	sts	0x01B9, r11
     78a:	80 92 c5 01 	sts	0x01C5, r8
     78e:	90 92 c6 01 	sts	0x01C6, r9
     792:	a0 92 c7 01 	sts	0x01C7, r10
     796:	b0 92 c8 01 	sts	0x01C8, r11
                state = a_input;
     79a:	40 92 ba 01 	sts	0x01BA, r4

                decide(key, is_dec_p, paw_p); 	// Recursively capture digit.
                return;
     79e:	d1 ce       	rjmp	.-606    	; 0x542 <decide+0x42>
            break;

        }
    } 

	else if (key == '.') {
     7a0:	ff 2d       	mov	r31, r15
     7a2:	fe 32       	cpi	r31, 0x2E	; 46
     7a4:	29 f4       	brne	.+10     	; 0x7b0 <decide+0x2b0>
		*is_dec_p = 1;
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	88 83       	st	Y, r24
		send_data(key);
     7aa:	8e e2       	ldi	r24, 0x2E	; 46
     7ac:	dc dc       	rcall	.-1608   	; 0x166 <send_data>
     7ae:	07 c1       	rjmp	.+526    	; 0x9be <decide+0x4be>
	}

	else {
		
		*is_dec_p = 0;
     7b0:	18 82       	st	Y, r1
		*paw_p = 1;		
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	f6 01       	movw	r30, r12
     7b8:	91 83       	std	Z+1, r25	; 0x01
     7ba:	80 83       	st	Z, r24

        switch (key) {
     7bc:	ff 2d       	mov	r31, r15
     7be:	ff 34       	cpi	r31, 0x4F	; 79
     7c0:	09 f4       	brne	.+2      	; 0x7c4 <decide+0x2c4>
     7c2:	fa c0       	rjmp	.+500    	; 0x9b8 <decide+0x4b8>
     7c4:	f0 35       	cpi	r31, 0x50	; 80
     7c6:	c0 f4       	brcc	.+48     	; 0x7f8 <decide+0x2f8>
     7c8:	fd 33       	cpi	r31, 0x3D	; 61
     7ca:	09 f4       	brne	.+2      	; 0x7ce <decide+0x2ce>
     7cc:	a8 c0       	rjmp	.+336    	; 0x91e <decide+0x41e>
     7ce:	fe 33       	cpi	r31, 0x3E	; 62
     7d0:	58 f4       	brcc	.+22     	; 0x7e8 <decide+0x2e8>
     7d2:	fa 32       	cpi	r31, 0x2A	; 42
     7d4:	08 f4       	brcc	.+2      	; 0x7d8 <decide+0x2d8>
     7d6:	f3 c0       	rjmp	.+486    	; 0x9be <decide+0x4be>
     7d8:	fc 32       	cpi	r31, 0x2C	; 44
     7da:	f0 f0       	brcs	.+60     	; 0x818 <decide+0x318>
     7dc:	fd 32       	cpi	r31, 0x2D	; 45
     7de:	e1 f0       	breq	.+56     	; 0x818 <decide+0x318>
     7e0:	ff 32       	cpi	r31, 0x2F	; 47
     7e2:	09 f0       	breq	.+2      	; 0x7e6 <decide+0x2e6>
     7e4:	ec c0       	rjmp	.+472    	; 0x9be <decide+0x4be>
     7e6:	18 c0       	rjmp	.+48     	; 0x818 <decide+0x318>
     7e8:	8f 2d       	mov	r24, r15
     7ea:	81 34       	cpi	r24, 0x41	; 65
     7ec:	09 f4       	brne	.+2      	; 0x7f0 <decide+0x2f0>
     7ee:	ce c0       	rjmp	.+412    	; 0x98c <decide+0x48c>
     7f0:	83 34       	cpi	r24, 0x43	; 67
     7f2:	09 f0       	breq	.+2      	; 0x7f6 <decide+0x2f6>
     7f4:	e4 c0       	rjmp	.+456    	; 0x9be <decide+0x4be>
     7f6:	c8 c0       	rjmp	.+400    	; 0x988 <decide+0x488>
     7f8:	ef 2d       	mov	r30, r15
     7fa:	e0 37       	cpi	r30, 0x70	; 112
     7fc:	69 f0       	breq	.+26     	; 0x818 <decide+0x318>
     7fe:	e1 37       	cpi	r30, 0x71	; 113
     800:	20 f4       	brcc	.+8      	; 0x80a <decide+0x30a>
     802:	ed 36       	cpi	r30, 0x6D	; 109
     804:	09 f0       	breq	.+2      	; 0x808 <decide+0x308>
     806:	db c0       	rjmp	.+438    	; 0x9be <decide+0x4be>
     808:	07 c0       	rjmp	.+14     	; 0x818 <decide+0x318>
     80a:	ff 2d       	mov	r31, r15
     80c:	f5 37       	cpi	r31, 0x75	; 117
     80e:	09 f4       	brne	.+2      	; 0x812 <decide+0x312>
     810:	d5 c0       	rjmp	.+426    	; 0x9bc <decide+0x4bc>
     812:	f6 37       	cpi	r31, 0x76	; 118
     814:	09 f0       	breq	.+2      	; 0x818 <decide+0x318>
     816:	d3 c0       	rjmp	.+422    	; 0x9be <decide+0x4be>
        case '+':
        case '-':
        case 'p':
        case 'm':
		case 'v':
            switch (state) {
     818:	80 91 ba 01 	lds	r24, 0x01BA
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	61 f0       	breq	.+24     	; 0x838 <decide+0x338>
     820:	83 30       	cpi	r24, 0x03	; 3
     822:	20 f4       	brcc	.+8      	; 0x82c <decide+0x32c>
     824:	81 30       	cpi	r24, 0x01	; 1
     826:	09 f0       	breq	.+2      	; 0x82a <decide+0x32a>
     828:	77 c0       	rjmp	.+238    	; 0x918 <decide+0x418>
     82a:	09 c0       	rjmp	.+18     	; 0x83e <decide+0x33e>
     82c:	83 30       	cpi	r24, 0x03	; 3
     82e:	99 f0       	breq	.+38     	; 0x856 <decide+0x356>
     830:	84 30       	cpi	r24, 0x04	; 4
     832:	09 f0       	breq	.+2      	; 0x836 <decide+0x336>
     834:	71 c0       	rjmp	.+226    	; 0x918 <decide+0x418>
     836:	3e c0       	rjmp	.+124    	; 0x8b4 <decide+0x3b4>

            case op_input:
                move_to(0,0); 		// Modify the operand displayed.
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	60 e0       	ldi	r22, 0x00	; 0
     83c:	f0 dc       	rcall	.-1568   	; 0x21e <move_to>

            case a_input:
                send_data(key);
     83e:	8f 2d       	mov	r24, r15
     840:	92 dc       	rcall	.-1756   	; 0x166 <send_data>
                count++;
     842:	80 91 bf 01 	lds	r24, 0x01BF
     846:	90 91 c0 01 	lds	r25, 0x01C0
     84a:	01 96       	adiw	r24, 0x01	; 1
     84c:	90 93 c0 01 	sts	0x01C0, r25
     850:	80 93 bf 01 	sts	0x01BF, r24
     854:	5e c0       	rjmp	.+188    	; 0x912 <decide+0x412>
                state = op_input;
                break;

            case b_input:
                calculate(a, op, b);
     856:	60 91 c5 01 	lds	r22, 0x01C5
     85a:	70 91 c6 01 	lds	r23, 0x01C6
     85e:	80 91 c7 01 	lds	r24, 0x01C7
     862:	90 91 c8 01 	lds	r25, 0x01C8
     866:	00 91 b6 01 	lds	r16, 0x01B6
     86a:	10 91 b7 01 	lds	r17, 0x01B7
     86e:	20 91 b8 01 	lds	r18, 0x01B8
     872:	30 91 b9 01 	lds	r19, 0x01B9
     876:	40 91 b5 01 	lds	r20, 0x01B5
     87a:	82 dd       	rcall	.-1276   	; 0x380 <calculate>
                show_result();
     87c:	e3 dd       	rcall	.-1082   	; 0x444 <show_result>
				ans = calculate(a, op, b);
     87e:	60 91 c5 01 	lds	r22, 0x01C5
     882:	70 91 c6 01 	lds	r23, 0x01C6
     886:	80 91 c7 01 	lds	r24, 0x01C7
     88a:	90 91 c8 01 	lds	r25, 0x01C8
     88e:	00 91 b6 01 	lds	r16, 0x01B6
     892:	10 91 b7 01 	lds	r17, 0x01B7
     896:	20 91 b8 01 	lds	r18, 0x01B8
     89a:	30 91 b9 01 	lds	r19, 0x01B9
     89e:	40 91 b5 01 	lds	r20, 0x01B5
     8a2:	6e dd       	rcall	.-1316   	; 0x380 <calculate>
     8a4:	60 93 c1 01 	sts	0x01C1, r22
     8a8:	70 93 c2 01 	sts	0x01C2, r23
     8ac:	80 93 c3 01 	sts	0x01C3, r24
     8b0:	90 93 c4 01 	sts	0x01C4, r25

            case result_disp:
                move_to(0, 0);
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	60 e0       	ldi	r22, 0x00	; 0
     8b8:	b2 dc       	rcall	.-1692   	; 0x21e <move_to>
                line[0] = 'A'; 		// 'A' represents current result.
     8ba:	81 e4       	ldi	r24, 0x41	; 65
     8bc:	80 93 7b 00 	sts	0x007B, r24
                line[1] = key; 		// Operator of the operation.
     8c0:	f0 92 7c 00 	sts	0x007C, r15
                send_string(line);
     8c4:	8b e7       	ldi	r24, 0x7B	; 123
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	97 dc       	rcall	.-1746   	; 0x1f8 <send_string>

                move_to(2,0);
     8ca:	82 e0       	ldi	r24, 0x02	; 2
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	a7 dc       	rcall	.-1714   	; 0x21e <move_to>
                count = 2;
     8d0:	82 e0       	ldi	r24, 0x02	; 2
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	90 93 c0 01 	sts	0x01C0, r25
     8d8:	80 93 bf 01 	sts	0x01BF, r24
                a = r; 				// Put result into a.
     8dc:	80 91 bb 01 	lds	r24, 0x01BB
     8e0:	90 91 bc 01 	lds	r25, 0x01BC
     8e4:	a0 91 bd 01 	lds	r26, 0x01BD
     8e8:	b0 91 be 01 	lds	r27, 0x01BE
     8ec:	80 93 c5 01 	sts	0x01C5, r24
     8f0:	90 93 c6 01 	sts	0x01C6, r25
     8f4:	a0 93 c7 01 	sts	0x01C7, r26
     8f8:	b0 93 c8 01 	sts	0x01C8, r27
                b = 0; 				// Clear b.
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	dc 01       	movw	r26, r24
     902:	80 93 b6 01 	sts	0x01B6, r24
     906:	90 93 b7 01 	sts	0x01B7, r25
     90a:	a0 93 b8 01 	sts	0x01B8, r26
     90e:	b0 93 b9 01 	sts	0x01B9, r27
                state = op_input;
     912:	82 e0       	ldi	r24, 0x02	; 2
     914:	80 93 ba 01 	sts	0x01BA, r24

                break;
            }

            op = key;
     918:	f0 92 b5 01 	sts	0x01B5, r15

            break;
     91c:	50 c0       	rjmp	.+160    	; 0x9be <decide+0x4be>

        case '=':
            if(state == b_input){
     91e:	80 91 ba 01 	lds	r24, 0x01BA
     922:	83 30       	cpi	r24, 0x03	; 3
     924:	09 f0       	breq	.+2      	; 0x928 <decide+0x428>
     926:	4b c0       	rjmp	.+150    	; 0x9be <decide+0x4be>
                calculate(a, op, b);
     928:	60 91 c5 01 	lds	r22, 0x01C5
     92c:	70 91 c6 01 	lds	r23, 0x01C6
     930:	80 91 c7 01 	lds	r24, 0x01C7
     934:	90 91 c8 01 	lds	r25, 0x01C8
     938:	00 91 b6 01 	lds	r16, 0x01B6
     93c:	10 91 b7 01 	lds	r17, 0x01B7
     940:	20 91 b8 01 	lds	r18, 0x01B8
     944:	30 91 b9 01 	lds	r19, 0x01B9
     948:	40 91 b5 01 	lds	r20, 0x01B5
     94c:	19 dd       	rcall	.-1486   	; 0x380 <calculate>
                show_result();
     94e:	7a dd       	rcall	.-1292   	; 0x444 <show_result>
				ans = calculate(a, op, b);
     950:	60 91 c5 01 	lds	r22, 0x01C5
     954:	70 91 c6 01 	lds	r23, 0x01C6
     958:	80 91 c7 01 	lds	r24, 0x01C7
     95c:	90 91 c8 01 	lds	r25, 0x01C8
     960:	00 91 b6 01 	lds	r16, 0x01B6
     964:	10 91 b7 01 	lds	r17, 0x01B7
     968:	20 91 b8 01 	lds	r18, 0x01B8
     96c:	30 91 b9 01 	lds	r19, 0x01B9
     970:	40 91 b5 01 	lds	r20, 0x01B5
     974:	05 dd       	rcall	.-1526   	; 0x380 <calculate>
     976:	60 93 c1 01 	sts	0x01C1, r22
     97a:	70 93 c2 01 	sts	0x01C2, r23
     97e:	80 93 c3 01 	sts	0x01C3, r24
     982:	90 93 c4 01 	sts	0x01C4, r25
     986:	1b c0       	rjmp	.+54     	; 0x9be <decide+0x4be>
            }
            break;

        case 'C': // "C" button.
			reset();
     988:	d0 dc       	rcall	.-1632   	; 0x32a <reset>
            break;
     98a:	19 c0       	rjmp	.+50     	; 0x9be <decide+0x4be>

        case 'A': // "ANS" button.
			send_data('A');
     98c:	81 e4       	ldi	r24, 0x41	; 65
     98e:	eb db       	rcall	.-2090   	; 0x166 <send_data>
			b = ans;
     990:	80 91 c1 01 	lds	r24, 0x01C1
     994:	90 91 c2 01 	lds	r25, 0x01C2
     998:	a0 91 c3 01 	lds	r26, 0x01C3
     99c:	b0 91 c4 01 	lds	r27, 0x01C4
     9a0:	80 93 b6 01 	sts	0x01B6, r24
     9a4:	90 93 b7 01 	sts	0x01B7, r25
     9a8:	a0 93 b8 01 	sts	0x01B8, r26
     9ac:	b0 93 b9 01 	sts	0x01B9, r27
			state = b_input;
     9b0:	83 e0       	ldi	r24, 0x03	; 3
     9b2:	80 93 ba 01 	sts	0x01BA, r24
            break;
     9b6:	03 c0       	rjmp	.+6      	; 0x9be <decide+0x4be>

		case 'O':// "ON/OFF" button.
			disp_on_off();
     9b8:	3e dc       	rcall	.-1924   	; 0x236 <disp_on_off>
			break;
     9ba:	01 c0       	rjmp	.+2      	; 0x9be <decide+0x4be>

		case 'u':// "uart" button.
			uart();
     9bc:	72 dd       	rcall	.-1308   	; 0x4a2 <uart>
			break;
        }
    }
}
     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	1f 91       	pop	r17
     9c4:	0f 91       	pop	r16
     9c6:	ff 90       	pop	r15
     9c8:	df 90       	pop	r13
     9ca:	cf 90       	pop	r12
     9cc:	bf 90       	pop	r11
     9ce:	af 90       	pop	r10
     9d0:	9f 90       	pop	r9
     9d2:	8f 90       	pop	r8
     9d4:	7f 90       	pop	r7
     9d6:	6f 90       	pop	r6
     9d8:	5f 90       	pop	r5
     9da:	4f 90       	pop	r4
     9dc:	08 95       	ret

000009de <run>:
    move_to(0, 0);		//начало верхней строки
    r = a = b = op = count = 0;
	state = start_disp;
}

void run() {
     9de:	ef 92       	push	r14
     9e0:	ff 92       	push	r15
     9e2:	0f 93       	push	r16
     9e4:	1f 93       	push	r17
     9e6:	df 93       	push	r29
     9e8:	cf 93       	push	r28
     9ea:	00 d0       	rcall	.+0      	; 0x9ec <run+0xe>
     9ec:	0f 92       	push	r0
     9ee:	cd b7       	in	r28, 0x3d	; 61
     9f0:	de b7       	in	r29, 0x3e	; 62
	bool *is_dec_p;
	bool is_decimal = 0;		//флаг (0 - целая часть, 1 - дробная)
     9f2:	19 82       	std	Y+1, r1	; 0x01
	is_dec_p = &is_decimal;

	int *paw_p;
	int paw = 1;				//разряд после запятой
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	9b 83       	std	Y+3, r25	; 0x03
     9fa:	8a 83       	std	Y+2, r24	; 0x02
	paw_p = &paw;
     9fc:	a2 e0       	ldi	r26, 0x02	; 2
     9fe:	ea 2e       	mov	r14, r26
     a00:	f1 2c       	mov	r15, r1
     a02:	ec 0e       	add	r14, r28
     a04:	fd 1e       	adc	r15, r29

    while (1) {
        decide(scan_key(), is_dec_p, paw_p);
     a06:	8e 01       	movw	r16, r28
     a08:	0f 5f       	subi	r16, 0xFF	; 255
     a0a:	1f 4f       	sbci	r17, 0xFF	; 255
     a0c:	44 dc       	rcall	.-1912   	; 0x296 <scan_key>
     a0e:	b8 01       	movw	r22, r16
     a10:	a7 01       	movw	r20, r14
     a12:	76 dd       	rcall	.-1300   	; 0x500 <decide>
     a14:	fb cf       	rjmp	.-10     	; 0xa0c <run+0x2e>

00000a16 <init_calculator>:
     a16:	8f e9       	ldi	r24, 0x9F	; 159
     a18:	96 e8       	ldi	r25, 0x86	; 134
     a1a:	a1 e0       	ldi	r26, 0x01	; 1
     a1c:	81 50       	subi	r24, 0x01	; 1
     a1e:	90 40       	sbci	r25, 0x00	; 0
     a20:	a0 40       	sbci	r26, 0x00	; 0
     a22:	e1 f7       	brne	.-8      	; 0xa1c <init_calculator+0x6>
     a24:	00 c0       	rjmp	.+0      	; 0xa26 <init_calculator+0x10>
     a26:	00 00       	nop
/////////////////////////////////////////////////////////////////////////////////////////////

void init_calculator() {
    _delay_ms(500);

    init_display();
     a28:	ac db       	rcall	.-2216   	; 0x182 <init_display>
    init_keyboard();
     a2a:	2e dc       	rcall	.-1956   	; 0x288 <init_keyboard>
	UsartInit();
     a2c:	03 d0       	rcall	.+6      	; 0xa34 <UsartInit>

    reset();
     a2e:	7d dc       	rcall	.-1798   	; 0x32a <reset>
    run();
     a30:	d6 df       	rcall	.-84     	; 0x9de <run>
}
     a32:	08 95       	ret

00000a34 <UsartInit>:

#include "uart.h"

void UsartInit()
{
	UBRRL=25;                  				//1 000 000 / (2400 * 16) - 1 = 25
     a34:	89 e1       	ldi	r24, 0x19	; 25
     a36:	89 b9       	out	0x09, r24	; 9
  	UCSRB=(1<<TXEN);              			//?ac?aoaai ia?aaa?o
     a38:	88 e0       	ldi	r24, 0x08	; 8
     a3a:	8a b9       	out	0x0a, r24	; 10
  	UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));   //?a?ei ?aaiou 8 aeo
     a3c:	86 e8       	ldi	r24, 0x86	; 134
     a3e:	80 bd       	out	0x20, r24	; 32
}
     a40:	08 95       	ret

00000a42 <Transmit>:

void Transmit(char* data)
{
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
  	for (int i=0; i<strlen(data); i++)
     a46:	28 2f       	mov	r18, r24
     a48:	39 2f       	mov	r19, r25
     a4a:	e9 01       	movw	r28, r18
     a4c:	20 e0       	ldi	r18, 0x00	; 0
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	06 c0       	rjmp	.+12     	; 0xa5e <Transmit+0x1c>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
     a52:	5d 9b       	sbis	0x0b, 5	; 11
     a54:	fe cf       	rjmp	.-4      	; 0xa52 <Transmit+0x10>
      	UDR = data[i];
     a56:	49 91       	ld	r20, Y+
     a58:	4c b9       	out	0x0c, r20	; 12
  	UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));   //?a?ei ?aaiou 8 aeo
}

void Transmit(char* data)
{
  	for (int i=0; i<strlen(data); i++)
     a5a:	2f 5f       	subi	r18, 0xFF	; 255
     a5c:	3f 4f       	sbci	r19, 0xFF	; 255
     a5e:	fc 01       	movw	r30, r24
     a60:	01 90       	ld	r0, Z+
     a62:	00 20       	and	r0, r0
     a64:	e9 f7       	brne	.-6      	; 0xa60 <Transmit+0x1e>
     a66:	31 97       	sbiw	r30, 0x01	; 1
     a68:	e8 1b       	sub	r30, r24
     a6a:	f9 0b       	sbc	r31, r25
     a6c:	2e 17       	cp	r18, r30
     a6e:	3f 07       	cpc	r19, r31
     a70:	80 f3       	brcs	.-32     	; 0xa52 <Transmit+0x10>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
      	UDR = data[i];
  	}
}
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	08 95       	ret

00000a78 <_fpadd_parts>:
     a78:	a0 e0       	ldi	r26, 0x00	; 0
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	e1 e4       	ldi	r30, 0x41	; 65
     a7e:	f5 e0       	ldi	r31, 0x05	; 5
     a80:	1d c6       	rjmp	.+3130   	; 0x16bc <__prologue_saves__+0x8>
     a82:	fc 01       	movw	r30, r24
     a84:	ea 01       	movw	r28, r20
     a86:	80 81       	ld	r24, Z
     a88:	82 30       	cpi	r24, 0x02	; 2
     a8a:	08 f4       	brcc	.+2      	; 0xa8e <_fpadd_parts+0x16>
     a8c:	38 c1       	rjmp	.+624    	; 0xcfe <_fpadd_parts+0x286>
     a8e:	db 01       	movw	r26, r22
     a90:	9c 91       	ld	r25, X
     a92:	92 30       	cpi	r25, 0x02	; 2
     a94:	08 f4       	brcc	.+2      	; 0xa98 <_fpadd_parts+0x20>
     a96:	30 c1       	rjmp	.+608    	; 0xcf8 <_fpadd_parts+0x280>
     a98:	84 30       	cpi	r24, 0x04	; 4
     a9a:	59 f4       	brne	.+22     	; 0xab2 <_fpadd_parts+0x3a>
     a9c:	94 30       	cpi	r25, 0x04	; 4
     a9e:	09 f0       	breq	.+2      	; 0xaa2 <_fpadd_parts+0x2a>
     aa0:	2e c1       	rjmp	.+604    	; 0xcfe <_fpadd_parts+0x286>
     aa2:	91 81       	ldd	r25, Z+1	; 0x01
     aa4:	11 96       	adiw	r26, 0x01	; 1
     aa6:	8c 91       	ld	r24, X
     aa8:	11 97       	sbiw	r26, 0x01	; 1
     aaa:	98 17       	cp	r25, r24
     aac:	09 f0       	breq	.+2      	; 0xab0 <_fpadd_parts+0x38>
     aae:	21 c1       	rjmp	.+578    	; 0xcf2 <_fpadd_parts+0x27a>
     ab0:	26 c1       	rjmp	.+588    	; 0xcfe <_fpadd_parts+0x286>
     ab2:	94 30       	cpi	r25, 0x04	; 4
     ab4:	09 f4       	brne	.+2      	; 0xab8 <_fpadd_parts+0x40>
     ab6:	20 c1       	rjmp	.+576    	; 0xcf8 <_fpadd_parts+0x280>
     ab8:	92 30       	cpi	r25, 0x02	; 2
     aba:	b1 f4       	brne	.+44     	; 0xae8 <_fpadd_parts+0x70>
     abc:	82 30       	cpi	r24, 0x02	; 2
     abe:	09 f0       	breq	.+2      	; 0xac2 <_fpadd_parts+0x4a>
     ac0:	1e c1       	rjmp	.+572    	; 0xcfe <_fpadd_parts+0x286>
     ac2:	ca 01       	movw	r24, r20
     ac4:	af 01       	movw	r20, r30
     ac6:	28 e0       	ldi	r18, 0x08	; 8
     ac8:	da 01       	movw	r26, r20
     aca:	0d 90       	ld	r0, X+
     acc:	ad 01       	movw	r20, r26
     ace:	dc 01       	movw	r26, r24
     ad0:	0d 92       	st	X+, r0
     ad2:	cd 01       	movw	r24, r26
     ad4:	21 50       	subi	r18, 0x01	; 1
     ad6:	c1 f7       	brne	.-16     	; 0xac8 <_fpadd_parts+0x50>
     ad8:	db 01       	movw	r26, r22
     ada:	11 96       	adiw	r26, 0x01	; 1
     adc:	8c 91       	ld	r24, X
     ade:	11 97       	sbiw	r26, 0x01	; 1
     ae0:	91 81       	ldd	r25, Z+1	; 0x01
     ae2:	89 23       	and	r24, r25
     ae4:	89 83       	std	Y+1, r24	; 0x01
     ae6:	0a c1       	rjmp	.+532    	; 0xcfc <_fpadd_parts+0x284>
     ae8:	82 30       	cpi	r24, 0x02	; 2
     aea:	09 f4       	brne	.+2      	; 0xaee <_fpadd_parts+0x76>
     aec:	05 c1       	rjmp	.+522    	; 0xcf8 <_fpadd_parts+0x280>
     aee:	c2 80       	ldd	r12, Z+2	; 0x02
     af0:	d3 80       	ldd	r13, Z+3	; 0x03
     af2:	db 01       	movw	r26, r22
     af4:	12 96       	adiw	r26, 0x02	; 2
     af6:	6d 90       	ld	r6, X+
     af8:	7c 90       	ld	r7, X
     afa:	13 97       	sbiw	r26, 0x03	; 3
     afc:	24 81       	ldd	r18, Z+4	; 0x04
     afe:	35 81       	ldd	r19, Z+5	; 0x05
     b00:	46 81       	ldd	r20, Z+6	; 0x06
     b02:	57 81       	ldd	r21, Z+7	; 0x07
     b04:	14 96       	adiw	r26, 0x04	; 4
     b06:	ed 90       	ld	r14, X+
     b08:	fd 90       	ld	r15, X+
     b0a:	0d 91       	ld	r16, X+
     b0c:	1c 91       	ld	r17, X
     b0e:	17 97       	sbiw	r26, 0x07	; 7
     b10:	c6 01       	movw	r24, r12
     b12:	86 19       	sub	r24, r6
     b14:	97 09       	sbc	r25, r7
     b16:	5c 01       	movw	r10, r24
     b18:	97 ff       	sbrs	r25, 7
     b1a:	04 c0       	rjmp	.+8      	; 0xb24 <_fpadd_parts+0xac>
     b1c:	aa 24       	eor	r10, r10
     b1e:	bb 24       	eor	r11, r11
     b20:	a8 1a       	sub	r10, r24
     b22:	b9 0a       	sbc	r11, r25
     b24:	b0 e2       	ldi	r27, 0x20	; 32
     b26:	ab 16       	cp	r10, r27
     b28:	b1 04       	cpc	r11, r1
     b2a:	0c f0       	brlt	.+2      	; 0xb2e <_fpadd_parts+0xb6>
     b2c:	61 c0       	rjmp	.+194    	; 0xbf0 <_fpadd_parts+0x178>
     b2e:	18 16       	cp	r1, r24
     b30:	19 06       	cpc	r1, r25
     b32:	6c f5       	brge	.+90     	; 0xb8e <_fpadd_parts+0x116>
     b34:	37 01       	movw	r6, r14
     b36:	48 01       	movw	r8, r16
     b38:	0a 2c       	mov	r0, r10
     b3a:	04 c0       	rjmp	.+8      	; 0xb44 <_fpadd_parts+0xcc>
     b3c:	96 94       	lsr	r9
     b3e:	87 94       	ror	r8
     b40:	77 94       	ror	r7
     b42:	67 94       	ror	r6
     b44:	0a 94       	dec	r0
     b46:	d2 f7       	brpl	.-12     	; 0xb3c <_fpadd_parts+0xc4>
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	a0 e0       	ldi	r26, 0x00	; 0
     b4e:	b0 e0       	ldi	r27, 0x00	; 0
     b50:	0a 2c       	mov	r0, r10
     b52:	04 c0       	rjmp	.+8      	; 0xb5c <_fpadd_parts+0xe4>
     b54:	88 0f       	add	r24, r24
     b56:	99 1f       	adc	r25, r25
     b58:	aa 1f       	adc	r26, r26
     b5a:	bb 1f       	adc	r27, r27
     b5c:	0a 94       	dec	r0
     b5e:	d2 f7       	brpl	.-12     	; 0xb54 <_fpadd_parts+0xdc>
     b60:	01 97       	sbiw	r24, 0x01	; 1
     b62:	a1 09       	sbc	r26, r1
     b64:	b1 09       	sbc	r27, r1
     b66:	8e 21       	and	r24, r14
     b68:	9f 21       	and	r25, r15
     b6a:	a0 23       	and	r26, r16
     b6c:	b1 23       	and	r27, r17
     b6e:	ee 24       	eor	r14, r14
     b70:	ff 24       	eor	r15, r15
     b72:	87 01       	movw	r16, r14
     b74:	e3 94       	inc	r14
     b76:	00 97       	sbiw	r24, 0x00	; 0
     b78:	a1 05       	cpc	r26, r1
     b7a:	b1 05       	cpc	r27, r1
     b7c:	19 f4       	brne	.+6      	; 0xb84 <_fpadd_parts+0x10c>
     b7e:	ee 24       	eor	r14, r14
     b80:	ff 24       	eor	r15, r15
     b82:	87 01       	movw	r16, r14
     b84:	e6 28       	or	r14, r6
     b86:	f7 28       	or	r15, r7
     b88:	08 29       	or	r16, r8
     b8a:	19 29       	or	r17, r9
     b8c:	3c c0       	rjmp	.+120    	; 0xc06 <_fpadd_parts+0x18e>
     b8e:	00 97       	sbiw	r24, 0x00	; 0
     b90:	d1 f1       	breq	.+116    	; 0xc06 <_fpadd_parts+0x18e>
     b92:	ca 0c       	add	r12, r10
     b94:	db 1c       	adc	r13, r11
     b96:	39 01       	movw	r6, r18
     b98:	4a 01       	movw	r8, r20
     b9a:	0a 2c       	mov	r0, r10
     b9c:	04 c0       	rjmp	.+8      	; 0xba6 <_fpadd_parts+0x12e>
     b9e:	96 94       	lsr	r9
     ba0:	87 94       	ror	r8
     ba2:	77 94       	ror	r7
     ba4:	67 94       	ror	r6
     ba6:	0a 94       	dec	r0
     ba8:	d2 f7       	brpl	.-12     	; 0xb9e <_fpadd_parts+0x126>
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	a0 e0       	ldi	r26, 0x00	; 0
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	0a 2c       	mov	r0, r10
     bb4:	04 c0       	rjmp	.+8      	; 0xbbe <_fpadd_parts+0x146>
     bb6:	88 0f       	add	r24, r24
     bb8:	99 1f       	adc	r25, r25
     bba:	aa 1f       	adc	r26, r26
     bbc:	bb 1f       	adc	r27, r27
     bbe:	0a 94       	dec	r0
     bc0:	d2 f7       	brpl	.-12     	; 0xbb6 <_fpadd_parts+0x13e>
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	a1 09       	sbc	r26, r1
     bc6:	b1 09       	sbc	r27, r1
     bc8:	82 23       	and	r24, r18
     bca:	93 23       	and	r25, r19
     bcc:	a4 23       	and	r26, r20
     bce:	b5 23       	and	r27, r21
     bd0:	21 e0       	ldi	r18, 0x01	; 1
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	40 e0       	ldi	r20, 0x00	; 0
     bd6:	50 e0       	ldi	r21, 0x00	; 0
     bd8:	00 97       	sbiw	r24, 0x00	; 0
     bda:	a1 05       	cpc	r26, r1
     bdc:	b1 05       	cpc	r27, r1
     bde:	19 f4       	brne	.+6      	; 0xbe6 <_fpadd_parts+0x16e>
     be0:	20 e0       	ldi	r18, 0x00	; 0
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	a9 01       	movw	r20, r18
     be6:	26 29       	or	r18, r6
     be8:	37 29       	or	r19, r7
     bea:	48 29       	or	r20, r8
     bec:	59 29       	or	r21, r9
     bee:	0b c0       	rjmp	.+22     	; 0xc06 <_fpadd_parts+0x18e>
     bf0:	6c 14       	cp	r6, r12
     bf2:	7d 04       	cpc	r7, r13
     bf4:	24 f4       	brge	.+8      	; 0xbfe <_fpadd_parts+0x186>
     bf6:	ee 24       	eor	r14, r14
     bf8:	ff 24       	eor	r15, r15
     bfa:	87 01       	movw	r16, r14
     bfc:	04 c0       	rjmp	.+8      	; 0xc06 <_fpadd_parts+0x18e>
     bfe:	63 01       	movw	r12, r6
     c00:	20 e0       	ldi	r18, 0x00	; 0
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	a9 01       	movw	r20, r18
     c06:	81 81       	ldd	r24, Z+1	; 0x01
     c08:	fb 01       	movw	r30, r22
     c0a:	91 81       	ldd	r25, Z+1	; 0x01
     c0c:	89 17       	cp	r24, r25
     c0e:	09 f4       	brne	.+2      	; 0xc12 <_fpadd_parts+0x19a>
     c10:	45 c0       	rjmp	.+138    	; 0xc9c <_fpadd_parts+0x224>
     c12:	88 23       	and	r24, r24
     c14:	49 f0       	breq	.+18     	; 0xc28 <_fpadd_parts+0x1b0>
     c16:	d8 01       	movw	r26, r16
     c18:	c7 01       	movw	r24, r14
     c1a:	82 1b       	sub	r24, r18
     c1c:	93 0b       	sbc	r25, r19
     c1e:	a4 0b       	sbc	r26, r20
     c20:	b5 0b       	sbc	r27, r21
     c22:	9c 01       	movw	r18, r24
     c24:	ad 01       	movw	r20, r26
     c26:	04 c0       	rjmp	.+8      	; 0xc30 <_fpadd_parts+0x1b8>
     c28:	2e 19       	sub	r18, r14
     c2a:	3f 09       	sbc	r19, r15
     c2c:	40 0b       	sbc	r20, r16
     c2e:	51 0b       	sbc	r21, r17
     c30:	57 fd       	sbrc	r21, 7
     c32:	04 c0       	rjmp	.+8      	; 0xc3c <_fpadd_parts+0x1c4>
     c34:	19 82       	std	Y+1, r1	; 0x01
     c36:	db 82       	std	Y+3, r13	; 0x03
     c38:	ca 82       	std	Y+2, r12	; 0x02
     c3a:	0b c0       	rjmp	.+22     	; 0xc52 <_fpadd_parts+0x1da>
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	89 83       	std	Y+1, r24	; 0x01
     c40:	db 82       	std	Y+3, r13	; 0x03
     c42:	ca 82       	std	Y+2, r12	; 0x02
     c44:	50 95       	com	r21
     c46:	40 95       	com	r20
     c48:	30 95       	com	r19
     c4a:	21 95       	neg	r18
     c4c:	3f 4f       	sbci	r19, 0xFF	; 255
     c4e:	4f 4f       	sbci	r20, 0xFF	; 255
     c50:	5f 4f       	sbci	r21, 0xFF	; 255
     c52:	2c 83       	std	Y+4, r18	; 0x04
     c54:	3d 83       	std	Y+5, r19	; 0x05
     c56:	4e 83       	std	Y+6, r20	; 0x06
     c58:	5f 83       	std	Y+7, r21	; 0x07
     c5a:	0d c0       	rjmp	.+26     	; 0xc76 <_fpadd_parts+0x1fe>
     c5c:	88 0f       	add	r24, r24
     c5e:	99 1f       	adc	r25, r25
     c60:	aa 1f       	adc	r26, r26
     c62:	bb 1f       	adc	r27, r27
     c64:	8c 83       	std	Y+4, r24	; 0x04
     c66:	9d 83       	std	Y+5, r25	; 0x05
     c68:	ae 83       	std	Y+6, r26	; 0x06
     c6a:	bf 83       	std	Y+7, r27	; 0x07
     c6c:	8a 81       	ldd	r24, Y+2	; 0x02
     c6e:	9b 81       	ldd	r25, Y+3	; 0x03
     c70:	01 97       	sbiw	r24, 0x01	; 1
     c72:	9b 83       	std	Y+3, r25	; 0x03
     c74:	8a 83       	std	Y+2, r24	; 0x02
     c76:	8c 81       	ldd	r24, Y+4	; 0x04
     c78:	9d 81       	ldd	r25, Y+5	; 0x05
     c7a:	ae 81       	ldd	r26, Y+6	; 0x06
     c7c:	bf 81       	ldd	r27, Y+7	; 0x07
     c7e:	9c 01       	movw	r18, r24
     c80:	ad 01       	movw	r20, r26
     c82:	21 50       	subi	r18, 0x01	; 1
     c84:	30 40       	sbci	r19, 0x00	; 0
     c86:	40 40       	sbci	r20, 0x00	; 0
     c88:	50 40       	sbci	r21, 0x00	; 0
     c8a:	2f 3f       	cpi	r18, 0xFF	; 255
     c8c:	ef ef       	ldi	r30, 0xFF	; 255
     c8e:	3e 07       	cpc	r19, r30
     c90:	ef ef       	ldi	r30, 0xFF	; 255
     c92:	4e 07       	cpc	r20, r30
     c94:	ef e3       	ldi	r30, 0x3F	; 63
     c96:	5e 07       	cpc	r21, r30
     c98:	08 f3       	brcs	.-62     	; 0xc5c <_fpadd_parts+0x1e4>
     c9a:	0b c0       	rjmp	.+22     	; 0xcb2 <_fpadd_parts+0x23a>
     c9c:	89 83       	std	Y+1, r24	; 0x01
     c9e:	db 82       	std	Y+3, r13	; 0x03
     ca0:	ca 82       	std	Y+2, r12	; 0x02
     ca2:	2e 0d       	add	r18, r14
     ca4:	3f 1d       	adc	r19, r15
     ca6:	40 1f       	adc	r20, r16
     ca8:	51 1f       	adc	r21, r17
     caa:	2c 83       	std	Y+4, r18	; 0x04
     cac:	3d 83       	std	Y+5, r19	; 0x05
     cae:	4e 83       	std	Y+6, r20	; 0x06
     cb0:	5f 83       	std	Y+7, r21	; 0x07
     cb2:	83 e0       	ldi	r24, 0x03	; 3
     cb4:	88 83       	st	Y, r24
     cb6:	2c 81       	ldd	r18, Y+4	; 0x04
     cb8:	3d 81       	ldd	r19, Y+5	; 0x05
     cba:	4e 81       	ldd	r20, Y+6	; 0x06
     cbc:	5f 81       	ldd	r21, Y+7	; 0x07
     cbe:	57 ff       	sbrs	r21, 7
     cc0:	1d c0       	rjmp	.+58     	; 0xcfc <_fpadd_parts+0x284>
     cc2:	da 01       	movw	r26, r20
     cc4:	c9 01       	movw	r24, r18
     cc6:	81 70       	andi	r24, 0x01	; 1
     cc8:	90 70       	andi	r25, 0x00	; 0
     cca:	a0 70       	andi	r26, 0x00	; 0
     ccc:	b0 70       	andi	r27, 0x00	; 0
     cce:	56 95       	lsr	r21
     cd0:	47 95       	ror	r20
     cd2:	37 95       	ror	r19
     cd4:	27 95       	ror	r18
     cd6:	82 2b       	or	r24, r18
     cd8:	93 2b       	or	r25, r19
     cda:	a4 2b       	or	r26, r20
     cdc:	b5 2b       	or	r27, r21
     cde:	8c 83       	std	Y+4, r24	; 0x04
     ce0:	9d 83       	std	Y+5, r25	; 0x05
     ce2:	ae 83       	std	Y+6, r26	; 0x06
     ce4:	bf 83       	std	Y+7, r27	; 0x07
     ce6:	8a 81       	ldd	r24, Y+2	; 0x02
     ce8:	9b 81       	ldd	r25, Y+3	; 0x03
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	9b 83       	std	Y+3, r25	; 0x03
     cee:	8a 83       	std	Y+2, r24	; 0x02
     cf0:	05 c0       	rjmp	.+10     	; 0xcfc <_fpadd_parts+0x284>
     cf2:	eb e9       	ldi	r30, 0x9B	; 155
     cf4:	f0 e0       	ldi	r31, 0x00	; 0
     cf6:	03 c0       	rjmp	.+6      	; 0xcfe <_fpadd_parts+0x286>
     cf8:	fb 01       	movw	r30, r22
     cfa:	01 c0       	rjmp	.+2      	; 0xcfe <_fpadd_parts+0x286>
     cfc:	fe 01       	movw	r30, r28
     cfe:	cf 01       	movw	r24, r30
     d00:	cd b7       	in	r28, 0x3d	; 61
     d02:	de b7       	in	r29, 0x3e	; 62
     d04:	ee e0       	ldi	r30, 0x0E	; 14
     d06:	f6 c4       	rjmp	.+2540   	; 0x16f4 <__epilogue_restores__+0x8>

00000d08 <__addsf3>:
     d08:	a0 e2       	ldi	r26, 0x20	; 32
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	e9 e8       	ldi	r30, 0x89	; 137
     d0e:	f6 e0       	ldi	r31, 0x06	; 6
     d10:	dd c4       	rjmp	.+2490   	; 0x16cc <__prologue_saves__+0x18>
     d12:	69 83       	std	Y+1, r22	; 0x01
     d14:	7a 83       	std	Y+2, r23	; 0x02
     d16:	8b 83       	std	Y+3, r24	; 0x03
     d18:	9c 83       	std	Y+4, r25	; 0x04
     d1a:	2d 83       	std	Y+5, r18	; 0x05
     d1c:	3e 83       	std	Y+6, r19	; 0x06
     d1e:	4f 83       	std	Y+7, r20	; 0x07
     d20:	58 87       	std	Y+8, r21	; 0x08
     d22:	89 e0       	ldi	r24, 0x09	; 9
     d24:	e8 2e       	mov	r14, r24
     d26:	f1 2c       	mov	r15, r1
     d28:	ec 0e       	add	r14, r28
     d2a:	fd 1e       	adc	r15, r29
     d2c:	ce 01       	movw	r24, r28
     d2e:	01 96       	adiw	r24, 0x01	; 1
     d30:	b7 01       	movw	r22, r14
     d32:	d7 d3       	rcall	.+1966   	; 0x14e2 <__unpack_f>
     d34:	8e 01       	movw	r16, r28
     d36:	0f 5e       	subi	r16, 0xEF	; 239
     d38:	1f 4f       	sbci	r17, 0xFF	; 255
     d3a:	ce 01       	movw	r24, r28
     d3c:	05 96       	adiw	r24, 0x05	; 5
     d3e:	b8 01       	movw	r22, r16
     d40:	d0 d3       	rcall	.+1952   	; 0x14e2 <__unpack_f>
     d42:	c7 01       	movw	r24, r14
     d44:	b8 01       	movw	r22, r16
     d46:	ae 01       	movw	r20, r28
     d48:	47 5e       	subi	r20, 0xE7	; 231
     d4a:	5f 4f       	sbci	r21, 0xFF	; 255
     d4c:	95 de       	rcall	.-726    	; 0xa78 <_fpadd_parts>
     d4e:	fc d2       	rcall	.+1528   	; 0x1348 <__pack_f>
     d50:	a0 96       	adiw	r28, 0x20	; 32
     d52:	e6 e0       	ldi	r30, 0x06	; 6
     d54:	d7 c4       	rjmp	.+2478   	; 0x1704 <__epilogue_restores__+0x18>

00000d56 <__subsf3>:
     d56:	a0 e2       	ldi	r26, 0x20	; 32
     d58:	b0 e0       	ldi	r27, 0x00	; 0
     d5a:	e0 eb       	ldi	r30, 0xB0	; 176
     d5c:	f6 e0       	ldi	r31, 0x06	; 6
     d5e:	b6 c4       	rjmp	.+2412   	; 0x16cc <__prologue_saves__+0x18>
     d60:	69 83       	std	Y+1, r22	; 0x01
     d62:	7a 83       	std	Y+2, r23	; 0x02
     d64:	8b 83       	std	Y+3, r24	; 0x03
     d66:	9c 83       	std	Y+4, r25	; 0x04
     d68:	2d 83       	std	Y+5, r18	; 0x05
     d6a:	3e 83       	std	Y+6, r19	; 0x06
     d6c:	4f 83       	std	Y+7, r20	; 0x07
     d6e:	58 87       	std	Y+8, r21	; 0x08
     d70:	8e 01       	movw	r16, r28
     d72:	07 5f       	subi	r16, 0xF7	; 247
     d74:	1f 4f       	sbci	r17, 0xFF	; 255
     d76:	ce 01       	movw	r24, r28
     d78:	01 96       	adiw	r24, 0x01	; 1
     d7a:	b8 01       	movw	r22, r16
     d7c:	b2 d3       	rcall	.+1892   	; 0x14e2 <__unpack_f>
     d7e:	91 e1       	ldi	r25, 0x11	; 17
     d80:	e9 2e       	mov	r14, r25
     d82:	f1 2c       	mov	r15, r1
     d84:	ec 0e       	add	r14, r28
     d86:	fd 1e       	adc	r15, r29
     d88:	ce 01       	movw	r24, r28
     d8a:	05 96       	adiw	r24, 0x05	; 5
     d8c:	b7 01       	movw	r22, r14
     d8e:	a9 d3       	rcall	.+1874   	; 0x14e2 <__unpack_f>
     d90:	8a 89       	ldd	r24, Y+18	; 0x12
     d92:	91 e0       	ldi	r25, 0x01	; 1
     d94:	89 27       	eor	r24, r25
     d96:	8a 8b       	std	Y+18, r24	; 0x12
     d98:	c8 01       	movw	r24, r16
     d9a:	b7 01       	movw	r22, r14
     d9c:	ae 01       	movw	r20, r28
     d9e:	47 5e       	subi	r20, 0xE7	; 231
     da0:	5f 4f       	sbci	r21, 0xFF	; 255
     da2:	6a de       	rcall	.-812    	; 0xa78 <_fpadd_parts>
     da4:	d1 d2       	rcall	.+1442   	; 0x1348 <__pack_f>
     da6:	a0 96       	adiw	r28, 0x20	; 32
     da8:	e6 e0       	ldi	r30, 0x06	; 6
     daa:	ac c4       	rjmp	.+2392   	; 0x1704 <__epilogue_restores__+0x18>

00000dac <__mulsf3>:
     dac:	a0 e2       	ldi	r26, 0x20	; 32
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	eb ed       	ldi	r30, 0xDB	; 219
     db2:	f6 e0       	ldi	r31, 0x06	; 6
     db4:	7f c4       	rjmp	.+2302   	; 0x16b4 <__prologue_saves__>
     db6:	69 83       	std	Y+1, r22	; 0x01
     db8:	7a 83       	std	Y+2, r23	; 0x02
     dba:	8b 83       	std	Y+3, r24	; 0x03
     dbc:	9c 83       	std	Y+4, r25	; 0x04
     dbe:	2d 83       	std	Y+5, r18	; 0x05
     dc0:	3e 83       	std	Y+6, r19	; 0x06
     dc2:	4f 83       	std	Y+7, r20	; 0x07
     dc4:	58 87       	std	Y+8, r21	; 0x08
     dc6:	ce 01       	movw	r24, r28
     dc8:	01 96       	adiw	r24, 0x01	; 1
     dca:	be 01       	movw	r22, r28
     dcc:	67 5f       	subi	r22, 0xF7	; 247
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	88 d3       	rcall	.+1808   	; 0x14e2 <__unpack_f>
     dd2:	ce 01       	movw	r24, r28
     dd4:	05 96       	adiw	r24, 0x05	; 5
     dd6:	be 01       	movw	r22, r28
     dd8:	6f 5e       	subi	r22, 0xEF	; 239
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	82 d3       	rcall	.+1796   	; 0x14e2 <__unpack_f>
     dde:	99 85       	ldd	r25, Y+9	; 0x09
     de0:	92 30       	cpi	r25, 0x02	; 2
     de2:	78 f0       	brcs	.+30     	; 0xe02 <__mulsf3+0x56>
     de4:	89 89       	ldd	r24, Y+17	; 0x11
     de6:	82 30       	cpi	r24, 0x02	; 2
     de8:	c0 f0       	brcs	.+48     	; 0xe1a <__mulsf3+0x6e>
     dea:	94 30       	cpi	r25, 0x04	; 4
     dec:	19 f4       	brne	.+6      	; 0xdf4 <__mulsf3+0x48>
     dee:	82 30       	cpi	r24, 0x02	; 2
     df0:	41 f4       	brne	.+16     	; 0xe02 <__mulsf3+0x56>
     df2:	cb c0       	rjmp	.+406    	; 0xf8a <__mulsf3+0x1de>
     df4:	84 30       	cpi	r24, 0x04	; 4
     df6:	19 f4       	brne	.+6      	; 0xdfe <__mulsf3+0x52>
     df8:	92 30       	cpi	r25, 0x02	; 2
     dfa:	79 f4       	brne	.+30     	; 0xe1a <__mulsf3+0x6e>
     dfc:	c6 c0       	rjmp	.+396    	; 0xf8a <__mulsf3+0x1de>
     dfe:	92 30       	cpi	r25, 0x02	; 2
     e00:	51 f4       	brne	.+20     	; 0xe16 <__mulsf3+0x6a>
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	2a 85       	ldd	r18, Y+10	; 0x0a
     e06:	9a 89       	ldd	r25, Y+18	; 0x12
     e08:	29 17       	cp	r18, r25
     e0a:	09 f4       	brne	.+2      	; 0xe0e <__mulsf3+0x62>
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	8a 87       	std	Y+10, r24	; 0x0a
     e10:	ce 01       	movw	r24, r28
     e12:	09 96       	adiw	r24, 0x09	; 9
     e14:	bc c0       	rjmp	.+376    	; 0xf8e <__mulsf3+0x1e2>
     e16:	82 30       	cpi	r24, 0x02	; 2
     e18:	51 f4       	brne	.+20     	; 0xe2e <__mulsf3+0x82>
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	2a 85       	ldd	r18, Y+10	; 0x0a
     e1e:	9a 89       	ldd	r25, Y+18	; 0x12
     e20:	29 17       	cp	r18, r25
     e22:	09 f4       	brne	.+2      	; 0xe26 <__mulsf3+0x7a>
     e24:	80 e0       	ldi	r24, 0x00	; 0
     e26:	8a 8b       	std	Y+18, r24	; 0x12
     e28:	ce 01       	movw	r24, r28
     e2a:	41 96       	adiw	r24, 0x11	; 17
     e2c:	b0 c0       	rjmp	.+352    	; 0xf8e <__mulsf3+0x1e2>
     e2e:	6d 84       	ldd	r6, Y+13	; 0x0d
     e30:	7e 84       	ldd	r7, Y+14	; 0x0e
     e32:	8f 84       	ldd	r8, Y+15	; 0x0f
     e34:	98 88       	ldd	r9, Y+16	; 0x10
     e36:	ed 88       	ldd	r14, Y+21	; 0x15
     e38:	fe 88       	ldd	r15, Y+22	; 0x16
     e3a:	0f 89       	ldd	r16, Y+23	; 0x17
     e3c:	18 8d       	ldd	r17, Y+24	; 0x18
     e3e:	e0 e2       	ldi	r30, 0x20	; 32
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	dc 01       	movw	r26, r24
     e48:	aa 24       	eor	r10, r10
     e4a:	bb 24       	eor	r11, r11
     e4c:	65 01       	movw	r12, r10
     e4e:	20 e0       	ldi	r18, 0x00	; 0
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	a9 01       	movw	r20, r18
     e54:	b3 01       	movw	r22, r6
     e56:	61 70       	andi	r22, 0x01	; 1
     e58:	70 70       	andi	r23, 0x00	; 0
     e5a:	61 15       	cp	r22, r1
     e5c:	71 05       	cpc	r23, r1
     e5e:	d1 f0       	breq	.+52     	; 0xe94 <__mulsf3+0xe8>
     e60:	2e 0d       	add	r18, r14
     e62:	3f 1d       	adc	r19, r15
     e64:	40 1f       	adc	r20, r16
     e66:	51 1f       	adc	r21, r17
     e68:	15 01       	movw	r2, r10
     e6a:	26 01       	movw	r4, r12
     e6c:	28 0e       	add	r2, r24
     e6e:	39 1e       	adc	r3, r25
     e70:	4a 1e       	adc	r4, r26
     e72:	5b 1e       	adc	r5, r27
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	a0 e0       	ldi	r26, 0x00	; 0
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	2e 15       	cp	r18, r14
     e7e:	3f 05       	cpc	r19, r15
     e80:	40 07       	cpc	r20, r16
     e82:	51 07       	cpc	r21, r17
     e84:	18 f0       	brcs	.+6      	; 0xe8c <__mulsf3+0xe0>
     e86:	80 e0       	ldi	r24, 0x00	; 0
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	dc 01       	movw	r26, r24
     e8c:	82 0d       	add	r24, r2
     e8e:	93 1d       	adc	r25, r3
     e90:	a4 1d       	adc	r26, r4
     e92:	b5 1d       	adc	r27, r5
     e94:	aa 0c       	add	r10, r10
     e96:	bb 1c       	adc	r11, r11
     e98:	cc 1c       	adc	r12, r12
     e9a:	dd 1c       	adc	r13, r13
     e9c:	17 ff       	sbrs	r17, 7
     e9e:	09 c0       	rjmp	.+18     	; 0xeb2 <__mulsf3+0x106>
     ea0:	61 e0       	ldi	r22, 0x01	; 1
     ea2:	26 2e       	mov	r2, r22
     ea4:	31 2c       	mov	r3, r1
     ea6:	41 2c       	mov	r4, r1
     ea8:	51 2c       	mov	r5, r1
     eaa:	a2 28       	or	r10, r2
     eac:	b3 28       	or	r11, r3
     eae:	c4 28       	or	r12, r4
     eb0:	d5 28       	or	r13, r5
     eb2:	31 97       	sbiw	r30, 0x01	; 1
     eb4:	49 f0       	breq	.+18     	; 0xec8 <__mulsf3+0x11c>
     eb6:	ee 0c       	add	r14, r14
     eb8:	ff 1c       	adc	r15, r15
     eba:	00 1f       	adc	r16, r16
     ebc:	11 1f       	adc	r17, r17
     ebe:	96 94       	lsr	r9
     ec0:	87 94       	ror	r8
     ec2:	77 94       	ror	r7
     ec4:	67 94       	ror	r6
     ec6:	c6 cf       	rjmp	.-116    	; 0xe54 <__mulsf3+0xa8>
     ec8:	6b 89       	ldd	r22, Y+19	; 0x13
     eca:	7c 89       	ldd	r23, Y+20	; 0x14
     ecc:	eb 85       	ldd	r30, Y+11	; 0x0b
     ece:	fc 85       	ldd	r31, Y+12	; 0x0c
     ed0:	6e 0f       	add	r22, r30
     ed2:	7f 1f       	adc	r23, r31
     ed4:	6e 5f       	subi	r22, 0xFE	; 254
     ed6:	7f 4f       	sbci	r23, 0xFF	; 255
     ed8:	7c 8f       	std	Y+28, r23	; 0x1c
     eda:	6b 8f       	std	Y+27, r22	; 0x1b
     edc:	61 e0       	ldi	r22, 0x01	; 1
     ede:	ea 85       	ldd	r30, Y+10	; 0x0a
     ee0:	7a 89       	ldd	r23, Y+18	; 0x12
     ee2:	e7 17       	cp	r30, r23
     ee4:	09 f4       	brne	.+2      	; 0xee8 <__mulsf3+0x13c>
     ee6:	60 e0       	ldi	r22, 0x00	; 0
     ee8:	6a 8f       	std	Y+26, r22	; 0x1a
     eea:	6b 8d       	ldd	r22, Y+27	; 0x1b
     eec:	7c 8d       	ldd	r23, Y+28	; 0x1c
     eee:	10 c0       	rjmp	.+32     	; 0xf10 <__mulsf3+0x164>
     ef0:	fc 01       	movw	r30, r24
     ef2:	e1 70       	andi	r30, 0x01	; 1
     ef4:	f0 70       	andi	r31, 0x00	; 0
     ef6:	30 97       	sbiw	r30, 0x00	; 0
     ef8:	29 f0       	breq	.+10     	; 0xf04 <__mulsf3+0x158>
     efa:	56 95       	lsr	r21
     efc:	47 95       	ror	r20
     efe:	37 95       	ror	r19
     f00:	27 95       	ror	r18
     f02:	50 68       	ori	r21, 0x80	; 128
     f04:	b6 95       	lsr	r27
     f06:	a7 95       	ror	r26
     f08:	97 95       	ror	r25
     f0a:	87 95       	ror	r24
     f0c:	6f 5f       	subi	r22, 0xFF	; 255
     f0e:	7f 4f       	sbci	r23, 0xFF	; 255
     f10:	b7 fd       	sbrc	r27, 7
     f12:	ee cf       	rjmp	.-36     	; 0xef0 <__mulsf3+0x144>
     f14:	0c c0       	rjmp	.+24     	; 0xf2e <__mulsf3+0x182>
     f16:	88 0f       	add	r24, r24
     f18:	99 1f       	adc	r25, r25
     f1a:	aa 1f       	adc	r26, r26
     f1c:	bb 1f       	adc	r27, r27
     f1e:	57 fd       	sbrc	r21, 7
     f20:	81 60       	ori	r24, 0x01	; 1
     f22:	22 0f       	add	r18, r18
     f24:	33 1f       	adc	r19, r19
     f26:	44 1f       	adc	r20, r20
     f28:	55 1f       	adc	r21, r21
     f2a:	61 50       	subi	r22, 0x01	; 1
     f2c:	70 40       	sbci	r23, 0x00	; 0
     f2e:	80 30       	cpi	r24, 0x00	; 0
     f30:	e0 e0       	ldi	r30, 0x00	; 0
     f32:	9e 07       	cpc	r25, r30
     f34:	e0 e0       	ldi	r30, 0x00	; 0
     f36:	ae 07       	cpc	r26, r30
     f38:	e0 e4       	ldi	r30, 0x40	; 64
     f3a:	be 07       	cpc	r27, r30
     f3c:	60 f3       	brcs	.-40     	; 0xf16 <__mulsf3+0x16a>
     f3e:	6b 8f       	std	Y+27, r22	; 0x1b
     f40:	7c 8f       	std	Y+28, r23	; 0x1c
     f42:	6f e7       	ldi	r22, 0x7F	; 127
     f44:	e6 2e       	mov	r14, r22
     f46:	f1 2c       	mov	r15, r1
     f48:	01 2d       	mov	r16, r1
     f4a:	11 2d       	mov	r17, r1
     f4c:	e8 22       	and	r14, r24
     f4e:	f9 22       	and	r15, r25
     f50:	0a 23       	and	r16, r26
     f52:	1b 23       	and	r17, r27
     f54:	60 e4       	ldi	r22, 0x40	; 64
     f56:	e6 16       	cp	r14, r22
     f58:	f1 04       	cpc	r15, r1
     f5a:	01 05       	cpc	r16, r1
     f5c:	11 05       	cpc	r17, r1
     f5e:	61 f4       	brne	.+24     	; 0xf78 <__mulsf3+0x1cc>
     f60:	87 fd       	sbrc	r24, 7
     f62:	0a c0       	rjmp	.+20     	; 0xf78 <__mulsf3+0x1cc>
     f64:	21 15       	cp	r18, r1
     f66:	31 05       	cpc	r19, r1
     f68:	41 05       	cpc	r20, r1
     f6a:	51 05       	cpc	r21, r1
     f6c:	29 f0       	breq	.+10     	; 0xf78 <__mulsf3+0x1cc>
     f6e:	80 5c       	subi	r24, 0xC0	; 192
     f70:	9f 4f       	sbci	r25, 0xFF	; 255
     f72:	af 4f       	sbci	r26, 0xFF	; 255
     f74:	bf 4f       	sbci	r27, 0xFF	; 255
     f76:	80 78       	andi	r24, 0x80	; 128
     f78:	8d 8f       	std	Y+29, r24	; 0x1d
     f7a:	9e 8f       	std	Y+30, r25	; 0x1e
     f7c:	af 8f       	std	Y+31, r26	; 0x1f
     f7e:	b8 a3       	std	Y+32, r27	; 0x20
     f80:	83 e0       	ldi	r24, 0x03	; 3
     f82:	89 8f       	std	Y+25, r24	; 0x19
     f84:	ce 01       	movw	r24, r28
     f86:	49 96       	adiw	r24, 0x19	; 25
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <__mulsf3+0x1e2>
     f8a:	8b e9       	ldi	r24, 0x9B	; 155
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	dc d1       	rcall	.+952    	; 0x1348 <__pack_f>
     f90:	a0 96       	adiw	r28, 0x20	; 32
     f92:	e2 e1       	ldi	r30, 0x12	; 18
     f94:	ab c3       	rjmp	.+1878   	; 0x16ec <__epilogue_restores__>

00000f96 <__divsf3>:
     f96:	a8 e1       	ldi	r26, 0x18	; 24
     f98:	b0 e0       	ldi	r27, 0x00	; 0
     f9a:	e0 ed       	ldi	r30, 0xD0	; 208
     f9c:	f7 e0       	ldi	r31, 0x07	; 7
     f9e:	92 c3       	rjmp	.+1828   	; 0x16c4 <__prologue_saves__+0x10>
     fa0:	69 83       	std	Y+1, r22	; 0x01
     fa2:	7a 83       	std	Y+2, r23	; 0x02
     fa4:	8b 83       	std	Y+3, r24	; 0x03
     fa6:	9c 83       	std	Y+4, r25	; 0x04
     fa8:	2d 83       	std	Y+5, r18	; 0x05
     faa:	3e 83       	std	Y+6, r19	; 0x06
     fac:	4f 83       	std	Y+7, r20	; 0x07
     fae:	58 87       	std	Y+8, r21	; 0x08
     fb0:	8e 01       	movw	r16, r28
     fb2:	07 5f       	subi	r16, 0xF7	; 247
     fb4:	1f 4f       	sbci	r17, 0xFF	; 255
     fb6:	ce 01       	movw	r24, r28
     fb8:	01 96       	adiw	r24, 0x01	; 1
     fba:	b8 01       	movw	r22, r16
     fbc:	92 d2       	rcall	.+1316   	; 0x14e2 <__unpack_f>
     fbe:	81 e1       	ldi	r24, 0x11	; 17
     fc0:	e8 2e       	mov	r14, r24
     fc2:	f1 2c       	mov	r15, r1
     fc4:	ec 0e       	add	r14, r28
     fc6:	fd 1e       	adc	r15, r29
     fc8:	ce 01       	movw	r24, r28
     fca:	05 96       	adiw	r24, 0x05	; 5
     fcc:	b7 01       	movw	r22, r14
     fce:	89 d2       	rcall	.+1298   	; 0x14e2 <__unpack_f>
     fd0:	99 85       	ldd	r25, Y+9	; 0x09
     fd2:	92 30       	cpi	r25, 0x02	; 2
     fd4:	08 f4       	brcc	.+2      	; 0xfd8 <__divsf3+0x42>
     fd6:	83 c0       	rjmp	.+262    	; 0x10de <__divsf3+0x148>
     fd8:	89 89       	ldd	r24, Y+17	; 0x11
     fda:	82 30       	cpi	r24, 0x02	; 2
     fdc:	08 f4       	brcc	.+2      	; 0xfe0 <__divsf3+0x4a>
     fde:	7b c0       	rjmp	.+246    	; 0x10d6 <__divsf3+0x140>
     fe0:	2a 85       	ldd	r18, Y+10	; 0x0a
     fe2:	3a 89       	ldd	r19, Y+18	; 0x12
     fe4:	23 27       	eor	r18, r19
     fe6:	2a 87       	std	Y+10, r18	; 0x0a
     fe8:	94 30       	cpi	r25, 0x04	; 4
     fea:	11 f0       	breq	.+4      	; 0xff0 <__divsf3+0x5a>
     fec:	92 30       	cpi	r25, 0x02	; 2
     fee:	21 f4       	brne	.+8      	; 0xff8 <__divsf3+0x62>
     ff0:	98 17       	cp	r25, r24
     ff2:	09 f0       	breq	.+2      	; 0xff6 <__divsf3+0x60>
     ff4:	6c c0       	rjmp	.+216    	; 0x10ce <__divsf3+0x138>
     ff6:	71 c0       	rjmp	.+226    	; 0x10da <__divsf3+0x144>
     ff8:	84 30       	cpi	r24, 0x04	; 4
     ffa:	39 f4       	brne	.+14     	; 0x100a <__divsf3+0x74>
     ffc:	1d 86       	std	Y+13, r1	; 0x0d
     ffe:	1e 86       	std	Y+14, r1	; 0x0e
    1000:	1f 86       	std	Y+15, r1	; 0x0f
    1002:	18 8a       	std	Y+16, r1	; 0x10
    1004:	1c 86       	std	Y+12, r1	; 0x0c
    1006:	1b 86       	std	Y+11, r1	; 0x0b
    1008:	6a c0       	rjmp	.+212    	; 0x10de <__divsf3+0x148>
    100a:	82 30       	cpi	r24, 0x02	; 2
    100c:	19 f4       	brne	.+6      	; 0x1014 <__divsf3+0x7e>
    100e:	84 e0       	ldi	r24, 0x04	; 4
    1010:	89 87       	std	Y+9, r24	; 0x09
    1012:	65 c0       	rjmp	.+202    	; 0x10de <__divsf3+0x148>
    1014:	8b 85       	ldd	r24, Y+11	; 0x0b
    1016:	9c 85       	ldd	r25, Y+12	; 0x0c
    1018:	2b 89       	ldd	r18, Y+19	; 0x13
    101a:	3c 89       	ldd	r19, Y+20	; 0x14
    101c:	82 1b       	sub	r24, r18
    101e:	93 0b       	sbc	r25, r19
    1020:	9c 87       	std	Y+12, r25	; 0x0c
    1022:	8b 87       	std	Y+11, r24	; 0x0b
    1024:	2d 85       	ldd	r18, Y+13	; 0x0d
    1026:	3e 85       	ldd	r19, Y+14	; 0x0e
    1028:	4f 85       	ldd	r20, Y+15	; 0x0f
    102a:	58 89       	ldd	r21, Y+16	; 0x10
    102c:	ed 88       	ldd	r14, Y+21	; 0x15
    102e:	fe 88       	ldd	r15, Y+22	; 0x16
    1030:	0f 89       	ldd	r16, Y+23	; 0x17
    1032:	18 8d       	ldd	r17, Y+24	; 0x18
    1034:	2e 15       	cp	r18, r14
    1036:	3f 05       	cpc	r19, r15
    1038:	40 07       	cpc	r20, r16
    103a:	51 07       	cpc	r21, r17
    103c:	38 f4       	brcc	.+14     	; 0x104c <__divsf3+0xb6>
    103e:	22 0f       	add	r18, r18
    1040:	33 1f       	adc	r19, r19
    1042:	44 1f       	adc	r20, r20
    1044:	55 1f       	adc	r21, r21
    1046:	01 97       	sbiw	r24, 0x01	; 1
    1048:	9c 87       	std	Y+12, r25	; 0x0c
    104a:	8b 87       	std	Y+11, r24	; 0x0b
    104c:	6f e1       	ldi	r22, 0x1F	; 31
    104e:	70 e0       	ldi	r23, 0x00	; 0
    1050:	a1 2c       	mov	r10, r1
    1052:	b1 2c       	mov	r11, r1
    1054:	c1 2c       	mov	r12, r1
    1056:	a0 e4       	ldi	r26, 0x40	; 64
    1058:	da 2e       	mov	r13, r26
    105a:	80 e0       	ldi	r24, 0x00	; 0
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	dc 01       	movw	r26, r24
    1060:	2e 15       	cp	r18, r14
    1062:	3f 05       	cpc	r19, r15
    1064:	40 07       	cpc	r20, r16
    1066:	51 07       	cpc	r21, r17
    1068:	40 f0       	brcs	.+16     	; 0x107a <__divsf3+0xe4>
    106a:	8a 29       	or	r24, r10
    106c:	9b 29       	or	r25, r11
    106e:	ac 29       	or	r26, r12
    1070:	bd 29       	or	r27, r13
    1072:	2e 19       	sub	r18, r14
    1074:	3f 09       	sbc	r19, r15
    1076:	40 0b       	sbc	r20, r16
    1078:	51 0b       	sbc	r21, r17
    107a:	d6 94       	lsr	r13
    107c:	c7 94       	ror	r12
    107e:	b7 94       	ror	r11
    1080:	a7 94       	ror	r10
    1082:	22 0f       	add	r18, r18
    1084:	33 1f       	adc	r19, r19
    1086:	44 1f       	adc	r20, r20
    1088:	55 1f       	adc	r21, r21
    108a:	61 50       	subi	r22, 0x01	; 1
    108c:	70 40       	sbci	r23, 0x00	; 0
    108e:	41 f7       	brne	.-48     	; 0x1060 <__divsf3+0xca>
    1090:	6f e7       	ldi	r22, 0x7F	; 127
    1092:	e6 2e       	mov	r14, r22
    1094:	f1 2c       	mov	r15, r1
    1096:	01 2d       	mov	r16, r1
    1098:	11 2d       	mov	r17, r1
    109a:	e8 22       	and	r14, r24
    109c:	f9 22       	and	r15, r25
    109e:	0a 23       	and	r16, r26
    10a0:	1b 23       	and	r17, r27
    10a2:	60 e4       	ldi	r22, 0x40	; 64
    10a4:	e6 16       	cp	r14, r22
    10a6:	f1 04       	cpc	r15, r1
    10a8:	01 05       	cpc	r16, r1
    10aa:	11 05       	cpc	r17, r1
    10ac:	61 f4       	brne	.+24     	; 0x10c6 <__divsf3+0x130>
    10ae:	87 fd       	sbrc	r24, 7
    10b0:	0a c0       	rjmp	.+20     	; 0x10c6 <__divsf3+0x130>
    10b2:	21 15       	cp	r18, r1
    10b4:	31 05       	cpc	r19, r1
    10b6:	41 05       	cpc	r20, r1
    10b8:	51 05       	cpc	r21, r1
    10ba:	29 f0       	breq	.+10     	; 0x10c6 <__divsf3+0x130>
    10bc:	80 5c       	subi	r24, 0xC0	; 192
    10be:	9f 4f       	sbci	r25, 0xFF	; 255
    10c0:	af 4f       	sbci	r26, 0xFF	; 255
    10c2:	bf 4f       	sbci	r27, 0xFF	; 255
    10c4:	80 78       	andi	r24, 0x80	; 128
    10c6:	8d 87       	std	Y+13, r24	; 0x0d
    10c8:	9e 87       	std	Y+14, r25	; 0x0e
    10ca:	af 87       	std	Y+15, r26	; 0x0f
    10cc:	b8 8b       	std	Y+16, r27	; 0x10
    10ce:	8e 01       	movw	r16, r28
    10d0:	07 5f       	subi	r16, 0xF7	; 247
    10d2:	1f 4f       	sbci	r17, 0xFF	; 255
    10d4:	04 c0       	rjmp	.+8      	; 0x10de <__divsf3+0x148>
    10d6:	87 01       	movw	r16, r14
    10d8:	02 c0       	rjmp	.+4      	; 0x10de <__divsf3+0x148>
    10da:	0b e9       	ldi	r16, 0x9B	; 155
    10dc:	10 e0       	ldi	r17, 0x00	; 0
    10de:	c8 01       	movw	r24, r16
    10e0:	33 d1       	rcall	.+614    	; 0x1348 <__pack_f>
    10e2:	68 96       	adiw	r28, 0x18	; 24
    10e4:	ea e0       	ldi	r30, 0x0A	; 10
    10e6:	0a c3       	rjmp	.+1556   	; 0x16fc <__epilogue_restores__+0x10>

000010e8 <__lesf2>:
    10e8:	a8 e1       	ldi	r26, 0x18	; 24
    10ea:	b0 e0       	ldi	r27, 0x00	; 0
    10ec:	e9 e7       	ldi	r30, 0x79	; 121
    10ee:	f8 e0       	ldi	r31, 0x08	; 8
    10f0:	ed c2       	rjmp	.+1498   	; 0x16cc <__prologue_saves__+0x18>
    10f2:	69 83       	std	Y+1, r22	; 0x01
    10f4:	7a 83       	std	Y+2, r23	; 0x02
    10f6:	8b 83       	std	Y+3, r24	; 0x03
    10f8:	9c 83       	std	Y+4, r25	; 0x04
    10fa:	2d 83       	std	Y+5, r18	; 0x05
    10fc:	3e 83       	std	Y+6, r19	; 0x06
    10fe:	4f 83       	std	Y+7, r20	; 0x07
    1100:	58 87       	std	Y+8, r21	; 0x08
    1102:	8e 01       	movw	r16, r28
    1104:	07 5f       	subi	r16, 0xF7	; 247
    1106:	1f 4f       	sbci	r17, 0xFF	; 255
    1108:	ce 01       	movw	r24, r28
    110a:	01 96       	adiw	r24, 0x01	; 1
    110c:	b8 01       	movw	r22, r16
    110e:	e9 d1       	rcall	.+978    	; 0x14e2 <__unpack_f>
    1110:	81 e1       	ldi	r24, 0x11	; 17
    1112:	e8 2e       	mov	r14, r24
    1114:	f1 2c       	mov	r15, r1
    1116:	ec 0e       	add	r14, r28
    1118:	fd 1e       	adc	r15, r29
    111a:	ce 01       	movw	r24, r28
    111c:	05 96       	adiw	r24, 0x05	; 5
    111e:	b7 01       	movw	r22, r14
    1120:	e0 d1       	rcall	.+960    	; 0x14e2 <__unpack_f>
    1122:	89 85       	ldd	r24, Y+9	; 0x09
    1124:	82 30       	cpi	r24, 0x02	; 2
    1126:	38 f0       	brcs	.+14     	; 0x1136 <__lesf2+0x4e>
    1128:	89 89       	ldd	r24, Y+17	; 0x11
    112a:	82 30       	cpi	r24, 0x02	; 2
    112c:	20 f0       	brcs	.+8      	; 0x1136 <__lesf2+0x4e>
    112e:	c8 01       	movw	r24, r16
    1130:	b7 01       	movw	r22, r14
    1132:	40 d2       	rcall	.+1152   	; 0x15b4 <__fpcmp_parts_f>
    1134:	01 c0       	rjmp	.+2      	; 0x1138 <__lesf2+0x50>
    1136:	81 e0       	ldi	r24, 0x01	; 1
    1138:	68 96       	adiw	r28, 0x18	; 24
    113a:	e6 e0       	ldi	r30, 0x06	; 6
    113c:	e3 c2       	rjmp	.+1478   	; 0x1704 <__epilogue_restores__+0x18>

0000113e <__floatsisf>:
    113e:	a8 e0       	ldi	r26, 0x08	; 8
    1140:	b0 e0       	ldi	r27, 0x00	; 0
    1142:	e4 ea       	ldi	r30, 0xA4	; 164
    1144:	f8 e0       	ldi	r31, 0x08	; 8
    1146:	c2 c2       	rjmp	.+1412   	; 0x16cc <__prologue_saves__+0x18>
    1148:	7b 01       	movw	r14, r22
    114a:	8c 01       	movw	r16, r24
    114c:	83 e0       	ldi	r24, 0x03	; 3
    114e:	89 83       	std	Y+1, r24	; 0x01
    1150:	d8 01       	movw	r26, r16
    1152:	c7 01       	movw	r24, r14
    1154:	88 27       	eor	r24, r24
    1156:	b7 fd       	sbrc	r27, 7
    1158:	83 95       	inc	r24
    115a:	99 27       	eor	r25, r25
    115c:	aa 27       	eor	r26, r26
    115e:	bb 27       	eor	r27, r27
    1160:	28 2f       	mov	r18, r24
    1162:	8a 83       	std	Y+2, r24	; 0x02
    1164:	e1 14       	cp	r14, r1
    1166:	f1 04       	cpc	r15, r1
    1168:	01 05       	cpc	r16, r1
    116a:	11 05       	cpc	r17, r1
    116c:	19 f4       	brne	.+6      	; 0x1174 <__floatsisf+0x36>
    116e:	82 e0       	ldi	r24, 0x02	; 2
    1170:	89 83       	std	Y+1, r24	; 0x01
    1172:	36 c0       	rjmp	.+108    	; 0x11e0 <__floatsisf+0xa2>
    1174:	8e e1       	ldi	r24, 0x1E	; 30
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	9c 83       	std	Y+4, r25	; 0x04
    117a:	8b 83       	std	Y+3, r24	; 0x03
    117c:	22 23       	and	r18, r18
    117e:	89 f0       	breq	.+34     	; 0x11a2 <__floatsisf+0x64>
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	e8 16       	cp	r14, r24
    1184:	80 e0       	ldi	r24, 0x00	; 0
    1186:	f8 06       	cpc	r15, r24
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	08 07       	cpc	r16, r24
    118c:	80 e8       	ldi	r24, 0x80	; 128
    118e:	18 07       	cpc	r17, r24
    1190:	59 f1       	breq	.+86     	; 0x11e8 <__floatsisf+0xaa>
    1192:	10 95       	com	r17
    1194:	00 95       	com	r16
    1196:	f0 94       	com	r15
    1198:	e0 94       	com	r14
    119a:	e1 1c       	adc	r14, r1
    119c:	f1 1c       	adc	r15, r1
    119e:	01 1d       	adc	r16, r1
    11a0:	11 1d       	adc	r17, r1
    11a2:	ed 82       	std	Y+5, r14	; 0x05
    11a4:	fe 82       	std	Y+6, r15	; 0x06
    11a6:	0f 83       	std	Y+7, r16	; 0x07
    11a8:	18 87       	std	Y+8, r17	; 0x08
    11aa:	c8 01       	movw	r24, r16
    11ac:	b7 01       	movw	r22, r14
    11ae:	72 d0       	rcall	.+228    	; 0x1294 <__clzsi2>
    11b0:	9c 01       	movw	r18, r24
    11b2:	21 50       	subi	r18, 0x01	; 1
    11b4:	30 40       	sbci	r19, 0x00	; 0
    11b6:	12 16       	cp	r1, r18
    11b8:	13 06       	cpc	r1, r19
    11ba:	94 f4       	brge	.+36     	; 0x11e0 <__floatsisf+0xa2>
    11bc:	02 2e       	mov	r0, r18
    11be:	04 c0       	rjmp	.+8      	; 0x11c8 <__floatsisf+0x8a>
    11c0:	ee 0c       	add	r14, r14
    11c2:	ff 1c       	adc	r15, r15
    11c4:	00 1f       	adc	r16, r16
    11c6:	11 1f       	adc	r17, r17
    11c8:	0a 94       	dec	r0
    11ca:	d2 f7       	brpl	.-12     	; 0x11c0 <__floatsisf+0x82>
    11cc:	ed 82       	std	Y+5, r14	; 0x05
    11ce:	fe 82       	std	Y+6, r15	; 0x06
    11d0:	0f 83       	std	Y+7, r16	; 0x07
    11d2:	18 87       	std	Y+8, r17	; 0x08
    11d4:	8e e1       	ldi	r24, 0x1E	; 30
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	82 1b       	sub	r24, r18
    11da:	93 0b       	sbc	r25, r19
    11dc:	9c 83       	std	Y+4, r25	; 0x04
    11de:	8b 83       	std	Y+3, r24	; 0x03
    11e0:	ce 01       	movw	r24, r28
    11e2:	01 96       	adiw	r24, 0x01	; 1
    11e4:	b1 d0       	rcall	.+354    	; 0x1348 <__pack_f>
    11e6:	04 c0       	rjmp	.+8      	; 0x11f0 <__floatsisf+0xb2>
    11e8:	60 e0       	ldi	r22, 0x00	; 0
    11ea:	70 e0       	ldi	r23, 0x00	; 0
    11ec:	80 e0       	ldi	r24, 0x00	; 0
    11ee:	9f ec       	ldi	r25, 0xCF	; 207
    11f0:	28 96       	adiw	r28, 0x08	; 8
    11f2:	e6 e0       	ldi	r30, 0x06	; 6
    11f4:	87 c2       	rjmp	.+1294   	; 0x1704 <__epilogue_restores__+0x18>

000011f6 <__fixsfsi>:
    11f6:	ac e0       	ldi	r26, 0x0C	; 12
    11f8:	b0 e0       	ldi	r27, 0x00	; 0
    11fa:	e0 e0       	ldi	r30, 0x00	; 0
    11fc:	f9 e0       	ldi	r31, 0x09	; 9
    11fe:	6a c2       	rjmp	.+1236   	; 0x16d4 <__prologue_saves__+0x20>
    1200:	69 83       	std	Y+1, r22	; 0x01
    1202:	7a 83       	std	Y+2, r23	; 0x02
    1204:	8b 83       	std	Y+3, r24	; 0x03
    1206:	9c 83       	std	Y+4, r25	; 0x04
    1208:	ce 01       	movw	r24, r28
    120a:	01 96       	adiw	r24, 0x01	; 1
    120c:	be 01       	movw	r22, r28
    120e:	6b 5f       	subi	r22, 0xFB	; 251
    1210:	7f 4f       	sbci	r23, 0xFF	; 255
    1212:	67 d1       	rcall	.+718    	; 0x14e2 <__unpack_f>
    1214:	8d 81       	ldd	r24, Y+5	; 0x05
    1216:	82 30       	cpi	r24, 0x02	; 2
    1218:	81 f1       	breq	.+96     	; 0x127a <__fixsfsi+0x84>
    121a:	82 30       	cpi	r24, 0x02	; 2
    121c:	70 f1       	brcs	.+92     	; 0x127a <__fixsfsi+0x84>
    121e:	84 30       	cpi	r24, 0x04	; 4
    1220:	21 f4       	brne	.+8      	; 0x122a <__fixsfsi+0x34>
    1222:	8e 81       	ldd	r24, Y+6	; 0x06
    1224:	88 23       	and	r24, r24
    1226:	69 f1       	breq	.+90     	; 0x1282 <__fixsfsi+0x8c>
    1228:	0a c0       	rjmp	.+20     	; 0x123e <__fixsfsi+0x48>
    122a:	2f 81       	ldd	r18, Y+7	; 0x07
    122c:	38 85       	ldd	r19, Y+8	; 0x08
    122e:	37 fd       	sbrc	r19, 7
    1230:	24 c0       	rjmp	.+72     	; 0x127a <__fixsfsi+0x84>
    1232:	6e 81       	ldd	r22, Y+6	; 0x06
    1234:	2f 31       	cpi	r18, 0x1F	; 31
    1236:	31 05       	cpc	r19, r1
    1238:	3c f0       	brlt	.+14     	; 0x1248 <__fixsfsi+0x52>
    123a:	66 23       	and	r22, r22
    123c:	11 f1       	breq	.+68     	; 0x1282 <__fixsfsi+0x8c>
    123e:	20 e0       	ldi	r18, 0x00	; 0
    1240:	30 e0       	ldi	r19, 0x00	; 0
    1242:	40 e0       	ldi	r20, 0x00	; 0
    1244:	50 e8       	ldi	r21, 0x80	; 128
    1246:	21 c0       	rjmp	.+66     	; 0x128a <__fixsfsi+0x94>
    1248:	8e e1       	ldi	r24, 0x1E	; 30
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	82 1b       	sub	r24, r18
    124e:	93 0b       	sbc	r25, r19
    1250:	29 85       	ldd	r18, Y+9	; 0x09
    1252:	3a 85       	ldd	r19, Y+10	; 0x0a
    1254:	4b 85       	ldd	r20, Y+11	; 0x0b
    1256:	5c 85       	ldd	r21, Y+12	; 0x0c
    1258:	04 c0       	rjmp	.+8      	; 0x1262 <__fixsfsi+0x6c>
    125a:	56 95       	lsr	r21
    125c:	47 95       	ror	r20
    125e:	37 95       	ror	r19
    1260:	27 95       	ror	r18
    1262:	8a 95       	dec	r24
    1264:	d2 f7       	brpl	.-12     	; 0x125a <__fixsfsi+0x64>
    1266:	66 23       	and	r22, r22
    1268:	81 f0       	breq	.+32     	; 0x128a <__fixsfsi+0x94>
    126a:	50 95       	com	r21
    126c:	40 95       	com	r20
    126e:	30 95       	com	r19
    1270:	21 95       	neg	r18
    1272:	3f 4f       	sbci	r19, 0xFF	; 255
    1274:	4f 4f       	sbci	r20, 0xFF	; 255
    1276:	5f 4f       	sbci	r21, 0xFF	; 255
    1278:	08 c0       	rjmp	.+16     	; 0x128a <__fixsfsi+0x94>
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	a9 01       	movw	r20, r18
    1280:	04 c0       	rjmp	.+8      	; 0x128a <__fixsfsi+0x94>
    1282:	2f ef       	ldi	r18, 0xFF	; 255
    1284:	3f ef       	ldi	r19, 0xFF	; 255
    1286:	4f ef       	ldi	r20, 0xFF	; 255
    1288:	5f e7       	ldi	r21, 0x7F	; 127
    128a:	b9 01       	movw	r22, r18
    128c:	ca 01       	movw	r24, r20
    128e:	2c 96       	adiw	r28, 0x0c	; 12
    1290:	e2 e0       	ldi	r30, 0x02	; 2
    1292:	3c c2       	rjmp	.+1144   	; 0x170c <__epilogue_restores__+0x20>

00001294 <__clzsi2>:
    1294:	af 92       	push	r10
    1296:	bf 92       	push	r11
    1298:	cf 92       	push	r12
    129a:	df 92       	push	r13
    129c:	ef 92       	push	r14
    129e:	ff 92       	push	r15
    12a0:	0f 93       	push	r16
    12a2:	1f 93       	push	r17
    12a4:	7b 01       	movw	r14, r22
    12a6:	8c 01       	movw	r16, r24
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	e8 16       	cp	r14, r24
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	f8 06       	cpc	r15, r24
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	08 07       	cpc	r16, r24
    12b4:	80 e0       	ldi	r24, 0x00	; 0
    12b6:	18 07       	cpc	r17, r24
    12b8:	58 f4       	brcc	.+22     	; 0x12d0 <__clzsi2+0x3c>
    12ba:	ef ef       	ldi	r30, 0xFF	; 255
    12bc:	ee 16       	cp	r14, r30
    12be:	f1 04       	cpc	r15, r1
    12c0:	01 05       	cpc	r16, r1
    12c2:	11 05       	cpc	r17, r1
    12c4:	09 f0       	breq	.+2      	; 0x12c8 <__clzsi2+0x34>
    12c6:	90 f4       	brcc	.+36     	; 0x12ec <__clzsi2+0x58>
    12c8:	80 e0       	ldi	r24, 0x00	; 0
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	dc 01       	movw	r26, r24
    12ce:	17 c0       	rjmp	.+46     	; 0x12fe <__clzsi2+0x6a>
    12d0:	f0 e0       	ldi	r31, 0x00	; 0
    12d2:	ef 16       	cp	r14, r31
    12d4:	f0 e0       	ldi	r31, 0x00	; 0
    12d6:	ff 06       	cpc	r15, r31
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	0f 07       	cpc	r16, r31
    12dc:	f1 e0       	ldi	r31, 0x01	; 1
    12de:	1f 07       	cpc	r17, r31
    12e0:	50 f4       	brcc	.+20     	; 0x12f6 <__clzsi2+0x62>
    12e2:	80 e1       	ldi	r24, 0x10	; 16
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	a0 e0       	ldi	r26, 0x00	; 0
    12e8:	b0 e0       	ldi	r27, 0x00	; 0
    12ea:	09 c0       	rjmp	.+18     	; 0x12fe <__clzsi2+0x6a>
    12ec:	88 e0       	ldi	r24, 0x08	; 8
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	a0 e0       	ldi	r26, 0x00	; 0
    12f2:	b0 e0       	ldi	r27, 0x00	; 0
    12f4:	04 c0       	rjmp	.+8      	; 0x12fe <__clzsi2+0x6a>
    12f6:	88 e1       	ldi	r24, 0x18	; 24
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	a0 e0       	ldi	r26, 0x00	; 0
    12fc:	b0 e0       	ldi	r27, 0x00	; 0
    12fe:	20 e2       	ldi	r18, 0x20	; 32
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	40 e0       	ldi	r20, 0x00	; 0
    1304:	50 e0       	ldi	r21, 0x00	; 0
    1306:	28 1b       	sub	r18, r24
    1308:	39 0b       	sbc	r19, r25
    130a:	4a 0b       	sbc	r20, r26
    130c:	5b 0b       	sbc	r21, r27
    130e:	57 01       	movw	r10, r14
    1310:	68 01       	movw	r12, r16
    1312:	04 c0       	rjmp	.+8      	; 0x131c <__clzsi2+0x88>
    1314:	d6 94       	lsr	r13
    1316:	c7 94       	ror	r12
    1318:	b7 94       	ror	r11
    131a:	a7 94       	ror	r10
    131c:	8a 95       	dec	r24
    131e:	d2 f7       	brpl	.-12     	; 0x1314 <__clzsi2+0x80>
    1320:	d6 01       	movw	r26, r12
    1322:	c5 01       	movw	r24, r10
    1324:	8d 55       	subi	r24, 0x5D	; 93
    1326:	9f 4f       	sbci	r25, 0xFF	; 255
    1328:	fc 01       	movw	r30, r24
    132a:	80 81       	ld	r24, Z
    132c:	28 1b       	sub	r18, r24
    132e:	31 09       	sbc	r19, r1
    1330:	41 09       	sbc	r20, r1
    1332:	51 09       	sbc	r21, r1
    1334:	c9 01       	movw	r24, r18
    1336:	1f 91       	pop	r17
    1338:	0f 91       	pop	r16
    133a:	ff 90       	pop	r15
    133c:	ef 90       	pop	r14
    133e:	df 90       	pop	r13
    1340:	cf 90       	pop	r12
    1342:	bf 90       	pop	r11
    1344:	af 90       	pop	r10
    1346:	08 95       	ret

00001348 <__pack_f>:
    1348:	ef 92       	push	r14
    134a:	ff 92       	push	r15
    134c:	0f 93       	push	r16
    134e:	1f 93       	push	r17
    1350:	cf 93       	push	r28
    1352:	df 93       	push	r29
    1354:	fc 01       	movw	r30, r24
    1356:	24 81       	ldd	r18, Z+4	; 0x04
    1358:	35 81       	ldd	r19, Z+5	; 0x05
    135a:	46 81       	ldd	r20, Z+6	; 0x06
    135c:	57 81       	ldd	r21, Z+7	; 0x07
    135e:	61 81       	ldd	r22, Z+1	; 0x01
    1360:	80 81       	ld	r24, Z
    1362:	82 30       	cpi	r24, 0x02	; 2
    1364:	20 f4       	brcc	.+8      	; 0x136e <__pack_f+0x26>
    1366:	40 61       	ori	r20, 0x10	; 16
    1368:	ef ef       	ldi	r30, 0xFF	; 255
    136a:	f0 e0       	ldi	r31, 0x00	; 0
    136c:	a3 c0       	rjmp	.+326    	; 0x14b4 <__pack_f+0x16c>
    136e:	84 30       	cpi	r24, 0x04	; 4
    1370:	09 f4       	brne	.+2      	; 0x1374 <__pack_f+0x2c>
    1372:	9b c0       	rjmp	.+310    	; 0x14aa <__pack_f+0x162>
    1374:	82 30       	cpi	r24, 0x02	; 2
    1376:	09 f4       	brne	.+2      	; 0x137a <__pack_f+0x32>
    1378:	92 c0       	rjmp	.+292    	; 0x149e <__pack_f+0x156>
    137a:	21 15       	cp	r18, r1
    137c:	31 05       	cpc	r19, r1
    137e:	41 05       	cpc	r20, r1
    1380:	51 05       	cpc	r21, r1
    1382:	09 f4       	brne	.+2      	; 0x1386 <__pack_f+0x3e>
    1384:	8f c0       	rjmp	.+286    	; 0x14a4 <__pack_f+0x15c>
    1386:	02 80       	ldd	r0, Z+2	; 0x02
    1388:	f3 81       	ldd	r31, Z+3	; 0x03
    138a:	e0 2d       	mov	r30, r0
    138c:	8f ef       	ldi	r24, 0xFF	; 255
    138e:	e2 38       	cpi	r30, 0x82	; 130
    1390:	f8 07       	cpc	r31, r24
    1392:	0c f0       	brlt	.+2      	; 0x1396 <__pack_f+0x4e>
    1394:	5a c0       	rjmp	.+180    	; 0x144a <__pack_f+0x102>
    1396:	c2 e8       	ldi	r28, 0x82	; 130
    1398:	df ef       	ldi	r29, 0xFF	; 255
    139a:	ce 1b       	sub	r28, r30
    139c:	df 0b       	sbc	r29, r31
    139e:	ca 31       	cpi	r28, 0x1A	; 26
    13a0:	d1 05       	cpc	r29, r1
    13a2:	6c f5       	brge	.+90     	; 0x13fe <__pack_f+0xb6>
    13a4:	79 01       	movw	r14, r18
    13a6:	8a 01       	movw	r16, r20
    13a8:	0c 2e       	mov	r0, r28
    13aa:	04 c0       	rjmp	.+8      	; 0x13b4 <__pack_f+0x6c>
    13ac:	16 95       	lsr	r17
    13ae:	07 95       	ror	r16
    13b0:	f7 94       	ror	r15
    13b2:	e7 94       	ror	r14
    13b4:	0a 94       	dec	r0
    13b6:	d2 f7       	brpl	.-12     	; 0x13ac <__pack_f+0x64>
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	a0 e0       	ldi	r26, 0x00	; 0
    13be:	b0 e0       	ldi	r27, 0x00	; 0
    13c0:	0c 2e       	mov	r0, r28
    13c2:	04 c0       	rjmp	.+8      	; 0x13cc <__pack_f+0x84>
    13c4:	88 0f       	add	r24, r24
    13c6:	99 1f       	adc	r25, r25
    13c8:	aa 1f       	adc	r26, r26
    13ca:	bb 1f       	adc	r27, r27
    13cc:	0a 94       	dec	r0
    13ce:	d2 f7       	brpl	.-12     	; 0x13c4 <__pack_f+0x7c>
    13d0:	01 97       	sbiw	r24, 0x01	; 1
    13d2:	a1 09       	sbc	r26, r1
    13d4:	b1 09       	sbc	r27, r1
    13d6:	82 23       	and	r24, r18
    13d8:	93 23       	and	r25, r19
    13da:	a4 23       	and	r26, r20
    13dc:	b5 23       	and	r27, r21
    13de:	21 e0       	ldi	r18, 0x01	; 1
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	40 e0       	ldi	r20, 0x00	; 0
    13e4:	50 e0       	ldi	r21, 0x00	; 0
    13e6:	00 97       	sbiw	r24, 0x00	; 0
    13e8:	a1 05       	cpc	r26, r1
    13ea:	b1 05       	cpc	r27, r1
    13ec:	19 f4       	brne	.+6      	; 0x13f4 <__pack_f+0xac>
    13ee:	20 e0       	ldi	r18, 0x00	; 0
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	a9 01       	movw	r20, r18
    13f4:	2e 29       	or	r18, r14
    13f6:	3f 29       	or	r19, r15
    13f8:	40 2b       	or	r20, r16
    13fa:	51 2b       	or	r21, r17
    13fc:	03 c0       	rjmp	.+6      	; 0x1404 <__pack_f+0xbc>
    13fe:	20 e0       	ldi	r18, 0x00	; 0
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	a9 01       	movw	r20, r18
    1404:	da 01       	movw	r26, r20
    1406:	c9 01       	movw	r24, r18
    1408:	8f 77       	andi	r24, 0x7F	; 127
    140a:	90 70       	andi	r25, 0x00	; 0
    140c:	a0 70       	andi	r26, 0x00	; 0
    140e:	b0 70       	andi	r27, 0x00	; 0
    1410:	80 34       	cpi	r24, 0x40	; 64
    1412:	91 05       	cpc	r25, r1
    1414:	a1 05       	cpc	r26, r1
    1416:	b1 05       	cpc	r27, r1
    1418:	39 f4       	brne	.+14     	; 0x1428 <__pack_f+0xe0>
    141a:	27 ff       	sbrs	r18, 7
    141c:	09 c0       	rjmp	.+18     	; 0x1430 <__pack_f+0xe8>
    141e:	20 5c       	subi	r18, 0xC0	; 192
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	4f 4f       	sbci	r20, 0xFF	; 255
    1424:	5f 4f       	sbci	r21, 0xFF	; 255
    1426:	04 c0       	rjmp	.+8      	; 0x1430 <__pack_f+0xe8>
    1428:	21 5c       	subi	r18, 0xC1	; 193
    142a:	3f 4f       	sbci	r19, 0xFF	; 255
    142c:	4f 4f       	sbci	r20, 0xFF	; 255
    142e:	5f 4f       	sbci	r21, 0xFF	; 255
    1430:	e1 e0       	ldi	r30, 0x01	; 1
    1432:	f0 e0       	ldi	r31, 0x00	; 0
    1434:	20 30       	cpi	r18, 0x00	; 0
    1436:	80 e0       	ldi	r24, 0x00	; 0
    1438:	38 07       	cpc	r19, r24
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	48 07       	cpc	r20, r24
    143e:	80 e4       	ldi	r24, 0x40	; 64
    1440:	58 07       	cpc	r21, r24
    1442:	28 f5       	brcc	.+74     	; 0x148e <__pack_f+0x146>
    1444:	e0 e0       	ldi	r30, 0x00	; 0
    1446:	f0 e0       	ldi	r31, 0x00	; 0
    1448:	22 c0       	rjmp	.+68     	; 0x148e <__pack_f+0x146>
    144a:	e0 38       	cpi	r30, 0x80	; 128
    144c:	f1 05       	cpc	r31, r1
    144e:	6c f5       	brge	.+90     	; 0x14aa <__pack_f+0x162>
    1450:	e1 58       	subi	r30, 0x81	; 129
    1452:	ff 4f       	sbci	r31, 0xFF	; 255
    1454:	da 01       	movw	r26, r20
    1456:	c9 01       	movw	r24, r18
    1458:	8f 77       	andi	r24, 0x7F	; 127
    145a:	90 70       	andi	r25, 0x00	; 0
    145c:	a0 70       	andi	r26, 0x00	; 0
    145e:	b0 70       	andi	r27, 0x00	; 0
    1460:	80 34       	cpi	r24, 0x40	; 64
    1462:	91 05       	cpc	r25, r1
    1464:	a1 05       	cpc	r26, r1
    1466:	b1 05       	cpc	r27, r1
    1468:	39 f4       	brne	.+14     	; 0x1478 <__pack_f+0x130>
    146a:	27 ff       	sbrs	r18, 7
    146c:	09 c0       	rjmp	.+18     	; 0x1480 <__pack_f+0x138>
    146e:	20 5c       	subi	r18, 0xC0	; 192
    1470:	3f 4f       	sbci	r19, 0xFF	; 255
    1472:	4f 4f       	sbci	r20, 0xFF	; 255
    1474:	5f 4f       	sbci	r21, 0xFF	; 255
    1476:	04 c0       	rjmp	.+8      	; 0x1480 <__pack_f+0x138>
    1478:	21 5c       	subi	r18, 0xC1	; 193
    147a:	3f 4f       	sbci	r19, 0xFF	; 255
    147c:	4f 4f       	sbci	r20, 0xFF	; 255
    147e:	5f 4f       	sbci	r21, 0xFF	; 255
    1480:	57 ff       	sbrs	r21, 7
    1482:	05 c0       	rjmp	.+10     	; 0x148e <__pack_f+0x146>
    1484:	56 95       	lsr	r21
    1486:	47 95       	ror	r20
    1488:	37 95       	ror	r19
    148a:	27 95       	ror	r18
    148c:	31 96       	adiw	r30, 0x01	; 1
    148e:	87 e0       	ldi	r24, 0x07	; 7
    1490:	56 95       	lsr	r21
    1492:	47 95       	ror	r20
    1494:	37 95       	ror	r19
    1496:	27 95       	ror	r18
    1498:	8a 95       	dec	r24
    149a:	d1 f7       	brne	.-12     	; 0x1490 <__pack_f+0x148>
    149c:	0b c0       	rjmp	.+22     	; 0x14b4 <__pack_f+0x16c>
    149e:	e0 e0       	ldi	r30, 0x00	; 0
    14a0:	f0 e0       	ldi	r31, 0x00	; 0
    14a2:	05 c0       	rjmp	.+10     	; 0x14ae <__pack_f+0x166>
    14a4:	e0 e0       	ldi	r30, 0x00	; 0
    14a6:	f0 e0       	ldi	r31, 0x00	; 0
    14a8:	05 c0       	rjmp	.+10     	; 0x14b4 <__pack_f+0x16c>
    14aa:	ef ef       	ldi	r30, 0xFF	; 255
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	20 e0       	ldi	r18, 0x00	; 0
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	a9 01       	movw	r20, r18
    14b4:	8e 2f       	mov	r24, r30
    14b6:	87 95       	ror	r24
    14b8:	88 27       	eor	r24, r24
    14ba:	87 95       	ror	r24
    14bc:	94 2f       	mov	r25, r20
    14be:	9f 77       	andi	r25, 0x7F	; 127
    14c0:	67 95       	ror	r22
    14c2:	66 27       	eor	r22, r22
    14c4:	67 95       	ror	r22
    14c6:	e6 95       	lsr	r30
    14c8:	e2 2e       	mov	r14, r18
    14ca:	a9 2f       	mov	r26, r25
    14cc:	a8 2b       	or	r26, r24
    14ce:	fe 2f       	mov	r31, r30
    14d0:	f6 2b       	or	r31, r22
    14d2:	62 2f       	mov	r22, r18
    14d4:	73 2f       	mov	r23, r19
    14d6:	8a 2f       	mov	r24, r26
    14d8:	9f 2f       	mov	r25, r31
    14da:	cd b7       	in	r28, 0x3d	; 61
    14dc:	de b7       	in	r29, 0x3e	; 62
    14de:	e6 e0       	ldi	r30, 0x06	; 6
    14e0:	11 c1       	rjmp	.+546    	; 0x1704 <__epilogue_restores__+0x18>

000014e2 <__unpack_f>:
    14e2:	dc 01       	movw	r26, r24
    14e4:	fb 01       	movw	r30, r22
    14e6:	2c 91       	ld	r18, X
    14e8:	11 96       	adiw	r26, 0x01	; 1
    14ea:	3c 91       	ld	r19, X
    14ec:	11 97       	sbiw	r26, 0x01	; 1
    14ee:	12 96       	adiw	r26, 0x02	; 2
    14f0:	8c 91       	ld	r24, X
    14f2:	12 97       	sbiw	r26, 0x02	; 2
    14f4:	48 2f       	mov	r20, r24
    14f6:	4f 77       	andi	r20, 0x7F	; 127
    14f8:	50 e0       	ldi	r21, 0x00	; 0
    14fa:	98 2f       	mov	r25, r24
    14fc:	99 1f       	adc	r25, r25
    14fe:	99 27       	eor	r25, r25
    1500:	99 1f       	adc	r25, r25
    1502:	13 96       	adiw	r26, 0x03	; 3
    1504:	6c 91       	ld	r22, X
    1506:	13 97       	sbiw	r26, 0x03	; 3
    1508:	86 2f       	mov	r24, r22
    150a:	88 0f       	add	r24, r24
    150c:	89 2b       	or	r24, r25
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	66 1f       	adc	r22, r22
    1512:	66 27       	eor	r22, r22
    1514:	66 1f       	adc	r22, r22
    1516:	61 83       	std	Z+1, r22	; 0x01
    1518:	00 97       	sbiw	r24, 0x00	; 0
    151a:	39 f5       	brne	.+78     	; 0x156a <__unpack_f+0x88>
    151c:	21 15       	cp	r18, r1
    151e:	31 05       	cpc	r19, r1
    1520:	41 05       	cpc	r20, r1
    1522:	51 05       	cpc	r21, r1
    1524:	11 f4       	brne	.+4      	; 0x152a <__unpack_f+0x48>
    1526:	82 e0       	ldi	r24, 0x02	; 2
    1528:	29 c0       	rjmp	.+82     	; 0x157c <__unpack_f+0x9a>
    152a:	82 e8       	ldi	r24, 0x82	; 130
    152c:	9f ef       	ldi	r25, 0xFF	; 255
    152e:	93 83       	std	Z+3, r25	; 0x03
    1530:	82 83       	std	Z+2, r24	; 0x02
    1532:	67 e0       	ldi	r22, 0x07	; 7
    1534:	22 0f       	add	r18, r18
    1536:	33 1f       	adc	r19, r19
    1538:	44 1f       	adc	r20, r20
    153a:	55 1f       	adc	r21, r21
    153c:	6a 95       	dec	r22
    153e:	d1 f7       	brne	.-12     	; 0x1534 <__unpack_f+0x52>
    1540:	83 e0       	ldi	r24, 0x03	; 3
    1542:	80 83       	st	Z, r24
    1544:	09 c0       	rjmp	.+18     	; 0x1558 <__unpack_f+0x76>
    1546:	22 0f       	add	r18, r18
    1548:	33 1f       	adc	r19, r19
    154a:	44 1f       	adc	r20, r20
    154c:	55 1f       	adc	r21, r21
    154e:	82 81       	ldd	r24, Z+2	; 0x02
    1550:	93 81       	ldd	r25, Z+3	; 0x03
    1552:	01 97       	sbiw	r24, 0x01	; 1
    1554:	93 83       	std	Z+3, r25	; 0x03
    1556:	82 83       	std	Z+2, r24	; 0x02
    1558:	20 30       	cpi	r18, 0x00	; 0
    155a:	80 e0       	ldi	r24, 0x00	; 0
    155c:	38 07       	cpc	r19, r24
    155e:	80 e0       	ldi	r24, 0x00	; 0
    1560:	48 07       	cpc	r20, r24
    1562:	80 e4       	ldi	r24, 0x40	; 64
    1564:	58 07       	cpc	r21, r24
    1566:	78 f3       	brcs	.-34     	; 0x1546 <__unpack_f+0x64>
    1568:	20 c0       	rjmp	.+64     	; 0x15aa <__unpack_f+0xc8>
    156a:	8f 3f       	cpi	r24, 0xFF	; 255
    156c:	91 05       	cpc	r25, r1
    156e:	79 f4       	brne	.+30     	; 0x158e <__unpack_f+0xac>
    1570:	21 15       	cp	r18, r1
    1572:	31 05       	cpc	r19, r1
    1574:	41 05       	cpc	r20, r1
    1576:	51 05       	cpc	r21, r1
    1578:	19 f4       	brne	.+6      	; 0x1580 <__unpack_f+0x9e>
    157a:	84 e0       	ldi	r24, 0x04	; 4
    157c:	80 83       	st	Z, r24
    157e:	08 95       	ret
    1580:	44 ff       	sbrs	r20, 4
    1582:	03 c0       	rjmp	.+6      	; 0x158a <__unpack_f+0xa8>
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	80 83       	st	Z, r24
    1588:	10 c0       	rjmp	.+32     	; 0x15aa <__unpack_f+0xc8>
    158a:	10 82       	st	Z, r1
    158c:	0e c0       	rjmp	.+28     	; 0x15aa <__unpack_f+0xc8>
    158e:	8f 57       	subi	r24, 0x7F	; 127
    1590:	90 40       	sbci	r25, 0x00	; 0
    1592:	93 83       	std	Z+3, r25	; 0x03
    1594:	82 83       	std	Z+2, r24	; 0x02
    1596:	83 e0       	ldi	r24, 0x03	; 3
    1598:	80 83       	st	Z, r24
    159a:	87 e0       	ldi	r24, 0x07	; 7
    159c:	22 0f       	add	r18, r18
    159e:	33 1f       	adc	r19, r19
    15a0:	44 1f       	adc	r20, r20
    15a2:	55 1f       	adc	r21, r21
    15a4:	8a 95       	dec	r24
    15a6:	d1 f7       	brne	.-12     	; 0x159c <__unpack_f+0xba>
    15a8:	50 64       	ori	r21, 0x40	; 64
    15aa:	24 83       	std	Z+4, r18	; 0x04
    15ac:	35 83       	std	Z+5, r19	; 0x05
    15ae:	46 83       	std	Z+6, r20	; 0x06
    15b0:	57 83       	std	Z+7, r21	; 0x07
    15b2:	08 95       	ret

000015b4 <__fpcmp_parts_f>:
    15b4:	fc 01       	movw	r30, r24
    15b6:	db 01       	movw	r26, r22
    15b8:	90 81       	ld	r25, Z
    15ba:	92 30       	cpi	r25, 0x02	; 2
    15bc:	08 f4       	brcc	.+2      	; 0x15c0 <__fpcmp_parts_f+0xc>
    15be:	49 c0       	rjmp	.+146    	; 0x1652 <__fpcmp_parts_f+0x9e>
    15c0:	8c 91       	ld	r24, X
    15c2:	82 30       	cpi	r24, 0x02	; 2
    15c4:	08 f4       	brcc	.+2      	; 0x15c8 <__fpcmp_parts_f+0x14>
    15c6:	45 c0       	rjmp	.+138    	; 0x1652 <__fpcmp_parts_f+0x9e>
    15c8:	94 30       	cpi	r25, 0x04	; 4
    15ca:	51 f4       	brne	.+20     	; 0x15e0 <__fpcmp_parts_f+0x2c>
    15cc:	61 81       	ldd	r22, Z+1	; 0x01
    15ce:	84 30       	cpi	r24, 0x04	; 4
    15d0:	b1 f5       	brne	.+108    	; 0x163e <__fpcmp_parts_f+0x8a>
    15d2:	11 96       	adiw	r26, 0x01	; 1
    15d4:	2c 91       	ld	r18, X
    15d6:	11 97       	sbiw	r26, 0x01	; 1
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	26 1b       	sub	r18, r22
    15dc:	31 09       	sbc	r19, r1
    15de:	41 c0       	rjmp	.+130    	; 0x1662 <__fpcmp_parts_f+0xae>
    15e0:	84 30       	cpi	r24, 0x04	; 4
    15e2:	21 f0       	breq	.+8      	; 0x15ec <__fpcmp_parts_f+0x38>
    15e4:	92 30       	cpi	r25, 0x02	; 2
    15e6:	41 f4       	brne	.+16     	; 0x15f8 <__fpcmp_parts_f+0x44>
    15e8:	82 30       	cpi	r24, 0x02	; 2
    15ea:	b1 f1       	breq	.+108    	; 0x1658 <__fpcmp_parts_f+0xa4>
    15ec:	11 96       	adiw	r26, 0x01	; 1
    15ee:	8c 91       	ld	r24, X
    15f0:	11 97       	sbiw	r26, 0x01	; 1
    15f2:	88 23       	and	r24, r24
    15f4:	a1 f1       	breq	.+104    	; 0x165e <__fpcmp_parts_f+0xaa>
    15f6:	2d c0       	rjmp	.+90     	; 0x1652 <__fpcmp_parts_f+0x9e>
    15f8:	61 81       	ldd	r22, Z+1	; 0x01
    15fa:	82 30       	cpi	r24, 0x02	; 2
    15fc:	01 f1       	breq	.+64     	; 0x163e <__fpcmp_parts_f+0x8a>
    15fe:	11 96       	adiw	r26, 0x01	; 1
    1600:	8c 91       	ld	r24, X
    1602:	11 97       	sbiw	r26, 0x01	; 1
    1604:	68 17       	cp	r22, r24
    1606:	d9 f4       	brne	.+54     	; 0x163e <__fpcmp_parts_f+0x8a>
    1608:	22 81       	ldd	r18, Z+2	; 0x02
    160a:	33 81       	ldd	r19, Z+3	; 0x03
    160c:	12 96       	adiw	r26, 0x02	; 2
    160e:	8d 91       	ld	r24, X+
    1610:	9c 91       	ld	r25, X
    1612:	13 97       	sbiw	r26, 0x03	; 3
    1614:	82 17       	cp	r24, r18
    1616:	93 07       	cpc	r25, r19
    1618:	94 f0       	brlt	.+36     	; 0x163e <__fpcmp_parts_f+0x8a>
    161a:	28 17       	cp	r18, r24
    161c:	39 07       	cpc	r19, r25
    161e:	bc f0       	brlt	.+46     	; 0x164e <__fpcmp_parts_f+0x9a>
    1620:	24 81       	ldd	r18, Z+4	; 0x04
    1622:	35 81       	ldd	r19, Z+5	; 0x05
    1624:	46 81       	ldd	r20, Z+6	; 0x06
    1626:	57 81       	ldd	r21, Z+7	; 0x07
    1628:	14 96       	adiw	r26, 0x04	; 4
    162a:	8d 91       	ld	r24, X+
    162c:	9d 91       	ld	r25, X+
    162e:	0d 90       	ld	r0, X+
    1630:	bc 91       	ld	r27, X
    1632:	a0 2d       	mov	r26, r0
    1634:	82 17       	cp	r24, r18
    1636:	93 07       	cpc	r25, r19
    1638:	a4 07       	cpc	r26, r20
    163a:	b5 07       	cpc	r27, r21
    163c:	18 f4       	brcc	.+6      	; 0x1644 <__fpcmp_parts_f+0x90>
    163e:	66 23       	and	r22, r22
    1640:	41 f0       	breq	.+16     	; 0x1652 <__fpcmp_parts_f+0x9e>
    1642:	0d c0       	rjmp	.+26     	; 0x165e <__fpcmp_parts_f+0xaa>
    1644:	28 17       	cp	r18, r24
    1646:	39 07       	cpc	r19, r25
    1648:	4a 07       	cpc	r20, r26
    164a:	5b 07       	cpc	r21, r27
    164c:	28 f4       	brcc	.+10     	; 0x1658 <__fpcmp_parts_f+0xa4>
    164e:	66 23       	and	r22, r22
    1650:	31 f0       	breq	.+12     	; 0x165e <__fpcmp_parts_f+0xaa>
    1652:	21 e0       	ldi	r18, 0x01	; 1
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	05 c0       	rjmp	.+10     	; 0x1662 <__fpcmp_parts_f+0xae>
    1658:	20 e0       	ldi	r18, 0x00	; 0
    165a:	30 e0       	ldi	r19, 0x00	; 0
    165c:	02 c0       	rjmp	.+4      	; 0x1662 <__fpcmp_parts_f+0xae>
    165e:	2f ef       	ldi	r18, 0xFF	; 255
    1660:	3f ef       	ldi	r19, 0xFF	; 255
    1662:	c9 01       	movw	r24, r18
    1664:	08 95       	ret

00001666 <__divmodhi4>:
    1666:	97 fb       	bst	r25, 7
    1668:	09 2e       	mov	r0, r25
    166a:	07 26       	eor	r0, r23
    166c:	0a d0       	rcall	.+20     	; 0x1682 <__divmodhi4_neg1>
    166e:	77 fd       	sbrc	r23, 7
    1670:	04 d0       	rcall	.+8      	; 0x167a <__divmodhi4_neg2>
    1672:	0c d0       	rcall	.+24     	; 0x168c <__udivmodhi4>
    1674:	06 d0       	rcall	.+12     	; 0x1682 <__divmodhi4_neg1>
    1676:	00 20       	and	r0, r0
    1678:	1a f4       	brpl	.+6      	; 0x1680 <__divmodhi4_exit>

0000167a <__divmodhi4_neg2>:
    167a:	70 95       	com	r23
    167c:	61 95       	neg	r22
    167e:	7f 4f       	sbci	r23, 0xFF	; 255

00001680 <__divmodhi4_exit>:
    1680:	08 95       	ret

00001682 <__divmodhi4_neg1>:
    1682:	f6 f7       	brtc	.-4      	; 0x1680 <__divmodhi4_exit>
    1684:	90 95       	com	r25
    1686:	81 95       	neg	r24
    1688:	9f 4f       	sbci	r25, 0xFF	; 255
    168a:	08 95       	ret

0000168c <__udivmodhi4>:
    168c:	aa 1b       	sub	r26, r26
    168e:	bb 1b       	sub	r27, r27
    1690:	51 e1       	ldi	r21, 0x11	; 17
    1692:	07 c0       	rjmp	.+14     	; 0x16a2 <__udivmodhi4_ep>

00001694 <__udivmodhi4_loop>:
    1694:	aa 1f       	adc	r26, r26
    1696:	bb 1f       	adc	r27, r27
    1698:	a6 17       	cp	r26, r22
    169a:	b7 07       	cpc	r27, r23
    169c:	10 f0       	brcs	.+4      	; 0x16a2 <__udivmodhi4_ep>
    169e:	a6 1b       	sub	r26, r22
    16a0:	b7 0b       	sbc	r27, r23

000016a2 <__udivmodhi4_ep>:
    16a2:	88 1f       	adc	r24, r24
    16a4:	99 1f       	adc	r25, r25
    16a6:	5a 95       	dec	r21
    16a8:	a9 f7       	brne	.-22     	; 0x1694 <__udivmodhi4_loop>
    16aa:	80 95       	com	r24
    16ac:	90 95       	com	r25
    16ae:	bc 01       	movw	r22, r24
    16b0:	cd 01       	movw	r24, r26
    16b2:	08 95       	ret

000016b4 <__prologue_saves__>:
    16b4:	2f 92       	push	r2
    16b6:	3f 92       	push	r3
    16b8:	4f 92       	push	r4
    16ba:	5f 92       	push	r5
    16bc:	6f 92       	push	r6
    16be:	7f 92       	push	r7
    16c0:	8f 92       	push	r8
    16c2:	9f 92       	push	r9
    16c4:	af 92       	push	r10
    16c6:	bf 92       	push	r11
    16c8:	cf 92       	push	r12
    16ca:	df 92       	push	r13
    16cc:	ef 92       	push	r14
    16ce:	ff 92       	push	r15
    16d0:	0f 93       	push	r16
    16d2:	1f 93       	push	r17
    16d4:	cf 93       	push	r28
    16d6:	df 93       	push	r29
    16d8:	cd b7       	in	r28, 0x3d	; 61
    16da:	de b7       	in	r29, 0x3e	; 62
    16dc:	ca 1b       	sub	r28, r26
    16de:	db 0b       	sbc	r29, r27
    16e0:	0f b6       	in	r0, 0x3f	; 63
    16e2:	f8 94       	cli
    16e4:	de bf       	out	0x3e, r29	; 62
    16e6:	0f be       	out	0x3f, r0	; 63
    16e8:	cd bf       	out	0x3d, r28	; 61
    16ea:	09 94       	ijmp

000016ec <__epilogue_restores__>:
    16ec:	2a 88       	ldd	r2, Y+18	; 0x12
    16ee:	39 88       	ldd	r3, Y+17	; 0x11
    16f0:	48 88       	ldd	r4, Y+16	; 0x10
    16f2:	5f 84       	ldd	r5, Y+15	; 0x0f
    16f4:	6e 84       	ldd	r6, Y+14	; 0x0e
    16f6:	7d 84       	ldd	r7, Y+13	; 0x0d
    16f8:	8c 84       	ldd	r8, Y+12	; 0x0c
    16fa:	9b 84       	ldd	r9, Y+11	; 0x0b
    16fc:	aa 84       	ldd	r10, Y+10	; 0x0a
    16fe:	b9 84       	ldd	r11, Y+9	; 0x09
    1700:	c8 84       	ldd	r12, Y+8	; 0x08
    1702:	df 80       	ldd	r13, Y+7	; 0x07
    1704:	ee 80       	ldd	r14, Y+6	; 0x06
    1706:	fd 80       	ldd	r15, Y+5	; 0x05
    1708:	0c 81       	ldd	r16, Y+4	; 0x04
    170a:	1b 81       	ldd	r17, Y+3	; 0x03
    170c:	aa 81       	ldd	r26, Y+2	; 0x02
    170e:	b9 81       	ldd	r27, Y+1	; 0x01
    1710:	ce 0f       	add	r28, r30
    1712:	d1 1d       	adc	r29, r1
    1714:	0f b6       	in	r0, 0x3f	; 63
    1716:	f8 94       	cli
    1718:	de bf       	out	0x3e, r29	; 62
    171a:	0f be       	out	0x3f, r0	; 63
    171c:	cd bf       	out	0x3d, r28	; 61
    171e:	ed 01       	movw	r28, r26
    1720:	08 95       	ret

00001722 <dtostrf>:
    1722:	ef 92       	push	r14
    1724:	ff 92       	push	r15
    1726:	0f 93       	push	r16
    1728:	1f 93       	push	r17
    172a:	32 2f       	mov	r19, r18
    172c:	f0 2e       	mov	r15, r16
    172e:	47 ff       	sbrs	r20, 7
    1730:	02 c0       	rjmp	.+4      	; 0x1736 <dtostrf+0x14>
    1732:	a4 e1       	ldi	r26, 0x14	; 20
    1734:	01 c0       	rjmp	.+2      	; 0x1738 <dtostrf+0x16>
    1736:	a4 e0       	ldi	r26, 0x04	; 4
    1738:	e4 2f       	mov	r30, r20
    173a:	ff 27       	eor	r31, r31
    173c:	e7 fd       	sbrc	r30, 7
    173e:	f0 95       	com	r31
    1740:	f7 ff       	sbrs	r31, 7
    1742:	03 c0       	rjmp	.+6      	; 0x174a <dtostrf+0x28>
    1744:	f0 95       	com	r31
    1746:	e1 95       	neg	r30
    1748:	ff 4f       	sbci	r31, 0xFF	; 255
    174a:	4f 2d       	mov	r20, r15
    174c:	51 2f       	mov	r21, r17
    174e:	2e 2f       	mov	r18, r30
    1750:	03 2f       	mov	r16, r19
    1752:	ea 2e       	mov	r14, r26
    1754:	07 d0       	rcall	.+14     	; 0x1764 <dtoa_prf>
    1756:	8f 2d       	mov	r24, r15
    1758:	91 2f       	mov	r25, r17
    175a:	1f 91       	pop	r17
    175c:	0f 91       	pop	r16
    175e:	ff 90       	pop	r15
    1760:	ef 90       	pop	r14
    1762:	08 95       	ret

00001764 <dtoa_prf>:
    1764:	a9 e0       	ldi	r26, 0x09	; 9
    1766:	b0 e0       	ldi	r27, 0x00	; 0
    1768:	e7 eb       	ldi	r30, 0xB7	; 183
    176a:	fb e0       	ldi	r31, 0x0B	; 11
    176c:	ab cf       	rjmp	.-170    	; 0x16c4 <__prologue_saves__+0x10>
    176e:	6a 01       	movw	r12, r20
    1770:	f2 2e       	mov	r15, r18
    1772:	10 2f       	mov	r17, r16
    1774:	0c 33       	cpi	r16, 0x3C	; 60
    1776:	18 f4       	brcc	.+6      	; 0x177e <dtoa_prf+0x1a>
    1778:	b0 2e       	mov	r11, r16
    177a:	b3 94       	inc	r11
    177c:	02 c0       	rjmp	.+4      	; 0x1782 <dtoa_prf+0x1e>
    177e:	ec e3       	ldi	r30, 0x3C	; 60
    1780:	be 2e       	mov	r11, r30
    1782:	ae 01       	movw	r20, r28
    1784:	4f 5f       	subi	r20, 0xFF	; 255
    1786:	5f 4f       	sbci	r21, 0xFF	; 255
    1788:	27 e0       	ldi	r18, 0x07	; 7
    178a:	0b 2d       	mov	r16, r11
    178c:	3f d1       	rcall	.+638    	; 0x1a0c <__ftoa_engine>
    178e:	29 81       	ldd	r18, Y+1	; 0x01
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	a9 01       	movw	r20, r18
    1794:	49 70       	andi	r20, 0x09	; 9
    1796:	50 70       	andi	r21, 0x00	; 0
    1798:	41 30       	cpi	r20, 0x01	; 1
    179a:	51 05       	cpc	r21, r1
    179c:	31 f0       	breq	.+12     	; 0x17aa <dtoa_prf+0x46>
    179e:	e1 fc       	sbrc	r14, 1
    17a0:	06 c0       	rjmp	.+12     	; 0x17ae <dtoa_prf+0x4a>
    17a2:	e0 fe       	sbrs	r14, 0
    17a4:	06 c0       	rjmp	.+12     	; 0x17b2 <dtoa_prf+0x4e>
    17a6:	e0 e2       	ldi	r30, 0x20	; 32
    17a8:	05 c0       	rjmp	.+10     	; 0x17b4 <dtoa_prf+0x50>
    17aa:	ed e2       	ldi	r30, 0x2D	; 45
    17ac:	03 c0       	rjmp	.+6      	; 0x17b4 <dtoa_prf+0x50>
    17ae:	eb e2       	ldi	r30, 0x2B	; 43
    17b0:	01 c0       	rjmp	.+2      	; 0x17b4 <dtoa_prf+0x50>
    17b2:	e0 e0       	ldi	r30, 0x00	; 0
    17b4:	23 ff       	sbrs	r18, 3
    17b6:	37 c0       	rjmp	.+110    	; 0x1826 <dtoa_prf+0xc2>
    17b8:	ee 23       	and	r30, r30
    17ba:	11 f0       	breq	.+4      	; 0x17c0 <dtoa_prf+0x5c>
    17bc:	84 e0       	ldi	r24, 0x04	; 4
    17be:	01 c0       	rjmp	.+2      	; 0x17c2 <dtoa_prf+0x5e>
    17c0:	83 e0       	ldi	r24, 0x03	; 3
    17c2:	8f 15       	cp	r24, r15
    17c4:	18 f4       	brcc	.+6      	; 0x17cc <dtoa_prf+0x68>
    17c6:	f8 1a       	sub	r15, r24
    17c8:	8f 2d       	mov	r24, r15
    17ca:	01 c0       	rjmp	.+2      	; 0x17ce <dtoa_prf+0x6a>
    17cc:	80 e0       	ldi	r24, 0x00	; 0
    17ce:	e4 fc       	sbrc	r14, 4
    17d0:	0b c0       	rjmp	.+22     	; 0x17e8 <dtoa_prf+0x84>
    17d2:	98 2f       	mov	r25, r24
    17d4:	d6 01       	movw	r26, r12
    17d6:	20 e2       	ldi	r18, 0x20	; 32
    17d8:	02 c0       	rjmp	.+4      	; 0x17de <dtoa_prf+0x7a>
    17da:	2d 93       	st	X+, r18
    17dc:	91 50       	subi	r25, 0x01	; 1
    17de:	99 23       	and	r25, r25
    17e0:	e1 f7       	brne	.-8      	; 0x17da <dtoa_prf+0x76>
    17e2:	c8 0e       	add	r12, r24
    17e4:	d1 1c       	adc	r13, r1
    17e6:	80 e0       	ldi	r24, 0x00	; 0
    17e8:	ee 23       	and	r30, r30
    17ea:	19 f0       	breq	.+6      	; 0x17f2 <dtoa_prf+0x8e>
    17ec:	d6 01       	movw	r26, r12
    17ee:	ed 93       	st	X+, r30
    17f0:	6d 01       	movw	r12, r26
    17f2:	f6 01       	movw	r30, r12
    17f4:	31 96       	adiw	r30, 0x01	; 1
    17f6:	e2 fe       	sbrs	r14, 2
    17f8:	05 c0       	rjmp	.+10     	; 0x1804 <dtoa_prf+0xa0>
    17fa:	9e e4       	ldi	r25, 0x4E	; 78
    17fc:	d6 01       	movw	r26, r12
    17fe:	9c 93       	st	X, r25
    1800:	21 e4       	ldi	r18, 0x41	; 65
    1802:	04 c0       	rjmp	.+8      	; 0x180c <dtoa_prf+0xa8>
    1804:	9e e6       	ldi	r25, 0x6E	; 110
    1806:	d6 01       	movw	r26, r12
    1808:	9c 93       	st	X, r25
    180a:	21 e6       	ldi	r18, 0x61	; 97
    180c:	11 96       	adiw	r26, 0x01	; 1
    180e:	2c 93       	st	X, r18
    1810:	91 83       	std	Z+1, r25	; 0x01
    1812:	32 96       	adiw	r30, 0x02	; 2
    1814:	98 2f       	mov	r25, r24
    1816:	df 01       	movw	r26, r30
    1818:	20 e2       	ldi	r18, 0x20	; 32
    181a:	02 c0       	rjmp	.+4      	; 0x1820 <dtoa_prf+0xbc>
    181c:	2d 93       	st	X+, r18
    181e:	91 50       	subi	r25, 0x01	; 1
    1820:	99 23       	and	r25, r25
    1822:	e1 f7       	brne	.-8      	; 0x181c <dtoa_prf+0xb8>
    1824:	3d c0       	rjmp	.+122    	; 0x18a0 <dtoa_prf+0x13c>
    1826:	22 ff       	sbrs	r18, 2
    1828:	41 c0       	rjmp	.+130    	; 0x18ac <dtoa_prf+0x148>
    182a:	ee 23       	and	r30, r30
    182c:	11 f0       	breq	.+4      	; 0x1832 <dtoa_prf+0xce>
    182e:	84 e0       	ldi	r24, 0x04	; 4
    1830:	01 c0       	rjmp	.+2      	; 0x1834 <dtoa_prf+0xd0>
    1832:	83 e0       	ldi	r24, 0x03	; 3
    1834:	8f 15       	cp	r24, r15
    1836:	18 f4       	brcc	.+6      	; 0x183e <dtoa_prf+0xda>
    1838:	f8 1a       	sub	r15, r24
    183a:	8f 2d       	mov	r24, r15
    183c:	01 c0       	rjmp	.+2      	; 0x1840 <dtoa_prf+0xdc>
    183e:	80 e0       	ldi	r24, 0x00	; 0
    1840:	e4 fc       	sbrc	r14, 4
    1842:	0b c0       	rjmp	.+22     	; 0x185a <dtoa_prf+0xf6>
    1844:	98 2f       	mov	r25, r24
    1846:	d6 01       	movw	r26, r12
    1848:	20 e2       	ldi	r18, 0x20	; 32
    184a:	02 c0       	rjmp	.+4      	; 0x1850 <dtoa_prf+0xec>
    184c:	2d 93       	st	X+, r18
    184e:	91 50       	subi	r25, 0x01	; 1
    1850:	99 23       	and	r25, r25
    1852:	e1 f7       	brne	.-8      	; 0x184c <dtoa_prf+0xe8>
    1854:	c8 0e       	add	r12, r24
    1856:	d1 1c       	adc	r13, r1
    1858:	80 e0       	ldi	r24, 0x00	; 0
    185a:	ee 23       	and	r30, r30
    185c:	19 f0       	breq	.+6      	; 0x1864 <dtoa_prf+0x100>
    185e:	d6 01       	movw	r26, r12
    1860:	ed 93       	st	X+, r30
    1862:	6d 01       	movw	r12, r26
    1864:	f6 01       	movw	r30, r12
    1866:	31 96       	adiw	r30, 0x01	; 1
    1868:	e2 fe       	sbrs	r14, 2
    186a:	09 c0       	rjmp	.+18     	; 0x187e <dtoa_prf+0x11a>
    186c:	99 e4       	ldi	r25, 0x49	; 73
    186e:	d6 01       	movw	r26, r12
    1870:	9c 93       	st	X, r25
    1872:	9e e4       	ldi	r25, 0x4E	; 78
    1874:	11 96       	adiw	r26, 0x01	; 1
    1876:	9c 93       	st	X, r25
    1878:	11 97       	sbiw	r26, 0x01	; 1
    187a:	96 e4       	ldi	r25, 0x46	; 70
    187c:	07 c0       	rjmp	.+14     	; 0x188c <dtoa_prf+0x128>
    187e:	99 e6       	ldi	r25, 0x69	; 105
    1880:	d6 01       	movw	r26, r12
    1882:	9c 93       	st	X, r25
    1884:	9e e6       	ldi	r25, 0x6E	; 110
    1886:	11 96       	adiw	r26, 0x01	; 1
    1888:	9c 93       	st	X, r25
    188a:	96 e6       	ldi	r25, 0x66	; 102
    188c:	91 83       	std	Z+1, r25	; 0x01
    188e:	32 96       	adiw	r30, 0x02	; 2
    1890:	98 2f       	mov	r25, r24
    1892:	df 01       	movw	r26, r30
    1894:	20 e2       	ldi	r18, 0x20	; 32
    1896:	02 c0       	rjmp	.+4      	; 0x189c <dtoa_prf+0x138>
    1898:	2d 93       	st	X+, r18
    189a:	91 50       	subi	r25, 0x01	; 1
    189c:	99 23       	and	r25, r25
    189e:	e1 f7       	brne	.-8      	; 0x1898 <dtoa_prf+0x134>
    18a0:	e8 0f       	add	r30, r24
    18a2:	f1 1d       	adc	r31, r1
    18a4:	10 82       	st	Z, r1
    18a6:	2e ef       	ldi	r18, 0xFE	; 254
    18a8:	3f ef       	ldi	r19, 0xFF	; 255
    18aa:	ac c0       	rjmp	.+344    	; 0x1a04 <dtoa_prf+0x2a0>
    18ac:	41 e0       	ldi	r20, 0x01	; 1
    18ae:	50 e0       	ldi	r21, 0x00	; 0
    18b0:	ee 23       	and	r30, r30
    18b2:	11 f4       	brne	.+4      	; 0x18b8 <dtoa_prf+0x154>
    18b4:	40 e0       	ldi	r20, 0x00	; 0
    18b6:	50 e0       	ldi	r21, 0x00	; 0
    18b8:	18 16       	cp	r1, r24
    18ba:	19 06       	cpc	r1, r25
    18bc:	24 f4       	brge	.+8      	; 0x18c6 <dtoa_prf+0x162>
    18be:	bc 01       	movw	r22, r24
    18c0:	6f 5f       	subi	r22, 0xFF	; 255
    18c2:	7f 4f       	sbci	r23, 0xFF	; 255
    18c4:	02 c0       	rjmp	.+4      	; 0x18ca <dtoa_prf+0x166>
    18c6:	61 e0       	ldi	r22, 0x01	; 1
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	64 0f       	add	r22, r20
    18cc:	75 1f       	adc	r23, r21
    18ce:	11 23       	and	r17, r17
    18d0:	29 f0       	breq	.+10     	; 0x18dc <dtoa_prf+0x178>
    18d2:	41 2f       	mov	r20, r17
    18d4:	50 e0       	ldi	r21, 0x00	; 0
    18d6:	4f 5f       	subi	r20, 0xFF	; 255
    18d8:	5f 4f       	sbci	r21, 0xFF	; 255
    18da:	02 c0       	rjmp	.+4      	; 0x18e0 <dtoa_prf+0x17c>
    18dc:	40 e0       	ldi	r20, 0x00	; 0
    18de:	50 e0       	ldi	r21, 0x00	; 0
    18e0:	46 0f       	add	r20, r22
    18e2:	57 1f       	adc	r21, r23
    18e4:	6f 2d       	mov	r22, r15
    18e6:	70 e0       	ldi	r23, 0x00	; 0
    18e8:	46 17       	cp	r20, r22
    18ea:	57 07       	cpc	r21, r23
    18ec:	1c f4       	brge	.+6      	; 0x18f4 <dtoa_prf+0x190>
    18ee:	0f 2d       	mov	r16, r15
    18f0:	04 1b       	sub	r16, r20
    18f2:	01 c0       	rjmp	.+2      	; 0x18f6 <dtoa_prf+0x192>
    18f4:	00 e0       	ldi	r16, 0x00	; 0
    18f6:	ff 24       	eor	r15, r15
    18f8:	a7 01       	movw	r20, r14
    18fa:	40 71       	andi	r20, 0x10	; 16
    18fc:	50 70       	andi	r21, 0x00	; 0
    18fe:	e4 fc       	sbrc	r14, 4
    1900:	0d c0       	rjmp	.+26     	; 0x191c <dtoa_prf+0x1b8>
    1902:	e3 fc       	sbrc	r14, 3
    1904:	0b c0       	rjmp	.+22     	; 0x191c <dtoa_prf+0x1b8>
    1906:	60 2f       	mov	r22, r16
    1908:	d6 01       	movw	r26, r12
    190a:	70 e2       	ldi	r23, 0x20	; 32
    190c:	02 c0       	rjmp	.+4      	; 0x1912 <dtoa_prf+0x1ae>
    190e:	7d 93       	st	X+, r23
    1910:	61 50       	subi	r22, 0x01	; 1
    1912:	66 23       	and	r22, r22
    1914:	e1 f7       	brne	.-8      	; 0x190e <dtoa_prf+0x1aa>
    1916:	c0 0e       	add	r12, r16
    1918:	d1 1c       	adc	r13, r1
    191a:	00 e0       	ldi	r16, 0x00	; 0
    191c:	ee 23       	and	r30, r30
    191e:	19 f0       	breq	.+6      	; 0x1926 <dtoa_prf+0x1c2>
    1920:	d6 01       	movw	r26, r12
    1922:	ed 93       	st	X+, r30
    1924:	6d 01       	movw	r12, r26
    1926:	41 15       	cp	r20, r1
    1928:	51 05       	cpc	r21, r1
    192a:	59 f4       	brne	.+22     	; 0x1942 <dtoa_prf+0x1de>
    192c:	40 2f       	mov	r20, r16
    192e:	f6 01       	movw	r30, r12
    1930:	50 e3       	ldi	r21, 0x30	; 48
    1932:	02 c0       	rjmp	.+4      	; 0x1938 <dtoa_prf+0x1d4>
    1934:	51 93       	st	Z+, r21
    1936:	41 50       	subi	r20, 0x01	; 1
    1938:	44 23       	and	r20, r20
    193a:	e1 f7       	brne	.-8      	; 0x1934 <dtoa_prf+0x1d0>
    193c:	c0 0e       	add	r12, r16
    193e:	d1 1c       	adc	r13, r1
    1940:	00 e0       	ldi	r16, 0x00	; 0
    1942:	b8 0e       	add	r11, r24
    1944:	fa 80       	ldd	r15, Y+2	; 0x02
    1946:	a9 01       	movw	r20, r18
    1948:	40 71       	andi	r20, 0x10	; 16
    194a:	50 70       	andi	r21, 0x00	; 0
    194c:	24 ff       	sbrs	r18, 4
    194e:	04 c0       	rjmp	.+8      	; 0x1958 <dtoa_prf+0x1f4>
    1950:	bf 2d       	mov	r27, r15
    1952:	b1 33       	cpi	r27, 0x31	; 49
    1954:	09 f4       	brne	.+2      	; 0x1958 <dtoa_prf+0x1f4>
    1956:	ba 94       	dec	r11
    1958:	1b 14       	cp	r1, r11
    195a:	2c f4       	brge	.+10     	; 0x1966 <dtoa_prf+0x202>
    195c:	ab 2d       	mov	r26, r11
    195e:	a9 30       	cpi	r26, 0x09	; 9
    1960:	18 f0       	brcs	.+6      	; 0x1968 <dtoa_prf+0x204>
    1962:	a8 e0       	ldi	r26, 0x08	; 8
    1964:	01 c0       	rjmp	.+2      	; 0x1968 <dtoa_prf+0x204>
    1966:	a1 e0       	ldi	r26, 0x01	; 1
    1968:	9c 01       	movw	r18, r24
    196a:	97 ff       	sbrs	r25, 7
    196c:	02 c0       	rjmp	.+4      	; 0x1972 <dtoa_prf+0x20e>
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	bc 01       	movw	r22, r24
    1974:	6f 5f       	subi	r22, 0xFF	; 255
    1976:	7f 4f       	sbci	r23, 0xFF	; 255
    1978:	62 1b       	sub	r22, r18
    197a:	73 0b       	sbc	r23, r19
    197c:	fe 01       	movw	r30, r28
    197e:	31 96       	adiw	r30, 0x01	; 1
    1980:	e6 0f       	add	r30, r22
    1982:	f7 1f       	adc	r31, r23
    1984:	6e e2       	ldi	r22, 0x2E	; 46
    1986:	e6 2e       	mov	r14, r22
    1988:	bc 01       	movw	r22, r24
    198a:	6a 1b       	sub	r22, r26
    198c:	71 09       	sbc	r23, r1
    198e:	a1 2f       	mov	r26, r17
    1990:	b0 e0       	ldi	r27, 0x00	; 0
    1992:	aa 24       	eor	r10, r10
    1994:	bb 24       	eor	r11, r11
    1996:	aa 1a       	sub	r10, r26
    1998:	bb 0a       	sbc	r11, r27
    199a:	1f ef       	ldi	r17, 0xFF	; 255
    199c:	2f 3f       	cpi	r18, 0xFF	; 255
    199e:	31 07       	cpc	r19, r17
    19a0:	19 f4       	brne	.+6      	; 0x19a8 <dtoa_prf+0x244>
    19a2:	d6 01       	movw	r26, r12
    19a4:	ed 92       	st	X+, r14
    19a6:	6d 01       	movw	r12, r26
    19a8:	82 17       	cp	r24, r18
    19aa:	93 07       	cpc	r25, r19
    19ac:	2c f0       	brlt	.+10     	; 0x19b8 <dtoa_prf+0x254>
    19ae:	62 17       	cp	r22, r18
    19b0:	73 07       	cpc	r23, r19
    19b2:	14 f4       	brge	.+4      	; 0x19b8 <dtoa_prf+0x254>
    19b4:	10 81       	ld	r17, Z
    19b6:	01 c0       	rjmp	.+2      	; 0x19ba <dtoa_prf+0x256>
    19b8:	10 e3       	ldi	r17, 0x30	; 48
    19ba:	21 50       	subi	r18, 0x01	; 1
    19bc:	30 40       	sbci	r19, 0x00	; 0
    19be:	31 96       	adiw	r30, 0x01	; 1
    19c0:	2a 15       	cp	r18, r10
    19c2:	3b 05       	cpc	r19, r11
    19c4:	24 f0       	brlt	.+8      	; 0x19ce <dtoa_prf+0x26a>
    19c6:	d6 01       	movw	r26, r12
    19c8:	1d 93       	st	X+, r17
    19ca:	6d 01       	movw	r12, r26
    19cc:	e6 cf       	rjmp	.-52     	; 0x199a <dtoa_prf+0x236>
    19ce:	28 17       	cp	r18, r24
    19d0:	39 07       	cpc	r19, r25
    19d2:	49 f4       	brne	.+18     	; 0x19e6 <dtoa_prf+0x282>
    19d4:	bf 2d       	mov	r27, r15
    19d6:	b6 33       	cpi	r27, 0x36	; 54
    19d8:	28 f4       	brcc	.+10     	; 0x19e4 <dtoa_prf+0x280>
    19da:	b5 33       	cpi	r27, 0x35	; 53
    19dc:	21 f4       	brne	.+8      	; 0x19e6 <dtoa_prf+0x282>
    19de:	41 15       	cp	r20, r1
    19e0:	51 05       	cpc	r21, r1
    19e2:	09 f4       	brne	.+2      	; 0x19e6 <dtoa_prf+0x282>
    19e4:	11 e3       	ldi	r17, 0x31	; 49
    19e6:	f6 01       	movw	r30, r12
    19e8:	11 93       	st	Z+, r17
    19ea:	80 2f       	mov	r24, r16
    19ec:	df 01       	movw	r26, r30
    19ee:	90 e2       	ldi	r25, 0x20	; 32
    19f0:	02 c0       	rjmp	.+4      	; 0x19f6 <dtoa_prf+0x292>
    19f2:	9d 93       	st	X+, r25
    19f4:	81 50       	subi	r24, 0x01	; 1
    19f6:	88 23       	and	r24, r24
    19f8:	e1 f7       	brne	.-8      	; 0x19f2 <dtoa_prf+0x28e>
    19fa:	e0 0f       	add	r30, r16
    19fc:	f1 1d       	adc	r31, r1
    19fe:	10 82       	st	Z, r1
    1a00:	20 e0       	ldi	r18, 0x00	; 0
    1a02:	30 e0       	ldi	r19, 0x00	; 0
    1a04:	c9 01       	movw	r24, r18
    1a06:	29 96       	adiw	r28, 0x09	; 9
    1a08:	ea e0       	ldi	r30, 0x0A	; 10
    1a0a:	78 ce       	rjmp	.-784    	; 0x16fc <__epilogue_restores__+0x10>

00001a0c <__ftoa_engine>:
    1a0c:	28 30       	cpi	r18, 0x08	; 8
    1a0e:	08 f0       	brcs	.+2      	; 0x1a12 <__ftoa_engine+0x6>
    1a10:	27 e0       	ldi	r18, 0x07	; 7
    1a12:	33 27       	eor	r19, r19
    1a14:	da 01       	movw	r26, r20
    1a16:	99 0f       	add	r25, r25
    1a18:	31 1d       	adc	r19, r1
    1a1a:	87 fd       	sbrc	r24, 7
    1a1c:	91 60       	ori	r25, 0x01	; 1
    1a1e:	00 96       	adiw	r24, 0x00	; 0
    1a20:	61 05       	cpc	r22, r1
    1a22:	71 05       	cpc	r23, r1
    1a24:	39 f4       	brne	.+14     	; 0x1a34 <__ftoa_engine+0x28>
    1a26:	32 60       	ori	r19, 0x02	; 2
    1a28:	2e 5f       	subi	r18, 0xFE	; 254
    1a2a:	3d 93       	st	X+, r19
    1a2c:	30 e3       	ldi	r19, 0x30	; 48
    1a2e:	2a 95       	dec	r18
    1a30:	e1 f7       	brne	.-8      	; 0x1a2a <__ftoa_engine+0x1e>
    1a32:	08 95       	ret
    1a34:	9f 3f       	cpi	r25, 0xFF	; 255
    1a36:	30 f0       	brcs	.+12     	; 0x1a44 <__ftoa_engine+0x38>
    1a38:	80 38       	cpi	r24, 0x80	; 128
    1a3a:	71 05       	cpc	r23, r1
    1a3c:	61 05       	cpc	r22, r1
    1a3e:	09 f0       	breq	.+2      	; 0x1a42 <__ftoa_engine+0x36>
    1a40:	3c 5f       	subi	r19, 0xFC	; 252
    1a42:	3c 5f       	subi	r19, 0xFC	; 252
    1a44:	3d 93       	st	X+, r19
    1a46:	91 30       	cpi	r25, 0x01	; 1
    1a48:	08 f0       	brcs	.+2      	; 0x1a4c <__ftoa_engine+0x40>
    1a4a:	80 68       	ori	r24, 0x80	; 128
    1a4c:	91 1d       	adc	r25, r1
    1a4e:	df 93       	push	r29
    1a50:	cf 93       	push	r28
    1a52:	1f 93       	push	r17
    1a54:	0f 93       	push	r16
    1a56:	ff 92       	push	r15
    1a58:	ef 92       	push	r14
    1a5a:	19 2f       	mov	r17, r25
    1a5c:	98 7f       	andi	r25, 0xF8	; 248
    1a5e:	96 95       	lsr	r25
    1a60:	e9 2f       	mov	r30, r25
    1a62:	96 95       	lsr	r25
    1a64:	96 95       	lsr	r25
    1a66:	e9 0f       	add	r30, r25
    1a68:	ff 27       	eor	r31, r31
    1a6a:	e4 58       	subi	r30, 0x84	; 132
    1a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6e:	99 27       	eor	r25, r25
    1a70:	33 27       	eor	r19, r19
    1a72:	ee 24       	eor	r14, r14
    1a74:	ff 24       	eor	r15, r15
    1a76:	a7 01       	movw	r20, r14
    1a78:	e7 01       	movw	r28, r14
    1a7a:	05 90       	lpm	r0, Z+
    1a7c:	08 94       	sec
    1a7e:	07 94       	ror	r0
    1a80:	28 f4       	brcc	.+10     	; 0x1a8c <__ftoa_engine+0x80>
    1a82:	36 0f       	add	r19, r22
    1a84:	e7 1e       	adc	r14, r23
    1a86:	f8 1e       	adc	r15, r24
    1a88:	49 1f       	adc	r20, r25
    1a8a:	51 1d       	adc	r21, r1
    1a8c:	66 0f       	add	r22, r22
    1a8e:	77 1f       	adc	r23, r23
    1a90:	88 1f       	adc	r24, r24
    1a92:	99 1f       	adc	r25, r25
    1a94:	06 94       	lsr	r0
    1a96:	a1 f7       	brne	.-24     	; 0x1a80 <__ftoa_engine+0x74>
    1a98:	05 90       	lpm	r0, Z+
    1a9a:	07 94       	ror	r0
    1a9c:	28 f4       	brcc	.+10     	; 0x1aa8 <__ftoa_engine+0x9c>
    1a9e:	e7 0e       	add	r14, r23
    1aa0:	f8 1e       	adc	r15, r24
    1aa2:	49 1f       	adc	r20, r25
    1aa4:	56 1f       	adc	r21, r22
    1aa6:	c1 1d       	adc	r28, r1
    1aa8:	77 0f       	add	r23, r23
    1aaa:	88 1f       	adc	r24, r24
    1aac:	99 1f       	adc	r25, r25
    1aae:	66 1f       	adc	r22, r22
    1ab0:	06 94       	lsr	r0
    1ab2:	a1 f7       	brne	.-24     	; 0x1a9c <__ftoa_engine+0x90>
    1ab4:	05 90       	lpm	r0, Z+
    1ab6:	07 94       	ror	r0
    1ab8:	28 f4       	brcc	.+10     	; 0x1ac4 <__ftoa_engine+0xb8>
    1aba:	f8 0e       	add	r15, r24
    1abc:	49 1f       	adc	r20, r25
    1abe:	56 1f       	adc	r21, r22
    1ac0:	c7 1f       	adc	r28, r23
    1ac2:	d1 1d       	adc	r29, r1
    1ac4:	88 0f       	add	r24, r24
    1ac6:	99 1f       	adc	r25, r25
    1ac8:	66 1f       	adc	r22, r22
    1aca:	77 1f       	adc	r23, r23
    1acc:	06 94       	lsr	r0
    1ace:	a1 f7       	brne	.-24     	; 0x1ab8 <__ftoa_engine+0xac>
    1ad0:	05 90       	lpm	r0, Z+
    1ad2:	07 94       	ror	r0
    1ad4:	20 f4       	brcc	.+8      	; 0x1ade <__ftoa_engine+0xd2>
    1ad6:	49 0f       	add	r20, r25
    1ad8:	56 1f       	adc	r21, r22
    1ada:	c7 1f       	adc	r28, r23
    1adc:	d8 1f       	adc	r29, r24
    1ade:	99 0f       	add	r25, r25
    1ae0:	66 1f       	adc	r22, r22
    1ae2:	77 1f       	adc	r23, r23
    1ae4:	88 1f       	adc	r24, r24
    1ae6:	06 94       	lsr	r0
    1ae8:	a9 f7       	brne	.-22     	; 0x1ad4 <__ftoa_engine+0xc8>
    1aea:	84 91       	lpm	r24, Z+
    1aec:	10 95       	com	r17
    1aee:	17 70       	andi	r17, 0x07	; 7
    1af0:	41 f0       	breq	.+16     	; 0x1b02 <__ftoa_engine+0xf6>
    1af2:	d6 95       	lsr	r29
    1af4:	c7 95       	ror	r28
    1af6:	57 95       	ror	r21
    1af8:	47 95       	ror	r20
    1afa:	f7 94       	ror	r15
    1afc:	e7 94       	ror	r14
    1afe:	1a 95       	dec	r17
    1b00:	c1 f7       	brne	.-16     	; 0x1af2 <__ftoa_engine+0xe6>
    1b02:	e2 e2       	ldi	r30, 0x22	; 34
    1b04:	f0 e0       	ldi	r31, 0x00	; 0
    1b06:	68 94       	set
    1b08:	15 90       	lpm	r1, Z+
    1b0a:	15 91       	lpm	r17, Z+
    1b0c:	35 91       	lpm	r19, Z+
    1b0e:	65 91       	lpm	r22, Z+
    1b10:	95 91       	lpm	r25, Z+
    1b12:	05 90       	lpm	r0, Z+
    1b14:	7f e2       	ldi	r23, 0x2F	; 47
    1b16:	73 95       	inc	r23
    1b18:	e1 18       	sub	r14, r1
    1b1a:	f1 0a       	sbc	r15, r17
    1b1c:	43 0b       	sbc	r20, r19
    1b1e:	56 0b       	sbc	r21, r22
    1b20:	c9 0b       	sbc	r28, r25
    1b22:	d0 09       	sbc	r29, r0
    1b24:	c0 f7       	brcc	.-16     	; 0x1b16 <__ftoa_engine+0x10a>
    1b26:	e1 0c       	add	r14, r1
    1b28:	f1 1e       	adc	r15, r17
    1b2a:	43 1f       	adc	r20, r19
    1b2c:	56 1f       	adc	r21, r22
    1b2e:	c9 1f       	adc	r28, r25
    1b30:	d0 1d       	adc	r29, r0
    1b32:	7e f4       	brtc	.+30     	; 0x1b52 <__ftoa_engine+0x146>
    1b34:	70 33       	cpi	r23, 0x30	; 48
    1b36:	11 f4       	brne	.+4      	; 0x1b3c <__ftoa_engine+0x130>
    1b38:	8a 95       	dec	r24
    1b3a:	e6 cf       	rjmp	.-52     	; 0x1b08 <__ftoa_engine+0xfc>
    1b3c:	e8 94       	clt
    1b3e:	01 50       	subi	r16, 0x01	; 1
    1b40:	30 f0       	brcs	.+12     	; 0x1b4e <__ftoa_engine+0x142>
    1b42:	08 0f       	add	r16, r24
    1b44:	0a f4       	brpl	.+2      	; 0x1b48 <__ftoa_engine+0x13c>
    1b46:	00 27       	eor	r16, r16
    1b48:	02 17       	cp	r16, r18
    1b4a:	08 f4       	brcc	.+2      	; 0x1b4e <__ftoa_engine+0x142>
    1b4c:	20 2f       	mov	r18, r16
    1b4e:	23 95       	inc	r18
    1b50:	02 2f       	mov	r16, r18
    1b52:	7a 33       	cpi	r23, 0x3A	; 58
    1b54:	28 f0       	brcs	.+10     	; 0x1b60 <__ftoa_engine+0x154>
    1b56:	79 e3       	ldi	r23, 0x39	; 57
    1b58:	7d 93       	st	X+, r23
    1b5a:	2a 95       	dec	r18
    1b5c:	e9 f7       	brne	.-6      	; 0x1b58 <__ftoa_engine+0x14c>
    1b5e:	10 c0       	rjmp	.+32     	; 0x1b80 <__ftoa_engine+0x174>
    1b60:	7d 93       	st	X+, r23
    1b62:	2a 95       	dec	r18
    1b64:	89 f6       	brne	.-94     	; 0x1b08 <__ftoa_engine+0xfc>
    1b66:	06 94       	lsr	r0
    1b68:	97 95       	ror	r25
    1b6a:	67 95       	ror	r22
    1b6c:	37 95       	ror	r19
    1b6e:	17 95       	ror	r17
    1b70:	17 94       	ror	r1
    1b72:	e1 18       	sub	r14, r1
    1b74:	f1 0a       	sbc	r15, r17
    1b76:	43 0b       	sbc	r20, r19
    1b78:	56 0b       	sbc	r21, r22
    1b7a:	c9 0b       	sbc	r28, r25
    1b7c:	d0 09       	sbc	r29, r0
    1b7e:	98 f0       	brcs	.+38     	; 0x1ba6 <__ftoa_engine+0x19a>
    1b80:	23 95       	inc	r18
    1b82:	7e 91       	ld	r23, -X
    1b84:	73 95       	inc	r23
    1b86:	7a 33       	cpi	r23, 0x3A	; 58
    1b88:	08 f0       	brcs	.+2      	; 0x1b8c <__ftoa_engine+0x180>
    1b8a:	70 e3       	ldi	r23, 0x30	; 48
    1b8c:	7c 93       	st	X, r23
    1b8e:	20 13       	cpse	r18, r16
    1b90:	b8 f7       	brcc	.-18     	; 0x1b80 <__ftoa_engine+0x174>
    1b92:	7e 91       	ld	r23, -X
    1b94:	70 61       	ori	r23, 0x10	; 16
    1b96:	7d 93       	st	X+, r23
    1b98:	30 f0       	brcs	.+12     	; 0x1ba6 <__ftoa_engine+0x19a>
    1b9a:	83 95       	inc	r24
    1b9c:	71 e3       	ldi	r23, 0x31	; 49
    1b9e:	7d 93       	st	X+, r23
    1ba0:	70 e3       	ldi	r23, 0x30	; 48
    1ba2:	2a 95       	dec	r18
    1ba4:	e1 f7       	brne	.-8      	; 0x1b9e <__ftoa_engine+0x192>
    1ba6:	11 24       	eor	r1, r1
    1ba8:	ef 90       	pop	r14
    1baa:	ff 90       	pop	r15
    1bac:	0f 91       	pop	r16
    1bae:	1f 91       	pop	r17
    1bb0:	cf 91       	pop	r28
    1bb2:	df 91       	pop	r29
    1bb4:	99 27       	eor	r25, r25
    1bb6:	87 fd       	sbrc	r24, 7
    1bb8:	90 95       	com	r25
    1bba:	08 95       	ret

00001bbc <_exit>:
    1bbc:	f8 94       	cli

00001bbe <__stop_program>:
    1bbe:	ff cf       	rjmp	.-2      	; 0x1bbe <__stop_program>
