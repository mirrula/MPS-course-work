
avr-calc-8515.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000017b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  000017b2  00001846  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  008001a4  008001a4  0000198a  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  0000198c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000110  00000000  00000000  00002a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001e0  00000000  00000000  00002ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000035a  00000000  00000000  00002d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002671  00000000  00000000  000030da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000012bb  00000000  00000000  0000574b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000020aa  00000000  00000000  00006a06  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000310  00000000  00000000  00008ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000063c  00000000  00000000  00008dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001333  00000000  00000000  000093fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000525  00000000  00000000  0000a72f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000b8  00000000  00000000  0000ac54  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	a7 c0       	rjmp	.+334    	; 0x152 <__bad_interrupt>
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	a5 c0       	rjmp	.+330    	; 0x152 <__bad_interrupt>
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	a3 c0       	rjmp	.+326    	; 0x152 <__bad_interrupt>
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	a1 c0       	rjmp	.+322    	; 0x152 <__bad_interrupt>
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	9f c0       	rjmp	.+318    	; 0x152 <__bad_interrupt>
      14:	9e c0       	rjmp	.+316    	; 0x152 <__bad_interrupt>
      16:	9d c0       	rjmp	.+314    	; 0x152 <__bad_interrupt>
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	9b c0       	rjmp	.+310    	; 0x152 <__bad_interrupt>
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	99 c0       	rjmp	.+306    	; 0x152 <__bad_interrupt>
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 40       	sbci	r16, 0x00	; 0
      24:	7a 10       	cpse	r7, r10
      26:	f3 5a       	subi	r31, 0xA3	; 163
      28:	00 a0       	ldd	r0, Z+32	; 0x20
      2a:	72 4e       	sbci	r23, 0xE2	; 226
      2c:	18 09       	sbc	r17, r8
      2e:	00 10       	cpse	r0, r0
      30:	a5 d4       	rcall	.+2378   	; 0x97c <_fpadd_parts+0xd4>
      32:	e8 00       	.word	0x00e8	; ????
      34:	00 e8       	ldi	r16, 0x80	; 128
      36:	76 48       	sbci	r23, 0x86	; 134
      38:	17 00       	.word	0x0017	; ????
      3a:	00 e4       	ldi	r16, 0x40	; 64
      3c:	0b 54       	subi	r16, 0x4B	; 75
      3e:	02 00       	.word	0x0002	; ????
      40:	00 ca       	rjmp	.-3072   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      42:	9a 3b       	cpi	r25, 0xBA	; 186
      44:	00 00       	nop
      46:	00 e1       	ldi	r16, 0x10	; 16
      48:	f5 05       	cpc	r31, r5
      4a:	00 00       	nop
      4c:	80 96       	adiw	r24, 0x20	; 32
      4e:	98 00       	.word	0x0098	; ????
      50:	00 00       	nop
      52:	40 42       	sbci	r20, 0x20	; 32
      54:	0f 00       	.word	0x000f	; ????
      56:	00 00       	nop
      58:	a0 86       	std	Z+8, r10	; 0x08
      5a:	01 00       	.word	0x0001	; ????
      5c:	00 00       	nop
      5e:	10 27       	eor	r17, r16
      60:	00 00       	nop
      62:	00 00       	nop
      64:	e8 03       	fmulsu	r22, r16
      66:	00 00       	nop
      68:	00 00       	nop
      6a:	64 00       	.word	0x0064	; ????
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	0a 00       	.word	0x000a	; ????
      72:	00 00       	nop
      74:	00 00       	nop
      76:	01 00       	.word	0x0001	; ????
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	2c 76       	andi	r18, 0x6C	; 108
      7e:	d8 88       	ldd	r13, Y+16	; 0x10
      80:	dc 67       	ori	r29, 0x7C	; 124
      82:	4f 08       	sbc	r4, r15
      84:	23 df       	rcall	.-442    	; 0xfffffecc <__eeprom_end+0xff7efecc>
      86:	c1 df       	rcall	.-126    	; 0xa <__zero_reg__+0x9>
      88:	ae 59       	subi	r26, 0x9E	; 158
      8a:	e1 b1       	in	r30, 0x01	; 1
      8c:	b7 96       	adiw	r30, 0x27	; 39
      8e:	e5 e3       	ldi	r30, 0x35	; 53
      90:	e4 53       	subi	r30, 0x34	; 52
      92:	c6 3a       	cpi	r28, 0xA6	; 166
      94:	e6 51       	subi	r30, 0x16	; 22
      96:	99 76       	andi	r25, 0x69	; 105
      98:	96 e8       	ldi	r25, 0x86	; 134
      9a:	e6 c2       	rjmp	.+1484   	; 0x668 <decide+0x1ee>
      9c:	84 26       	eor	r8, r20
      9e:	eb 89       	ldd	r30, Y+19	; 0x13
      a0:	8c 9b       	sbis	0x11, 4	; 17
      a2:	62 ed       	ldi	r22, 0xD2	; 210
      a4:	40 7c       	andi	r20, 0xC0	; 192
      a6:	6f fc       	.word	0xfc6f	; ????
      a8:	ef bc       	out	0x2f, r14	; 47
      aa:	9c 9f       	mul	r25, r28
      ac:	40 f2       	brcs	.-112    	; 0x3e <__SP_H__>
      ae:	ba a5       	ldd	r27, Y+42	; 0x2a
      b0:	6f a5       	ldd	r22, Y+47	; 0x2f
      b2:	f4 90       	lpm	r15, Z+
      b4:	05 5a       	subi	r16, 0xA5	; 165
      b6:	2a f7       	brpl	.-54     	; 0x82 <__SREG__+0x43>
      b8:	5c 93       	st	X, r21
      ba:	6b 6c       	ori	r22, 0xCB	; 203
      bc:	f9 67       	ori	r31, 0x79	; 121
      be:	6d c1       	rjmp	.+730    	; 0x39a <calculate+0x10>
      c0:	1b fc       	.word	0xfc1b	; ????
      c2:	e0 e4       	ldi	r30, 0x40	; 64
      c4:	0d 47       	sbci	r16, 0x7D	; 125
      c6:	fe f5       	brtc	.+126    	; 0x146 <.do_clear_bss_loop>
      c8:	20 e6       	ldi	r18, 0x60	; 96
      ca:	b5 00       	.word	0x00b5	; ????
      cc:	d0 ed       	ldi	r29, 0xD0	; 208
      ce:	90 2e       	mov	r9, r16
      d0:	03 00       	.word	0x0003	; ????
      d2:	94 35       	cpi	r25, 0x54	; 84
      d4:	77 05       	cpc	r23, r7
      d6:	00 80       	ld	r0, Z
      d8:	84 1e       	adc	r8, r20
      da:	08 00       	.word	0x0008	; ????
      dc:	00 20       	and	r0, r0
      de:	4e 0a       	sbc	r4, r30
      e0:	00 00       	nop
      e2:	00 c8       	rjmp	.-4096   	; 0xfffff0e4 <__eeprom_end+0xff7ef0e4>
      e4:	0c 33       	cpi	r16, 0x3C	; 60
      e6:	33 33       	cpi	r19, 0x33	; 51
      e8:	33 0f       	add	r19, r19
      ea:	98 6e       	ori	r25, 0xE8	; 232
      ec:	12 83       	std	Z+2, r17	; 0x02
      ee:	11 41       	sbci	r17, 0x11	; 17
      f0:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f2:	21 14       	cp	r2, r1
      f4:	89 3b       	cpi	r24, 0xB9	; 185
      f6:	e6 55       	subi	r30, 0x56	; 86
      f8:	16 cf       	rjmp	.-468    	; 0xffffff26 <__eeprom_end+0xff7eff26>
      fa:	fe e6       	ldi	r31, 0x6E	; 110
      fc:	db 18       	sub	r13, r11
      fe:	d1 84       	ldd	r13, Z+9	; 0x09
     100:	4b 38       	cpi	r20, 0x8B	; 139
     102:	1b f7       	brvc	.-58     	; 0xca <__SREG__+0x8b>
     104:	7c 1d       	adc	r23, r12
     106:	90 1d       	adc	r25, r0
     108:	a4 bb       	out	0x14, r26	; 20
     10a:	e4 24       	eor	r14, r4
     10c:	20 32       	cpi	r18, 0x20	; 32
     10e:	84 72       	andi	r24, 0x24	; 36
     110:	5e 22       	and	r5, r30
     112:	81 00       	.word	0x0081	; ????
     114:	c9 f1       	breq	.+114    	; 0x188 <init_display+0x6>
     116:	24 ec       	ldi	r18, 0xC4	; 196
     118:	a1 e5       	ldi	r26, 0x51	; 81
     11a:	3d 27       	eor	r19, r29

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf e5       	ldi	r28, 0x5F	; 95
     122:	d2 e0       	ldi	r29, 0x02	; 2
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e6       	ldi	r26, 0x60	; 96
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	e2 eb       	ldi	r30, 0xB2	; 178
     130:	f7 e1       	ldi	r31, 0x17	; 23
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
     134:	05 90       	lpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a4 3a       	cpi	r26, 0xA4	; 164
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	a4 ea       	ldi	r26, 0xA4	; 164
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	aa 3c       	cpi	r26, 0xCA	; 202
     14a:	b1 07       	cpc	r27, r17
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	02 d0       	rcall	.+4      	; 0x154 <main>
     150:	2e cb       	rjmp	.-2468   	; 0xfffff7ae <__eeprom_end+0xff7ef7ae>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <main>:
# define F_CPU 4000000UL
#include "calculator.h"

int main(void){

    init_calculator();
     154:	79 d3       	rcall	.+1778   	; 0x848 <init_calculator>

	return 0;
}
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <trigger>:
}

//Функция генерирующая строб на линии E.
//По этому стробу производится запись команды/данных или чтение.
void trigger(){
    PORTC |= (1<<PC6); // Set PC6 (E).
     15c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	00 00       	nop
    _delay_us(1);
    PORTC &=~(1<<PC6); // Reset PC6 (E).
     160:	ae 98       	cbi	0x15, 6	; 21
     162:	00 00       	nop
	_delay_us(1);
}
     164:	08 95       	ret

00000166 <send_data>:
	_delay_us( 40 );
}

//Функция записи байта (символа) данных в lcd контроллер
void send_data(unsigned char data){
    PORTA = data;
     166:	8b bb       	out	0x1b, r24	; 27
    trigger();
     168:	f9 df       	rcall	.-14     	; 0x15c <trigger>
     16a:	8d e0       	ldi	r24, 0x0D	; 13
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <send_data+0x6>
     170:	00 00       	nop
	_delay_us( 40 );
}
     172:	08 95       	ret

00000174 <send_command>:
	on_flag = 1;
}

//Функция записи байта (символа) команды в lcd контроллер
void send_command(unsigned char command){
    PORTA = command;
     174:	8b bb       	out	0x1b, r24	; 27
    trigger();
     176:	f2 df       	rcall	.-28     	; 0x15c <trigger>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <send_command+0x6>
     17e:	00 00       	nop
	_delay_us( 40 );
}
     180:	08 95       	ret

00000182 <init_display>:

bool on_flag;

//Функция инициализации lcd контроллера hd44780
void init_display(){
    DDRC |= (1<<PC4)|(1<<PC6); 	// PC 4 is output for RS, 6 is output for Enable.
     182:	84 b3       	in	r24, 0x14	; 20
     184:	80 65       	ori	r24, 0x50	; 80
     186:	84 bb       	out	0x14, r24	; 20
    DDRA = 0xFF; 				// PA 0-7 is 8 bit data output bus.
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	8a bb       	out	0x1a, r24	; 26

	PORTC &=~(1<<PC6); // Reset PC6 (E).
     18c:	ae 98       	cbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	85 ea       	ldi	r24, 0xA5	; 165
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <init_display+0x10>
     196:	00 c0       	rjmp	.+0      	; 0x198 <init_display+0x16>
     198:	00 00       	nop

	_delay_ms(15); 

	send_command(0x38); // 2 line mode.
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	eb df       	rcall	.-42     	; 0x174 <send_command>
     19e:	81 ee       	ldi	r24, 0xE1	; 225
     1a0:	94 e0       	ldi	r25, 0x04	; 4
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <init_display+0x20>
     1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <init_display+0x26>
     1a8:	00 00       	nop
	_delay_ms(5); 
	send_command(0x38); // 2 line mode.
     1aa:	88 e3       	ldi	r24, 0x38	; 56
     1ac:	e3 df       	rcall	.-58     	; 0x174 <send_command>
     1ae:	87 ea       	ldi	r24, 0xA7	; 167
     1b0:	91 e6       	ldi	r25, 0x61	; 97
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <init_display+0x30>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <init_display+0x36>
     1b8:	00 00       	nop
	_delay_ms(100); 
	send_command(0x38); // 2 line mode.	
     1ba:	88 e3       	ldi	r24, 0x38	; 56
     1bc:	db df       	rcall	.-74     	; 0x174 <send_command>

	send_command(0x0F);	// LCD ON, cursor ON
     1be:	8f e0       	ldi	r24, 0x0F	; 15
     1c0:	d9 df       	rcall	.-78     	; 0x174 <send_command>
     1c2:	83 ec       	ldi	r24, 0xC3	; 195
     1c4:	99 e0       	ldi	r25, 0x09	; 9
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <init_display+0x44>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <init_display+0x4a>
     1cc:	00 00       	nop
	_delay_ms(10);
	send_command(0x01); // Clear display screen
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	d1 df       	rcall	.-94     	; 0x174 <send_command>
     1d2:	83 ec       	ldi	r24, 0xC3	; 195
     1d4:	99 e0       	ldi	r25, 0x09	; 9
     1d6:	01 97       	sbiw	r24, 0x01	; 1
     1d8:	f1 f7       	brne	.-4      	; 0x1d6 <init_display+0x54>
     1da:	00 c0       	rjmp	.+0      	; 0x1dc <init_display+0x5a>
     1dc:	00 00       	nop
	_delay_ms(10);
	send_command(0x81); 
     1de:	81 e8       	ldi	r24, 0x81	; 129
     1e0:	c9 df       	rcall	.-110    	; 0x174 <send_command>
     1e2:	83 ec       	ldi	r24, 0xC3	; 195
     1e4:	99 e0       	ldi	r25, 0x09	; 9
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <init_display+0x64>
     1ea:	00 c0       	rjmp	.+0      	; 0x1ec <init_display+0x6a>
     1ec:	00 00       	nop
	_delay_ms(10);

	PORTC |= (1<<PC6); // Set PC6 (E).
     1ee:	ae 9a       	sbi	0x15, 6	; 21

	on_flag = 1;
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	80 93 b4 01 	sts	0x01B4, r24
}
     1f6:	08 95       	ret

000001f8 <send_string>:
    PORTC &=~(1<<PC6); // Reset PC6 (E).
	_delay_us(1);
}

//Функция вывода строки
void send_string(const char *str){
     1f8:	ef 92       	push	r14
     1fa:	ff 92       	push	r15
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	e8 2e       	mov	r14, r24
     202:	e7 01       	movw	r28, r14
     204:	7e 01       	movw	r14, r28
     206:	f9 2e       	mov	r15, r25
     208:	e7 01       	movw	r28, r14
    while(*str) send_data(*str++); // Send characters one by one.
     20a:	01 c0       	rjmp	.+2      	; 0x20e <send_string+0x16>
     20c:	ac df       	rcall	.-168    	; 0x166 <send_data>
     20e:	89 91       	ld	r24, Y+
     210:	88 23       	and	r24, r24
     212:	e1 f7       	brne	.-8      	; 0x20c <send_string+0x14>
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	ff 90       	pop	r15
     21a:	ef 90       	pop	r14
     21c:	08 95       	ret

0000021e <move_to>:

//Функция изменения текущей позиции курсора,
//x — номер символа в строке, y — номер строки
void move_to(unsigned char x, unsigned char y){
	unsigned char address = x;
	if ( y ) {
     21e:	61 11       	cpse	r22, r1
    	address += 0x40;
     220:	80 5c       	subi	r24, 0xC0	; 192
  	}
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     222:	ac 98       	cbi	0x15, 4	; 21
    send_command(1<<7 | address);
     224:	80 68       	ori	r24, 0x80	; 128
     226:	a6 df       	rcall	.-180    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     228:	ac 9a       	sbi	0x15, 4	; 21
}
     22a:	08 95       	ret

0000022c <clear>:

void clear(){
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     22c:	ac 98       	cbi	0x15, 4	; 21
    send_command(0x01);
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	a1 df       	rcall	.-190    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     232:	ac 9a       	sbi	0x15, 4	; 21
}
     234:	08 95       	ret

00000236 <disp_on_off>:

void disp_on_off(){
	if (on_flag == 1) {
     236:	80 91 b4 01 	lds	r24, 0x01B4
     23a:	88 23       	and	r24, r24
     23c:	39 f0       	breq	.+14     	; 0x24c <disp_on_off+0x16>
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     23e:	ac 98       	cbi	0x15, 4	; 21
   		send_command(0x08);
     240:	88 e0       	ldi	r24, 0x08	; 8
     242:	98 df       	rcall	.-208    	; 0x174 <send_command>
		PORTC |=(1<<PC4); // Set PC4 (RS).
     244:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 0;
     246:	10 92 b4 01 	sts	0x01B4, r1
     24a:	08 95       	ret
	}
	else {
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     24c:	ac 98       	cbi	0x15, 4	; 21

		send_command(0x0F);	// LCD ON, cursor ON
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	91 df       	rcall	.-222    	; 0x174 <send_command>
     252:	83 ec       	ldi	r24, 0xC3	; 195
     254:	99 e0       	ldi	r25, 0x09	; 9
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <disp_on_off+0x20>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <disp_on_off+0x26>
     25c:	00 00       	nop
		_delay_ms(10);
		send_command(0x01); // Clear display screen
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	89 df       	rcall	.-238    	; 0x174 <send_command>
     262:	83 ec       	ldi	r24, 0xC3	; 195
     264:	99 e0       	ldi	r25, 0x09	; 9
     266:	01 97       	sbiw	r24, 0x01	; 1
     268:	f1 f7       	brne	.-4      	; 0x266 <__stack+0x7>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <__stack+0xd>
     26c:	00 00       	nop
		_delay_ms(10);
		send_command(0x81); 
     26e:	81 e8       	ldi	r24, 0x81	; 129
     270:	81 df       	rcall	.-254    	; 0x174 <send_command>
     272:	83 ec       	ldi	r24, 0xC3	; 195
     274:	99 e0       	ldi	r25, 0x09	; 9
     276:	01 97       	sbiw	r24, 0x01	; 1
     278:	f1 f7       	brne	.-4      	; 0x276 <__stack+0x17>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <__stack+0x1d>
     27c:	00 00       	nop
		_delay_ms(10);

		PORTC |=(1<<PC4); // Set PC4 (RS).
     27e:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 1;
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	80 93 b4 01 	sts	0x01B4, r24
     286:	08 95       	ret

00000288 <init_keyboard>:
    {'1', '2', '3', '+', '-', '='},
    {'0', '.', 'p', 'u', 'A', '='}
};

void init_keyboard() {
    DDRC |= 0x0F; // PB 0-3 output for rows.
     288:	84 b3       	in	r24, 0x14	; 20
     28a:	8f 60       	ori	r24, 0x0F	; 15
     28c:	84 bb       	out	0x14, r24	; 20
    DDRD &= 0x03; // PC 2-7 input for columns.
     28e:	81 b3       	in	r24, 0x11	; 17
     290:	83 70       	andi	r24, 0x03	; 3
     292:	81 bb       	out	0x11, r24	; 17
}
     294:	08 95       	ret

00000296 <scan_key>:

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	70 e0       	ldi	r23, 0x00	; 0
    DDRD &= 0x03; // PC 2-7 input for columns.
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
     29a:	82 b3       	in	r24, 0x12	; 18
     29c:	8c 6f       	ori	r24, 0xFC	; 252
     29e:	82 bb       	out	0x12, r24	; 18
        for(int i = 0;i<4;i++){
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
            PORTC = ~(1 << i);
     2a4:	cb 01       	movw	r24, r22
     2a6:	02 2e       	mov	r0, r18
     2a8:	02 c0       	rjmp	.+4      	; 0x2ae <scan_key+0x18>
     2aa:	88 0f       	add	r24, r24
     2ac:	99 1f       	adc	r25, r25
     2ae:	0a 94       	dec	r0
     2b0:	e2 f7       	brpl	.-8      	; 0x2aa <scan_key+0x14>
     2b2:	80 95       	com	r24
     2b4:	85 bb       	out	0x15, r24	; 21
            for(int j = 2;j < 8;j++){
     2b6:	82 e0       	ldi	r24, 0x02	; 2
     2b8:	90 e0       	ldi	r25, 0x00	; 0
                if(bit_is_clear(PIND, j)){
     2ba:	40 b3       	in	r20, 0x10	; 16
     2bc:	50 e0       	ldi	r21, 0x00	; 0
     2be:	08 2e       	mov	r0, r24
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <scan_key+0x30>
     2c2:	55 95       	asr	r21
     2c4:	47 95       	ror	r20
     2c6:	0a 94       	dec	r0
     2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <scan_key+0x2c>
     2ca:	40 fd       	sbrc	r20, 0
     2cc:	23 c0       	rjmp	.+70     	; 0x314 <scan_key+0x7e>
     2ce:	41 e0       	ldi	r20, 0x01	; 1
     2d0:	50 e0       	ldi	r21, 0x00	; 0
     2d2:	08 2e       	mov	r0, r24
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <scan_key+0x44>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	0a 94       	dec	r0
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <scan_key+0x40>
     2de:	06 c0       	rjmp	.+12     	; 0x2ec <scan_key+0x56>
     2e0:	e3 ed       	ldi	r30, 0xD3	; 211
     2e2:	f0 e3       	ldi	r31, 0x30	; 48
     2e4:	31 97       	sbiw	r30, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <scan_key+0x4e>
     2e8:	00 c0       	rjmp	.+0      	; 0x2ea <scan_key+0x54>
     2ea:	00 00       	nop
                    while(bit_is_clear(PIND, j)) _delay_ms(50);
     2ec:	60 b3       	in	r22, 0x10	; 16
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	64 23       	and	r22, r20
     2f2:	75 23       	and	r23, r21
     2f4:	61 15       	cp	r22, r1
     2f6:	71 05       	cpc	r23, r1
     2f8:	99 f3       	breq	.-26     	; 0x2e0 <scan_key+0x4a>
                    return keys[i][j-2];
     2fa:	f9 01       	movw	r30, r18
     2fc:	ee 0f       	add	r30, r30
     2fe:	ff 1f       	adc	r31, r31
     300:	e2 0f       	add	r30, r18
     302:	f3 1f       	adc	r31, r19
     304:	ee 0f       	add	r30, r30
     306:	ff 1f       	adc	r31, r31
     308:	e8 0f       	add	r30, r24
     30a:	f9 1f       	adc	r31, r25
     30c:	e2 5a       	subi	r30, 0xA2	; 162
     30e:	ff 4f       	sbci	r31, 0xFF	; 255
                }
            }
        }
    }
}
     310:	80 81       	ld	r24, Z
     312:	08 95       	ret
unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
            for(int j = 2;j < 8;j++){
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	88 30       	cpi	r24, 0x08	; 8
     318:	91 05       	cpc	r25, r1
     31a:	79 f6       	brne	.-98     	; 0x2ba <scan_key+0x24>
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        for(int i = 0;i<4;i++){
     31c:	2f 5f       	subi	r18, 0xFF	; 255
     31e:	3f 4f       	sbci	r19, 0xFF	; 255
     320:	24 30       	cpi	r18, 0x04	; 4
     322:	31 05       	cpc	r19, r1
     324:	09 f0       	breq	.+2      	; 0x328 <scan_key+0x92>
     326:	be cf       	rjmp	.-132    	; 0x2a4 <scan_key+0xe>
     328:	b8 cf       	rjmp	.-144    	; 0x29a <scan_key+0x4>

0000032a <uart>:

    reset();
    run();
}

void uart() {
     32a:	ef 92       	push	r14
     32c:	ff 92       	push	r15
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	df 93       	push	r29
     334:	cf 93       	push	r28
     336:	cd b7       	in	r28, 0x3d	; 61
     338:	de b7       	in	r29, 0x3e	; 62
     33a:	c0 54       	subi	r28, 0x40	; 64
     33c:	d0 40       	sbci	r29, 0x00	; 0
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	f8 94       	cli
     342:	de bf       	out	0x3e, r29	; 62
     344:	0f be       	out	0x3f, r0	; 63
     346:	cd bf       	out	0x3d, r28	; 61
	UsartInit();
     348:	8d d2       	rcall	.+1306   	; 0x864 <UsartInit>
	char uart_ans[64];
	dtostrf(ans, 9, 5, uart_ans);
     34a:	60 91 c2 01 	lds	r22, 0x01C2
     34e:	70 91 c3 01 	lds	r23, 0x01C3
     352:	80 91 c4 01 	lds	r24, 0x01C4
     356:	90 91 c5 01 	lds	r25, 0x01C5
     35a:	49 e0       	ldi	r20, 0x09	; 9
     35c:	25 e0       	ldi	r18, 0x05	; 5
     35e:	7e 01       	movw	r14, r28
     360:	08 94       	sec
     362:	e1 1c       	adc	r14, r1
     364:	f1 1c       	adc	r15, r1
     366:	87 01       	movw	r16, r14
     368:	d5 d7       	rcall	.+4010   	; 0x1314 <dtostrf>
	Transmit(uart_ans);
     36a:	c7 01       	movw	r24, r14
     36c:	82 d2       	rcall	.+1284   	; 0x872 <Transmit>
}
     36e:	c0 5c       	subi	r28, 0xC0	; 192
     370:	df 4f       	sbci	r29, 0xFF	; 255
     372:	0f b6       	in	r0, 0x3f	; 63
     374:	f8 94       	cli
     376:	de bf       	out	0x3e, r29	; 62
     378:	0f be       	out	0x3f, r0	; 63
     37a:	cd bf       	out	0x3d, r28	; 61
     37c:	cf 91       	pop	r28
     37e:	df 91       	pop	r29
     380:	1f 91       	pop	r17
     382:	0f 91       	pop	r16
     384:	ff 90       	pop	r15
     386:	ef 90       	pop	r14
     388:	08 95       	ret

0000038a <calculate>:

double calculate(float m, char operator, float n) {
     38a:	0f 93       	push	r16
     38c:	1f 93       	push	r17
     38e:	e4 2f       	mov	r30, r20
     390:	a9 01       	movw	r20, r18
     392:	98 01       	movw	r18, r16
    switch (operator) {
     394:	eb 32       	cpi	r30, 0x2B	; 43
     396:	09 f4       	brne	.+2      	; 0x39a <calculate+0x10>
    case '+':
        return r = m + n;
     398:	cf d3       	rcall	.+1950   	; 0xb38 <__addsf3>
        return r = (int)m % (int)n;
    case 'v':
        return r = (int)m / (int)n;*/

    }
    return r = m;
     39a:	26 2f       	mov	r18, r22
     39c:	37 2f       	mov	r19, r23
     39e:	48 2f       	mov	r20, r24
     3a0:	59 2f       	mov	r21, r25
     3a2:	20 93 bc 01 	sts	0x01BC, r18
     3a6:	30 93 bd 01 	sts	0x01BD, r19
     3aa:	40 93 be 01 	sts	0x01BE, r20
     3ae:	50 93 bf 01 	sts	0x01BF, r21
}
     3b2:	1f 91       	pop	r17
     3b4:	0f 91       	pop	r16
     3b6:	08 95       	ret

000003b8 <show_result>:

void show_result() {
     3b8:	ef 92       	push	r14
     3ba:	ff 92       	push	r15
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
    move_to(0, 1);			//начало нижней строки
     3c0:	80 e0       	ldi	r24, 0x00	; 0
     3c2:	61 e0       	ldi	r22, 0x01	; 1
     3c4:	2c df       	rcall	.-424    	; 0x21e <move_to>
    send_string("A=");
     3c6:	88 e7       	ldi	r24, 0x78	; 120
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	16 df       	rcall	.-468    	; 0x1f8 <send_string>
    char *data = buffer;

    if (r <= 999999999999)
     3cc:	e0 90 bc 01 	lds	r14, 0x01BC
     3d0:	f0 90 bd 01 	lds	r15, 0x01BD
     3d4:	00 91 be 01 	lds	r16, 0x01BE
     3d8:	10 91 bf 01 	lds	r17, 0x01BF
     3dc:	c8 01       	movw	r24, r16
     3de:	b7 01       	movw	r22, r14
     3e0:	25 ea       	ldi	r18, 0xA5	; 165
     3e2:	34 ed       	ldi	r19, 0xD4	; 212
     3e4:	48 e6       	ldi	r20, 0x68	; 104
     3e6:	53 e5       	ldi	r21, 0x53	; 83
     3e8:	ee d4       	rcall	.+2524   	; 0xdc6 <__lesf2>
     3ea:	18 16       	cp	r1, r24
     3ec:	4c f0       	brlt	.+18     	; 0x400 <show_result+0x48>
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
     3ee:	c8 01       	movw	r24, r16
     3f0:	b7 01       	movw	r22, r14
     3f2:	49 e0       	ldi	r20, 0x09	; 9
     3f4:	25 e0       	ldi	r18, 0x05	; 5
     3f6:	04 ea       	ldi	r16, 0xA4	; 164
     3f8:	11 e0       	ldi	r17, 0x01	; 1
     3fa:	8c d7       	rcall	.+3864   	; 0x1314 <dtostrf>
}

void show_result() {
    move_to(0, 1);			//начало нижней строки
    send_string("A=");
    char *data = buffer;
     3fc:	c8 01       	movw	r24, r16
     3fe:	02 c0       	rjmp	.+4      	; 0x404 <show_result+0x4c>

    if (r <= 999999999999)
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
    else 
		data = overflow;
     400:	8c e8       	ldi	r24, 0x8C	; 140
     402:	90 e0       	ldi	r25, 0x00	; 0

    send_string(data);
     404:	f9 de       	rcall	.-526    	; 0x1f8 <send_string>
    state = 4;
     406:	84 e0       	ldi	r24, 0x04	; 4
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	90 93 bb 01 	sts	0x01BB, r25
     40e:	80 93 ba 01 	sts	0x01BA, r24
}
     412:	1f 91       	pop	r17
     414:	0f 91       	pop	r16
     416:	ff 90       	pop	r15
     418:	ef 90       	pop	r14
     41a:	08 95       	ret

0000041c <send_digit>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
     41c:	80 5d       	subi	r24, 0xD0	; 208
     41e:	a3 de       	rcall	.-698    	; 0x166 <send_data>
}
     420:	08 95       	ret

00000422 <reset>:
        decide(scan_key(), is_dec_p, paw_p);
    }
}

void reset() {
    clear();
     422:	04 df       	rcall	.-504    	; 0x22c <clear>
    move_to(0, 0);		//начало верхней строки
     424:	80 e0       	ldi	r24, 0x00	; 0
     426:	60 e0       	ldi	r22, 0x00	; 0
     428:	fa de       	rcall	.-524    	; 0x21e <move_to>
    r = a = b = op = state = count = 0;
     42a:	10 92 c1 01 	sts	0x01C1, r1
     42e:	10 92 c0 01 	sts	0x01C0, r1
     432:	10 92 bb 01 	sts	0x01BB, r1
     436:	10 92 ba 01 	sts	0x01BA, r1
     43a:	10 92 b5 01 	sts	0x01B5, r1
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	dc 01       	movw	r26, r24
     444:	80 93 b6 01 	sts	0x01B6, r24
     448:	90 93 b7 01 	sts	0x01B7, r25
     44c:	a0 93 b8 01 	sts	0x01B8, r26
     450:	b0 93 b9 01 	sts	0x01B9, r27
     454:	80 93 c6 01 	sts	0x01C6, r24
     458:	90 93 c7 01 	sts	0x01C7, r25
     45c:	a0 93 c8 01 	sts	0x01C8, r26
     460:	b0 93 c9 01 	sts	0x01C9, r27
     464:	80 93 bc 01 	sts	0x01BC, r24
     468:	90 93 bd 01 	sts	0x01BD, r25
     46c:	a0 93 be 01 	sts	0x01BE, r26
     470:	b0 93 bf 01 	sts	0x01BF, r27
}
     474:	08 95       	ret

00000476 <on_off>:

void on_off(){ disp_on_off(); }
     476:	df de       	rcall	.-578    	; 0x236 <disp_on_off>
     478:	08 95       	ret

0000047a <decide>:
2 - Middle Operator pressed, op.
3 - Input second operand, b.
4 - Result displayed.
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
     47a:	7f 92       	push	r7
     47c:	8f 92       	push	r8
     47e:	9f 92       	push	r9
     480:	af 92       	push	r10
     482:	bf 92       	push	r11
     484:	cf 92       	push	r12
     486:	df 92       	push	r13
     488:	ef 92       	push	r14
     48a:	ff 92       	push	r15
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	18 2f       	mov	r17, r24
     496:	eb 01       	movw	r28, r22
     498:	4a 01       	movw	r8, r20
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     49a:	08 2f       	mov	r16, r24
     49c:	00 53       	subi	r16, 0x30	; 48
            count++;
            break;

        case 4:
            if (digit) {
                line[0] = ' ';
     49e:	90 e2       	ldi	r25, 0x20	; 32
     4a0:	79 2e       	mov	r7, r25

                move_to(0, 0);					//начало верхней строки
                send_string(line); 				// Clear 1st line.

                move_to(0, 0);
                a = b = op = count = 0;
     4a2:	0f 2e       	mov	r0, r31
     4a4:	f0 e0       	ldi	r31, 0x00	; 0
     4a6:	cf 2e       	mov	r12, r31
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	df 2e       	mov	r13, r31
     4ac:	f0 e0       	ldi	r31, 0x00	; 0
     4ae:	ef 2e       	mov	r14, r31
     4b0:	f0 e0       	ldi	r31, 0x00	; 0
     4b2:	ff 2e       	mov	r15, r31
     4b4:	f0 2d       	mov	r31, r0
                state = 1;
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	a8 2e       	mov	r10, r24
     4ba:	b1 2c       	mov	r11, r1
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     4bc:	0a 30       	cpi	r16, 0x0A	; 10
     4be:	08 f0       	brcs	.+2      	; 0x4c2 <decide+0x48>
     4c0:	b8 c0       	rjmp	.+368    	; 0x632 <decide+0x1b8>
    {
		unsigned char digit = key - '0'; // '2' --> 2

        switch (state) {
     4c2:	80 91 ba 01 	lds	r24, 0x01BA
     4c6:	90 91 bb 01 	lds	r25, 0x01BB
     4ca:	82 30       	cpi	r24, 0x02	; 2
     4cc:	91 05       	cpc	r25, r1
     4ce:	09 f4       	brne	.+2      	; 0x4d2 <decide+0x58>
     4d0:	4b c0       	rjmp	.+150    	; 0x568 <decide+0xee>
     4d2:	83 30       	cpi	r24, 0x03	; 3
     4d4:	91 05       	cpc	r25, r1
     4d6:	38 f4       	brcc	.+14     	; 0x4e6 <decide+0x6c>
     4d8:	00 97       	sbiw	r24, 0x00	; 0
     4da:	71 f0       	breq	.+28     	; 0x4f8 <decide+0x7e>
     4dc:	81 30       	cpi	r24, 0x01	; 1
     4de:	91 05       	cpc	r25, r1
     4e0:	09 f0       	breq	.+2      	; 0x4e4 <decide+0x6a>
     4e2:	88 c1       	rjmp	.+784    	; 0x7f4 <decide+0x37a>
     4e4:	11 c0       	rjmp	.+34     	; 0x508 <decide+0x8e>
     4e6:	83 30       	cpi	r24, 0x03	; 3
     4e8:	91 05       	cpc	r25, r1
     4ea:	09 f4       	brne	.+2      	; 0x4ee <decide+0x74>
     4ec:	45 c0       	rjmp	.+138    	; 0x578 <decide+0xfe>
     4ee:	84 30       	cpi	r24, 0x04	; 4
     4f0:	91 05       	cpc	r25, r1
     4f2:	09 f0       	breq	.+2      	; 0x4f6 <decide+0x7c>
     4f4:	7f c1       	rjmp	.+766    	; 0x7f4 <decide+0x37a>
     4f6:	72 c0       	rjmp	.+228    	; 0x5dc <decide+0x162>

        case 0:
            if (digit) {
     4f8:	00 23       	and	r16, r16
     4fa:	31 f0       	breq	.+12     	; 0x508 <decide+0x8e>
                //clear(); 						// Clear screen if input is non-zero.
                state = 1;
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	90 93 bb 01 	sts	0x01BB, r25
     504:	80 93 ba 01 	sts	0x01BA, r24
            }

        case 1:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.
     508:	80 91 c0 01 	lds	r24, 0x01C0
     50c:	90 91 c1 01 	lds	r25, 0x01C1
     510:	8e 30       	cpi	r24, 0x0E	; 14
     512:	91 05       	cpc	r25, r1
     514:	09 f4       	brne	.+2      	; 0x518 <decide+0x9e>
     516:	6e c1       	rjmp	.+732    	; 0x7f4 <decide+0x37a>

			if (*is_dec_p == 0) {
     518:	88 81       	ld	r24, Y
     51a:	88 23       	and	r24, r24
     51c:	09 f0       	breq	.+2      	; 0x520 <decide+0xa6>
     51e:	52 c0       	rjmp	.+164    	; 0x5c4 <decide+0x14a>
            	a = a * 10 + digit;				// append to a
     520:	60 91 c6 01 	lds	r22, 0x01C6
     524:	70 91 c7 01 	lds	r23, 0x01C7
     528:	80 91 c8 01 	lds	r24, 0x01C8
     52c:	90 91 c9 01 	lds	r25, 0x01C9
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	40 e2       	ldi	r20, 0x20	; 32
     536:	51 e4       	ldi	r21, 0x41	; 65
     538:	51 d3       	rcall	.+1698   	; 0xbdc <__mulsf3>
     53a:	6b 01       	movw	r12, r22
     53c:	7c 01       	movw	r14, r24
     53e:	60 2f       	mov	r22, r16
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	88 27       	eor	r24, r24
     544:	77 fd       	sbrc	r23, 7
     546:	80 95       	com	r24
     548:	98 2f       	mov	r25, r24
     54a:	68 d4       	rcall	.+2256   	; 0xe1c <__floatsisf>
     54c:	9b 01       	movw	r18, r22
     54e:	ac 01       	movw	r20, r24
     550:	c7 01       	movw	r24, r14
     552:	b6 01       	movw	r22, r12
     554:	f1 d2       	rcall	.+1506   	; 0xb38 <__addsf3>
     556:	60 93 c6 01 	sts	0x01C6, r22
     55a:	70 93 c7 01 	sts	0x01C7, r23
     55e:	80 93 c8 01 	sts	0x01C8, r24
     562:	90 93 c9 01 	sts	0x01C9, r25
     566:	2e c0       	rjmp	.+92     	; 0x5c4 <decide+0x14a>
            send_data(key);
            count++;
            break;

        case 2:
            if (digit) {
     568:	00 23       	and	r16, r16
     56a:	31 f0       	breq	.+12     	; 0x578 <decide+0xfe>
				state = 3;
     56c:	83 e0       	ldi	r24, 0x03	; 3
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	90 93 bb 01 	sts	0x01BB, r25
     574:	80 93 ba 01 	sts	0x01BA, r24
			}

        case 3:
			if (*is_dec_p == 0) {
     578:	88 81       	ld	r24, Y
     57a:	88 23       	and	r24, r24
     57c:	19 f5       	brne	.+70     	; 0x5c4 <decide+0x14a>
            	b = b * 10 + digit;				// append to b
     57e:	60 91 b6 01 	lds	r22, 0x01B6
     582:	70 91 b7 01 	lds	r23, 0x01B7
     586:	80 91 b8 01 	lds	r24, 0x01B8
     58a:	90 91 b9 01 	lds	r25, 0x01B9
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	40 e2       	ldi	r20, 0x20	; 32
     594:	51 e4       	ldi	r21, 0x41	; 65
     596:	22 d3       	rcall	.+1604   	; 0xbdc <__mulsf3>
     598:	6b 01       	movw	r12, r22
     59a:	7c 01       	movw	r14, r24
     59c:	60 2f       	mov	r22, r16
     59e:	70 e0       	ldi	r23, 0x00	; 0
     5a0:	88 27       	eor	r24, r24
     5a2:	77 fd       	sbrc	r23, 7
     5a4:	80 95       	com	r24
     5a6:	98 2f       	mov	r25, r24
     5a8:	39 d4       	rcall	.+2162   	; 0xe1c <__floatsisf>
     5aa:	9b 01       	movw	r18, r22
     5ac:	ac 01       	movw	r20, r24
     5ae:	c7 01       	movw	r24, r14
     5b0:	b6 01       	movw	r22, r12
     5b2:	c2 d2       	rcall	.+1412   	; 0xb38 <__addsf3>
     5b4:	60 93 b6 01 	sts	0x01B6, r22
     5b8:	70 93 b7 01 	sts	0x01B7, r23
     5bc:	80 93 b8 01 	sts	0x01B8, r24
     5c0:	90 93 b9 01 	sts	0x01B9, r25
				b = (b * d + digit) / d;

				*paw_p = *paw_p + 1;
			}*/

            send_data(key);
     5c4:	81 2f       	mov	r24, r17
     5c6:	cf dd       	rcall	.-1122   	; 0x166 <send_data>
            count++;
     5c8:	80 91 c0 01 	lds	r24, 0x01C0
     5cc:	90 91 c1 01 	lds	r25, 0x01C1
     5d0:	01 96       	adiw	r24, 0x01	; 1
     5d2:	90 93 c1 01 	sts	0x01C1, r25
     5d6:	80 93 c0 01 	sts	0x01C0, r24
            break;
     5da:	0c c1       	rjmp	.+536    	; 0x7f4 <decide+0x37a>

        case 4:
            if (digit) {
     5dc:	00 23       	and	r16, r16
     5de:	09 f4       	brne	.+2      	; 0x5e2 <decide+0x168>
     5e0:	09 c1       	rjmp	.+530    	; 0x7f4 <decide+0x37a>
                line[0] = ' ';
     5e2:	70 92 7b 00 	sts	0x007B, r7
                line[1] = ' ';
     5e6:	70 92 7c 00 	sts	0x007C, r7

                move_to(0, 0);					//начало верхней строки
     5ea:	80 e0       	ldi	r24, 0x00	; 0
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	17 de       	rcall	.-978    	; 0x21e <move_to>
                send_string(line); 				// Clear 1st line.
     5f0:	8b e7       	ldi	r24, 0x7B	; 123
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	01 de       	rcall	.-1022   	; 0x1f8 <send_string>

                move_to(0, 0);
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	60 e0       	ldi	r22, 0x00	; 0
     5fa:	11 de       	rcall	.-990    	; 0x21e <move_to>
                a = b = op = count = 0;
     5fc:	10 92 c1 01 	sts	0x01C1, r1
     600:	10 92 c0 01 	sts	0x01C0, r1
     604:	10 92 b5 01 	sts	0x01B5, r1
     608:	c0 92 b6 01 	sts	0x01B6, r12
     60c:	d0 92 b7 01 	sts	0x01B7, r13
     610:	e0 92 b8 01 	sts	0x01B8, r14
     614:	f0 92 b9 01 	sts	0x01B9, r15
     618:	c0 92 c6 01 	sts	0x01C6, r12
     61c:	d0 92 c7 01 	sts	0x01C7, r13
     620:	e0 92 c8 01 	sts	0x01C8, r14
     624:	f0 92 c9 01 	sts	0x01C9, r15
                state = 1;
     628:	b0 92 bb 01 	sts	0x01BB, r11
     62c:	a0 92 ba 01 	sts	0x01BA, r10

                decide(key, is_dec_p, paw_p); 	// Recursively capture digit.
                return;
     630:	45 cf       	rjmp	.-374    	; 0x4bc <decide+0x42>
            break;

        }
    } 

	else if (key == '.') {
     632:	1e 32       	cpi	r17, 0x2E	; 46
     634:	29 f4       	brne	.+10     	; 0x640 <decide+0x1c6>
		*is_dec_p = 1;
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	88 83       	st	Y, r24
		send_data(key);
     63a:	8e e2       	ldi	r24, 0x2E	; 46
     63c:	94 dd       	rcall	.-1240   	; 0x166 <send_data>
     63e:	da c0       	rjmp	.+436    	; 0x7f4 <decide+0x37a>
	}

	else {
		
		*is_dec_p = 0;
     640:	18 82       	st	Y, r1
		*paw_p = 1;		
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	f4 01       	movw	r30, r8
     648:	91 83       	std	Z+1, r25	; 0x01
     64a:	80 83       	st	Z, r24

        switch (key) {
     64c:	1d 33       	cpi	r17, 0x3D	; 61
     64e:	09 f4       	brne	.+2      	; 0x652 <decide+0x1d8>
     650:	99 c0       	rjmp	.+306    	; 0x784 <decide+0x30a>
     652:	15 37       	cpi	r17, 0x75	; 117
     654:	09 f4       	brne	.+2      	; 0x658 <decide+0x1de>
     656:	cd c0       	rjmp	.+410    	; 0x7f2 <decide+0x378>
     658:	1b 32       	cpi	r17, 0x2B	; 43
     65a:	09 f0       	breq	.+2      	; 0x65e <decide+0x1e4>
     65c:	cb c0       	rjmp	.+406    	; 0x7f4 <decide+0x37a>
        case '+':
        /*case '-':
        case 'p':
        case 'm':
		case 'v':*/
            switch (state) {
     65e:	80 91 ba 01 	lds	r24, 0x01BA
     662:	90 91 bb 01 	lds	r25, 0x01BB
     666:	82 30       	cpi	r24, 0x02	; 2
     668:	91 05       	cpc	r25, r1
     66a:	81 f0       	breq	.+32     	; 0x68c <decide+0x212>
     66c:	83 30       	cpi	r24, 0x03	; 3
     66e:	91 05       	cpc	r25, r1
     670:	28 f4       	brcc	.+10     	; 0x67c <decide+0x202>
     672:	81 30       	cpi	r24, 0x01	; 1
     674:	91 05       	cpc	r25, r1
     676:	09 f0       	breq	.+2      	; 0x67a <decide+0x200>
     678:	81 c0       	rjmp	.+258    	; 0x77c <decide+0x302>
     67a:	0b c0       	rjmp	.+22     	; 0x692 <decide+0x218>
     67c:	83 30       	cpi	r24, 0x03	; 3
     67e:	91 05       	cpc	r25, r1
     680:	d1 f0       	breq	.+52     	; 0x6b6 <decide+0x23c>
     682:	84 30       	cpi	r24, 0x04	; 4
     684:	91 05       	cpc	r25, r1
     686:	09 f0       	breq	.+2      	; 0x68a <decide+0x210>
     688:	79 c0       	rjmp	.+242    	; 0x77c <decide+0x302>
     68a:	44 c0       	rjmp	.+136    	; 0x714 <decide+0x29a>

            case 2:
                move_to(0,0); 		// Modify the operand displayed.
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	60 e0       	ldi	r22, 0x00	; 0
     690:	c6 dd       	rcall	.-1140   	; 0x21e <move_to>

            case 1:
                send_data(key);
     692:	8b e2       	ldi	r24, 0x2B	; 43
     694:	68 dd       	rcall	.-1328   	; 0x166 <send_data>
                count++;
     696:	80 91 c0 01 	lds	r24, 0x01C0
     69a:	90 91 c1 01 	lds	r25, 0x01C1
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	90 93 c1 01 	sts	0x01C1, r25
     6a4:	80 93 c0 01 	sts	0x01C0, r24
                state = 2;
     6a8:	82 e0       	ldi	r24, 0x02	; 2
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	90 93 bb 01 	sts	0x01BB, r25
     6b0:	80 93 ba 01 	sts	0x01BA, r24
                break;
     6b4:	63 c0       	rjmp	.+198    	; 0x77c <decide+0x302>

            case 3:
                calculate(a, op, b);
     6b6:	60 91 c6 01 	lds	r22, 0x01C6
     6ba:	70 91 c7 01 	lds	r23, 0x01C7
     6be:	80 91 c8 01 	lds	r24, 0x01C8
     6c2:	90 91 c9 01 	lds	r25, 0x01C9
     6c6:	00 91 b6 01 	lds	r16, 0x01B6
     6ca:	10 91 b7 01 	lds	r17, 0x01B7
     6ce:	20 91 b8 01 	lds	r18, 0x01B8
     6d2:	30 91 b9 01 	lds	r19, 0x01B9
     6d6:	40 91 b5 01 	lds	r20, 0x01B5
     6da:	57 de       	rcall	.-850    	; 0x38a <calculate>
                show_result();
     6dc:	6d de       	rcall	.-806    	; 0x3b8 <show_result>
				ans = calculate(a, op, b);
     6de:	60 91 c6 01 	lds	r22, 0x01C6
     6e2:	70 91 c7 01 	lds	r23, 0x01C7
     6e6:	80 91 c8 01 	lds	r24, 0x01C8
     6ea:	90 91 c9 01 	lds	r25, 0x01C9
     6ee:	00 91 b6 01 	lds	r16, 0x01B6
     6f2:	10 91 b7 01 	lds	r17, 0x01B7
     6f6:	20 91 b8 01 	lds	r18, 0x01B8
     6fa:	30 91 b9 01 	lds	r19, 0x01B9
     6fe:	40 91 b5 01 	lds	r20, 0x01B5
     702:	43 de       	rcall	.-890    	; 0x38a <calculate>
     704:	60 93 c2 01 	sts	0x01C2, r22
     708:	70 93 c3 01 	sts	0x01C3, r23
     70c:	80 93 c4 01 	sts	0x01C4, r24
     710:	90 93 c5 01 	sts	0x01C5, r25

            case 4:
                move_to(0, 0);
     714:	80 e0       	ldi	r24, 0x00	; 0
     716:	60 e0       	ldi	r22, 0x00	; 0
     718:	82 dd       	rcall	.-1276   	; 0x21e <move_to>
                line[0] = 'A'; 		// 'A' represents current result.
     71a:	81 e4       	ldi	r24, 0x41	; 65
     71c:	80 93 7b 00 	sts	0x007B, r24
                line[1] = key; 		// Operator of the operation.
     720:	8b e2       	ldi	r24, 0x2B	; 43
     722:	80 93 7c 00 	sts	0x007C, r24
                send_string(line);
     726:	8b e7       	ldi	r24, 0x7B	; 123
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	66 dd       	rcall	.-1332   	; 0x1f8 <send_string>

                move_to(2,0);
     72c:	82 e0       	ldi	r24, 0x02	; 2
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	76 dd       	rcall	.-1300   	; 0x21e <move_to>
                count = 2;
     732:	22 e0       	ldi	r18, 0x02	; 2
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	30 93 c1 01 	sts	0x01C1, r19
     73a:	20 93 c0 01 	sts	0x01C0, r18
                a = r; 				// Put result into a.
     73e:	80 91 bc 01 	lds	r24, 0x01BC
     742:	90 91 bd 01 	lds	r25, 0x01BD
     746:	a0 91 be 01 	lds	r26, 0x01BE
     74a:	b0 91 bf 01 	lds	r27, 0x01BF
     74e:	80 93 c6 01 	sts	0x01C6, r24
     752:	90 93 c7 01 	sts	0x01C7, r25
     756:	a0 93 c8 01 	sts	0x01C8, r26
     75a:	b0 93 c9 01 	sts	0x01C9, r27
                b = 0; 				// Clear b.
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	dc 01       	movw	r26, r24
     764:	80 93 b6 01 	sts	0x01B6, r24
     768:	90 93 b7 01 	sts	0x01B7, r25
     76c:	a0 93 b8 01 	sts	0x01B8, r26
     770:	b0 93 b9 01 	sts	0x01B9, r27
                state = 2;
     774:	30 93 bb 01 	sts	0x01BB, r19
     778:	20 93 ba 01 	sts	0x01BA, r18

                break;
            }

            op = key;
     77c:	8b e2       	ldi	r24, 0x2B	; 43
     77e:	80 93 b5 01 	sts	0x01B5, r24

            break;
     782:	38 c0       	rjmp	.+112    	; 0x7f4 <decide+0x37a>

        case '=':
            if(state == 3){
     784:	80 91 ba 01 	lds	r24, 0x01BA
     788:	90 91 bb 01 	lds	r25, 0x01BB
     78c:	83 30       	cpi	r24, 0x03	; 3
     78e:	91 05       	cpc	r25, r1
     790:	89 f5       	brne	.+98     	; 0x7f4 <decide+0x37a>
                calculate(a, op, b);
     792:	60 91 c6 01 	lds	r22, 0x01C6
     796:	70 91 c7 01 	lds	r23, 0x01C7
     79a:	80 91 c8 01 	lds	r24, 0x01C8
     79e:	90 91 c9 01 	lds	r25, 0x01C9
     7a2:	00 91 b6 01 	lds	r16, 0x01B6
     7a6:	10 91 b7 01 	lds	r17, 0x01B7
     7aa:	20 91 b8 01 	lds	r18, 0x01B8
     7ae:	30 91 b9 01 	lds	r19, 0x01B9
     7b2:	40 91 b5 01 	lds	r20, 0x01B5
     7b6:	e9 dd       	rcall	.-1070   	; 0x38a <calculate>
                show_result();
     7b8:	ff dd       	rcall	.-1026   	; 0x3b8 <show_result>
				ans = calculate(a, op, b);
     7ba:	60 91 c6 01 	lds	r22, 0x01C6
     7be:	70 91 c7 01 	lds	r23, 0x01C7
     7c2:	80 91 c8 01 	lds	r24, 0x01C8
     7c6:	90 91 c9 01 	lds	r25, 0x01C9
     7ca:	00 91 b6 01 	lds	r16, 0x01B6
     7ce:	10 91 b7 01 	lds	r17, 0x01B7
     7d2:	20 91 b8 01 	lds	r18, 0x01B8
     7d6:	30 91 b9 01 	lds	r19, 0x01B9
     7da:	40 91 b5 01 	lds	r20, 0x01B5
     7de:	d5 dd       	rcall	.-1110   	; 0x38a <calculate>
     7e0:	60 93 c2 01 	sts	0x01C2, r22
     7e4:	70 93 c3 01 	sts	0x01C3, r23
     7e8:	80 93 c4 01 	sts	0x01C4, r24
     7ec:	90 93 c5 01 	sts	0x01C5, r25
     7f0:	01 c0       	rjmp	.+2      	; 0x7f4 <decide+0x37a>
		case 'O':
			on_off();
			break;*/

		case 'u':
			uart();
     7f2:	9b dd       	rcall	.-1226   	; 0x32a <uart>
			break;
        }
    }
}
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	1f 91       	pop	r17
     7fa:	0f 91       	pop	r16
     7fc:	ff 90       	pop	r15
     7fe:	ef 90       	pop	r14
     800:	df 90       	pop	r13
     802:	cf 90       	pop	r12
     804:	bf 90       	pop	r11
     806:	af 90       	pop	r10
     808:	9f 90       	pop	r9
     80a:	8f 90       	pop	r8
     80c:	7f 90       	pop	r7
     80e:	08 95       	ret

00000810 <run>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
}

void run() {
     810:	ef 92       	push	r14
     812:	ff 92       	push	r15
     814:	0f 93       	push	r16
     816:	1f 93       	push	r17
     818:	df 93       	push	r29
     81a:	cf 93       	push	r28
     81c:	00 d0       	rcall	.+0      	; 0x81e <run+0xe>
     81e:	0f 92       	push	r0
     820:	cd b7       	in	r28, 0x3d	; 61
     822:	de b7       	in	r29, 0x3e	; 62
	bool *is_dec_p;
	bool is_decimal = 0;		//флаг (0 - целая часть, 1 - дробная)
     824:	19 82       	std	Y+1, r1	; 0x01
	is_dec_p = &is_decimal;

	int *paw_p;
	int paw = 1;				//разряд после запятой
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	9b 83       	std	Y+3, r25	; 0x03
     82c:	8a 83       	std	Y+2, r24	; 0x02
	paw_p = &paw;
     82e:	22 e0       	ldi	r18, 0x02	; 2
     830:	e2 2e       	mov	r14, r18
     832:	f1 2c       	mov	r15, r1
     834:	ec 0e       	add	r14, r28
     836:	fd 1e       	adc	r15, r29

    while (1) {
        decide(scan_key(), is_dec_p, paw_p);
     838:	8e 01       	movw	r16, r28
     83a:	0f 5f       	subi	r16, 0xFF	; 255
     83c:	1f 4f       	sbci	r17, 0xFF	; 255
     83e:	2b dd       	rcall	.-1450   	; 0x296 <scan_key>
     840:	b8 01       	movw	r22, r16
     842:	a7 01       	movw	r20, r14
     844:	1a de       	rcall	.-972    	; 0x47a <decide>
     846:	fb cf       	rjmp	.-10     	; 0x83e <run+0x2e>

00000848 <init_calculator>:
     848:	8f e9       	ldi	r24, 0x9F	; 159
     84a:	96 e8       	ldi	r25, 0x86	; 134
     84c:	a1 e0       	ldi	r26, 0x01	; 1
     84e:	81 50       	subi	r24, 0x01	; 1
     850:	90 40       	sbci	r25, 0x00	; 0
     852:	a0 40       	sbci	r26, 0x00	; 0
     854:	e1 f7       	brne	.-8      	; 0x84e <init_calculator+0x6>
     856:	00 c0       	rjmp	.+0      	; 0x858 <init_calculator+0x10>
     858:	00 00       	nop
static char buffer[16];
static char overflow[] = "   Overflow   ";

void init_calculator() {
    _delay_ms(500);
    init_display();
     85a:	93 dc       	rcall	.-1754   	; 0x182 <init_display>
    init_keyboard();
     85c:	15 dd       	rcall	.-1494   	; 0x288 <init_keyboard>

    reset();
     85e:	e1 dd       	rcall	.-1086   	; 0x422 <reset>
    run();
     860:	d7 df       	rcall	.-82     	; 0x810 <run>
}
     862:	08 95       	ret

00000864 <UsartInit>:
#include <stdio.h>
#include "uart.h"

void UsartInit()
{
  UBRRL=25;                  //1 000 000 / (2400 * 16) - 1 = 25
     864:	89 e1       	ldi	r24, 0x19	; 25
     866:	89 b9       	out	0x09, r24	; 9
  UCSRB=(1<<TXEN);              //?ac?aoaai ia?aaa?o
     868:	88 e0       	ldi	r24, 0x08	; 8
     86a:	8a b9       	out	0x0a, r24	; 10
  UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));    //?a?ei ?aaiou 8 aeo
     86c:	86 e8       	ldi	r24, 0x86	; 134
     86e:	80 bd       	out	0x20, r24	; 32
}
     870:	08 95       	ret

00000872 <Transmit>:

void Transmit(char* data)
{
     872:	cf 93       	push	r28
     874:	df 93       	push	r29
  for (int i=0; i<strlen(data); i++)
     876:	28 2f       	mov	r18, r24
     878:	39 2f       	mov	r19, r25
     87a:	e9 01       	movw	r28, r18
     87c:	20 e0       	ldi	r18, 0x00	; 0
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	06 c0       	rjmp	.+12     	; 0x88e <Transmit+0x1c>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
     882:	5d 9b       	sbis	0x0b, 5	; 11
     884:	fe cf       	rjmp	.-4      	; 0x882 <Transmit+0x10>
      UDR = data[i];
     886:	49 91       	ld	r20, Y+
     888:	4c b9       	out	0x0c, r20	; 12
  UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));    //?a?ei ?aaiou 8 aeo
}

void Transmit(char* data)
{
  for (int i=0; i<strlen(data); i++)
     88a:	2f 5f       	subi	r18, 0xFF	; 255
     88c:	3f 4f       	sbci	r19, 0xFF	; 255
     88e:	fc 01       	movw	r30, r24
     890:	01 90       	ld	r0, Z+
     892:	00 20       	and	r0, r0
     894:	e9 f7       	brne	.-6      	; 0x890 <Transmit+0x1e>
     896:	31 97       	sbiw	r30, 0x01	; 1
     898:	e8 1b       	sub	r30, r24
     89a:	f9 0b       	sbc	r31, r25
     89c:	2e 17       	cp	r18, r30
     89e:	3f 07       	cpc	r19, r31
     8a0:	80 f3       	brcs	.-32     	; 0x882 <Transmit+0x10>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
      UDR = data[i];
    //_delay_ms(1000);
  }
}
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	08 95       	ret

000008a8 <_fpadd_parts>:
     8a8:	a0 e0       	ldi	r26, 0x00	; 0
     8aa:	b0 e0       	ldi	r27, 0x00	; 0
     8ac:	e9 e5       	ldi	r30, 0x59	; 89
     8ae:	f4 e0       	ldi	r31, 0x04	; 4
     8b0:	fe c4       	rjmp	.+2556   	; 0x12ae <__prologue_saves__+0x8>
     8b2:	fc 01       	movw	r30, r24
     8b4:	ea 01       	movw	r28, r20
     8b6:	80 81       	ld	r24, Z
     8b8:	82 30       	cpi	r24, 0x02	; 2
     8ba:	08 f4       	brcc	.+2      	; 0x8be <_fpadd_parts+0x16>
     8bc:	38 c1       	rjmp	.+624    	; 0xb2e <_fpadd_parts+0x286>
     8be:	db 01       	movw	r26, r22
     8c0:	9c 91       	ld	r25, X
     8c2:	92 30       	cpi	r25, 0x02	; 2
     8c4:	08 f4       	brcc	.+2      	; 0x8c8 <_fpadd_parts+0x20>
     8c6:	30 c1       	rjmp	.+608    	; 0xb28 <_fpadd_parts+0x280>
     8c8:	84 30       	cpi	r24, 0x04	; 4
     8ca:	59 f4       	brne	.+22     	; 0x8e2 <_fpadd_parts+0x3a>
     8cc:	94 30       	cpi	r25, 0x04	; 4
     8ce:	09 f0       	breq	.+2      	; 0x8d2 <_fpadd_parts+0x2a>
     8d0:	2e c1       	rjmp	.+604    	; 0xb2e <_fpadd_parts+0x286>
     8d2:	91 81       	ldd	r25, Z+1	; 0x01
     8d4:	11 96       	adiw	r26, 0x01	; 1
     8d6:	8c 91       	ld	r24, X
     8d8:	11 97       	sbiw	r26, 0x01	; 1
     8da:	98 17       	cp	r25, r24
     8dc:	09 f0       	breq	.+2      	; 0x8e0 <_fpadd_parts+0x38>
     8de:	21 c1       	rjmp	.+578    	; 0xb22 <_fpadd_parts+0x27a>
     8e0:	26 c1       	rjmp	.+588    	; 0xb2e <_fpadd_parts+0x286>
     8e2:	94 30       	cpi	r25, 0x04	; 4
     8e4:	09 f4       	brne	.+2      	; 0x8e8 <_fpadd_parts+0x40>
     8e6:	20 c1       	rjmp	.+576    	; 0xb28 <_fpadd_parts+0x280>
     8e8:	92 30       	cpi	r25, 0x02	; 2
     8ea:	b1 f4       	brne	.+44     	; 0x918 <_fpadd_parts+0x70>
     8ec:	82 30       	cpi	r24, 0x02	; 2
     8ee:	09 f0       	breq	.+2      	; 0x8f2 <_fpadd_parts+0x4a>
     8f0:	1e c1       	rjmp	.+572    	; 0xb2e <_fpadd_parts+0x286>
     8f2:	ca 01       	movw	r24, r20
     8f4:	af 01       	movw	r20, r30
     8f6:	28 e0       	ldi	r18, 0x08	; 8
     8f8:	da 01       	movw	r26, r20
     8fa:	0d 90       	ld	r0, X+
     8fc:	ad 01       	movw	r20, r26
     8fe:	dc 01       	movw	r26, r24
     900:	0d 92       	st	X+, r0
     902:	cd 01       	movw	r24, r26
     904:	21 50       	subi	r18, 0x01	; 1
     906:	c1 f7       	brne	.-16     	; 0x8f8 <_fpadd_parts+0x50>
     908:	db 01       	movw	r26, r22
     90a:	11 96       	adiw	r26, 0x01	; 1
     90c:	8c 91       	ld	r24, X
     90e:	11 97       	sbiw	r26, 0x01	; 1
     910:	91 81       	ldd	r25, Z+1	; 0x01
     912:	89 23       	and	r24, r25
     914:	89 83       	std	Y+1, r24	; 0x01
     916:	0a c1       	rjmp	.+532    	; 0xb2c <_fpadd_parts+0x284>
     918:	82 30       	cpi	r24, 0x02	; 2
     91a:	09 f4       	brne	.+2      	; 0x91e <_fpadd_parts+0x76>
     91c:	05 c1       	rjmp	.+522    	; 0xb28 <_fpadd_parts+0x280>
     91e:	c2 80       	ldd	r12, Z+2	; 0x02
     920:	d3 80       	ldd	r13, Z+3	; 0x03
     922:	db 01       	movw	r26, r22
     924:	12 96       	adiw	r26, 0x02	; 2
     926:	6d 90       	ld	r6, X+
     928:	7c 90       	ld	r7, X
     92a:	13 97       	sbiw	r26, 0x03	; 3
     92c:	24 81       	ldd	r18, Z+4	; 0x04
     92e:	35 81       	ldd	r19, Z+5	; 0x05
     930:	46 81       	ldd	r20, Z+6	; 0x06
     932:	57 81       	ldd	r21, Z+7	; 0x07
     934:	14 96       	adiw	r26, 0x04	; 4
     936:	ed 90       	ld	r14, X+
     938:	fd 90       	ld	r15, X+
     93a:	0d 91       	ld	r16, X+
     93c:	1c 91       	ld	r17, X
     93e:	17 97       	sbiw	r26, 0x07	; 7
     940:	c6 01       	movw	r24, r12
     942:	86 19       	sub	r24, r6
     944:	97 09       	sbc	r25, r7
     946:	5c 01       	movw	r10, r24
     948:	97 ff       	sbrs	r25, 7
     94a:	04 c0       	rjmp	.+8      	; 0x954 <_fpadd_parts+0xac>
     94c:	aa 24       	eor	r10, r10
     94e:	bb 24       	eor	r11, r11
     950:	a8 1a       	sub	r10, r24
     952:	b9 0a       	sbc	r11, r25
     954:	b0 e2       	ldi	r27, 0x20	; 32
     956:	ab 16       	cp	r10, r27
     958:	b1 04       	cpc	r11, r1
     95a:	0c f0       	brlt	.+2      	; 0x95e <_fpadd_parts+0xb6>
     95c:	61 c0       	rjmp	.+194    	; 0xa20 <_fpadd_parts+0x178>
     95e:	18 16       	cp	r1, r24
     960:	19 06       	cpc	r1, r25
     962:	6c f5       	brge	.+90     	; 0x9be <_fpadd_parts+0x116>
     964:	37 01       	movw	r6, r14
     966:	48 01       	movw	r8, r16
     968:	0a 2c       	mov	r0, r10
     96a:	04 c0       	rjmp	.+8      	; 0x974 <_fpadd_parts+0xcc>
     96c:	96 94       	lsr	r9
     96e:	87 94       	ror	r8
     970:	77 94       	ror	r7
     972:	67 94       	ror	r6
     974:	0a 94       	dec	r0
     976:	d2 f7       	brpl	.-12     	; 0x96c <_fpadd_parts+0xc4>
     978:	81 e0       	ldi	r24, 0x01	; 1
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	a0 e0       	ldi	r26, 0x00	; 0
     97e:	b0 e0       	ldi	r27, 0x00	; 0
     980:	0a 2c       	mov	r0, r10
     982:	04 c0       	rjmp	.+8      	; 0x98c <_fpadd_parts+0xe4>
     984:	88 0f       	add	r24, r24
     986:	99 1f       	adc	r25, r25
     988:	aa 1f       	adc	r26, r26
     98a:	bb 1f       	adc	r27, r27
     98c:	0a 94       	dec	r0
     98e:	d2 f7       	brpl	.-12     	; 0x984 <_fpadd_parts+0xdc>
     990:	01 97       	sbiw	r24, 0x01	; 1
     992:	a1 09       	sbc	r26, r1
     994:	b1 09       	sbc	r27, r1
     996:	8e 21       	and	r24, r14
     998:	9f 21       	and	r25, r15
     99a:	a0 23       	and	r26, r16
     99c:	b1 23       	and	r27, r17
     99e:	ee 24       	eor	r14, r14
     9a0:	ff 24       	eor	r15, r15
     9a2:	87 01       	movw	r16, r14
     9a4:	e3 94       	inc	r14
     9a6:	00 97       	sbiw	r24, 0x00	; 0
     9a8:	a1 05       	cpc	r26, r1
     9aa:	b1 05       	cpc	r27, r1
     9ac:	19 f4       	brne	.+6      	; 0x9b4 <_fpadd_parts+0x10c>
     9ae:	ee 24       	eor	r14, r14
     9b0:	ff 24       	eor	r15, r15
     9b2:	87 01       	movw	r16, r14
     9b4:	e6 28       	or	r14, r6
     9b6:	f7 28       	or	r15, r7
     9b8:	08 29       	or	r16, r8
     9ba:	19 29       	or	r17, r9
     9bc:	3c c0       	rjmp	.+120    	; 0xa36 <_fpadd_parts+0x18e>
     9be:	00 97       	sbiw	r24, 0x00	; 0
     9c0:	d1 f1       	breq	.+116    	; 0xa36 <_fpadd_parts+0x18e>
     9c2:	ca 0c       	add	r12, r10
     9c4:	db 1c       	adc	r13, r11
     9c6:	39 01       	movw	r6, r18
     9c8:	4a 01       	movw	r8, r20
     9ca:	0a 2c       	mov	r0, r10
     9cc:	04 c0       	rjmp	.+8      	; 0x9d6 <_fpadd_parts+0x12e>
     9ce:	96 94       	lsr	r9
     9d0:	87 94       	ror	r8
     9d2:	77 94       	ror	r7
     9d4:	67 94       	ror	r6
     9d6:	0a 94       	dec	r0
     9d8:	d2 f7       	brpl	.-12     	; 0x9ce <_fpadd_parts+0x126>
     9da:	81 e0       	ldi	r24, 0x01	; 1
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	a0 e0       	ldi	r26, 0x00	; 0
     9e0:	b0 e0       	ldi	r27, 0x00	; 0
     9e2:	0a 2c       	mov	r0, r10
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <_fpadd_parts+0x146>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	0a 94       	dec	r0
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <_fpadd_parts+0x13e>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	82 23       	and	r24, r18
     9fa:	93 23       	and	r25, r19
     9fc:	a4 23       	and	r26, r20
     9fe:	b5 23       	and	r27, r21
     a00:	21 e0       	ldi	r18, 0x01	; 1
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	00 97       	sbiw	r24, 0x00	; 0
     a0a:	a1 05       	cpc	r26, r1
     a0c:	b1 05       	cpc	r27, r1
     a0e:	19 f4       	brne	.+6      	; 0xa16 <_fpadd_parts+0x16e>
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	a9 01       	movw	r20, r18
     a16:	26 29       	or	r18, r6
     a18:	37 29       	or	r19, r7
     a1a:	48 29       	or	r20, r8
     a1c:	59 29       	or	r21, r9
     a1e:	0b c0       	rjmp	.+22     	; 0xa36 <_fpadd_parts+0x18e>
     a20:	6c 14       	cp	r6, r12
     a22:	7d 04       	cpc	r7, r13
     a24:	24 f4       	brge	.+8      	; 0xa2e <_fpadd_parts+0x186>
     a26:	ee 24       	eor	r14, r14
     a28:	ff 24       	eor	r15, r15
     a2a:	87 01       	movw	r16, r14
     a2c:	04 c0       	rjmp	.+8      	; 0xa36 <_fpadd_parts+0x18e>
     a2e:	63 01       	movw	r12, r6
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	30 e0       	ldi	r19, 0x00	; 0
     a34:	a9 01       	movw	r20, r18
     a36:	81 81       	ldd	r24, Z+1	; 0x01
     a38:	fb 01       	movw	r30, r22
     a3a:	91 81       	ldd	r25, Z+1	; 0x01
     a3c:	89 17       	cp	r24, r25
     a3e:	09 f4       	brne	.+2      	; 0xa42 <_fpadd_parts+0x19a>
     a40:	45 c0       	rjmp	.+138    	; 0xacc <_fpadd_parts+0x224>
     a42:	88 23       	and	r24, r24
     a44:	49 f0       	breq	.+18     	; 0xa58 <_fpadd_parts+0x1b0>
     a46:	d8 01       	movw	r26, r16
     a48:	c7 01       	movw	r24, r14
     a4a:	82 1b       	sub	r24, r18
     a4c:	93 0b       	sbc	r25, r19
     a4e:	a4 0b       	sbc	r26, r20
     a50:	b5 0b       	sbc	r27, r21
     a52:	9c 01       	movw	r18, r24
     a54:	ad 01       	movw	r20, r26
     a56:	04 c0       	rjmp	.+8      	; 0xa60 <_fpadd_parts+0x1b8>
     a58:	2e 19       	sub	r18, r14
     a5a:	3f 09       	sbc	r19, r15
     a5c:	40 0b       	sbc	r20, r16
     a5e:	51 0b       	sbc	r21, r17
     a60:	57 fd       	sbrc	r21, 7
     a62:	04 c0       	rjmp	.+8      	; 0xa6c <_fpadd_parts+0x1c4>
     a64:	19 82       	std	Y+1, r1	; 0x01
     a66:	db 82       	std	Y+3, r13	; 0x03
     a68:	ca 82       	std	Y+2, r12	; 0x02
     a6a:	0b c0       	rjmp	.+22     	; 0xa82 <_fpadd_parts+0x1da>
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	89 83       	std	Y+1, r24	; 0x01
     a70:	db 82       	std	Y+3, r13	; 0x03
     a72:	ca 82       	std	Y+2, r12	; 0x02
     a74:	50 95       	com	r21
     a76:	40 95       	com	r20
     a78:	30 95       	com	r19
     a7a:	21 95       	neg	r18
     a7c:	3f 4f       	sbci	r19, 0xFF	; 255
     a7e:	4f 4f       	sbci	r20, 0xFF	; 255
     a80:	5f 4f       	sbci	r21, 0xFF	; 255
     a82:	2c 83       	std	Y+4, r18	; 0x04
     a84:	3d 83       	std	Y+5, r19	; 0x05
     a86:	4e 83       	std	Y+6, r20	; 0x06
     a88:	5f 83       	std	Y+7, r21	; 0x07
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <_fpadd_parts+0x1fe>
     a8c:	88 0f       	add	r24, r24
     a8e:	99 1f       	adc	r25, r25
     a90:	aa 1f       	adc	r26, r26
     a92:	bb 1f       	adc	r27, r27
     a94:	8c 83       	std	Y+4, r24	; 0x04
     a96:	9d 83       	std	Y+5, r25	; 0x05
     a98:	ae 83       	std	Y+6, r26	; 0x06
     a9a:	bf 83       	std	Y+7, r27	; 0x07
     a9c:	8a 81       	ldd	r24, Y+2	; 0x02
     a9e:	9b 81       	ldd	r25, Y+3	; 0x03
     aa0:	01 97       	sbiw	r24, 0x01	; 1
     aa2:	9b 83       	std	Y+3, r25	; 0x03
     aa4:	8a 83       	std	Y+2, r24	; 0x02
     aa6:	8c 81       	ldd	r24, Y+4	; 0x04
     aa8:	9d 81       	ldd	r25, Y+5	; 0x05
     aaa:	ae 81       	ldd	r26, Y+6	; 0x06
     aac:	bf 81       	ldd	r27, Y+7	; 0x07
     aae:	9c 01       	movw	r18, r24
     ab0:	ad 01       	movw	r20, r26
     ab2:	21 50       	subi	r18, 0x01	; 1
     ab4:	30 40       	sbci	r19, 0x00	; 0
     ab6:	40 40       	sbci	r20, 0x00	; 0
     ab8:	50 40       	sbci	r21, 0x00	; 0
     aba:	2f 3f       	cpi	r18, 0xFF	; 255
     abc:	ef ef       	ldi	r30, 0xFF	; 255
     abe:	3e 07       	cpc	r19, r30
     ac0:	ef ef       	ldi	r30, 0xFF	; 255
     ac2:	4e 07       	cpc	r20, r30
     ac4:	ef e3       	ldi	r30, 0x3F	; 63
     ac6:	5e 07       	cpc	r21, r30
     ac8:	08 f3       	brcs	.-62     	; 0xa8c <_fpadd_parts+0x1e4>
     aca:	0b c0       	rjmp	.+22     	; 0xae2 <_fpadd_parts+0x23a>
     acc:	89 83       	std	Y+1, r24	; 0x01
     ace:	db 82       	std	Y+3, r13	; 0x03
     ad0:	ca 82       	std	Y+2, r12	; 0x02
     ad2:	2e 0d       	add	r18, r14
     ad4:	3f 1d       	adc	r19, r15
     ad6:	40 1f       	adc	r20, r16
     ad8:	51 1f       	adc	r21, r17
     ada:	2c 83       	std	Y+4, r18	; 0x04
     adc:	3d 83       	std	Y+5, r19	; 0x05
     ade:	4e 83       	std	Y+6, r20	; 0x06
     ae0:	5f 83       	std	Y+7, r21	; 0x07
     ae2:	83 e0       	ldi	r24, 0x03	; 3
     ae4:	88 83       	st	Y, r24
     ae6:	2c 81       	ldd	r18, Y+4	; 0x04
     ae8:	3d 81       	ldd	r19, Y+5	; 0x05
     aea:	4e 81       	ldd	r20, Y+6	; 0x06
     aec:	5f 81       	ldd	r21, Y+7	; 0x07
     aee:	57 ff       	sbrs	r21, 7
     af0:	1d c0       	rjmp	.+58     	; 0xb2c <_fpadd_parts+0x284>
     af2:	da 01       	movw	r26, r20
     af4:	c9 01       	movw	r24, r18
     af6:	81 70       	andi	r24, 0x01	; 1
     af8:	90 70       	andi	r25, 0x00	; 0
     afa:	a0 70       	andi	r26, 0x00	; 0
     afc:	b0 70       	andi	r27, 0x00	; 0
     afe:	56 95       	lsr	r21
     b00:	47 95       	ror	r20
     b02:	37 95       	ror	r19
     b04:	27 95       	ror	r18
     b06:	82 2b       	or	r24, r18
     b08:	93 2b       	or	r25, r19
     b0a:	a4 2b       	or	r26, r20
     b0c:	b5 2b       	or	r27, r21
     b0e:	8c 83       	std	Y+4, r24	; 0x04
     b10:	9d 83       	std	Y+5, r25	; 0x05
     b12:	ae 83       	std	Y+6, r26	; 0x06
     b14:	bf 83       	std	Y+7, r27	; 0x07
     b16:	8a 81       	ldd	r24, Y+2	; 0x02
     b18:	9b 81       	ldd	r25, Y+3	; 0x03
     b1a:	01 96       	adiw	r24, 0x01	; 1
     b1c:	9b 83       	std	Y+3, r25	; 0x03
     b1e:	8a 83       	std	Y+2, r24	; 0x02
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <_fpadd_parts+0x284>
     b22:	eb e9       	ldi	r30, 0x9B	; 155
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	03 c0       	rjmp	.+6      	; 0xb2e <_fpadd_parts+0x286>
     b28:	fb 01       	movw	r30, r22
     b2a:	01 c0       	rjmp	.+2      	; 0xb2e <_fpadd_parts+0x286>
     b2c:	fe 01       	movw	r30, r28
     b2e:	cf 01       	movw	r24, r30
     b30:	cd b7       	in	r28, 0x3d	; 61
     b32:	de b7       	in	r29, 0x3e	; 62
     b34:	ee e0       	ldi	r30, 0x0E	; 14
     b36:	d7 c3       	rjmp	.+1966   	; 0x12e6 <__epilogue_restores__+0x8>

00000b38 <__addsf3>:
     b38:	a0 e2       	ldi	r26, 0x20	; 32
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
     b3c:	e1 ea       	ldi	r30, 0xA1	; 161
     b3e:	f5 e0       	ldi	r31, 0x05	; 5
     b40:	be c3       	rjmp	.+1916   	; 0x12be <__prologue_saves__+0x18>
     b42:	69 83       	std	Y+1, r22	; 0x01
     b44:	7a 83       	std	Y+2, r23	; 0x02
     b46:	8b 83       	std	Y+3, r24	; 0x03
     b48:	9c 83       	std	Y+4, r25	; 0x04
     b4a:	2d 83       	std	Y+5, r18	; 0x05
     b4c:	3e 83       	std	Y+6, r19	; 0x06
     b4e:	4f 83       	std	Y+7, r20	; 0x07
     b50:	58 87       	std	Y+8, r21	; 0x08
     b52:	89 e0       	ldi	r24, 0x09	; 9
     b54:	e8 2e       	mov	r14, r24
     b56:	f1 2c       	mov	r15, r1
     b58:	ec 0e       	add	r14, r28
     b5a:	fd 1e       	adc	r15, r29
     b5c:	ce 01       	movw	r24, r28
     b5e:	01 96       	adiw	r24, 0x01	; 1
     b60:	b7 01       	movw	r22, r14
     b62:	df d2       	rcall	.+1470   	; 0x1122 <__unpack_f>
     b64:	8e 01       	movw	r16, r28
     b66:	0f 5e       	subi	r16, 0xEF	; 239
     b68:	1f 4f       	sbci	r17, 0xFF	; 255
     b6a:	ce 01       	movw	r24, r28
     b6c:	05 96       	adiw	r24, 0x05	; 5
     b6e:	b8 01       	movw	r22, r16
     b70:	d8 d2       	rcall	.+1456   	; 0x1122 <__unpack_f>
     b72:	c7 01       	movw	r24, r14
     b74:	b8 01       	movw	r22, r16
     b76:	ae 01       	movw	r20, r28
     b78:	47 5e       	subi	r20, 0xE7	; 231
     b7a:	5f 4f       	sbci	r21, 0xFF	; 255
     b7c:	95 de       	rcall	.-726    	; 0x8a8 <_fpadd_parts>
     b7e:	04 d2       	rcall	.+1032   	; 0xf88 <__pack_f>
     b80:	a0 96       	adiw	r28, 0x20	; 32
     b82:	e6 e0       	ldi	r30, 0x06	; 6
     b84:	b8 c3       	rjmp	.+1904   	; 0x12f6 <__epilogue_restores__+0x18>

00000b86 <__subsf3>:
     b86:	a0 e2       	ldi	r26, 0x20	; 32
     b88:	b0 e0       	ldi	r27, 0x00	; 0
     b8a:	e8 ec       	ldi	r30, 0xC8	; 200
     b8c:	f5 e0       	ldi	r31, 0x05	; 5
     b8e:	97 c3       	rjmp	.+1838   	; 0x12be <__prologue_saves__+0x18>
     b90:	69 83       	std	Y+1, r22	; 0x01
     b92:	7a 83       	std	Y+2, r23	; 0x02
     b94:	8b 83       	std	Y+3, r24	; 0x03
     b96:	9c 83       	std	Y+4, r25	; 0x04
     b98:	2d 83       	std	Y+5, r18	; 0x05
     b9a:	3e 83       	std	Y+6, r19	; 0x06
     b9c:	4f 83       	std	Y+7, r20	; 0x07
     b9e:	58 87       	std	Y+8, r21	; 0x08
     ba0:	8e 01       	movw	r16, r28
     ba2:	07 5f       	subi	r16, 0xF7	; 247
     ba4:	1f 4f       	sbci	r17, 0xFF	; 255
     ba6:	ce 01       	movw	r24, r28
     ba8:	01 96       	adiw	r24, 0x01	; 1
     baa:	b8 01       	movw	r22, r16
     bac:	ba d2       	rcall	.+1396   	; 0x1122 <__unpack_f>
     bae:	91 e1       	ldi	r25, 0x11	; 17
     bb0:	e9 2e       	mov	r14, r25
     bb2:	f1 2c       	mov	r15, r1
     bb4:	ec 0e       	add	r14, r28
     bb6:	fd 1e       	adc	r15, r29
     bb8:	ce 01       	movw	r24, r28
     bba:	05 96       	adiw	r24, 0x05	; 5
     bbc:	b7 01       	movw	r22, r14
     bbe:	b1 d2       	rcall	.+1378   	; 0x1122 <__unpack_f>
     bc0:	8a 89       	ldd	r24, Y+18	; 0x12
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	89 27       	eor	r24, r25
     bc6:	8a 8b       	std	Y+18, r24	; 0x12
     bc8:	c8 01       	movw	r24, r16
     bca:	b7 01       	movw	r22, r14
     bcc:	ae 01       	movw	r20, r28
     bce:	47 5e       	subi	r20, 0xE7	; 231
     bd0:	5f 4f       	sbci	r21, 0xFF	; 255
     bd2:	6a de       	rcall	.-812    	; 0x8a8 <_fpadd_parts>
     bd4:	d9 d1       	rcall	.+946    	; 0xf88 <__pack_f>
     bd6:	a0 96       	adiw	r28, 0x20	; 32
     bd8:	e6 e0       	ldi	r30, 0x06	; 6
     bda:	8d c3       	rjmp	.+1818   	; 0x12f6 <__epilogue_restores__+0x18>

00000bdc <__mulsf3>:
     bdc:	a0 e2       	ldi	r26, 0x20	; 32
     bde:	b0 e0       	ldi	r27, 0x00	; 0
     be0:	e3 ef       	ldi	r30, 0xF3	; 243
     be2:	f5 e0       	ldi	r31, 0x05	; 5
     be4:	60 c3       	rjmp	.+1728   	; 0x12a6 <__prologue_saves__>
     be6:	69 83       	std	Y+1, r22	; 0x01
     be8:	7a 83       	std	Y+2, r23	; 0x02
     bea:	8b 83       	std	Y+3, r24	; 0x03
     bec:	9c 83       	std	Y+4, r25	; 0x04
     bee:	2d 83       	std	Y+5, r18	; 0x05
     bf0:	3e 83       	std	Y+6, r19	; 0x06
     bf2:	4f 83       	std	Y+7, r20	; 0x07
     bf4:	58 87       	std	Y+8, r21	; 0x08
     bf6:	ce 01       	movw	r24, r28
     bf8:	01 96       	adiw	r24, 0x01	; 1
     bfa:	be 01       	movw	r22, r28
     bfc:	67 5f       	subi	r22, 0xF7	; 247
     bfe:	7f 4f       	sbci	r23, 0xFF	; 255
     c00:	90 d2       	rcall	.+1312   	; 0x1122 <__unpack_f>
     c02:	ce 01       	movw	r24, r28
     c04:	05 96       	adiw	r24, 0x05	; 5
     c06:	be 01       	movw	r22, r28
     c08:	6f 5e       	subi	r22, 0xEF	; 239
     c0a:	7f 4f       	sbci	r23, 0xFF	; 255
     c0c:	8a d2       	rcall	.+1300   	; 0x1122 <__unpack_f>
     c0e:	99 85       	ldd	r25, Y+9	; 0x09
     c10:	92 30       	cpi	r25, 0x02	; 2
     c12:	78 f0       	brcs	.+30     	; 0xc32 <__mulsf3+0x56>
     c14:	89 89       	ldd	r24, Y+17	; 0x11
     c16:	82 30       	cpi	r24, 0x02	; 2
     c18:	c0 f0       	brcs	.+48     	; 0xc4a <__mulsf3+0x6e>
     c1a:	94 30       	cpi	r25, 0x04	; 4
     c1c:	19 f4       	brne	.+6      	; 0xc24 <__mulsf3+0x48>
     c1e:	82 30       	cpi	r24, 0x02	; 2
     c20:	41 f4       	brne	.+16     	; 0xc32 <__mulsf3+0x56>
     c22:	cb c0       	rjmp	.+406    	; 0xdba <__mulsf3+0x1de>
     c24:	84 30       	cpi	r24, 0x04	; 4
     c26:	19 f4       	brne	.+6      	; 0xc2e <__mulsf3+0x52>
     c28:	92 30       	cpi	r25, 0x02	; 2
     c2a:	79 f4       	brne	.+30     	; 0xc4a <__mulsf3+0x6e>
     c2c:	c6 c0       	rjmp	.+396    	; 0xdba <__mulsf3+0x1de>
     c2e:	92 30       	cpi	r25, 0x02	; 2
     c30:	51 f4       	brne	.+20     	; 0xc46 <__mulsf3+0x6a>
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	2a 85       	ldd	r18, Y+10	; 0x0a
     c36:	9a 89       	ldd	r25, Y+18	; 0x12
     c38:	29 17       	cp	r18, r25
     c3a:	09 f4       	brne	.+2      	; 0xc3e <__mulsf3+0x62>
     c3c:	80 e0       	ldi	r24, 0x00	; 0
     c3e:	8a 87       	std	Y+10, r24	; 0x0a
     c40:	ce 01       	movw	r24, r28
     c42:	09 96       	adiw	r24, 0x09	; 9
     c44:	bc c0       	rjmp	.+376    	; 0xdbe <__mulsf3+0x1e2>
     c46:	82 30       	cpi	r24, 0x02	; 2
     c48:	51 f4       	brne	.+20     	; 0xc5e <__mulsf3+0x82>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	2a 85       	ldd	r18, Y+10	; 0x0a
     c4e:	9a 89       	ldd	r25, Y+18	; 0x12
     c50:	29 17       	cp	r18, r25
     c52:	09 f4       	brne	.+2      	; 0xc56 <__mulsf3+0x7a>
     c54:	80 e0       	ldi	r24, 0x00	; 0
     c56:	8a 8b       	std	Y+18, r24	; 0x12
     c58:	ce 01       	movw	r24, r28
     c5a:	41 96       	adiw	r24, 0x11	; 17
     c5c:	b0 c0       	rjmp	.+352    	; 0xdbe <__mulsf3+0x1e2>
     c5e:	6d 84       	ldd	r6, Y+13	; 0x0d
     c60:	7e 84       	ldd	r7, Y+14	; 0x0e
     c62:	8f 84       	ldd	r8, Y+15	; 0x0f
     c64:	98 88       	ldd	r9, Y+16	; 0x10
     c66:	ed 88       	ldd	r14, Y+21	; 0x15
     c68:	fe 88       	ldd	r15, Y+22	; 0x16
     c6a:	0f 89       	ldd	r16, Y+23	; 0x17
     c6c:	18 8d       	ldd	r17, Y+24	; 0x18
     c6e:	e0 e2       	ldi	r30, 0x20	; 32
     c70:	f0 e0       	ldi	r31, 0x00	; 0
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	dc 01       	movw	r26, r24
     c78:	aa 24       	eor	r10, r10
     c7a:	bb 24       	eor	r11, r11
     c7c:	65 01       	movw	r12, r10
     c7e:	20 e0       	ldi	r18, 0x00	; 0
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	a9 01       	movw	r20, r18
     c84:	b3 01       	movw	r22, r6
     c86:	61 70       	andi	r22, 0x01	; 1
     c88:	70 70       	andi	r23, 0x00	; 0
     c8a:	61 15       	cp	r22, r1
     c8c:	71 05       	cpc	r23, r1
     c8e:	d1 f0       	breq	.+52     	; 0xcc4 <__mulsf3+0xe8>
     c90:	2e 0d       	add	r18, r14
     c92:	3f 1d       	adc	r19, r15
     c94:	40 1f       	adc	r20, r16
     c96:	51 1f       	adc	r21, r17
     c98:	15 01       	movw	r2, r10
     c9a:	26 01       	movw	r4, r12
     c9c:	28 0e       	add	r2, r24
     c9e:	39 1e       	adc	r3, r25
     ca0:	4a 1e       	adc	r4, r26
     ca2:	5b 1e       	adc	r5, r27
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	a0 e0       	ldi	r26, 0x00	; 0
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	2e 15       	cp	r18, r14
     cae:	3f 05       	cpc	r19, r15
     cb0:	40 07       	cpc	r20, r16
     cb2:	51 07       	cpc	r21, r17
     cb4:	18 f0       	brcs	.+6      	; 0xcbc <__mulsf3+0xe0>
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	dc 01       	movw	r26, r24
     cbc:	82 0d       	add	r24, r2
     cbe:	93 1d       	adc	r25, r3
     cc0:	a4 1d       	adc	r26, r4
     cc2:	b5 1d       	adc	r27, r5
     cc4:	aa 0c       	add	r10, r10
     cc6:	bb 1c       	adc	r11, r11
     cc8:	cc 1c       	adc	r12, r12
     cca:	dd 1c       	adc	r13, r13
     ccc:	17 ff       	sbrs	r17, 7
     cce:	09 c0       	rjmp	.+18     	; 0xce2 <__mulsf3+0x106>
     cd0:	61 e0       	ldi	r22, 0x01	; 1
     cd2:	26 2e       	mov	r2, r22
     cd4:	31 2c       	mov	r3, r1
     cd6:	41 2c       	mov	r4, r1
     cd8:	51 2c       	mov	r5, r1
     cda:	a2 28       	or	r10, r2
     cdc:	b3 28       	or	r11, r3
     cde:	c4 28       	or	r12, r4
     ce0:	d5 28       	or	r13, r5
     ce2:	31 97       	sbiw	r30, 0x01	; 1
     ce4:	49 f0       	breq	.+18     	; 0xcf8 <__mulsf3+0x11c>
     ce6:	ee 0c       	add	r14, r14
     ce8:	ff 1c       	adc	r15, r15
     cea:	00 1f       	adc	r16, r16
     cec:	11 1f       	adc	r17, r17
     cee:	96 94       	lsr	r9
     cf0:	87 94       	ror	r8
     cf2:	77 94       	ror	r7
     cf4:	67 94       	ror	r6
     cf6:	c6 cf       	rjmp	.-116    	; 0xc84 <__mulsf3+0xa8>
     cf8:	6b 89       	ldd	r22, Y+19	; 0x13
     cfa:	7c 89       	ldd	r23, Y+20	; 0x14
     cfc:	eb 85       	ldd	r30, Y+11	; 0x0b
     cfe:	fc 85       	ldd	r31, Y+12	; 0x0c
     d00:	6e 0f       	add	r22, r30
     d02:	7f 1f       	adc	r23, r31
     d04:	6e 5f       	subi	r22, 0xFE	; 254
     d06:	7f 4f       	sbci	r23, 0xFF	; 255
     d08:	7c 8f       	std	Y+28, r23	; 0x1c
     d0a:	6b 8f       	std	Y+27, r22	; 0x1b
     d0c:	61 e0       	ldi	r22, 0x01	; 1
     d0e:	ea 85       	ldd	r30, Y+10	; 0x0a
     d10:	7a 89       	ldd	r23, Y+18	; 0x12
     d12:	e7 17       	cp	r30, r23
     d14:	09 f4       	brne	.+2      	; 0xd18 <__mulsf3+0x13c>
     d16:	60 e0       	ldi	r22, 0x00	; 0
     d18:	6a 8f       	std	Y+26, r22	; 0x1a
     d1a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     d1c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     d1e:	10 c0       	rjmp	.+32     	; 0xd40 <__mulsf3+0x164>
     d20:	fc 01       	movw	r30, r24
     d22:	e1 70       	andi	r30, 0x01	; 1
     d24:	f0 70       	andi	r31, 0x00	; 0
     d26:	30 97       	sbiw	r30, 0x00	; 0
     d28:	29 f0       	breq	.+10     	; 0xd34 <__mulsf3+0x158>
     d2a:	56 95       	lsr	r21
     d2c:	47 95       	ror	r20
     d2e:	37 95       	ror	r19
     d30:	27 95       	ror	r18
     d32:	50 68       	ori	r21, 0x80	; 128
     d34:	b6 95       	lsr	r27
     d36:	a7 95       	ror	r26
     d38:	97 95       	ror	r25
     d3a:	87 95       	ror	r24
     d3c:	6f 5f       	subi	r22, 0xFF	; 255
     d3e:	7f 4f       	sbci	r23, 0xFF	; 255
     d40:	b7 fd       	sbrc	r27, 7
     d42:	ee cf       	rjmp	.-36     	; 0xd20 <__mulsf3+0x144>
     d44:	0c c0       	rjmp	.+24     	; 0xd5e <__mulsf3+0x182>
     d46:	88 0f       	add	r24, r24
     d48:	99 1f       	adc	r25, r25
     d4a:	aa 1f       	adc	r26, r26
     d4c:	bb 1f       	adc	r27, r27
     d4e:	57 fd       	sbrc	r21, 7
     d50:	81 60       	ori	r24, 0x01	; 1
     d52:	22 0f       	add	r18, r18
     d54:	33 1f       	adc	r19, r19
     d56:	44 1f       	adc	r20, r20
     d58:	55 1f       	adc	r21, r21
     d5a:	61 50       	subi	r22, 0x01	; 1
     d5c:	70 40       	sbci	r23, 0x00	; 0
     d5e:	80 30       	cpi	r24, 0x00	; 0
     d60:	e0 e0       	ldi	r30, 0x00	; 0
     d62:	9e 07       	cpc	r25, r30
     d64:	e0 e0       	ldi	r30, 0x00	; 0
     d66:	ae 07       	cpc	r26, r30
     d68:	e0 e4       	ldi	r30, 0x40	; 64
     d6a:	be 07       	cpc	r27, r30
     d6c:	60 f3       	brcs	.-40     	; 0xd46 <__mulsf3+0x16a>
     d6e:	6b 8f       	std	Y+27, r22	; 0x1b
     d70:	7c 8f       	std	Y+28, r23	; 0x1c
     d72:	6f e7       	ldi	r22, 0x7F	; 127
     d74:	e6 2e       	mov	r14, r22
     d76:	f1 2c       	mov	r15, r1
     d78:	01 2d       	mov	r16, r1
     d7a:	11 2d       	mov	r17, r1
     d7c:	e8 22       	and	r14, r24
     d7e:	f9 22       	and	r15, r25
     d80:	0a 23       	and	r16, r26
     d82:	1b 23       	and	r17, r27
     d84:	60 e4       	ldi	r22, 0x40	; 64
     d86:	e6 16       	cp	r14, r22
     d88:	f1 04       	cpc	r15, r1
     d8a:	01 05       	cpc	r16, r1
     d8c:	11 05       	cpc	r17, r1
     d8e:	61 f4       	brne	.+24     	; 0xda8 <__mulsf3+0x1cc>
     d90:	87 fd       	sbrc	r24, 7
     d92:	0a c0       	rjmp	.+20     	; 0xda8 <__mulsf3+0x1cc>
     d94:	21 15       	cp	r18, r1
     d96:	31 05       	cpc	r19, r1
     d98:	41 05       	cpc	r20, r1
     d9a:	51 05       	cpc	r21, r1
     d9c:	29 f0       	breq	.+10     	; 0xda8 <__mulsf3+0x1cc>
     d9e:	80 5c       	subi	r24, 0xC0	; 192
     da0:	9f 4f       	sbci	r25, 0xFF	; 255
     da2:	af 4f       	sbci	r26, 0xFF	; 255
     da4:	bf 4f       	sbci	r27, 0xFF	; 255
     da6:	80 78       	andi	r24, 0x80	; 128
     da8:	8d 8f       	std	Y+29, r24	; 0x1d
     daa:	9e 8f       	std	Y+30, r25	; 0x1e
     dac:	af 8f       	std	Y+31, r26	; 0x1f
     dae:	b8 a3       	std	Y+32, r27	; 0x20
     db0:	83 e0       	ldi	r24, 0x03	; 3
     db2:	89 8f       	std	Y+25, r24	; 0x19
     db4:	ce 01       	movw	r24, r28
     db6:	49 96       	adiw	r24, 0x19	; 25
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <__mulsf3+0x1e2>
     dba:	8b e9       	ldi	r24, 0x9B	; 155
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	e4 d0       	rcall	.+456    	; 0xf88 <__pack_f>
     dc0:	a0 96       	adiw	r28, 0x20	; 32
     dc2:	e2 e1       	ldi	r30, 0x12	; 18
     dc4:	8c c2       	rjmp	.+1304   	; 0x12de <__epilogue_restores__>

00000dc6 <__lesf2>:
     dc6:	a8 e1       	ldi	r26, 0x18	; 24
     dc8:	b0 e0       	ldi	r27, 0x00	; 0
     dca:	e8 ee       	ldi	r30, 0xE8	; 232
     dcc:	f6 e0       	ldi	r31, 0x06	; 6
     dce:	77 c2       	rjmp	.+1262   	; 0x12be <__prologue_saves__+0x18>
     dd0:	69 83       	std	Y+1, r22	; 0x01
     dd2:	7a 83       	std	Y+2, r23	; 0x02
     dd4:	8b 83       	std	Y+3, r24	; 0x03
     dd6:	9c 83       	std	Y+4, r25	; 0x04
     dd8:	2d 83       	std	Y+5, r18	; 0x05
     dda:	3e 83       	std	Y+6, r19	; 0x06
     ddc:	4f 83       	std	Y+7, r20	; 0x07
     dde:	58 87       	std	Y+8, r21	; 0x08
     de0:	8e 01       	movw	r16, r28
     de2:	07 5f       	subi	r16, 0xF7	; 247
     de4:	1f 4f       	sbci	r17, 0xFF	; 255
     de6:	ce 01       	movw	r24, r28
     de8:	01 96       	adiw	r24, 0x01	; 1
     dea:	b8 01       	movw	r22, r16
     dec:	9a d1       	rcall	.+820    	; 0x1122 <__unpack_f>
     dee:	81 e1       	ldi	r24, 0x11	; 17
     df0:	e8 2e       	mov	r14, r24
     df2:	f1 2c       	mov	r15, r1
     df4:	ec 0e       	add	r14, r28
     df6:	fd 1e       	adc	r15, r29
     df8:	ce 01       	movw	r24, r28
     dfa:	05 96       	adiw	r24, 0x05	; 5
     dfc:	b7 01       	movw	r22, r14
     dfe:	91 d1       	rcall	.+802    	; 0x1122 <__unpack_f>
     e00:	89 85       	ldd	r24, Y+9	; 0x09
     e02:	82 30       	cpi	r24, 0x02	; 2
     e04:	38 f0       	brcs	.+14     	; 0xe14 <__lesf2+0x4e>
     e06:	89 89       	ldd	r24, Y+17	; 0x11
     e08:	82 30       	cpi	r24, 0x02	; 2
     e0a:	20 f0       	brcs	.+8      	; 0xe14 <__lesf2+0x4e>
     e0c:	c8 01       	movw	r24, r16
     e0e:	b7 01       	movw	r22, r14
     e10:	f1 d1       	rcall	.+994    	; 0x11f4 <__fpcmp_parts_f>
     e12:	01 c0       	rjmp	.+2      	; 0xe16 <__lesf2+0x50>
     e14:	81 e0       	ldi	r24, 0x01	; 1
     e16:	68 96       	adiw	r28, 0x18	; 24
     e18:	e6 e0       	ldi	r30, 0x06	; 6
     e1a:	6d c2       	rjmp	.+1242   	; 0x12f6 <__epilogue_restores__+0x18>

00000e1c <__floatsisf>:
     e1c:	a8 e0       	ldi	r26, 0x08	; 8
     e1e:	b0 e0       	ldi	r27, 0x00	; 0
     e20:	e3 e1       	ldi	r30, 0x13	; 19
     e22:	f7 e0       	ldi	r31, 0x07	; 7
     e24:	4c c2       	rjmp	.+1176   	; 0x12be <__prologue_saves__+0x18>
     e26:	7b 01       	movw	r14, r22
     e28:	8c 01       	movw	r16, r24
     e2a:	83 e0       	ldi	r24, 0x03	; 3
     e2c:	89 83       	std	Y+1, r24	; 0x01
     e2e:	d8 01       	movw	r26, r16
     e30:	c7 01       	movw	r24, r14
     e32:	88 27       	eor	r24, r24
     e34:	b7 fd       	sbrc	r27, 7
     e36:	83 95       	inc	r24
     e38:	99 27       	eor	r25, r25
     e3a:	aa 27       	eor	r26, r26
     e3c:	bb 27       	eor	r27, r27
     e3e:	28 2f       	mov	r18, r24
     e40:	8a 83       	std	Y+2, r24	; 0x02
     e42:	e1 14       	cp	r14, r1
     e44:	f1 04       	cpc	r15, r1
     e46:	01 05       	cpc	r16, r1
     e48:	11 05       	cpc	r17, r1
     e4a:	19 f4       	brne	.+6      	; 0xe52 <__floatsisf+0x36>
     e4c:	82 e0       	ldi	r24, 0x02	; 2
     e4e:	89 83       	std	Y+1, r24	; 0x01
     e50:	36 c0       	rjmp	.+108    	; 0xebe <__floatsisf+0xa2>
     e52:	8e e1       	ldi	r24, 0x1E	; 30
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	9c 83       	std	Y+4, r25	; 0x04
     e58:	8b 83       	std	Y+3, r24	; 0x03
     e5a:	22 23       	and	r18, r18
     e5c:	89 f0       	breq	.+34     	; 0xe80 <__floatsisf+0x64>
     e5e:	80 e0       	ldi	r24, 0x00	; 0
     e60:	e8 16       	cp	r14, r24
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	f8 06       	cpc	r15, r24
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	08 07       	cpc	r16, r24
     e6a:	80 e8       	ldi	r24, 0x80	; 128
     e6c:	18 07       	cpc	r17, r24
     e6e:	59 f1       	breq	.+86     	; 0xec6 <__floatsisf+0xaa>
     e70:	10 95       	com	r17
     e72:	00 95       	com	r16
     e74:	f0 94       	com	r15
     e76:	e0 94       	com	r14
     e78:	e1 1c       	adc	r14, r1
     e7a:	f1 1c       	adc	r15, r1
     e7c:	01 1d       	adc	r16, r1
     e7e:	11 1d       	adc	r17, r1
     e80:	ed 82       	std	Y+5, r14	; 0x05
     e82:	fe 82       	std	Y+6, r15	; 0x06
     e84:	0f 83       	std	Y+7, r16	; 0x07
     e86:	18 87       	std	Y+8, r17	; 0x08
     e88:	c8 01       	movw	r24, r16
     e8a:	b7 01       	movw	r22, r14
     e8c:	23 d0       	rcall	.+70     	; 0xed4 <__clzsi2>
     e8e:	9c 01       	movw	r18, r24
     e90:	21 50       	subi	r18, 0x01	; 1
     e92:	30 40       	sbci	r19, 0x00	; 0
     e94:	12 16       	cp	r1, r18
     e96:	13 06       	cpc	r1, r19
     e98:	94 f4       	brge	.+36     	; 0xebe <__floatsisf+0xa2>
     e9a:	02 2e       	mov	r0, r18
     e9c:	04 c0       	rjmp	.+8      	; 0xea6 <__floatsisf+0x8a>
     e9e:	ee 0c       	add	r14, r14
     ea0:	ff 1c       	adc	r15, r15
     ea2:	00 1f       	adc	r16, r16
     ea4:	11 1f       	adc	r17, r17
     ea6:	0a 94       	dec	r0
     ea8:	d2 f7       	brpl	.-12     	; 0xe9e <__floatsisf+0x82>
     eaa:	ed 82       	std	Y+5, r14	; 0x05
     eac:	fe 82       	std	Y+6, r15	; 0x06
     eae:	0f 83       	std	Y+7, r16	; 0x07
     eb0:	18 87       	std	Y+8, r17	; 0x08
     eb2:	8e e1       	ldi	r24, 0x1E	; 30
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	82 1b       	sub	r24, r18
     eb8:	93 0b       	sbc	r25, r19
     eba:	9c 83       	std	Y+4, r25	; 0x04
     ebc:	8b 83       	std	Y+3, r24	; 0x03
     ebe:	ce 01       	movw	r24, r28
     ec0:	01 96       	adiw	r24, 0x01	; 1
     ec2:	62 d0       	rcall	.+196    	; 0xf88 <__pack_f>
     ec4:	04 c0       	rjmp	.+8      	; 0xece <__floatsisf+0xb2>
     ec6:	60 e0       	ldi	r22, 0x00	; 0
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	9f ec       	ldi	r25, 0xCF	; 207
     ece:	28 96       	adiw	r28, 0x08	; 8
     ed0:	e6 e0       	ldi	r30, 0x06	; 6
     ed2:	11 c2       	rjmp	.+1058   	; 0x12f6 <__epilogue_restores__+0x18>

00000ed4 <__clzsi2>:
     ed4:	af 92       	push	r10
     ed6:	bf 92       	push	r11
     ed8:	cf 92       	push	r12
     eda:	df 92       	push	r13
     edc:	ef 92       	push	r14
     ede:	ff 92       	push	r15
     ee0:	0f 93       	push	r16
     ee2:	1f 93       	push	r17
     ee4:	7b 01       	movw	r14, r22
     ee6:	8c 01       	movw	r16, r24
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	e8 16       	cp	r14, r24
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	f8 06       	cpc	r15, r24
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	08 07       	cpc	r16, r24
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	18 07       	cpc	r17, r24
     ef8:	58 f4       	brcc	.+22     	; 0xf10 <__clzsi2+0x3c>
     efa:	ef ef       	ldi	r30, 0xFF	; 255
     efc:	ee 16       	cp	r14, r30
     efe:	f1 04       	cpc	r15, r1
     f00:	01 05       	cpc	r16, r1
     f02:	11 05       	cpc	r17, r1
     f04:	09 f0       	breq	.+2      	; 0xf08 <__clzsi2+0x34>
     f06:	90 f4       	brcc	.+36     	; 0xf2c <__clzsi2+0x58>
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	dc 01       	movw	r26, r24
     f0e:	17 c0       	rjmp	.+46     	; 0xf3e <__clzsi2+0x6a>
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	ef 16       	cp	r14, r31
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	ff 06       	cpc	r15, r31
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	0f 07       	cpc	r16, r31
     f1c:	f1 e0       	ldi	r31, 0x01	; 1
     f1e:	1f 07       	cpc	r17, r31
     f20:	50 f4       	brcc	.+20     	; 0xf36 <__clzsi2+0x62>
     f22:	80 e1       	ldi	r24, 0x10	; 16
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	a0 e0       	ldi	r26, 0x00	; 0
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	09 c0       	rjmp	.+18     	; 0xf3e <__clzsi2+0x6a>
     f2c:	88 e0       	ldi	r24, 0x08	; 8
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	a0 e0       	ldi	r26, 0x00	; 0
     f32:	b0 e0       	ldi	r27, 0x00	; 0
     f34:	04 c0       	rjmp	.+8      	; 0xf3e <__clzsi2+0x6a>
     f36:	88 e1       	ldi	r24, 0x18	; 24
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	a0 e0       	ldi	r26, 0x00	; 0
     f3c:	b0 e0       	ldi	r27, 0x00	; 0
     f3e:	20 e2       	ldi	r18, 0x20	; 32
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	40 e0       	ldi	r20, 0x00	; 0
     f44:	50 e0       	ldi	r21, 0x00	; 0
     f46:	28 1b       	sub	r18, r24
     f48:	39 0b       	sbc	r19, r25
     f4a:	4a 0b       	sbc	r20, r26
     f4c:	5b 0b       	sbc	r21, r27
     f4e:	57 01       	movw	r10, r14
     f50:	68 01       	movw	r12, r16
     f52:	04 c0       	rjmp	.+8      	; 0xf5c <__clzsi2+0x88>
     f54:	d6 94       	lsr	r13
     f56:	c7 94       	ror	r12
     f58:	b7 94       	ror	r11
     f5a:	a7 94       	ror	r10
     f5c:	8a 95       	dec	r24
     f5e:	d2 f7       	brpl	.-12     	; 0xf54 <__clzsi2+0x80>
     f60:	d6 01       	movw	r26, r12
     f62:	c5 01       	movw	r24, r10
     f64:	8d 55       	subi	r24, 0x5D	; 93
     f66:	9f 4f       	sbci	r25, 0xFF	; 255
     f68:	fc 01       	movw	r30, r24
     f6a:	80 81       	ld	r24, Z
     f6c:	28 1b       	sub	r18, r24
     f6e:	31 09       	sbc	r19, r1
     f70:	41 09       	sbc	r20, r1
     f72:	51 09       	sbc	r21, r1
     f74:	c9 01       	movw	r24, r18
     f76:	1f 91       	pop	r17
     f78:	0f 91       	pop	r16
     f7a:	ff 90       	pop	r15
     f7c:	ef 90       	pop	r14
     f7e:	df 90       	pop	r13
     f80:	cf 90       	pop	r12
     f82:	bf 90       	pop	r11
     f84:	af 90       	pop	r10
     f86:	08 95       	ret

00000f88 <__pack_f>:
     f88:	ef 92       	push	r14
     f8a:	ff 92       	push	r15
     f8c:	0f 93       	push	r16
     f8e:	1f 93       	push	r17
     f90:	cf 93       	push	r28
     f92:	df 93       	push	r29
     f94:	fc 01       	movw	r30, r24
     f96:	24 81       	ldd	r18, Z+4	; 0x04
     f98:	35 81       	ldd	r19, Z+5	; 0x05
     f9a:	46 81       	ldd	r20, Z+6	; 0x06
     f9c:	57 81       	ldd	r21, Z+7	; 0x07
     f9e:	61 81       	ldd	r22, Z+1	; 0x01
     fa0:	80 81       	ld	r24, Z
     fa2:	82 30       	cpi	r24, 0x02	; 2
     fa4:	20 f4       	brcc	.+8      	; 0xfae <__pack_f+0x26>
     fa6:	40 61       	ori	r20, 0x10	; 16
     fa8:	ef ef       	ldi	r30, 0xFF	; 255
     faa:	f0 e0       	ldi	r31, 0x00	; 0
     fac:	a3 c0       	rjmp	.+326    	; 0x10f4 <__pack_f+0x16c>
     fae:	84 30       	cpi	r24, 0x04	; 4
     fb0:	09 f4       	brne	.+2      	; 0xfb4 <__pack_f+0x2c>
     fb2:	9b c0       	rjmp	.+310    	; 0x10ea <__pack_f+0x162>
     fb4:	82 30       	cpi	r24, 0x02	; 2
     fb6:	09 f4       	brne	.+2      	; 0xfba <__pack_f+0x32>
     fb8:	92 c0       	rjmp	.+292    	; 0x10de <__pack_f+0x156>
     fba:	21 15       	cp	r18, r1
     fbc:	31 05       	cpc	r19, r1
     fbe:	41 05       	cpc	r20, r1
     fc0:	51 05       	cpc	r21, r1
     fc2:	09 f4       	brne	.+2      	; 0xfc6 <__pack_f+0x3e>
     fc4:	8f c0       	rjmp	.+286    	; 0x10e4 <__pack_f+0x15c>
     fc6:	02 80       	ldd	r0, Z+2	; 0x02
     fc8:	f3 81       	ldd	r31, Z+3	; 0x03
     fca:	e0 2d       	mov	r30, r0
     fcc:	8f ef       	ldi	r24, 0xFF	; 255
     fce:	e2 38       	cpi	r30, 0x82	; 130
     fd0:	f8 07       	cpc	r31, r24
     fd2:	0c f0       	brlt	.+2      	; 0xfd6 <__pack_f+0x4e>
     fd4:	5a c0       	rjmp	.+180    	; 0x108a <__pack_f+0x102>
     fd6:	c2 e8       	ldi	r28, 0x82	; 130
     fd8:	df ef       	ldi	r29, 0xFF	; 255
     fda:	ce 1b       	sub	r28, r30
     fdc:	df 0b       	sbc	r29, r31
     fde:	ca 31       	cpi	r28, 0x1A	; 26
     fe0:	d1 05       	cpc	r29, r1
     fe2:	6c f5       	brge	.+90     	; 0x103e <__pack_f+0xb6>
     fe4:	79 01       	movw	r14, r18
     fe6:	8a 01       	movw	r16, r20
     fe8:	0c 2e       	mov	r0, r28
     fea:	04 c0       	rjmp	.+8      	; 0xff4 <__pack_f+0x6c>
     fec:	16 95       	lsr	r17
     fee:	07 95       	ror	r16
     ff0:	f7 94       	ror	r15
     ff2:	e7 94       	ror	r14
     ff4:	0a 94       	dec	r0
     ff6:	d2 f7       	brpl	.-12     	; 0xfec <__pack_f+0x64>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	a0 e0       	ldi	r26, 0x00	; 0
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	0c 2e       	mov	r0, r28
    1002:	04 c0       	rjmp	.+8      	; 0x100c <__pack_f+0x84>
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	aa 1f       	adc	r26, r26
    100a:	bb 1f       	adc	r27, r27
    100c:	0a 94       	dec	r0
    100e:	d2 f7       	brpl	.-12     	; 0x1004 <__pack_f+0x7c>
    1010:	01 97       	sbiw	r24, 0x01	; 1
    1012:	a1 09       	sbc	r26, r1
    1014:	b1 09       	sbc	r27, r1
    1016:	82 23       	and	r24, r18
    1018:	93 23       	and	r25, r19
    101a:	a4 23       	and	r26, r20
    101c:	b5 23       	and	r27, r21
    101e:	21 e0       	ldi	r18, 0x01	; 1
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	40 e0       	ldi	r20, 0x00	; 0
    1024:	50 e0       	ldi	r21, 0x00	; 0
    1026:	00 97       	sbiw	r24, 0x00	; 0
    1028:	a1 05       	cpc	r26, r1
    102a:	b1 05       	cpc	r27, r1
    102c:	19 f4       	brne	.+6      	; 0x1034 <__pack_f+0xac>
    102e:	20 e0       	ldi	r18, 0x00	; 0
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	a9 01       	movw	r20, r18
    1034:	2e 29       	or	r18, r14
    1036:	3f 29       	or	r19, r15
    1038:	40 2b       	or	r20, r16
    103a:	51 2b       	or	r21, r17
    103c:	03 c0       	rjmp	.+6      	; 0x1044 <__pack_f+0xbc>
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	a9 01       	movw	r20, r18
    1044:	da 01       	movw	r26, r20
    1046:	c9 01       	movw	r24, r18
    1048:	8f 77       	andi	r24, 0x7F	; 127
    104a:	90 70       	andi	r25, 0x00	; 0
    104c:	a0 70       	andi	r26, 0x00	; 0
    104e:	b0 70       	andi	r27, 0x00	; 0
    1050:	80 34       	cpi	r24, 0x40	; 64
    1052:	91 05       	cpc	r25, r1
    1054:	a1 05       	cpc	r26, r1
    1056:	b1 05       	cpc	r27, r1
    1058:	39 f4       	brne	.+14     	; 0x1068 <__pack_f+0xe0>
    105a:	27 ff       	sbrs	r18, 7
    105c:	09 c0       	rjmp	.+18     	; 0x1070 <__pack_f+0xe8>
    105e:	20 5c       	subi	r18, 0xC0	; 192
    1060:	3f 4f       	sbci	r19, 0xFF	; 255
    1062:	4f 4f       	sbci	r20, 0xFF	; 255
    1064:	5f 4f       	sbci	r21, 0xFF	; 255
    1066:	04 c0       	rjmp	.+8      	; 0x1070 <__pack_f+0xe8>
    1068:	21 5c       	subi	r18, 0xC1	; 193
    106a:	3f 4f       	sbci	r19, 0xFF	; 255
    106c:	4f 4f       	sbci	r20, 0xFF	; 255
    106e:	5f 4f       	sbci	r21, 0xFF	; 255
    1070:	e1 e0       	ldi	r30, 0x01	; 1
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	20 30       	cpi	r18, 0x00	; 0
    1076:	80 e0       	ldi	r24, 0x00	; 0
    1078:	38 07       	cpc	r19, r24
    107a:	80 e0       	ldi	r24, 0x00	; 0
    107c:	48 07       	cpc	r20, r24
    107e:	80 e4       	ldi	r24, 0x40	; 64
    1080:	58 07       	cpc	r21, r24
    1082:	28 f5       	brcc	.+74     	; 0x10ce <__pack_f+0x146>
    1084:	e0 e0       	ldi	r30, 0x00	; 0
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	22 c0       	rjmp	.+68     	; 0x10ce <__pack_f+0x146>
    108a:	e0 38       	cpi	r30, 0x80	; 128
    108c:	f1 05       	cpc	r31, r1
    108e:	6c f5       	brge	.+90     	; 0x10ea <__pack_f+0x162>
    1090:	e1 58       	subi	r30, 0x81	; 129
    1092:	ff 4f       	sbci	r31, 0xFF	; 255
    1094:	da 01       	movw	r26, r20
    1096:	c9 01       	movw	r24, r18
    1098:	8f 77       	andi	r24, 0x7F	; 127
    109a:	90 70       	andi	r25, 0x00	; 0
    109c:	a0 70       	andi	r26, 0x00	; 0
    109e:	b0 70       	andi	r27, 0x00	; 0
    10a0:	80 34       	cpi	r24, 0x40	; 64
    10a2:	91 05       	cpc	r25, r1
    10a4:	a1 05       	cpc	r26, r1
    10a6:	b1 05       	cpc	r27, r1
    10a8:	39 f4       	brne	.+14     	; 0x10b8 <__pack_f+0x130>
    10aa:	27 ff       	sbrs	r18, 7
    10ac:	09 c0       	rjmp	.+18     	; 0x10c0 <__pack_f+0x138>
    10ae:	20 5c       	subi	r18, 0xC0	; 192
    10b0:	3f 4f       	sbci	r19, 0xFF	; 255
    10b2:	4f 4f       	sbci	r20, 0xFF	; 255
    10b4:	5f 4f       	sbci	r21, 0xFF	; 255
    10b6:	04 c0       	rjmp	.+8      	; 0x10c0 <__pack_f+0x138>
    10b8:	21 5c       	subi	r18, 0xC1	; 193
    10ba:	3f 4f       	sbci	r19, 0xFF	; 255
    10bc:	4f 4f       	sbci	r20, 0xFF	; 255
    10be:	5f 4f       	sbci	r21, 0xFF	; 255
    10c0:	57 ff       	sbrs	r21, 7
    10c2:	05 c0       	rjmp	.+10     	; 0x10ce <__pack_f+0x146>
    10c4:	56 95       	lsr	r21
    10c6:	47 95       	ror	r20
    10c8:	37 95       	ror	r19
    10ca:	27 95       	ror	r18
    10cc:	31 96       	adiw	r30, 0x01	; 1
    10ce:	87 e0       	ldi	r24, 0x07	; 7
    10d0:	56 95       	lsr	r21
    10d2:	47 95       	ror	r20
    10d4:	37 95       	ror	r19
    10d6:	27 95       	ror	r18
    10d8:	8a 95       	dec	r24
    10da:	d1 f7       	brne	.-12     	; 0x10d0 <__pack_f+0x148>
    10dc:	0b c0       	rjmp	.+22     	; 0x10f4 <__pack_f+0x16c>
    10de:	e0 e0       	ldi	r30, 0x00	; 0
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	05 c0       	rjmp	.+10     	; 0x10ee <__pack_f+0x166>
    10e4:	e0 e0       	ldi	r30, 0x00	; 0
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	05 c0       	rjmp	.+10     	; 0x10f4 <__pack_f+0x16c>
    10ea:	ef ef       	ldi	r30, 0xFF	; 255
    10ec:	f0 e0       	ldi	r31, 0x00	; 0
    10ee:	20 e0       	ldi	r18, 0x00	; 0
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	a9 01       	movw	r20, r18
    10f4:	8e 2f       	mov	r24, r30
    10f6:	87 95       	ror	r24
    10f8:	88 27       	eor	r24, r24
    10fa:	87 95       	ror	r24
    10fc:	94 2f       	mov	r25, r20
    10fe:	9f 77       	andi	r25, 0x7F	; 127
    1100:	67 95       	ror	r22
    1102:	66 27       	eor	r22, r22
    1104:	67 95       	ror	r22
    1106:	e6 95       	lsr	r30
    1108:	e2 2e       	mov	r14, r18
    110a:	a9 2f       	mov	r26, r25
    110c:	a8 2b       	or	r26, r24
    110e:	fe 2f       	mov	r31, r30
    1110:	f6 2b       	or	r31, r22
    1112:	62 2f       	mov	r22, r18
    1114:	73 2f       	mov	r23, r19
    1116:	8a 2f       	mov	r24, r26
    1118:	9f 2f       	mov	r25, r31
    111a:	cd b7       	in	r28, 0x3d	; 61
    111c:	de b7       	in	r29, 0x3e	; 62
    111e:	e6 e0       	ldi	r30, 0x06	; 6
    1120:	ea c0       	rjmp	.+468    	; 0x12f6 <__epilogue_restores__+0x18>

00001122 <__unpack_f>:
    1122:	dc 01       	movw	r26, r24
    1124:	fb 01       	movw	r30, r22
    1126:	2c 91       	ld	r18, X
    1128:	11 96       	adiw	r26, 0x01	; 1
    112a:	3c 91       	ld	r19, X
    112c:	11 97       	sbiw	r26, 0x01	; 1
    112e:	12 96       	adiw	r26, 0x02	; 2
    1130:	8c 91       	ld	r24, X
    1132:	12 97       	sbiw	r26, 0x02	; 2
    1134:	48 2f       	mov	r20, r24
    1136:	4f 77       	andi	r20, 0x7F	; 127
    1138:	50 e0       	ldi	r21, 0x00	; 0
    113a:	98 2f       	mov	r25, r24
    113c:	99 1f       	adc	r25, r25
    113e:	99 27       	eor	r25, r25
    1140:	99 1f       	adc	r25, r25
    1142:	13 96       	adiw	r26, 0x03	; 3
    1144:	6c 91       	ld	r22, X
    1146:	13 97       	sbiw	r26, 0x03	; 3
    1148:	86 2f       	mov	r24, r22
    114a:	88 0f       	add	r24, r24
    114c:	89 2b       	or	r24, r25
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	66 1f       	adc	r22, r22
    1152:	66 27       	eor	r22, r22
    1154:	66 1f       	adc	r22, r22
    1156:	61 83       	std	Z+1, r22	; 0x01
    1158:	00 97       	sbiw	r24, 0x00	; 0
    115a:	39 f5       	brne	.+78     	; 0x11aa <__unpack_f+0x88>
    115c:	21 15       	cp	r18, r1
    115e:	31 05       	cpc	r19, r1
    1160:	41 05       	cpc	r20, r1
    1162:	51 05       	cpc	r21, r1
    1164:	11 f4       	brne	.+4      	; 0x116a <__unpack_f+0x48>
    1166:	82 e0       	ldi	r24, 0x02	; 2
    1168:	29 c0       	rjmp	.+82     	; 0x11bc <__unpack_f+0x9a>
    116a:	82 e8       	ldi	r24, 0x82	; 130
    116c:	9f ef       	ldi	r25, 0xFF	; 255
    116e:	93 83       	std	Z+3, r25	; 0x03
    1170:	82 83       	std	Z+2, r24	; 0x02
    1172:	67 e0       	ldi	r22, 0x07	; 7
    1174:	22 0f       	add	r18, r18
    1176:	33 1f       	adc	r19, r19
    1178:	44 1f       	adc	r20, r20
    117a:	55 1f       	adc	r21, r21
    117c:	6a 95       	dec	r22
    117e:	d1 f7       	brne	.-12     	; 0x1174 <__unpack_f+0x52>
    1180:	83 e0       	ldi	r24, 0x03	; 3
    1182:	80 83       	st	Z, r24
    1184:	09 c0       	rjmp	.+18     	; 0x1198 <__unpack_f+0x76>
    1186:	22 0f       	add	r18, r18
    1188:	33 1f       	adc	r19, r19
    118a:	44 1f       	adc	r20, r20
    118c:	55 1f       	adc	r21, r21
    118e:	82 81       	ldd	r24, Z+2	; 0x02
    1190:	93 81       	ldd	r25, Z+3	; 0x03
    1192:	01 97       	sbiw	r24, 0x01	; 1
    1194:	93 83       	std	Z+3, r25	; 0x03
    1196:	82 83       	std	Z+2, r24	; 0x02
    1198:	20 30       	cpi	r18, 0x00	; 0
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	38 07       	cpc	r19, r24
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	48 07       	cpc	r20, r24
    11a2:	80 e4       	ldi	r24, 0x40	; 64
    11a4:	58 07       	cpc	r21, r24
    11a6:	78 f3       	brcs	.-34     	; 0x1186 <__unpack_f+0x64>
    11a8:	20 c0       	rjmp	.+64     	; 0x11ea <__unpack_f+0xc8>
    11aa:	8f 3f       	cpi	r24, 0xFF	; 255
    11ac:	91 05       	cpc	r25, r1
    11ae:	79 f4       	brne	.+30     	; 0x11ce <__unpack_f+0xac>
    11b0:	21 15       	cp	r18, r1
    11b2:	31 05       	cpc	r19, r1
    11b4:	41 05       	cpc	r20, r1
    11b6:	51 05       	cpc	r21, r1
    11b8:	19 f4       	brne	.+6      	; 0x11c0 <__unpack_f+0x9e>
    11ba:	84 e0       	ldi	r24, 0x04	; 4
    11bc:	80 83       	st	Z, r24
    11be:	08 95       	ret
    11c0:	44 ff       	sbrs	r20, 4
    11c2:	03 c0       	rjmp	.+6      	; 0x11ca <__unpack_f+0xa8>
    11c4:	81 e0       	ldi	r24, 0x01	; 1
    11c6:	80 83       	st	Z, r24
    11c8:	10 c0       	rjmp	.+32     	; 0x11ea <__unpack_f+0xc8>
    11ca:	10 82       	st	Z, r1
    11cc:	0e c0       	rjmp	.+28     	; 0x11ea <__unpack_f+0xc8>
    11ce:	8f 57       	subi	r24, 0x7F	; 127
    11d0:	90 40       	sbci	r25, 0x00	; 0
    11d2:	93 83       	std	Z+3, r25	; 0x03
    11d4:	82 83       	std	Z+2, r24	; 0x02
    11d6:	83 e0       	ldi	r24, 0x03	; 3
    11d8:	80 83       	st	Z, r24
    11da:	87 e0       	ldi	r24, 0x07	; 7
    11dc:	22 0f       	add	r18, r18
    11de:	33 1f       	adc	r19, r19
    11e0:	44 1f       	adc	r20, r20
    11e2:	55 1f       	adc	r21, r21
    11e4:	8a 95       	dec	r24
    11e6:	d1 f7       	brne	.-12     	; 0x11dc <__unpack_f+0xba>
    11e8:	50 64       	ori	r21, 0x40	; 64
    11ea:	24 83       	std	Z+4, r18	; 0x04
    11ec:	35 83       	std	Z+5, r19	; 0x05
    11ee:	46 83       	std	Z+6, r20	; 0x06
    11f0:	57 83       	std	Z+7, r21	; 0x07
    11f2:	08 95       	ret

000011f4 <__fpcmp_parts_f>:
    11f4:	fc 01       	movw	r30, r24
    11f6:	db 01       	movw	r26, r22
    11f8:	90 81       	ld	r25, Z
    11fa:	92 30       	cpi	r25, 0x02	; 2
    11fc:	08 f4       	brcc	.+2      	; 0x1200 <__fpcmp_parts_f+0xc>
    11fe:	49 c0       	rjmp	.+146    	; 0x1292 <__fpcmp_parts_f+0x9e>
    1200:	8c 91       	ld	r24, X
    1202:	82 30       	cpi	r24, 0x02	; 2
    1204:	08 f4       	brcc	.+2      	; 0x1208 <__fpcmp_parts_f+0x14>
    1206:	45 c0       	rjmp	.+138    	; 0x1292 <__fpcmp_parts_f+0x9e>
    1208:	94 30       	cpi	r25, 0x04	; 4
    120a:	51 f4       	brne	.+20     	; 0x1220 <__fpcmp_parts_f+0x2c>
    120c:	61 81       	ldd	r22, Z+1	; 0x01
    120e:	84 30       	cpi	r24, 0x04	; 4
    1210:	b1 f5       	brne	.+108    	; 0x127e <__fpcmp_parts_f+0x8a>
    1212:	11 96       	adiw	r26, 0x01	; 1
    1214:	2c 91       	ld	r18, X
    1216:	11 97       	sbiw	r26, 0x01	; 1
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	26 1b       	sub	r18, r22
    121c:	31 09       	sbc	r19, r1
    121e:	41 c0       	rjmp	.+130    	; 0x12a2 <__fpcmp_parts_f+0xae>
    1220:	84 30       	cpi	r24, 0x04	; 4
    1222:	21 f0       	breq	.+8      	; 0x122c <__fpcmp_parts_f+0x38>
    1224:	92 30       	cpi	r25, 0x02	; 2
    1226:	41 f4       	brne	.+16     	; 0x1238 <__fpcmp_parts_f+0x44>
    1228:	82 30       	cpi	r24, 0x02	; 2
    122a:	b1 f1       	breq	.+108    	; 0x1298 <__fpcmp_parts_f+0xa4>
    122c:	11 96       	adiw	r26, 0x01	; 1
    122e:	8c 91       	ld	r24, X
    1230:	11 97       	sbiw	r26, 0x01	; 1
    1232:	88 23       	and	r24, r24
    1234:	a1 f1       	breq	.+104    	; 0x129e <__fpcmp_parts_f+0xaa>
    1236:	2d c0       	rjmp	.+90     	; 0x1292 <__fpcmp_parts_f+0x9e>
    1238:	61 81       	ldd	r22, Z+1	; 0x01
    123a:	82 30       	cpi	r24, 0x02	; 2
    123c:	01 f1       	breq	.+64     	; 0x127e <__fpcmp_parts_f+0x8a>
    123e:	11 96       	adiw	r26, 0x01	; 1
    1240:	8c 91       	ld	r24, X
    1242:	11 97       	sbiw	r26, 0x01	; 1
    1244:	68 17       	cp	r22, r24
    1246:	d9 f4       	brne	.+54     	; 0x127e <__fpcmp_parts_f+0x8a>
    1248:	22 81       	ldd	r18, Z+2	; 0x02
    124a:	33 81       	ldd	r19, Z+3	; 0x03
    124c:	12 96       	adiw	r26, 0x02	; 2
    124e:	8d 91       	ld	r24, X+
    1250:	9c 91       	ld	r25, X
    1252:	13 97       	sbiw	r26, 0x03	; 3
    1254:	82 17       	cp	r24, r18
    1256:	93 07       	cpc	r25, r19
    1258:	94 f0       	brlt	.+36     	; 0x127e <__fpcmp_parts_f+0x8a>
    125a:	28 17       	cp	r18, r24
    125c:	39 07       	cpc	r19, r25
    125e:	bc f0       	brlt	.+46     	; 0x128e <__fpcmp_parts_f+0x9a>
    1260:	24 81       	ldd	r18, Z+4	; 0x04
    1262:	35 81       	ldd	r19, Z+5	; 0x05
    1264:	46 81       	ldd	r20, Z+6	; 0x06
    1266:	57 81       	ldd	r21, Z+7	; 0x07
    1268:	14 96       	adiw	r26, 0x04	; 4
    126a:	8d 91       	ld	r24, X+
    126c:	9d 91       	ld	r25, X+
    126e:	0d 90       	ld	r0, X+
    1270:	bc 91       	ld	r27, X
    1272:	a0 2d       	mov	r26, r0
    1274:	82 17       	cp	r24, r18
    1276:	93 07       	cpc	r25, r19
    1278:	a4 07       	cpc	r26, r20
    127a:	b5 07       	cpc	r27, r21
    127c:	18 f4       	brcc	.+6      	; 0x1284 <__fpcmp_parts_f+0x90>
    127e:	66 23       	and	r22, r22
    1280:	41 f0       	breq	.+16     	; 0x1292 <__fpcmp_parts_f+0x9e>
    1282:	0d c0       	rjmp	.+26     	; 0x129e <__fpcmp_parts_f+0xaa>
    1284:	28 17       	cp	r18, r24
    1286:	39 07       	cpc	r19, r25
    1288:	4a 07       	cpc	r20, r26
    128a:	5b 07       	cpc	r21, r27
    128c:	28 f4       	brcc	.+10     	; 0x1298 <__fpcmp_parts_f+0xa4>
    128e:	66 23       	and	r22, r22
    1290:	31 f0       	breq	.+12     	; 0x129e <__fpcmp_parts_f+0xaa>
    1292:	21 e0       	ldi	r18, 0x01	; 1
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	05 c0       	rjmp	.+10     	; 0x12a2 <__fpcmp_parts_f+0xae>
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	02 c0       	rjmp	.+4      	; 0x12a2 <__fpcmp_parts_f+0xae>
    129e:	2f ef       	ldi	r18, 0xFF	; 255
    12a0:	3f ef       	ldi	r19, 0xFF	; 255
    12a2:	c9 01       	movw	r24, r18
    12a4:	08 95       	ret

000012a6 <__prologue_saves__>:
    12a6:	2f 92       	push	r2
    12a8:	3f 92       	push	r3
    12aa:	4f 92       	push	r4
    12ac:	5f 92       	push	r5
    12ae:	6f 92       	push	r6
    12b0:	7f 92       	push	r7
    12b2:	8f 92       	push	r8
    12b4:	9f 92       	push	r9
    12b6:	af 92       	push	r10
    12b8:	bf 92       	push	r11
    12ba:	cf 92       	push	r12
    12bc:	df 92       	push	r13
    12be:	ef 92       	push	r14
    12c0:	ff 92       	push	r15
    12c2:	0f 93       	push	r16
    12c4:	1f 93       	push	r17
    12c6:	cf 93       	push	r28
    12c8:	df 93       	push	r29
    12ca:	cd b7       	in	r28, 0x3d	; 61
    12cc:	de b7       	in	r29, 0x3e	; 62
    12ce:	ca 1b       	sub	r28, r26
    12d0:	db 0b       	sbc	r29, r27
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	f8 94       	cli
    12d6:	de bf       	out	0x3e, r29	; 62
    12d8:	0f be       	out	0x3f, r0	; 63
    12da:	cd bf       	out	0x3d, r28	; 61
    12dc:	09 94       	ijmp

000012de <__epilogue_restores__>:
    12de:	2a 88       	ldd	r2, Y+18	; 0x12
    12e0:	39 88       	ldd	r3, Y+17	; 0x11
    12e2:	48 88       	ldd	r4, Y+16	; 0x10
    12e4:	5f 84       	ldd	r5, Y+15	; 0x0f
    12e6:	6e 84       	ldd	r6, Y+14	; 0x0e
    12e8:	7d 84       	ldd	r7, Y+13	; 0x0d
    12ea:	8c 84       	ldd	r8, Y+12	; 0x0c
    12ec:	9b 84       	ldd	r9, Y+11	; 0x0b
    12ee:	aa 84       	ldd	r10, Y+10	; 0x0a
    12f0:	b9 84       	ldd	r11, Y+9	; 0x09
    12f2:	c8 84       	ldd	r12, Y+8	; 0x08
    12f4:	df 80       	ldd	r13, Y+7	; 0x07
    12f6:	ee 80       	ldd	r14, Y+6	; 0x06
    12f8:	fd 80       	ldd	r15, Y+5	; 0x05
    12fa:	0c 81       	ldd	r16, Y+4	; 0x04
    12fc:	1b 81       	ldd	r17, Y+3	; 0x03
    12fe:	aa 81       	ldd	r26, Y+2	; 0x02
    1300:	b9 81       	ldd	r27, Y+1	; 0x01
    1302:	ce 0f       	add	r28, r30
    1304:	d1 1d       	adc	r29, r1
    1306:	0f b6       	in	r0, 0x3f	; 63
    1308:	f8 94       	cli
    130a:	de bf       	out	0x3e, r29	; 62
    130c:	0f be       	out	0x3f, r0	; 63
    130e:	cd bf       	out	0x3d, r28	; 61
    1310:	ed 01       	movw	r28, r26
    1312:	08 95       	ret

00001314 <dtostrf>:
    1314:	ef 92       	push	r14
    1316:	ff 92       	push	r15
    1318:	0f 93       	push	r16
    131a:	1f 93       	push	r17
    131c:	32 2f       	mov	r19, r18
    131e:	f0 2e       	mov	r15, r16
    1320:	47 ff       	sbrs	r20, 7
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <dtostrf+0x14>
    1324:	a4 e1       	ldi	r26, 0x14	; 20
    1326:	01 c0       	rjmp	.+2      	; 0x132a <dtostrf+0x16>
    1328:	a4 e0       	ldi	r26, 0x04	; 4
    132a:	e4 2f       	mov	r30, r20
    132c:	ff 27       	eor	r31, r31
    132e:	e7 fd       	sbrc	r30, 7
    1330:	f0 95       	com	r31
    1332:	f7 ff       	sbrs	r31, 7
    1334:	03 c0       	rjmp	.+6      	; 0x133c <dtostrf+0x28>
    1336:	f0 95       	com	r31
    1338:	e1 95       	neg	r30
    133a:	ff 4f       	sbci	r31, 0xFF	; 255
    133c:	4f 2d       	mov	r20, r15
    133e:	51 2f       	mov	r21, r17
    1340:	2e 2f       	mov	r18, r30
    1342:	03 2f       	mov	r16, r19
    1344:	ea 2e       	mov	r14, r26
    1346:	07 d0       	rcall	.+14     	; 0x1356 <dtoa_prf>
    1348:	8f 2d       	mov	r24, r15
    134a:	91 2f       	mov	r25, r17
    134c:	1f 91       	pop	r17
    134e:	0f 91       	pop	r16
    1350:	ff 90       	pop	r15
    1352:	ef 90       	pop	r14
    1354:	08 95       	ret

00001356 <dtoa_prf>:
    1356:	a9 e0       	ldi	r26, 0x09	; 9
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	e0 eb       	ldi	r30, 0xB0	; 176
    135c:	f9 e0       	ldi	r31, 0x09	; 9
    135e:	ab cf       	rjmp	.-170    	; 0x12b6 <__prologue_saves__+0x10>
    1360:	6a 01       	movw	r12, r20
    1362:	f2 2e       	mov	r15, r18
    1364:	10 2f       	mov	r17, r16
    1366:	0c 33       	cpi	r16, 0x3C	; 60
    1368:	18 f4       	brcc	.+6      	; 0x1370 <dtoa_prf+0x1a>
    136a:	b0 2e       	mov	r11, r16
    136c:	b3 94       	inc	r11
    136e:	02 c0       	rjmp	.+4      	; 0x1374 <dtoa_prf+0x1e>
    1370:	ec e3       	ldi	r30, 0x3C	; 60
    1372:	be 2e       	mov	r11, r30
    1374:	ae 01       	movw	r20, r28
    1376:	4f 5f       	subi	r20, 0xFF	; 255
    1378:	5f 4f       	sbci	r21, 0xFF	; 255
    137a:	27 e0       	ldi	r18, 0x07	; 7
    137c:	0b 2d       	mov	r16, r11
    137e:	3f d1       	rcall	.+638    	; 0x15fe <__ftoa_engine>
    1380:	29 81       	ldd	r18, Y+1	; 0x01
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	a9 01       	movw	r20, r18
    1386:	49 70       	andi	r20, 0x09	; 9
    1388:	50 70       	andi	r21, 0x00	; 0
    138a:	41 30       	cpi	r20, 0x01	; 1
    138c:	51 05       	cpc	r21, r1
    138e:	31 f0       	breq	.+12     	; 0x139c <dtoa_prf+0x46>
    1390:	e1 fc       	sbrc	r14, 1
    1392:	06 c0       	rjmp	.+12     	; 0x13a0 <dtoa_prf+0x4a>
    1394:	e0 fe       	sbrs	r14, 0
    1396:	06 c0       	rjmp	.+12     	; 0x13a4 <dtoa_prf+0x4e>
    1398:	e0 e2       	ldi	r30, 0x20	; 32
    139a:	05 c0       	rjmp	.+10     	; 0x13a6 <dtoa_prf+0x50>
    139c:	ed e2       	ldi	r30, 0x2D	; 45
    139e:	03 c0       	rjmp	.+6      	; 0x13a6 <dtoa_prf+0x50>
    13a0:	eb e2       	ldi	r30, 0x2B	; 43
    13a2:	01 c0       	rjmp	.+2      	; 0x13a6 <dtoa_prf+0x50>
    13a4:	e0 e0       	ldi	r30, 0x00	; 0
    13a6:	23 ff       	sbrs	r18, 3
    13a8:	37 c0       	rjmp	.+110    	; 0x1418 <dtoa_prf+0xc2>
    13aa:	ee 23       	and	r30, r30
    13ac:	11 f0       	breq	.+4      	; 0x13b2 <dtoa_prf+0x5c>
    13ae:	84 e0       	ldi	r24, 0x04	; 4
    13b0:	01 c0       	rjmp	.+2      	; 0x13b4 <dtoa_prf+0x5e>
    13b2:	83 e0       	ldi	r24, 0x03	; 3
    13b4:	8f 15       	cp	r24, r15
    13b6:	18 f4       	brcc	.+6      	; 0x13be <dtoa_prf+0x68>
    13b8:	f8 1a       	sub	r15, r24
    13ba:	8f 2d       	mov	r24, r15
    13bc:	01 c0       	rjmp	.+2      	; 0x13c0 <dtoa_prf+0x6a>
    13be:	80 e0       	ldi	r24, 0x00	; 0
    13c0:	e4 fc       	sbrc	r14, 4
    13c2:	0b c0       	rjmp	.+22     	; 0x13da <dtoa_prf+0x84>
    13c4:	98 2f       	mov	r25, r24
    13c6:	d6 01       	movw	r26, r12
    13c8:	20 e2       	ldi	r18, 0x20	; 32
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <dtoa_prf+0x7a>
    13cc:	2d 93       	st	X+, r18
    13ce:	91 50       	subi	r25, 0x01	; 1
    13d0:	99 23       	and	r25, r25
    13d2:	e1 f7       	brne	.-8      	; 0x13cc <dtoa_prf+0x76>
    13d4:	c8 0e       	add	r12, r24
    13d6:	d1 1c       	adc	r13, r1
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	ee 23       	and	r30, r30
    13dc:	19 f0       	breq	.+6      	; 0x13e4 <dtoa_prf+0x8e>
    13de:	d6 01       	movw	r26, r12
    13e0:	ed 93       	st	X+, r30
    13e2:	6d 01       	movw	r12, r26
    13e4:	f6 01       	movw	r30, r12
    13e6:	31 96       	adiw	r30, 0x01	; 1
    13e8:	e2 fe       	sbrs	r14, 2
    13ea:	05 c0       	rjmp	.+10     	; 0x13f6 <dtoa_prf+0xa0>
    13ec:	9e e4       	ldi	r25, 0x4E	; 78
    13ee:	d6 01       	movw	r26, r12
    13f0:	9c 93       	st	X, r25
    13f2:	21 e4       	ldi	r18, 0x41	; 65
    13f4:	04 c0       	rjmp	.+8      	; 0x13fe <dtoa_prf+0xa8>
    13f6:	9e e6       	ldi	r25, 0x6E	; 110
    13f8:	d6 01       	movw	r26, r12
    13fa:	9c 93       	st	X, r25
    13fc:	21 e6       	ldi	r18, 0x61	; 97
    13fe:	11 96       	adiw	r26, 0x01	; 1
    1400:	2c 93       	st	X, r18
    1402:	91 83       	std	Z+1, r25	; 0x01
    1404:	32 96       	adiw	r30, 0x02	; 2
    1406:	98 2f       	mov	r25, r24
    1408:	df 01       	movw	r26, r30
    140a:	20 e2       	ldi	r18, 0x20	; 32
    140c:	02 c0       	rjmp	.+4      	; 0x1412 <dtoa_prf+0xbc>
    140e:	2d 93       	st	X+, r18
    1410:	91 50       	subi	r25, 0x01	; 1
    1412:	99 23       	and	r25, r25
    1414:	e1 f7       	brne	.-8      	; 0x140e <dtoa_prf+0xb8>
    1416:	3d c0       	rjmp	.+122    	; 0x1492 <dtoa_prf+0x13c>
    1418:	22 ff       	sbrs	r18, 2
    141a:	41 c0       	rjmp	.+130    	; 0x149e <dtoa_prf+0x148>
    141c:	ee 23       	and	r30, r30
    141e:	11 f0       	breq	.+4      	; 0x1424 <dtoa_prf+0xce>
    1420:	84 e0       	ldi	r24, 0x04	; 4
    1422:	01 c0       	rjmp	.+2      	; 0x1426 <dtoa_prf+0xd0>
    1424:	83 e0       	ldi	r24, 0x03	; 3
    1426:	8f 15       	cp	r24, r15
    1428:	18 f4       	brcc	.+6      	; 0x1430 <dtoa_prf+0xda>
    142a:	f8 1a       	sub	r15, r24
    142c:	8f 2d       	mov	r24, r15
    142e:	01 c0       	rjmp	.+2      	; 0x1432 <dtoa_prf+0xdc>
    1430:	80 e0       	ldi	r24, 0x00	; 0
    1432:	e4 fc       	sbrc	r14, 4
    1434:	0b c0       	rjmp	.+22     	; 0x144c <dtoa_prf+0xf6>
    1436:	98 2f       	mov	r25, r24
    1438:	d6 01       	movw	r26, r12
    143a:	20 e2       	ldi	r18, 0x20	; 32
    143c:	02 c0       	rjmp	.+4      	; 0x1442 <dtoa_prf+0xec>
    143e:	2d 93       	st	X+, r18
    1440:	91 50       	subi	r25, 0x01	; 1
    1442:	99 23       	and	r25, r25
    1444:	e1 f7       	brne	.-8      	; 0x143e <dtoa_prf+0xe8>
    1446:	c8 0e       	add	r12, r24
    1448:	d1 1c       	adc	r13, r1
    144a:	80 e0       	ldi	r24, 0x00	; 0
    144c:	ee 23       	and	r30, r30
    144e:	19 f0       	breq	.+6      	; 0x1456 <dtoa_prf+0x100>
    1450:	d6 01       	movw	r26, r12
    1452:	ed 93       	st	X+, r30
    1454:	6d 01       	movw	r12, r26
    1456:	f6 01       	movw	r30, r12
    1458:	31 96       	adiw	r30, 0x01	; 1
    145a:	e2 fe       	sbrs	r14, 2
    145c:	09 c0       	rjmp	.+18     	; 0x1470 <dtoa_prf+0x11a>
    145e:	99 e4       	ldi	r25, 0x49	; 73
    1460:	d6 01       	movw	r26, r12
    1462:	9c 93       	st	X, r25
    1464:	9e e4       	ldi	r25, 0x4E	; 78
    1466:	11 96       	adiw	r26, 0x01	; 1
    1468:	9c 93       	st	X, r25
    146a:	11 97       	sbiw	r26, 0x01	; 1
    146c:	96 e4       	ldi	r25, 0x46	; 70
    146e:	07 c0       	rjmp	.+14     	; 0x147e <dtoa_prf+0x128>
    1470:	99 e6       	ldi	r25, 0x69	; 105
    1472:	d6 01       	movw	r26, r12
    1474:	9c 93       	st	X, r25
    1476:	9e e6       	ldi	r25, 0x6E	; 110
    1478:	11 96       	adiw	r26, 0x01	; 1
    147a:	9c 93       	st	X, r25
    147c:	96 e6       	ldi	r25, 0x66	; 102
    147e:	91 83       	std	Z+1, r25	; 0x01
    1480:	32 96       	adiw	r30, 0x02	; 2
    1482:	98 2f       	mov	r25, r24
    1484:	df 01       	movw	r26, r30
    1486:	20 e2       	ldi	r18, 0x20	; 32
    1488:	02 c0       	rjmp	.+4      	; 0x148e <dtoa_prf+0x138>
    148a:	2d 93       	st	X+, r18
    148c:	91 50       	subi	r25, 0x01	; 1
    148e:	99 23       	and	r25, r25
    1490:	e1 f7       	brne	.-8      	; 0x148a <dtoa_prf+0x134>
    1492:	e8 0f       	add	r30, r24
    1494:	f1 1d       	adc	r31, r1
    1496:	10 82       	st	Z, r1
    1498:	2e ef       	ldi	r18, 0xFE	; 254
    149a:	3f ef       	ldi	r19, 0xFF	; 255
    149c:	ac c0       	rjmp	.+344    	; 0x15f6 <dtoa_prf+0x2a0>
    149e:	41 e0       	ldi	r20, 0x01	; 1
    14a0:	50 e0       	ldi	r21, 0x00	; 0
    14a2:	ee 23       	and	r30, r30
    14a4:	11 f4       	brne	.+4      	; 0x14aa <dtoa_prf+0x154>
    14a6:	40 e0       	ldi	r20, 0x00	; 0
    14a8:	50 e0       	ldi	r21, 0x00	; 0
    14aa:	18 16       	cp	r1, r24
    14ac:	19 06       	cpc	r1, r25
    14ae:	24 f4       	brge	.+8      	; 0x14b8 <dtoa_prf+0x162>
    14b0:	bc 01       	movw	r22, r24
    14b2:	6f 5f       	subi	r22, 0xFF	; 255
    14b4:	7f 4f       	sbci	r23, 0xFF	; 255
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <dtoa_prf+0x166>
    14b8:	61 e0       	ldi	r22, 0x01	; 1
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	64 0f       	add	r22, r20
    14be:	75 1f       	adc	r23, r21
    14c0:	11 23       	and	r17, r17
    14c2:	29 f0       	breq	.+10     	; 0x14ce <dtoa_prf+0x178>
    14c4:	41 2f       	mov	r20, r17
    14c6:	50 e0       	ldi	r21, 0x00	; 0
    14c8:	4f 5f       	subi	r20, 0xFF	; 255
    14ca:	5f 4f       	sbci	r21, 0xFF	; 255
    14cc:	02 c0       	rjmp	.+4      	; 0x14d2 <dtoa_prf+0x17c>
    14ce:	40 e0       	ldi	r20, 0x00	; 0
    14d0:	50 e0       	ldi	r21, 0x00	; 0
    14d2:	46 0f       	add	r20, r22
    14d4:	57 1f       	adc	r21, r23
    14d6:	6f 2d       	mov	r22, r15
    14d8:	70 e0       	ldi	r23, 0x00	; 0
    14da:	46 17       	cp	r20, r22
    14dc:	57 07       	cpc	r21, r23
    14de:	1c f4       	brge	.+6      	; 0x14e6 <dtoa_prf+0x190>
    14e0:	0f 2d       	mov	r16, r15
    14e2:	04 1b       	sub	r16, r20
    14e4:	01 c0       	rjmp	.+2      	; 0x14e8 <dtoa_prf+0x192>
    14e6:	00 e0       	ldi	r16, 0x00	; 0
    14e8:	ff 24       	eor	r15, r15
    14ea:	a7 01       	movw	r20, r14
    14ec:	40 71       	andi	r20, 0x10	; 16
    14ee:	50 70       	andi	r21, 0x00	; 0
    14f0:	e4 fc       	sbrc	r14, 4
    14f2:	0d c0       	rjmp	.+26     	; 0x150e <dtoa_prf+0x1b8>
    14f4:	e3 fc       	sbrc	r14, 3
    14f6:	0b c0       	rjmp	.+22     	; 0x150e <dtoa_prf+0x1b8>
    14f8:	60 2f       	mov	r22, r16
    14fa:	d6 01       	movw	r26, r12
    14fc:	70 e2       	ldi	r23, 0x20	; 32
    14fe:	02 c0       	rjmp	.+4      	; 0x1504 <dtoa_prf+0x1ae>
    1500:	7d 93       	st	X+, r23
    1502:	61 50       	subi	r22, 0x01	; 1
    1504:	66 23       	and	r22, r22
    1506:	e1 f7       	brne	.-8      	; 0x1500 <dtoa_prf+0x1aa>
    1508:	c0 0e       	add	r12, r16
    150a:	d1 1c       	adc	r13, r1
    150c:	00 e0       	ldi	r16, 0x00	; 0
    150e:	ee 23       	and	r30, r30
    1510:	19 f0       	breq	.+6      	; 0x1518 <dtoa_prf+0x1c2>
    1512:	d6 01       	movw	r26, r12
    1514:	ed 93       	st	X+, r30
    1516:	6d 01       	movw	r12, r26
    1518:	41 15       	cp	r20, r1
    151a:	51 05       	cpc	r21, r1
    151c:	59 f4       	brne	.+22     	; 0x1534 <dtoa_prf+0x1de>
    151e:	40 2f       	mov	r20, r16
    1520:	f6 01       	movw	r30, r12
    1522:	50 e3       	ldi	r21, 0x30	; 48
    1524:	02 c0       	rjmp	.+4      	; 0x152a <dtoa_prf+0x1d4>
    1526:	51 93       	st	Z+, r21
    1528:	41 50       	subi	r20, 0x01	; 1
    152a:	44 23       	and	r20, r20
    152c:	e1 f7       	brne	.-8      	; 0x1526 <dtoa_prf+0x1d0>
    152e:	c0 0e       	add	r12, r16
    1530:	d1 1c       	adc	r13, r1
    1532:	00 e0       	ldi	r16, 0x00	; 0
    1534:	b8 0e       	add	r11, r24
    1536:	fa 80       	ldd	r15, Y+2	; 0x02
    1538:	a9 01       	movw	r20, r18
    153a:	40 71       	andi	r20, 0x10	; 16
    153c:	50 70       	andi	r21, 0x00	; 0
    153e:	24 ff       	sbrs	r18, 4
    1540:	04 c0       	rjmp	.+8      	; 0x154a <dtoa_prf+0x1f4>
    1542:	bf 2d       	mov	r27, r15
    1544:	b1 33       	cpi	r27, 0x31	; 49
    1546:	09 f4       	brne	.+2      	; 0x154a <dtoa_prf+0x1f4>
    1548:	ba 94       	dec	r11
    154a:	1b 14       	cp	r1, r11
    154c:	2c f4       	brge	.+10     	; 0x1558 <dtoa_prf+0x202>
    154e:	ab 2d       	mov	r26, r11
    1550:	a9 30       	cpi	r26, 0x09	; 9
    1552:	18 f0       	brcs	.+6      	; 0x155a <dtoa_prf+0x204>
    1554:	a8 e0       	ldi	r26, 0x08	; 8
    1556:	01 c0       	rjmp	.+2      	; 0x155a <dtoa_prf+0x204>
    1558:	a1 e0       	ldi	r26, 0x01	; 1
    155a:	9c 01       	movw	r18, r24
    155c:	97 ff       	sbrs	r25, 7
    155e:	02 c0       	rjmp	.+4      	; 0x1564 <dtoa_prf+0x20e>
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	bc 01       	movw	r22, r24
    1566:	6f 5f       	subi	r22, 0xFF	; 255
    1568:	7f 4f       	sbci	r23, 0xFF	; 255
    156a:	62 1b       	sub	r22, r18
    156c:	73 0b       	sbc	r23, r19
    156e:	fe 01       	movw	r30, r28
    1570:	31 96       	adiw	r30, 0x01	; 1
    1572:	e6 0f       	add	r30, r22
    1574:	f7 1f       	adc	r31, r23
    1576:	6e e2       	ldi	r22, 0x2E	; 46
    1578:	e6 2e       	mov	r14, r22
    157a:	bc 01       	movw	r22, r24
    157c:	6a 1b       	sub	r22, r26
    157e:	71 09       	sbc	r23, r1
    1580:	a1 2f       	mov	r26, r17
    1582:	b0 e0       	ldi	r27, 0x00	; 0
    1584:	aa 24       	eor	r10, r10
    1586:	bb 24       	eor	r11, r11
    1588:	aa 1a       	sub	r10, r26
    158a:	bb 0a       	sbc	r11, r27
    158c:	1f ef       	ldi	r17, 0xFF	; 255
    158e:	2f 3f       	cpi	r18, 0xFF	; 255
    1590:	31 07       	cpc	r19, r17
    1592:	19 f4       	brne	.+6      	; 0x159a <dtoa_prf+0x244>
    1594:	d6 01       	movw	r26, r12
    1596:	ed 92       	st	X+, r14
    1598:	6d 01       	movw	r12, r26
    159a:	82 17       	cp	r24, r18
    159c:	93 07       	cpc	r25, r19
    159e:	2c f0       	brlt	.+10     	; 0x15aa <dtoa_prf+0x254>
    15a0:	62 17       	cp	r22, r18
    15a2:	73 07       	cpc	r23, r19
    15a4:	14 f4       	brge	.+4      	; 0x15aa <dtoa_prf+0x254>
    15a6:	10 81       	ld	r17, Z
    15a8:	01 c0       	rjmp	.+2      	; 0x15ac <dtoa_prf+0x256>
    15aa:	10 e3       	ldi	r17, 0x30	; 48
    15ac:	21 50       	subi	r18, 0x01	; 1
    15ae:	30 40       	sbci	r19, 0x00	; 0
    15b0:	31 96       	adiw	r30, 0x01	; 1
    15b2:	2a 15       	cp	r18, r10
    15b4:	3b 05       	cpc	r19, r11
    15b6:	24 f0       	brlt	.+8      	; 0x15c0 <dtoa_prf+0x26a>
    15b8:	d6 01       	movw	r26, r12
    15ba:	1d 93       	st	X+, r17
    15bc:	6d 01       	movw	r12, r26
    15be:	e6 cf       	rjmp	.-52     	; 0x158c <dtoa_prf+0x236>
    15c0:	28 17       	cp	r18, r24
    15c2:	39 07       	cpc	r19, r25
    15c4:	49 f4       	brne	.+18     	; 0x15d8 <dtoa_prf+0x282>
    15c6:	bf 2d       	mov	r27, r15
    15c8:	b6 33       	cpi	r27, 0x36	; 54
    15ca:	28 f4       	brcc	.+10     	; 0x15d6 <dtoa_prf+0x280>
    15cc:	b5 33       	cpi	r27, 0x35	; 53
    15ce:	21 f4       	brne	.+8      	; 0x15d8 <dtoa_prf+0x282>
    15d0:	41 15       	cp	r20, r1
    15d2:	51 05       	cpc	r21, r1
    15d4:	09 f4       	brne	.+2      	; 0x15d8 <dtoa_prf+0x282>
    15d6:	11 e3       	ldi	r17, 0x31	; 49
    15d8:	f6 01       	movw	r30, r12
    15da:	11 93       	st	Z+, r17
    15dc:	80 2f       	mov	r24, r16
    15de:	df 01       	movw	r26, r30
    15e0:	90 e2       	ldi	r25, 0x20	; 32
    15e2:	02 c0       	rjmp	.+4      	; 0x15e8 <dtoa_prf+0x292>
    15e4:	9d 93       	st	X+, r25
    15e6:	81 50       	subi	r24, 0x01	; 1
    15e8:	88 23       	and	r24, r24
    15ea:	e1 f7       	brne	.-8      	; 0x15e4 <dtoa_prf+0x28e>
    15ec:	e0 0f       	add	r30, r16
    15ee:	f1 1d       	adc	r31, r1
    15f0:	10 82       	st	Z, r1
    15f2:	20 e0       	ldi	r18, 0x00	; 0
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	c9 01       	movw	r24, r18
    15f8:	29 96       	adiw	r28, 0x09	; 9
    15fa:	ea e0       	ldi	r30, 0x0A	; 10
    15fc:	78 ce       	rjmp	.-784    	; 0x12ee <__epilogue_restores__+0x10>

000015fe <__ftoa_engine>:
    15fe:	28 30       	cpi	r18, 0x08	; 8
    1600:	08 f0       	brcs	.+2      	; 0x1604 <__ftoa_engine+0x6>
    1602:	27 e0       	ldi	r18, 0x07	; 7
    1604:	33 27       	eor	r19, r19
    1606:	da 01       	movw	r26, r20
    1608:	99 0f       	add	r25, r25
    160a:	31 1d       	adc	r19, r1
    160c:	87 fd       	sbrc	r24, 7
    160e:	91 60       	ori	r25, 0x01	; 1
    1610:	00 96       	adiw	r24, 0x00	; 0
    1612:	61 05       	cpc	r22, r1
    1614:	71 05       	cpc	r23, r1
    1616:	39 f4       	brne	.+14     	; 0x1626 <__ftoa_engine+0x28>
    1618:	32 60       	ori	r19, 0x02	; 2
    161a:	2e 5f       	subi	r18, 0xFE	; 254
    161c:	3d 93       	st	X+, r19
    161e:	30 e3       	ldi	r19, 0x30	; 48
    1620:	2a 95       	dec	r18
    1622:	e1 f7       	brne	.-8      	; 0x161c <__ftoa_engine+0x1e>
    1624:	08 95       	ret
    1626:	9f 3f       	cpi	r25, 0xFF	; 255
    1628:	30 f0       	brcs	.+12     	; 0x1636 <__ftoa_engine+0x38>
    162a:	80 38       	cpi	r24, 0x80	; 128
    162c:	71 05       	cpc	r23, r1
    162e:	61 05       	cpc	r22, r1
    1630:	09 f0       	breq	.+2      	; 0x1634 <__ftoa_engine+0x36>
    1632:	3c 5f       	subi	r19, 0xFC	; 252
    1634:	3c 5f       	subi	r19, 0xFC	; 252
    1636:	3d 93       	st	X+, r19
    1638:	91 30       	cpi	r25, 0x01	; 1
    163a:	08 f0       	brcs	.+2      	; 0x163e <__ftoa_engine+0x40>
    163c:	80 68       	ori	r24, 0x80	; 128
    163e:	91 1d       	adc	r25, r1
    1640:	df 93       	push	r29
    1642:	cf 93       	push	r28
    1644:	1f 93       	push	r17
    1646:	0f 93       	push	r16
    1648:	ff 92       	push	r15
    164a:	ef 92       	push	r14
    164c:	19 2f       	mov	r17, r25
    164e:	98 7f       	andi	r25, 0xF8	; 248
    1650:	96 95       	lsr	r25
    1652:	e9 2f       	mov	r30, r25
    1654:	96 95       	lsr	r25
    1656:	96 95       	lsr	r25
    1658:	e9 0f       	add	r30, r25
    165a:	ff 27       	eor	r31, r31
    165c:	e4 58       	subi	r30, 0x84	; 132
    165e:	ff 4f       	sbci	r31, 0xFF	; 255
    1660:	99 27       	eor	r25, r25
    1662:	33 27       	eor	r19, r19
    1664:	ee 24       	eor	r14, r14
    1666:	ff 24       	eor	r15, r15
    1668:	a7 01       	movw	r20, r14
    166a:	e7 01       	movw	r28, r14
    166c:	05 90       	lpm	r0, Z+
    166e:	08 94       	sec
    1670:	07 94       	ror	r0
    1672:	28 f4       	brcc	.+10     	; 0x167e <__ftoa_engine+0x80>
    1674:	36 0f       	add	r19, r22
    1676:	e7 1e       	adc	r14, r23
    1678:	f8 1e       	adc	r15, r24
    167a:	49 1f       	adc	r20, r25
    167c:	51 1d       	adc	r21, r1
    167e:	66 0f       	add	r22, r22
    1680:	77 1f       	adc	r23, r23
    1682:	88 1f       	adc	r24, r24
    1684:	99 1f       	adc	r25, r25
    1686:	06 94       	lsr	r0
    1688:	a1 f7       	brne	.-24     	; 0x1672 <__ftoa_engine+0x74>
    168a:	05 90       	lpm	r0, Z+
    168c:	07 94       	ror	r0
    168e:	28 f4       	brcc	.+10     	; 0x169a <__ftoa_engine+0x9c>
    1690:	e7 0e       	add	r14, r23
    1692:	f8 1e       	adc	r15, r24
    1694:	49 1f       	adc	r20, r25
    1696:	56 1f       	adc	r21, r22
    1698:	c1 1d       	adc	r28, r1
    169a:	77 0f       	add	r23, r23
    169c:	88 1f       	adc	r24, r24
    169e:	99 1f       	adc	r25, r25
    16a0:	66 1f       	adc	r22, r22
    16a2:	06 94       	lsr	r0
    16a4:	a1 f7       	brne	.-24     	; 0x168e <__ftoa_engine+0x90>
    16a6:	05 90       	lpm	r0, Z+
    16a8:	07 94       	ror	r0
    16aa:	28 f4       	brcc	.+10     	; 0x16b6 <__ftoa_engine+0xb8>
    16ac:	f8 0e       	add	r15, r24
    16ae:	49 1f       	adc	r20, r25
    16b0:	56 1f       	adc	r21, r22
    16b2:	c7 1f       	adc	r28, r23
    16b4:	d1 1d       	adc	r29, r1
    16b6:	88 0f       	add	r24, r24
    16b8:	99 1f       	adc	r25, r25
    16ba:	66 1f       	adc	r22, r22
    16bc:	77 1f       	adc	r23, r23
    16be:	06 94       	lsr	r0
    16c0:	a1 f7       	brne	.-24     	; 0x16aa <__ftoa_engine+0xac>
    16c2:	05 90       	lpm	r0, Z+
    16c4:	07 94       	ror	r0
    16c6:	20 f4       	brcc	.+8      	; 0x16d0 <__ftoa_engine+0xd2>
    16c8:	49 0f       	add	r20, r25
    16ca:	56 1f       	adc	r21, r22
    16cc:	c7 1f       	adc	r28, r23
    16ce:	d8 1f       	adc	r29, r24
    16d0:	99 0f       	add	r25, r25
    16d2:	66 1f       	adc	r22, r22
    16d4:	77 1f       	adc	r23, r23
    16d6:	88 1f       	adc	r24, r24
    16d8:	06 94       	lsr	r0
    16da:	a9 f7       	brne	.-22     	; 0x16c6 <__ftoa_engine+0xc8>
    16dc:	84 91       	lpm	r24, Z+
    16de:	10 95       	com	r17
    16e0:	17 70       	andi	r17, 0x07	; 7
    16e2:	41 f0       	breq	.+16     	; 0x16f4 <__ftoa_engine+0xf6>
    16e4:	d6 95       	lsr	r29
    16e6:	c7 95       	ror	r28
    16e8:	57 95       	ror	r21
    16ea:	47 95       	ror	r20
    16ec:	f7 94       	ror	r15
    16ee:	e7 94       	ror	r14
    16f0:	1a 95       	dec	r17
    16f2:	c1 f7       	brne	.-16     	; 0x16e4 <__ftoa_engine+0xe6>
    16f4:	e2 e2       	ldi	r30, 0x22	; 34
    16f6:	f0 e0       	ldi	r31, 0x00	; 0
    16f8:	68 94       	set
    16fa:	15 90       	lpm	r1, Z+
    16fc:	15 91       	lpm	r17, Z+
    16fe:	35 91       	lpm	r19, Z+
    1700:	65 91       	lpm	r22, Z+
    1702:	95 91       	lpm	r25, Z+
    1704:	05 90       	lpm	r0, Z+
    1706:	7f e2       	ldi	r23, 0x2F	; 47
    1708:	73 95       	inc	r23
    170a:	e1 18       	sub	r14, r1
    170c:	f1 0a       	sbc	r15, r17
    170e:	43 0b       	sbc	r20, r19
    1710:	56 0b       	sbc	r21, r22
    1712:	c9 0b       	sbc	r28, r25
    1714:	d0 09       	sbc	r29, r0
    1716:	c0 f7       	brcc	.-16     	; 0x1708 <__ftoa_engine+0x10a>
    1718:	e1 0c       	add	r14, r1
    171a:	f1 1e       	adc	r15, r17
    171c:	43 1f       	adc	r20, r19
    171e:	56 1f       	adc	r21, r22
    1720:	c9 1f       	adc	r28, r25
    1722:	d0 1d       	adc	r29, r0
    1724:	7e f4       	brtc	.+30     	; 0x1744 <__ftoa_engine+0x146>
    1726:	70 33       	cpi	r23, 0x30	; 48
    1728:	11 f4       	brne	.+4      	; 0x172e <__ftoa_engine+0x130>
    172a:	8a 95       	dec	r24
    172c:	e6 cf       	rjmp	.-52     	; 0x16fa <__ftoa_engine+0xfc>
    172e:	e8 94       	clt
    1730:	01 50       	subi	r16, 0x01	; 1
    1732:	30 f0       	brcs	.+12     	; 0x1740 <__ftoa_engine+0x142>
    1734:	08 0f       	add	r16, r24
    1736:	0a f4       	brpl	.+2      	; 0x173a <__ftoa_engine+0x13c>
    1738:	00 27       	eor	r16, r16
    173a:	02 17       	cp	r16, r18
    173c:	08 f4       	brcc	.+2      	; 0x1740 <__ftoa_engine+0x142>
    173e:	20 2f       	mov	r18, r16
    1740:	23 95       	inc	r18
    1742:	02 2f       	mov	r16, r18
    1744:	7a 33       	cpi	r23, 0x3A	; 58
    1746:	28 f0       	brcs	.+10     	; 0x1752 <__ftoa_engine+0x154>
    1748:	79 e3       	ldi	r23, 0x39	; 57
    174a:	7d 93       	st	X+, r23
    174c:	2a 95       	dec	r18
    174e:	e9 f7       	brne	.-6      	; 0x174a <__ftoa_engine+0x14c>
    1750:	10 c0       	rjmp	.+32     	; 0x1772 <__ftoa_engine+0x174>
    1752:	7d 93       	st	X+, r23
    1754:	2a 95       	dec	r18
    1756:	89 f6       	brne	.-94     	; 0x16fa <__ftoa_engine+0xfc>
    1758:	06 94       	lsr	r0
    175a:	97 95       	ror	r25
    175c:	67 95       	ror	r22
    175e:	37 95       	ror	r19
    1760:	17 95       	ror	r17
    1762:	17 94       	ror	r1
    1764:	e1 18       	sub	r14, r1
    1766:	f1 0a       	sbc	r15, r17
    1768:	43 0b       	sbc	r20, r19
    176a:	56 0b       	sbc	r21, r22
    176c:	c9 0b       	sbc	r28, r25
    176e:	d0 09       	sbc	r29, r0
    1770:	98 f0       	brcs	.+38     	; 0x1798 <__ftoa_engine+0x19a>
    1772:	23 95       	inc	r18
    1774:	7e 91       	ld	r23, -X
    1776:	73 95       	inc	r23
    1778:	7a 33       	cpi	r23, 0x3A	; 58
    177a:	08 f0       	brcs	.+2      	; 0x177e <__ftoa_engine+0x180>
    177c:	70 e3       	ldi	r23, 0x30	; 48
    177e:	7c 93       	st	X, r23
    1780:	20 13       	cpse	r18, r16
    1782:	b8 f7       	brcc	.-18     	; 0x1772 <__ftoa_engine+0x174>
    1784:	7e 91       	ld	r23, -X
    1786:	70 61       	ori	r23, 0x10	; 16
    1788:	7d 93       	st	X+, r23
    178a:	30 f0       	brcs	.+12     	; 0x1798 <__ftoa_engine+0x19a>
    178c:	83 95       	inc	r24
    178e:	71 e3       	ldi	r23, 0x31	; 49
    1790:	7d 93       	st	X+, r23
    1792:	70 e3       	ldi	r23, 0x30	; 48
    1794:	2a 95       	dec	r18
    1796:	e1 f7       	brne	.-8      	; 0x1790 <__ftoa_engine+0x192>
    1798:	11 24       	eor	r1, r1
    179a:	ef 90       	pop	r14
    179c:	ff 90       	pop	r15
    179e:	0f 91       	pop	r16
    17a0:	1f 91       	pop	r17
    17a2:	cf 91       	pop	r28
    17a4:	df 91       	pop	r29
    17a6:	99 27       	eor	r25, r25
    17a8:	87 fd       	sbrc	r24, 7
    17aa:	90 95       	com	r25
    17ac:	08 95       	ret

000017ae <_exit>:
    17ae:	f8 94       	cli

000017b0 <__stop_program>:
    17b0:	ff cf       	rjmp	.-2      	; 0x17b0 <__stop_program>
