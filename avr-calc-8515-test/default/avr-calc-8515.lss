
avr-calc-8515.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c5c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  00001c5c  00001cf0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  008001a4  008001a4  00001e34  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  00001e34  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000110  00000000  00000000  00002f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  00003048  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000381  00000000  00000000  00003268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002e46  00000000  00000000  000035e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000016db  00000000  00000000  0000642f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000024b2  00000000  00000000  00007b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000330  00000000  00000000  00009fbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000658  00000000  00000000  0000a2ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000016be  00000000  00000000  0000a944  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000006af  00000000  00000000  0000c002  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000108  00000000  00000000  0000c6b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	a7 c0       	rjmp	.+334    	; 0x152 <__bad_interrupt>
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	a5 c0       	rjmp	.+330    	; 0x152 <__bad_interrupt>
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	a3 c0       	rjmp	.+326    	; 0x152 <__bad_interrupt>
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	a1 c0       	rjmp	.+322    	; 0x152 <__bad_interrupt>
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	9f c0       	rjmp	.+318    	; 0x152 <__bad_interrupt>
      14:	9e c0       	rjmp	.+316    	; 0x152 <__bad_interrupt>
      16:	9d c0       	rjmp	.+314    	; 0x152 <__bad_interrupt>
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	9b c0       	rjmp	.+310    	; 0x152 <__bad_interrupt>
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	99 c0       	rjmp	.+306    	; 0x152 <__bad_interrupt>
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 40       	sbci	r16, 0x00	; 0
      24:	7a 10       	cpse	r7, r10
      26:	f3 5a       	subi	r31, 0xA3	; 163
      28:	00 a0       	ldd	r0, Z+32	; 0x20
      2a:	72 4e       	sbci	r23, 0xE2	; 226
      2c:	18 09       	sbc	r17, r8
      2e:	00 10       	cpse	r0, r0
      30:	a5 d4       	rcall	.+2378   	; 0x97c <decide+0x3bc>
      32:	e8 00       	.word	0x00e8	; ????
      34:	00 e8       	ldi	r16, 0x80	; 128
      36:	76 48       	sbci	r23, 0x86	; 134
      38:	17 00       	.word	0x0017	; ????
      3a:	00 e4       	ldi	r16, 0x40	; 64
      3c:	0b 54       	subi	r16, 0x4B	; 75
      3e:	02 00       	.word	0x0002	; ????
      40:	00 ca       	rjmp	.-3072   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      42:	9a 3b       	cpi	r25, 0xBA	; 186
      44:	00 00       	nop
      46:	00 e1       	ldi	r16, 0x10	; 16
      48:	f5 05       	cpc	r31, r5
      4a:	00 00       	nop
      4c:	80 96       	adiw	r24, 0x20	; 32
      4e:	98 00       	.word	0x0098	; ????
      50:	00 00       	nop
      52:	40 42       	sbci	r20, 0x20	; 32
      54:	0f 00       	.word	0x000f	; ????
      56:	00 00       	nop
      58:	a0 86       	std	Z+8, r10	; 0x08
      5a:	01 00       	.word	0x0001	; ????
      5c:	00 00       	nop
      5e:	10 27       	eor	r17, r16
      60:	00 00       	nop
      62:	00 00       	nop
      64:	e8 03       	fmulsu	r22, r16
      66:	00 00       	nop
      68:	00 00       	nop
      6a:	64 00       	.word	0x0064	; ????
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	0a 00       	.word	0x000a	; ????
      72:	00 00       	nop
      74:	00 00       	nop
      76:	01 00       	.word	0x0001	; ????
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	2c 76       	andi	r18, 0x6C	; 108
      7e:	d8 88       	ldd	r13, Y+16	; 0x10
      80:	dc 67       	ori	r29, 0x7C	; 124
      82:	4f 08       	sbc	r4, r15
      84:	23 df       	rcall	.-442    	; 0xfffffecc <__eeprom_end+0xff7efecc>
      86:	c1 df       	rcall	.-126    	; 0xa <__zero_reg__+0x9>
      88:	ae 59       	subi	r26, 0x9E	; 158
      8a:	e1 b1       	in	r30, 0x01	; 1
      8c:	b7 96       	adiw	r30, 0x27	; 39
      8e:	e5 e3       	ldi	r30, 0x35	; 53
      90:	e4 53       	subi	r30, 0x34	; 52
      92:	c6 3a       	cpi	r28, 0xA6	; 166
      94:	e6 51       	subi	r30, 0x16	; 22
      96:	99 76       	andi	r25, 0x69	; 105
      98:	96 e8       	ldi	r25, 0x86	; 134
      9a:	e6 c2       	rjmp	.+1484   	; 0x668 <decide+0xa8>
      9c:	84 26       	eor	r8, r20
      9e:	eb 89       	ldd	r30, Y+19	; 0x13
      a0:	8c 9b       	sbis	0x11, 4	; 17
      a2:	62 ed       	ldi	r22, 0xD2	; 210
      a4:	40 7c       	andi	r20, 0xC0	; 192
      a6:	6f fc       	.word	0xfc6f	; ????
      a8:	ef bc       	out	0x2f, r14	; 47
      aa:	9c 9f       	mul	r25, r28
      ac:	40 f2       	brcs	.-112    	; 0x3e <__SP_H__>
      ae:	ba a5       	ldd	r27, Y+42	; 0x2a
      b0:	6f a5       	ldd	r22, Y+47	; 0x2f
      b2:	f4 90       	lpm	r15, Z+
      b4:	05 5a       	subi	r16, 0xA5	; 165
      b6:	2a f7       	brpl	.-54     	; 0x82 <__SREG__+0x43>
      b8:	5c 93       	st	X, r21
      ba:	6b 6c       	ori	r22, 0xCB	; 203
      bc:	f9 67       	ori	r31, 0x79	; 121
      be:	6d c1       	rjmp	.+730    	; 0x39a <calculate+0x74>
      c0:	1b fc       	.word	0xfc1b	; ????
      c2:	e0 e4       	ldi	r30, 0x40	; 64
      c4:	0d 47       	sbci	r16, 0x7D	; 125
      c6:	fe f5       	brtc	.+126    	; 0x146 <.do_clear_bss_loop>
      c8:	20 e6       	ldi	r18, 0x60	; 96
      ca:	b5 00       	.word	0x00b5	; ????
      cc:	d0 ed       	ldi	r29, 0xD0	; 208
      ce:	90 2e       	mov	r9, r16
      d0:	03 00       	.word	0x0003	; ????
      d2:	94 35       	cpi	r25, 0x54	; 84
      d4:	77 05       	cpc	r23, r7
      d6:	00 80       	ld	r0, Z
      d8:	84 1e       	adc	r8, r20
      da:	08 00       	.word	0x0008	; ????
      dc:	00 20       	and	r0, r0
      de:	4e 0a       	sbc	r4, r30
      e0:	00 00       	nop
      e2:	00 c8       	rjmp	.-4096   	; 0xfffff0e4 <__eeprom_end+0xff7ef0e4>
      e4:	0c 33       	cpi	r16, 0x3C	; 60
      e6:	33 33       	cpi	r19, 0x33	; 51
      e8:	33 0f       	add	r19, r19
      ea:	98 6e       	ori	r25, 0xE8	; 232
      ec:	12 83       	std	Z+2, r17	; 0x02
      ee:	11 41       	sbci	r17, 0x11	; 17
      f0:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f2:	21 14       	cp	r2, r1
      f4:	89 3b       	cpi	r24, 0xB9	; 185
      f6:	e6 55       	subi	r30, 0x56	; 86
      f8:	16 cf       	rjmp	.-468    	; 0xffffff26 <__eeprom_end+0xff7eff26>
      fa:	fe e6       	ldi	r31, 0x6E	; 110
      fc:	db 18       	sub	r13, r11
      fe:	d1 84       	ldd	r13, Z+9	; 0x09
     100:	4b 38       	cpi	r20, 0x8B	; 139
     102:	1b f7       	brvc	.-58     	; 0xca <__SREG__+0x8b>
     104:	7c 1d       	adc	r23, r12
     106:	90 1d       	adc	r25, r0
     108:	a4 bb       	out	0x14, r26	; 20
     10a:	e4 24       	eor	r14, r4
     10c:	20 32       	cpi	r18, 0x20	; 32
     10e:	84 72       	andi	r24, 0x24	; 36
     110:	5e 22       	and	r5, r30
     112:	81 00       	.word	0x0081	; ????
     114:	c9 f1       	breq	.+114    	; 0x188 <init_display+0x6>
     116:	24 ec       	ldi	r18, 0xC4	; 196
     118:	a1 e5       	ldi	r26, 0x51	; 81
     11a:	3d 27       	eor	r19, r29

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf e5       	ldi	r28, 0x5F	; 95
     122:	d2 e0       	ldi	r29, 0x02	; 2
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e6       	ldi	r26, 0x60	; 96
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	ec e5       	ldi	r30, 0x5C	; 92
     130:	fc e1       	ldi	r31, 0x1C	; 28
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
     134:	05 90       	lpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a4 3a       	cpi	r26, 0xA4	; 164
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	a4 ea       	ldi	r26, 0xA4	; 164
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	aa 3c       	cpi	r26, 0xCA	; 202
     14a:	b1 07       	cpc	r27, r17
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	02 d0       	rcall	.+4      	; 0x154 <main>
     150:	83 cd       	rjmp	.-1274   	; 0xfffffc58 <__eeprom_end+0xff7efc58>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <main>:
# define F_CPU 4000000UL
#include "calculator.h"

int main(void){

    init_calculator();
     154:	a6 d4       	rcall	.+2380   	; 0xaa2 <init_calculator>

	return 0;
}
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <trigger>:
}

//Функция генерирующая строб на линии E.
//По этому стробу производится запись команды/данных или чтение.
void trigger(){
    PORTC |= (1<<PC6); // Set PC6 (E).
     15c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	00 00       	nop
    _delay_us(1);
    PORTC &=~(1<<PC6); // Reset PC6 (E).
     160:	ae 98       	cbi	0x15, 6	; 21
     162:	00 00       	nop
	_delay_us(1);
}
     164:	08 95       	ret

00000166 <send_data>:
	_delay_us( 40 );
}

//Функция записи байта (символа) данных в lcd контроллер
void send_data(unsigned char data){
    PORTA = data;
     166:	8b bb       	out	0x1b, r24	; 27
    trigger();
     168:	f9 df       	rcall	.-14     	; 0x15c <trigger>
     16a:	8d e0       	ldi	r24, 0x0D	; 13
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <send_data+0x6>
     170:	00 00       	nop
	_delay_us( 40 );
}
     172:	08 95       	ret

00000174 <send_command>:
	on_flag = 1;
}

//Функция записи байта (символа) команды в lcd контроллер
void send_command(unsigned char command){
    PORTA = command;
     174:	8b bb       	out	0x1b, r24	; 27
    trigger();
     176:	f2 df       	rcall	.-28     	; 0x15c <trigger>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <send_command+0x6>
     17e:	00 00       	nop
	_delay_us( 40 );
}
     180:	08 95       	ret

00000182 <init_display>:

bool on_flag;

//Функция инициализации lcd контроллера hd44780
void init_display(){
    DDRC |= (1<<PC4)|(1<<PC6); 	// PC 4 is output for RS, 6 is output for Enable.
     182:	84 b3       	in	r24, 0x14	; 20
     184:	80 65       	ori	r24, 0x50	; 80
     186:	84 bb       	out	0x14, r24	; 20
    DDRA = 0xFF; 				// PA 0-7 is 8 bit data output bus.
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	8a bb       	out	0x1a, r24	; 26

	PORTC &=~(1<<PC6); // Reset PC6 (E).
     18c:	ae 98       	cbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	85 ea       	ldi	r24, 0xA5	; 165
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <init_display+0x10>
     196:	00 c0       	rjmp	.+0      	; 0x198 <init_display+0x16>
     198:	00 00       	nop

	_delay_ms(15); 

	send_command(0x38); // 2 line mode.
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	eb df       	rcall	.-42     	; 0x174 <send_command>
     19e:	81 ee       	ldi	r24, 0xE1	; 225
     1a0:	94 e0       	ldi	r25, 0x04	; 4
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <init_display+0x20>
     1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <init_display+0x26>
     1a8:	00 00       	nop
	_delay_ms(5); 
	send_command(0x38); // 2 line mode.
     1aa:	88 e3       	ldi	r24, 0x38	; 56
     1ac:	e3 df       	rcall	.-58     	; 0x174 <send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ae:	91 e2       	ldi	r25, 0x21	; 33
     1b0:	9a 95       	dec	r25
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <init_display+0x2e>
     1b4:	00 00       	nop
	_delay_us(100); 
	send_command(0x38); // 2 line mode.	
     1b6:	88 e3       	ldi	r24, 0x38	; 56
     1b8:	dd df       	rcall	.-70     	; 0x174 <send_command>

	send_command(0x0F);	// LCD ON, cursor ON
     1ba:	8f e0       	ldi	r24, 0x0F	; 15
     1bc:	db df       	rcall	.-74     	; 0x174 <send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1be:	83 ec       	ldi	r24, 0xC3	; 195
     1c0:	99 e0       	ldi	r25, 0x09	; 9
     1c2:	01 97       	sbiw	r24, 0x01	; 1
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <init_display+0x40>
     1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <init_display+0x46>
     1c8:	00 00       	nop
	_delay_ms(10);
	send_command(0x01); // Clear display screen
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	d3 df       	rcall	.-90     	; 0x174 <send_command>
     1ce:	83 ec       	ldi	r24, 0xC3	; 195
     1d0:	99 e0       	ldi	r25, 0x09	; 9
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <init_display+0x50>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <init_display+0x56>
     1d8:	00 00       	nop
	_delay_ms(10);
	send_command(0x81); 
     1da:	81 e8       	ldi	r24, 0x81	; 129
     1dc:	cb df       	rcall	.-106    	; 0x174 <send_command>
     1de:	83 ec       	ldi	r24, 0xC3	; 195
     1e0:	99 e0       	ldi	r25, 0x09	; 9
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <init_display+0x60>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <init_display+0x66>
     1e8:	00 00       	nop
	_delay_ms(10);

	PORTC |= (1<<PC6); // Set PC6 (E).
     1ea:	ae 9a       	sbi	0x15, 6	; 21

	on_flag = 1;
     1ec:	81 e0       	ldi	r24, 0x01	; 1
     1ee:	80 93 b4 01 	sts	0x01B4, r24
}
     1f2:	08 95       	ret

000001f4 <send_string>:
    PORTC &=~(1<<PC6); // Reset PC6 (E).
	_delay_us(1);
}

//Функция вывода строки
void send_string(const char *str){
     1f4:	ef 92       	push	r14
     1f6:	ff 92       	push	r15
     1f8:	cf 93       	push	r28
     1fa:	df 93       	push	r29
     1fc:	e8 2e       	mov	r14, r24
     1fe:	e7 01       	movw	r28, r14
     200:	7e 01       	movw	r14, r28
     202:	f9 2e       	mov	r15, r25
     204:	e7 01       	movw	r28, r14
    while(*str) send_data(*str++); // Send characters one by one.
     206:	01 c0       	rjmp	.+2      	; 0x20a <send_string+0x16>
     208:	ae df       	rcall	.-164    	; 0x166 <send_data>
     20a:	89 91       	ld	r24, Y+
     20c:	88 23       	and	r24, r24
     20e:	e1 f7       	brne	.-8      	; 0x208 <send_string+0x14>
}
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	ff 90       	pop	r15
     216:	ef 90       	pop	r14
     218:	08 95       	ret

0000021a <move_to>:

//Функция изменения текущей позиции курсора,
//x — номер символа в строке, y — номер строки
void move_to(unsigned char x, unsigned char y){
	unsigned char address = x;
	if ( y ) {
     21a:	61 11       	cpse	r22, r1
    	address += 0x40;
     21c:	80 5c       	subi	r24, 0xC0	; 192
  	}
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     21e:	ac 98       	cbi	0x15, 4	; 21
    send_command(1<<7 | address);
     220:	80 68       	ori	r24, 0x80	; 128
     222:	a8 df       	rcall	.-176    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     224:	ac 9a       	sbi	0x15, 4	; 21
}
     226:	08 95       	ret

00000228 <clear>:

void clear(){
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     228:	ac 98       	cbi	0x15, 4	; 21
    send_command(0x01);
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	a3 df       	rcall	.-186    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     22e:	ac 9a       	sbi	0x15, 4	; 21
}
     230:	08 95       	ret

00000232 <disp_on_off>:

void disp_on_off(){
	if (on_flag == 1) {
     232:	80 91 b4 01 	lds	r24, 0x01B4
     236:	88 23       	and	r24, r24
     238:	39 f0       	breq	.+14     	; 0x248 <disp_on_off+0x16>
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     23a:	ac 98       	cbi	0x15, 4	; 21
   		send_command(0x08);
     23c:	88 e0       	ldi	r24, 0x08	; 8
     23e:	9a df       	rcall	.-204    	; 0x174 <send_command>
		PORTC |=(1<<PC4); // Set PC4 (RS).
     240:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 0;
     242:	10 92 b4 01 	sts	0x01B4, r1
     246:	08 95       	ret
	}
	else {
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     248:	ac 98       	cbi	0x15, 4	; 21

		send_command(0x0F);	// LCD ON, cursor ON
     24a:	8f e0       	ldi	r24, 0x0F	; 15
     24c:	93 df       	rcall	.-218    	; 0x174 <send_command>
     24e:	83 ec       	ldi	r24, 0xC3	; 195
     250:	99 e0       	ldi	r25, 0x09	; 9
     252:	01 97       	sbiw	r24, 0x01	; 1
     254:	f1 f7       	brne	.-4      	; 0x252 <disp_on_off+0x20>
     256:	00 c0       	rjmp	.+0      	; 0x258 <disp_on_off+0x26>
     258:	00 00       	nop
		_delay_ms(10);
		send_command(0x01); // Clear display screen
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	8b df       	rcall	.-234    	; 0x174 <send_command>
     25e:	83 ec       	ldi	r24, 0xC3	; 195
     260:	99 e0       	ldi	r25, 0x09	; 9
     262:	01 97       	sbiw	r24, 0x01	; 1
     264:	f1 f7       	brne	.-4      	; 0x262 <__stack+0x3>
     266:	00 c0       	rjmp	.+0      	; 0x268 <__stack+0x9>
     268:	00 00       	nop
		_delay_ms(10);
		send_command(0x81); 
     26a:	81 e8       	ldi	r24, 0x81	; 129
     26c:	83 df       	rcall	.-250    	; 0x174 <send_command>
     26e:	83 ec       	ldi	r24, 0xC3	; 195
     270:	99 e0       	ldi	r25, 0x09	; 9
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <__stack+0x13>
     276:	00 c0       	rjmp	.+0      	; 0x278 <__stack+0x19>
     278:	00 00       	nop
		_delay_ms(10);

		PORTC |=(1<<PC4); // Set PC4 (RS).
     27a:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 1;
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	80 93 b4 01 	sts	0x01B4, r24
     282:	08 95       	ret

00000284 <init_keyboard>:
    {'1', '2', '3', '+', '-', '='},
    {'0', '.', 'p', 'r', 'A', '='}
};

void init_keyboard() {
    DDRC |= 0x0F; // PB 0-3 output for rows.
     284:	84 b3       	in	r24, 0x14	; 20
     286:	8f 60       	ori	r24, 0x0F	; 15
     288:	84 bb       	out	0x14, r24	; 20
    DDRD &= 0xC0; // PC 0-5 input for columns.
     28a:	81 b3       	in	r24, 0x11	; 17
     28c:	80 7c       	andi	r24, 0xC0	; 192
     28e:	81 bb       	out	0x11, r24	; 17
}
     290:	08 95       	ret

00000292 <scan_key>:

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
     292:	61 e0       	ldi	r22, 0x01	; 1
     294:	70 e0       	ldi	r23, 0x00	; 0
    DDRD &= 0xC0; // PC 0-5 input for columns.
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
     296:	82 b3       	in	r24, 0x12	; 18
     298:	8f 63       	ori	r24, 0x3F	; 63
     29a:	82 bb       	out	0x12, r24	; 18
        for(int i = 0;i<4;i++){
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
            PORTC = ~(1 << i);
     2a0:	cb 01       	movw	r24, r22
     2a2:	02 2e       	mov	r0, r18
     2a4:	02 c0       	rjmp	.+4      	; 0x2aa <scan_key+0x18>
     2a6:	88 0f       	add	r24, r24
     2a8:	99 1f       	adc	r25, r25
     2aa:	0a 94       	dec	r0
     2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <scan_key+0x14>
     2ae:	80 95       	com	r24
     2b0:	85 bb       	out	0x15, r24	; 21
            for(int j = 0;j < 6;j++){
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 e0       	ldi	r25, 0x00	; 0
                if(bit_is_clear(PIND, j)){
     2b6:	40 b3       	in	r20, 0x10	; 16
     2b8:	50 e0       	ldi	r21, 0x00	; 0
     2ba:	08 2e       	mov	r0, r24
     2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <scan_key+0x30>
     2be:	55 95       	asr	r21
     2c0:	47 95       	ror	r20
     2c2:	0a 94       	dec	r0
     2c4:	e2 f7       	brpl	.-8      	; 0x2be <scan_key+0x2c>
     2c6:	40 fd       	sbrc	r20, 0
     2c8:	23 c0       	rjmp	.+70     	; 0x310 <scan_key+0x7e>
     2ca:	41 e0       	ldi	r20, 0x01	; 1
     2cc:	50 e0       	ldi	r21, 0x00	; 0
     2ce:	08 2e       	mov	r0, r24
     2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <scan_key+0x44>
     2d2:	44 0f       	add	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	0a 94       	dec	r0
     2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <scan_key+0x40>
     2da:	06 c0       	rjmp	.+12     	; 0x2e8 <scan_key+0x56>
     2dc:	e3 ed       	ldi	r30, 0xD3	; 211
     2de:	f0 e3       	ldi	r31, 0x30	; 48
     2e0:	31 97       	sbiw	r30, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <scan_key+0x4e>
     2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <scan_key+0x54>
     2e6:	00 00       	nop
                    while(bit_is_clear(PIND, j)) _delay_ms(50);
     2e8:	60 b3       	in	r22, 0x10	; 16
     2ea:	70 e0       	ldi	r23, 0x00	; 0
     2ec:	64 23       	and	r22, r20
     2ee:	75 23       	and	r23, r21
     2f0:	61 15       	cp	r22, r1
     2f2:	71 05       	cpc	r23, r1
     2f4:	99 f3       	breq	.-26     	; 0x2dc <scan_key+0x4a>
                    return keys[i][j];
     2f6:	f9 01       	movw	r30, r18
     2f8:	ee 0f       	add	r30, r30
     2fa:	ff 1f       	adc	r31, r31
     2fc:	e2 0f       	add	r30, r18
     2fe:	f3 1f       	adc	r31, r19
     300:	ee 0f       	add	r30, r30
     302:	ff 1f       	adc	r31, r31
     304:	e8 0f       	add	r30, r24
     306:	f9 1f       	adc	r31, r25
     308:	e0 5a       	subi	r30, 0xA0	; 160
     30a:	ff 4f       	sbci	r31, 0xFF	; 255
                }
            }
        }
    }
}
     30c:	80 81       	ld	r24, Z
     30e:	08 95       	ret
unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
            for(int j = 0;j < 6;j++){
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	86 30       	cpi	r24, 0x06	; 6
     314:	91 05       	cpc	r25, r1
     316:	79 f6       	brne	.-98     	; 0x2b6 <scan_key+0x24>
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
     318:	2f 5f       	subi	r18, 0xFF	; 255
     31a:	3f 4f       	sbci	r19, 0xFF	; 255
     31c:	24 30       	cpi	r18, 0x04	; 4
     31e:	31 05       	cpc	r19, r1
     320:	09 f0       	breq	.+2      	; 0x324 <scan_key+0x92>
     322:	be cf       	rjmp	.-132    	; 0x2a0 <scan_key+0xe>
     324:	b8 cf       	rjmp	.-144    	; 0x296 <scan_key+0x4>

00000326 <calculate>:

    reset();
    run();
}

double calculate(float m, char operator, float n) {
     326:	6f 92       	push	r6
     328:	7f 92       	push	r7
     32a:	8f 92       	push	r8
     32c:	9f 92       	push	r9
     32e:	af 92       	push	r10
     330:	bf 92       	push	r11
     332:	cf 92       	push	r12
     334:	df 92       	push	r13
     336:	ef 92       	push	r14
     338:	ff 92       	push	r15
     33a:	0f 93       	push	r16
     33c:	1f 93       	push	r17
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	d6 2e       	mov	r13, r22
     344:	c7 2e       	mov	r12, r23
     346:	f8 2e       	mov	r15, r24
     348:	e9 2e       	mov	r14, r25
     34a:	48 01       	movw	r8, r16
     34c:	59 01       	movw	r10, r18
    switch (operator) {
     34e:	4d 36       	cpi	r20, 0x6D	; 109
     350:	09 f4       	brne	.+2      	; 0x354 <calculate+0x2e>
     352:	54 c0       	rjmp	.+168    	; 0x3fc <calculate+0xd6>
     354:	4e 36       	cpi	r20, 0x6E	; 110
     356:	70 f4       	brcc	.+28     	; 0x374 <calculate+0x4e>
     358:	4b 32       	cpi	r20, 0x2B	; 43
     35a:	b1 f0       	breq	.+44     	; 0x388 <calculate+0x62>
     35c:	4c 32       	cpi	r20, 0x2C	; 44
     35e:	20 f4       	brcc	.+8      	; 0x368 <calculate+0x42>
     360:	4a 32       	cpi	r20, 0x2A	; 42
     362:	09 f0       	breq	.+2      	; 0x366 <calculate+0x40>
     364:	a9 c0       	rjmp	.+338    	; 0x4b8 <calculate+0x192>
     366:	28 c0       	rjmp	.+80     	; 0x3b8 <calculate+0x92>
     368:	4d 32       	cpi	r20, 0x2D	; 45
     36a:	c1 f0       	breq	.+48     	; 0x39c <calculate+0x76>
     36c:	4f 32       	cpi	r20, 0x2F	; 47
     36e:	09 f0       	breq	.+2      	; 0x372 <calculate+0x4c>
     370:	a3 c0       	rjmp	.+326    	; 0x4b8 <calculate+0x192>
     372:	2c c0       	rjmp	.+88     	; 0x3cc <calculate+0xa6>
     374:	42 37       	cpi	r20, 0x72	; 114
     376:	09 f4       	brne	.+2      	; 0x37a <calculate+0x54>
     378:	7b c0       	rjmp	.+246    	; 0x470 <calculate+0x14a>
     37a:	46 37       	cpi	r20, 0x76	; 118
     37c:	09 f4       	brne	.+2      	; 0x380 <calculate+0x5a>
     37e:	52 c0       	rjmp	.+164    	; 0x424 <calculate+0xfe>
     380:	40 37       	cpi	r20, 0x70	; 112
     382:	09 f0       	breq	.+2      	; 0x386 <calculate+0x60>
     384:	99 c0       	rjmp	.+306    	; 0x4b8 <calculate+0x192>
     386:	2b c0       	rjmp	.+86     	; 0x3de <calculate+0xb8>
    case '+':
        return r = m + n;
     388:	a6 01       	movw	r20, r12
     38a:	97 01       	movw	r18, r14
     38c:	65 2f       	mov	r22, r21
     38e:	74 2f       	mov	r23, r20
     390:	83 2f       	mov	r24, r19
     392:	92 2f       	mov	r25, r18
     394:	a5 01       	movw	r20, r10
     396:	94 01       	movw	r18, r8
     398:	da d4       	rcall	.+2484   	; 0xd4e <__addsf3>
     39a:	09 c0       	rjmp	.+18     	; 0x3ae <calculate+0x88>
    case '-':
        return r = m - n;
     39c:	a6 01       	movw	r20, r12
     39e:	97 01       	movw	r18, r14
     3a0:	65 2f       	mov	r22, r21
     3a2:	74 2f       	mov	r23, r20
     3a4:	83 2f       	mov	r24, r19
     3a6:	92 2f       	mov	r25, r18
     3a8:	a5 01       	movw	r20, r10
     3aa:	94 01       	movw	r18, r8
     3ac:	f7 d4       	rcall	.+2542   	; 0xd9c <__subsf3>
     3ae:	d6 2e       	mov	r13, r22
     3b0:	c7 2e       	mov	r12, r23
     3b2:	f8 2e       	mov	r15, r24
     3b4:	e9 2e       	mov	r14, r25
     3b6:	80 c0       	rjmp	.+256    	; 0x4b8 <calculate+0x192>
    case '*':
        return r = m * n;
     3b8:	a6 01       	movw	r20, r12
     3ba:	97 01       	movw	r18, r14
     3bc:	65 2f       	mov	r22, r21
     3be:	74 2f       	mov	r23, r20
     3c0:	83 2f       	mov	r24, r19
     3c2:	92 2f       	mov	r25, r18
     3c4:	a5 01       	movw	r20, r10
     3c6:	94 01       	movw	r18, r8
     3c8:	14 d5       	rcall	.+2600   	; 0xdf2 <__mulsf3>
     3ca:	f1 cf       	rjmp	.-30     	; 0x3ae <calculate+0x88>
    case '/':
        return r = m / n;
     3cc:	a6 01       	movw	r20, r12
     3ce:	97 01       	movw	r18, r14
     3d0:	65 2f       	mov	r22, r21
     3d2:	74 2f       	mov	r23, r20
     3d4:	83 2f       	mov	r24, r19
     3d6:	92 2f       	mov	r25, r18
     3d8:	a5 01       	movw	r20, r10
     3da:	94 01       	movw	r18, r8
     3dc:	0d c0       	rjmp	.+26     	; 0x3f8 <calculate+0xd2>

    case 'p':
        return r = m * n / 100;
     3de:	a6 01       	movw	r20, r12
     3e0:	97 01       	movw	r18, r14
     3e2:	65 2f       	mov	r22, r21
     3e4:	74 2f       	mov	r23, r20
     3e6:	83 2f       	mov	r24, r19
     3e8:	92 2f       	mov	r25, r18
     3ea:	a5 01       	movw	r20, r10
     3ec:	94 01       	movw	r18, r8
     3ee:	01 d5       	rcall	.+2562   	; 0xdf2 <__mulsf3>
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	30 e0       	ldi	r19, 0x00	; 0
     3f4:	48 ec       	ldi	r20, 0xC8	; 200
     3f6:	52 e4       	ldi	r21, 0x42	; 66
     3f8:	f1 d5       	rcall	.+3042   	; 0xfdc <__divsf3>
     3fa:	d9 cf       	rjmp	.-78     	; 0x3ae <calculate+0x88>
    case 'm':
        return r = (int)m % (int)n;
     3fc:	a6 01       	movw	r20, r12
     3fe:	97 01       	movw	r18, r14
     400:	65 2f       	mov	r22, r21
     402:	74 2f       	mov	r23, r20
     404:	83 2f       	mov	r24, r19
     406:	92 2f       	mov	r25, r18
     408:	44 d7       	rcall	.+3720   	; 0x1292 <__fixsfsi>
     40a:	8b 01       	movw	r16, r22
     40c:	c5 01       	movw	r24, r10
     40e:	b4 01       	movw	r22, r8
     410:	40 d7       	rcall	.+3712   	; 0x1292 <__fixsfsi>
     412:	c8 01       	movw	r24, r16
     414:	76 d9       	rcall	.-3348   	; 0xfffff702 <__eeprom_end+0xff7ef702>
     416:	9c 01       	movw	r18, r24
     418:	b9 01       	movw	r22, r18
     41a:	88 27       	eor	r24, r24
     41c:	77 fd       	sbrc	r23, 7
     41e:	80 95       	com	r24
     420:	98 2f       	mov	r25, r24
     422:	11 c0       	rjmp	.+34     	; 0x446 <calculate+0x120>
    case 'v':
        return r = (int)m / (int)n;
     424:	a6 01       	movw	r20, r12
     426:	97 01       	movw	r18, r14
     428:	65 2f       	mov	r22, r21
     42a:	74 2f       	mov	r23, r20
     42c:	83 2f       	mov	r24, r19
     42e:	92 2f       	mov	r25, r18
     430:	30 d7       	rcall	.+3680   	; 0x1292 <__fixsfsi>
     432:	8b 01       	movw	r16, r22
     434:	c5 01       	movw	r24, r10
     436:	b4 01       	movw	r22, r8
     438:	2c d7       	rcall	.+3672   	; 0x1292 <__fixsfsi>
     43a:	c8 01       	movw	r24, r16
     43c:	62 d9       	rcall	.-3388   	; 0xfffff702 <__eeprom_end+0xff7ef702>
     43e:	88 27       	eor	r24, r24
     440:	77 fd       	sbrc	r23, 7
     442:	80 95       	com	r24
     444:	98 2f       	mov	r25, r24
     446:	c9 d6       	rcall	.+3474   	; 0x11da <__floatsisf>
     448:	b2 cf       	rjmp	.-156    	; 0x3ae <calculate+0x88>
    case 'r':
		r = 1;
		for (int i=0; i<n; i++) r = r * m;
     44a:	a8 01       	movw	r20, r16
     44c:	93 01       	movw	r18, r6
     44e:	65 2f       	mov	r22, r21
     450:	70 2f       	mov	r23, r16
     452:	83 2f       	mov	r24, r19
     454:	96 2d       	mov	r25, r6
     456:	d6 01       	movw	r26, r12
     458:	f7 01       	movw	r30, r14
     45a:	2b 2f       	mov	r18, r27
     45c:	3c 2d       	mov	r19, r12
     45e:	4f 2f       	mov	r20, r31
     460:	5e 2d       	mov	r21, r14
     462:	c7 d4       	rcall	.+2446   	; 0xdf2 <__mulsf3>
     464:	16 2f       	mov	r17, r22
     466:	07 2f       	mov	r16, r23
     468:	78 2e       	mov	r7, r24
     46a:	69 2e       	mov	r6, r25
     46c:	21 96       	adiw	r28, 0x01	; 1
     46e:	08 c0       	rjmp	.+16     	; 0x480 <calculate+0x15a>
    reset();
    run();
}

double calculate(float m, char operator, float n) {
    switch (operator) {
     470:	10 e0       	ldi	r17, 0x00	; 0
     472:	00 e0       	ldi	r16, 0x00	; 0
     474:	90 e8       	ldi	r25, 0x80	; 128
     476:	79 2e       	mov	r7, r25
     478:	8f e3       	ldi	r24, 0x3F	; 63
     47a:	68 2e       	mov	r6, r24
        return r = (int)m % (int)n;
    case 'v':
        return r = (int)m / (int)n;
    case 'r':
		r = 1;
		for (int i=0; i<n; i++) r = r * m;
     47c:	c0 e0       	ldi	r28, 0x00	; 0
     47e:	d0 e0       	ldi	r29, 0x00	; 0
     480:	be 01       	movw	r22, r28
     482:	88 27       	eor	r24, r24
     484:	77 fd       	sbrc	r23, 7
     486:	80 95       	com	r24
     488:	98 2f       	mov	r25, r24
     48a:	a7 d6       	rcall	.+3406   	; 0x11da <__floatsisf>
     48c:	a5 01       	movw	r20, r10
     48e:	94 01       	movw	r18, r8
     490:	4e d6       	rcall	.+3228   	; 0x112e <__ltsf2>
     492:	87 fd       	sbrc	r24, 7
     494:	da cf       	rjmp	.-76     	; 0x44a <calculate+0x124>
     496:	a8 01       	movw	r20, r16
     498:	93 01       	movw	r18, r6
     49a:	85 2f       	mov	r24, r21
     49c:	90 2f       	mov	r25, r16
     49e:	a3 2f       	mov	r26, r19
     4a0:	b6 2d       	mov	r27, r6
     4a2:	80 93 bc 01 	sts	0x01BC, r24
     4a6:	90 93 bd 01 	sts	0x01BD, r25
     4aa:	a0 93 be 01 	sts	0x01BE, r26
     4ae:	b0 93 bf 01 	sts	0x01BF, r27
        return r;
     4b2:	68 01       	movw	r12, r16
     4b4:	73 01       	movw	r14, r6
     4b6:	0e c0       	rjmp	.+28     	; 0x4d4 <calculate+0x1ae>

    }
    return r = m;
     4b8:	a6 01       	movw	r20, r12
     4ba:	97 01       	movw	r18, r14
     4bc:	85 2f       	mov	r24, r21
     4be:	9c 2d       	mov	r25, r12
     4c0:	a3 2f       	mov	r26, r19
     4c2:	be 2d       	mov	r27, r14
     4c4:	80 93 bc 01 	sts	0x01BC, r24
     4c8:	90 93 bd 01 	sts	0x01BD, r25
     4cc:	a0 93 be 01 	sts	0x01BE, r26
     4d0:	b0 93 bf 01 	sts	0x01BF, r27
}
     4d4:	a6 01       	movw	r20, r12
     4d6:	97 01       	movw	r18, r14
     4d8:	65 2f       	mov	r22, r21
     4da:	7c 2d       	mov	r23, r12
     4dc:	83 2f       	mov	r24, r19
     4de:	9e 2d       	mov	r25, r14
     4e0:	df 91       	pop	r29
     4e2:	cf 91       	pop	r28
     4e4:	1f 91       	pop	r17
     4e6:	0f 91       	pop	r16
     4e8:	ff 90       	pop	r15
     4ea:	ef 90       	pop	r14
     4ec:	df 90       	pop	r13
     4ee:	cf 90       	pop	r12
     4f0:	bf 90       	pop	r11
     4f2:	af 90       	pop	r10
     4f4:	9f 90       	pop	r9
     4f6:	8f 90       	pop	r8
     4f8:	7f 90       	pop	r7
     4fa:	6f 90       	pop	r6
     4fc:	08 95       	ret

000004fe <show_result>:

void show_result() {
     4fe:	ef 92       	push	r14
     500:	ff 92       	push	r15
     502:	0f 93       	push	r16
     504:	1f 93       	push	r17
    move_to(0, 1);			//начало нижней строки
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	87 de       	rcall	.-754    	; 0x21a <move_to>
    send_string("A=");
     50c:	88 e7       	ldi	r24, 0x78	; 120
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	71 de       	rcall	.-798    	; 0x1f4 <send_string>
    char *data = buffer;

    if (r <= 999999999999)
     512:	e0 90 bc 01 	lds	r14, 0x01BC
     516:	f0 90 bd 01 	lds	r15, 0x01BD
     51a:	00 91 be 01 	lds	r16, 0x01BE
     51e:	10 91 bf 01 	lds	r17, 0x01BF
     522:	c8 01       	movw	r24, r16
     524:	b7 01       	movw	r22, r14
     526:	25 ea       	ldi	r18, 0xA5	; 165
     528:	34 ed       	ldi	r19, 0xD4	; 212
     52a:	48 e6       	ldi	r20, 0x68	; 104
     52c:	53 e5       	ldi	r21, 0x53	; 83
     52e:	2a d6       	rcall	.+3156   	; 0x1184 <__lesf2>
     530:	18 16       	cp	r1, r24
     532:	4c f0       	brlt	.+18     	; 0x546 <show_result+0x48>
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
     534:	c8 01       	movw	r24, r16
     536:	b7 01       	movw	r22, r14
     538:	49 e0       	ldi	r20, 0x09	; 9
     53a:	25 e0       	ldi	r18, 0x05	; 5
     53c:	04 ea       	ldi	r16, 0xA4	; 164
     53e:	11 e0       	ldi	r17, 0x01	; 1
     540:	3e d9       	rcall	.-3460   	; 0xfffff7be <__eeprom_end+0xff7ef7be>
}

void show_result() {
    move_to(0, 1);			//начало нижней строки
    send_string("A=");
    char *data = buffer;
     542:	c8 01       	movw	r24, r16
     544:	02 c0       	rjmp	.+4      	; 0x54a <show_result+0x4c>

    if (r <= 999999999999)
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
    else 
		data = overflow;
     546:	8c e8       	ldi	r24, 0x8C	; 140
     548:	90 e0       	ldi	r25, 0x00	; 0

    send_string(data);
     54a:	54 de       	rcall	.-856    	; 0x1f4 <send_string>
    state = 4;
     54c:	84 e0       	ldi	r24, 0x04	; 4
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	90 93 bb 01 	sts	0x01BB, r25
     554:	80 93 ba 01 	sts	0x01BA, r24
}
     558:	1f 91       	pop	r17
     55a:	0f 91       	pop	r16
     55c:	ff 90       	pop	r15
     55e:	ef 90       	pop	r14
     560:	08 95       	ret

00000562 <send_digit>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
     562:	80 5d       	subi	r24, 0xD0	; 208
     564:	00 de       	rcall	.-1024   	; 0x166 <send_data>
}
     566:	08 95       	ret

00000568 <reset>:
        decide(scan_key(), is_dec_p, paw_p);
    }
}

void reset() {
    clear();
     568:	5f de       	rcall	.-834    	; 0x228 <clear>
    move_to(0, 0);		//начало верхней строки
     56a:	80 e0       	ldi	r24, 0x00	; 0
     56c:	60 e0       	ldi	r22, 0x00	; 0
     56e:	55 de       	rcall	.-854    	; 0x21a <move_to>
    r = a = b = op = state = count = 0;
     570:	10 92 c1 01 	sts	0x01C1, r1
     574:	10 92 c0 01 	sts	0x01C0, r1
     578:	10 92 bb 01 	sts	0x01BB, r1
     57c:	10 92 ba 01 	sts	0x01BA, r1
     580:	10 92 b5 01 	sts	0x01B5, r1
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	dc 01       	movw	r26, r24
     58a:	80 93 b6 01 	sts	0x01B6, r24
     58e:	90 93 b7 01 	sts	0x01B7, r25
     592:	a0 93 b8 01 	sts	0x01B8, r26
     596:	b0 93 b9 01 	sts	0x01B9, r27
     59a:	80 93 c6 01 	sts	0x01C6, r24
     59e:	90 93 c7 01 	sts	0x01C7, r25
     5a2:	a0 93 c8 01 	sts	0x01C8, r26
     5a6:	b0 93 c9 01 	sts	0x01C9, r27
     5aa:	80 93 bc 01 	sts	0x01BC, r24
     5ae:	90 93 bd 01 	sts	0x01BD, r25
     5b2:	a0 93 be 01 	sts	0x01BE, r26
     5b6:	b0 93 bf 01 	sts	0x01BF, r27
}
     5ba:	08 95       	ret

000005bc <on_off>:

void on_off(){ disp_on_off(); }
     5bc:	3a de       	rcall	.-908    	; 0x232 <disp_on_off>
     5be:	08 95       	ret

000005c0 <decide>:
2 - Middle Operator pressed, op.
3 - Input second operand, b.
4 - Result displayed.
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
     5c0:	7f 92       	push	r7
     5c2:	8f 92       	push	r8
     5c4:	9f 92       	push	r9
     5c6:	af 92       	push	r10
     5c8:	bf 92       	push	r11
     5ca:	cf 92       	push	r12
     5cc:	df 92       	push	r13
     5ce:	ef 92       	push	r14
     5d0:	ff 92       	push	r15
     5d2:	0f 93       	push	r16
     5d4:	1f 93       	push	r17
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
     5da:	f8 2e       	mov	r15, r24
     5dc:	eb 01       	movw	r28, r22
     5de:	4a 01       	movw	r8, r20
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     5e0:	30 ed       	ldi	r19, 0xD0	; 208
     5e2:	e3 2e       	mov	r14, r19
     5e4:	e8 0e       	add	r14, r24
            count++;
            break;

        case 4:
            if (digit) {
                line[0] = ' ';
     5e6:	20 e2       	ldi	r18, 0x20	; 32
     5e8:	72 2e       	mov	r7, r18

                move_to(0, 0);					//начало верхней строки
                send_string(line); 				// Clear 1st line.

                move_to(0, 0);
                a = b = op = count = 0;
     5ea:	0f 2e       	mov	r0, r31
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	af 2e       	mov	r10, r31
     5f0:	f0 e0       	ldi	r31, 0x00	; 0
     5f2:	bf 2e       	mov	r11, r31
     5f4:	f0 e0       	ldi	r31, 0x00	; 0
     5f6:	cf 2e       	mov	r12, r31
     5f8:	f0 e0       	ldi	r31, 0x00	; 0
     5fa:	df 2e       	mov	r13, r31
     5fc:	f0 2d       	mov	r31, r0
                state = 1;
     5fe:	01 e0       	ldi	r16, 0x01	; 1
     600:	10 e0       	ldi	r17, 0x00	; 0
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     602:	8e 2d       	mov	r24, r14
     604:	8a 30       	cpi	r24, 0x0A	; 10
     606:	08 f0       	brcs	.+2      	; 0x60a <decide+0x4a>
     608:	00 c1       	rjmp	.+512    	; 0x80a <decide+0x24a>
    {
		unsigned char digit = key - '0'; // '2' --> 2

        switch (state) {
     60a:	80 91 ba 01 	lds	r24, 0x01BA
     60e:	90 91 bb 01 	lds	r25, 0x01BB
     612:	82 30       	cpi	r24, 0x02	; 2
     614:	91 05       	cpc	r25, r1
     616:	09 f4       	brne	.+2      	; 0x61a <decide+0x5a>
     618:	6c c0       	rjmp	.+216    	; 0x6f2 <decide+0x132>
     61a:	83 30       	cpi	r24, 0x03	; 3
     61c:	91 05       	cpc	r25, r1
     61e:	38 f4       	brcc	.+14     	; 0x62e <decide+0x6e>
     620:	00 97       	sbiw	r24, 0x00	; 0
     622:	71 f0       	breq	.+28     	; 0x640 <decide+0x80>
     624:	81 30       	cpi	r24, 0x01	; 1
     626:	91 05       	cpc	r25, r1
     628:	09 f0       	breq	.+2      	; 0x62c <decide+0x6c>
     62a:	11 c2       	rjmp	.+1058   	; 0xa4e <decide+0x48e>
     62c:	12 c0       	rjmp	.+36     	; 0x652 <decide+0x92>
     62e:	83 30       	cpi	r24, 0x03	; 3
     630:	91 05       	cpc	r25, r1
     632:	09 f4       	brne	.+2      	; 0x636 <decide+0x76>
     634:	6c c0       	rjmp	.+216    	; 0x70e <decide+0x14e>
     636:	84 30       	cpi	r24, 0x04	; 4
     638:	91 05       	cpc	r25, r1
     63a:	09 f0       	breq	.+2      	; 0x63e <decide+0x7e>
     63c:	08 c2       	rjmp	.+1040   	; 0xa4e <decide+0x48e>
     63e:	ba c0       	rjmp	.+372    	; 0x7b4 <decide+0x1f4>

        case 0:
            if (digit) {
     640:	ee 20       	and	r14, r14
     642:	39 f0       	breq	.+14     	; 0x652 <decide+0x92>
                clear(); 						// Clear screen if input is non-zero.
     644:	f1 dd       	rcall	.-1054   	; 0x228 <clear>
                state = 1;
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	90 93 bb 01 	sts	0x01BB, r25
     64e:	80 93 ba 01 	sts	0x01BA, r24
            }

        case 1:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.
     652:	80 91 c0 01 	lds	r24, 0x01C0
     656:	90 91 c1 01 	lds	r25, 0x01C1
     65a:	8e 30       	cpi	r24, 0x0E	; 14
     65c:	91 05       	cpc	r25, r1
     65e:	09 f4       	brne	.+2      	; 0x662 <decide+0xa2>
     660:	f6 c1       	rjmp	.+1004   	; 0xa4e <decide+0x48e>

			if (*is_dec_p == 0) {
     662:	88 81       	ld	r24, Y
     664:	ce 2d       	mov	r28, r14
     666:	d0 e0       	ldi	r29, 0x00	; 0
     668:	88 23       	and	r24, r24
     66a:	d9 f4       	brne	.+54     	; 0x6a2 <decide+0xe2>
            	a = a * 10 + digit;				// append to a
     66c:	60 91 c6 01 	lds	r22, 0x01C6
     670:	70 91 c7 01 	lds	r23, 0x01C7
     674:	80 91 c8 01 	lds	r24, 0x01C8
     678:	90 91 c9 01 	lds	r25, 0x01C9
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	40 e2       	ldi	r20, 0x20	; 32
     682:	51 e4       	ldi	r21, 0x41	; 65
     684:	b6 d3       	rcall	.+1900   	; 0xdf2 <__mulsf3>
     686:	5b 01       	movw	r10, r22
     688:	6c 01       	movw	r12, r24
     68a:	be 01       	movw	r22, r28
     68c:	88 27       	eor	r24, r24
     68e:	77 fd       	sbrc	r23, 7
     690:	80 95       	com	r24
     692:	98 2f       	mov	r25, r24
     694:	a2 d5       	rcall	.+2884   	; 0x11da <__floatsisf>
     696:	9b 01       	movw	r18, r22
     698:	ac 01       	movw	r20, r24
     69a:	c6 01       	movw	r24, r12
     69c:	b5 01       	movw	r22, r10
     69e:	57 d3       	rcall	.+1710   	; 0xd4e <__addsf3>
     6a0:	1f c0       	rjmp	.+62     	; 0x6e0 <decide+0x120>
			} 

			if (*is_dec_p == 1) {
				a = (a * 10 + digit) / 10;		// append to a
     6a2:	60 91 c6 01 	lds	r22, 0x01C6
     6a6:	70 91 c7 01 	lds	r23, 0x01C7
     6aa:	80 91 c8 01 	lds	r24, 0x01C8
     6ae:	90 91 c9 01 	lds	r25, 0x01C9
     6b2:	20 e0       	ldi	r18, 0x00	; 0
     6b4:	30 e0       	ldi	r19, 0x00	; 0
     6b6:	40 e2       	ldi	r20, 0x20	; 32
     6b8:	51 e4       	ldi	r21, 0x41	; 65
     6ba:	9b d3       	rcall	.+1846   	; 0xdf2 <__mulsf3>
     6bc:	5b 01       	movw	r10, r22
     6be:	6c 01       	movw	r12, r24
     6c0:	be 01       	movw	r22, r28
     6c2:	88 27       	eor	r24, r24
     6c4:	77 fd       	sbrc	r23, 7
     6c6:	80 95       	com	r24
     6c8:	98 2f       	mov	r25, r24
     6ca:	87 d5       	rcall	.+2830   	; 0x11da <__floatsisf>
     6cc:	9b 01       	movw	r18, r22
     6ce:	ac 01       	movw	r20, r24
     6d0:	c6 01       	movw	r24, r12
     6d2:	b5 01       	movw	r22, r10
     6d4:	3c d3       	rcall	.+1656   	; 0xd4e <__addsf3>
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	40 e2       	ldi	r20, 0x20	; 32
     6dc:	51 e4       	ldi	r21, 0x41	; 65
     6de:	7e d4       	rcall	.+2300   	; 0xfdc <__divsf3>
     6e0:	60 93 c6 01 	sts	0x01C6, r22
     6e4:	70 93 c7 01 	sts	0x01C7, r23
     6e8:	80 93 c8 01 	sts	0x01C8, r24
     6ec:	90 93 c9 01 	sts	0x01C9, r25
     6f0:	55 c0       	rjmp	.+170    	; 0x79c <decide+0x1dc>
            send_data(key);
            count++;
            break;

        case 2:
            if (digit) {
     6f2:	ee 20       	and	r14, r14
     6f4:	61 f0       	breq	.+24     	; 0x70e <decide+0x14e>
				*is_dec_p = 0;
     6f6:	18 82       	st	Y, r1
				*paw_p = 1;
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	f4 01       	movw	r30, r8
     6fe:	91 83       	std	Z+1, r25	; 0x01
     700:	80 83       	st	Z, r24
				state = 3;
     702:	83 e0       	ldi	r24, 0x03	; 3
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	90 93 bb 01 	sts	0x01BB, r25
     70a:	80 93 ba 01 	sts	0x01BA, r24
			}

        case 3:
			if (*is_dec_p == 0) {
     70e:	88 81       	ld	r24, Y
     710:	ce 2d       	mov	r28, r14
     712:	d0 e0       	ldi	r29, 0x00	; 0
     714:	88 23       	and	r24, r24
     716:	d9 f4       	brne	.+54     	; 0x74e <decide+0x18e>
            	b = b * 10 + digit;				// append to b
     718:	60 91 b6 01 	lds	r22, 0x01B6
     71c:	70 91 b7 01 	lds	r23, 0x01B7
     720:	80 91 b8 01 	lds	r24, 0x01B8
     724:	90 91 b9 01 	lds	r25, 0x01B9
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e2       	ldi	r20, 0x20	; 32
     72e:	51 e4       	ldi	r21, 0x41	; 65
     730:	60 d3       	rcall	.+1728   	; 0xdf2 <__mulsf3>
     732:	5b 01       	movw	r10, r22
     734:	6c 01       	movw	r12, r24
     736:	be 01       	movw	r22, r28
     738:	88 27       	eor	r24, r24
     73a:	77 fd       	sbrc	r23, 7
     73c:	80 95       	com	r24
     73e:	98 2f       	mov	r25, r24
     740:	4c d5       	rcall	.+2712   	; 0x11da <__floatsisf>
     742:	9b 01       	movw	r18, r22
     744:	ac 01       	movw	r20, r24
     746:	c6 01       	movw	r24, r12
     748:	b5 01       	movw	r22, r10
     74a:	01 d3       	rcall	.+1538   	; 0xd4e <__addsf3>
     74c:	1f c0       	rjmp	.+62     	; 0x78c <decide+0x1cc>
			} 

			if (*is_dec_p == 1) {
				b = (b * 10 + digit) / 10;		// append to b
     74e:	60 91 b6 01 	lds	r22, 0x01B6
     752:	70 91 b7 01 	lds	r23, 0x01B7
     756:	80 91 b8 01 	lds	r24, 0x01B8
     75a:	90 91 b9 01 	lds	r25, 0x01B9
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	40 e2       	ldi	r20, 0x20	; 32
     764:	51 e4       	ldi	r21, 0x41	; 65
     766:	45 d3       	rcall	.+1674   	; 0xdf2 <__mulsf3>
     768:	5b 01       	movw	r10, r22
     76a:	6c 01       	movw	r12, r24
     76c:	be 01       	movw	r22, r28
     76e:	88 27       	eor	r24, r24
     770:	77 fd       	sbrc	r23, 7
     772:	80 95       	com	r24
     774:	98 2f       	mov	r25, r24
     776:	31 d5       	rcall	.+2658   	; 0x11da <__floatsisf>
     778:	9b 01       	movw	r18, r22
     77a:	ac 01       	movw	r20, r24
     77c:	c6 01       	movw	r24, r12
     77e:	b5 01       	movw	r22, r10
     780:	e6 d2       	rcall	.+1484   	; 0xd4e <__addsf3>
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	40 e2       	ldi	r20, 0x20	; 32
     788:	51 e4       	ldi	r21, 0x41	; 65
     78a:	28 d4       	rcall	.+2128   	; 0xfdc <__divsf3>
     78c:	60 93 b6 01 	sts	0x01B6, r22
     790:	70 93 b7 01 	sts	0x01B7, r23
     794:	80 93 b8 01 	sts	0x01B8, r24
     798:	90 93 b9 01 	sts	0x01B9, r25
				*paw_p++;
			}

            send_data(key);
     79c:	8f 2d       	mov	r24, r15
     79e:	e3 dc       	rcall	.-1594   	; 0x166 <send_data>
            count++;
     7a0:	80 91 c0 01 	lds	r24, 0x01C0
     7a4:	90 91 c1 01 	lds	r25, 0x01C1
     7a8:	01 96       	adiw	r24, 0x01	; 1
     7aa:	90 93 c1 01 	sts	0x01C1, r25
     7ae:	80 93 c0 01 	sts	0x01C0, r24
            break;
     7b2:	4d c1       	rjmp	.+666    	; 0xa4e <decide+0x48e>

        case 4:
            if (digit) {
     7b4:	ee 20       	and	r14, r14
     7b6:	09 f4       	brne	.+2      	; 0x7ba <decide+0x1fa>
     7b8:	4a c1       	rjmp	.+660    	; 0xa4e <decide+0x48e>
                line[0] = ' ';
     7ba:	70 92 7b 00 	sts	0x007B, r7
                line[1] = ' ';
     7be:	70 92 7c 00 	sts	0x007C, r7

                move_to(0, 0);					//начало верхней строки
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	60 e0       	ldi	r22, 0x00	; 0
     7c6:	29 dd       	rcall	.-1454   	; 0x21a <move_to>
                send_string(line); 				// Clear 1st line.
     7c8:	8b e7       	ldi	r24, 0x7B	; 123
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	13 dd       	rcall	.-1498   	; 0x1f4 <send_string>

                move_to(0, 0);
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	60 e0       	ldi	r22, 0x00	; 0
     7d2:	23 dd       	rcall	.-1466   	; 0x21a <move_to>
                a = b = op = count = 0;
     7d4:	10 92 c1 01 	sts	0x01C1, r1
     7d8:	10 92 c0 01 	sts	0x01C0, r1
     7dc:	10 92 b5 01 	sts	0x01B5, r1
     7e0:	a0 92 b6 01 	sts	0x01B6, r10
     7e4:	b0 92 b7 01 	sts	0x01B7, r11
     7e8:	c0 92 b8 01 	sts	0x01B8, r12
     7ec:	d0 92 b9 01 	sts	0x01B9, r13
     7f0:	a0 92 c6 01 	sts	0x01C6, r10
     7f4:	b0 92 c7 01 	sts	0x01C7, r11
     7f8:	c0 92 c8 01 	sts	0x01C8, r12
     7fc:	d0 92 c9 01 	sts	0x01C9, r13
                state = 1;
     800:	10 93 bb 01 	sts	0x01BB, r17
     804:	00 93 ba 01 	sts	0x01BA, r16

                decide(key, is_dec_p, paw_p); 	// Recursively capture digit.
                return;
     808:	fc ce       	rjmp	.-520    	; 0x602 <decide+0x42>
            break;

        }
    } 

	else if (key == '.') {
     80a:	ff 2d       	mov	r31, r15
     80c:	fe 32       	cpi	r31, 0x2E	; 46
     80e:	21 f4       	brne	.+8      	; 0x818 <decide+0x258>
		*is_dec_p = 1;
     810:	81 e0       	ldi	r24, 0x01	; 1
     812:	88 83       	st	Y, r24
		send_data(key);
     814:	8e e2       	ldi	r24, 0x2E	; 46
     816:	18 c1       	rjmp	.+560    	; 0xa48 <decide+0x488>
	}

	else {
        switch (key) {
     818:	8f 2d       	mov	r24, r15
     81a:	84 34       	cpi	r24, 0x44	; 68
     81c:	09 f4       	brne	.+2      	; 0x820 <decide+0x260>
     81e:	10 c1       	rjmp	.+544    	; 0xa40 <decide+0x480>
     820:	85 34       	cpi	r24, 0x45	; 69
     822:	c0 f4       	brcc	.+48     	; 0x854 <decide+0x294>
     824:	8d 33       	cpi	r24, 0x3D	; 61
     826:	09 f4       	brne	.+2      	; 0x82a <decide+0x26a>
     828:	b8 c0       	rjmp	.+368    	; 0x99a <decide+0x3da>
     82a:	8e 33       	cpi	r24, 0x3E	; 62
     82c:	58 f4       	brcc	.+22     	; 0x844 <decide+0x284>
     82e:	8a 32       	cpi	r24, 0x2A	; 42
     830:	08 f4       	brcc	.+2      	; 0x834 <decide+0x274>
     832:	0d c1       	rjmp	.+538    	; 0xa4e <decide+0x48e>
     834:	8c 32       	cpi	r24, 0x2C	; 44
     836:	00 f1       	brcs	.+64     	; 0x878 <decide+0x2b8>
     838:	8d 32       	cpi	r24, 0x2D	; 45
     83a:	f1 f0       	breq	.+60     	; 0x878 <decide+0x2b8>
     83c:	8f 32       	cpi	r24, 0x2F	; 47
     83e:	09 f0       	breq	.+2      	; 0x842 <decide+0x282>
     840:	06 c1       	rjmp	.+524    	; 0xa4e <decide+0x48e>
     842:	1a c0       	rjmp	.+52     	; 0x878 <decide+0x2b8>
     844:	ef 2d       	mov	r30, r15
     846:	e1 34       	cpi	r30, 0x41	; 65
     848:	09 f4       	brne	.+2      	; 0x84c <decide+0x28c>
     84a:	e1 c0       	rjmp	.+450    	; 0xa0e <decide+0x44e>
     84c:	e3 34       	cpi	r30, 0x43	; 67
     84e:	09 f0       	breq	.+2      	; 0x852 <decide+0x292>
     850:	fe c0       	rjmp	.+508    	; 0xa4e <decide+0x48e>
     852:	db c0       	rjmp	.+438    	; 0xa0a <decide+0x44a>
     854:	ff 2d       	mov	r31, r15
     856:	f0 37       	cpi	r31, 0x70	; 112
     858:	79 f0       	breq	.+30     	; 0x878 <decide+0x2b8>
     85a:	f1 37       	cpi	r31, 0x71	; 113
     85c:	38 f4       	brcc	.+14     	; 0x86c <decide+0x2ac>
     85e:	ff 34       	cpi	r31, 0x4F	; 79
     860:	09 f4       	brne	.+2      	; 0x864 <decide+0x2a4>
     862:	f4 c0       	rjmp	.+488    	; 0xa4c <decide+0x48c>
     864:	fd 36       	cpi	r31, 0x6D	; 109
     866:	09 f0       	breq	.+2      	; 0x86a <decide+0x2aa>
     868:	f2 c0       	rjmp	.+484    	; 0xa4e <decide+0x48e>
     86a:	06 c0       	rjmp	.+12     	; 0x878 <decide+0x2b8>
     86c:	8f 2d       	mov	r24, r15
     86e:	82 37       	cpi	r24, 0x72	; 114
     870:	19 f0       	breq	.+6      	; 0x878 <decide+0x2b8>
     872:	86 37       	cpi	r24, 0x76	; 118
     874:	09 f0       	breq	.+2      	; 0x878 <decide+0x2b8>
     876:	eb c0       	rjmp	.+470    	; 0xa4e <decide+0x48e>
        case 'p':
        case 'm':
		case 'v':
		case 'r':

            switch (state) {
     878:	80 91 ba 01 	lds	r24, 0x01BA
     87c:	90 91 bb 01 	lds	r25, 0x01BB
     880:	82 30       	cpi	r24, 0x02	; 2
     882:	91 05       	cpc	r25, r1
     884:	81 f0       	breq	.+32     	; 0x8a6 <decide+0x2e6>
     886:	83 30       	cpi	r24, 0x03	; 3
     888:	91 05       	cpc	r25, r1
     88a:	28 f4       	brcc	.+10     	; 0x896 <decide+0x2d6>
     88c:	81 30       	cpi	r24, 0x01	; 1
     88e:	91 05       	cpc	r25, r1
     890:	09 f0       	breq	.+2      	; 0x894 <decide+0x2d4>
     892:	80 c0       	rjmp	.+256    	; 0x994 <decide+0x3d4>
     894:	0b c0       	rjmp	.+22     	; 0x8ac <decide+0x2ec>
     896:	83 30       	cpi	r24, 0x03	; 3
     898:	91 05       	cpc	r25, r1
     89a:	d1 f0       	breq	.+52     	; 0x8d0 <decide+0x310>
     89c:	84 30       	cpi	r24, 0x04	; 4
     89e:	91 05       	cpc	r25, r1
     8a0:	09 f0       	breq	.+2      	; 0x8a4 <decide+0x2e4>
     8a2:	78 c0       	rjmp	.+240    	; 0x994 <decide+0x3d4>
     8a4:	44 c0       	rjmp	.+136    	; 0x92e <decide+0x36e>

            case 2:
                move_to(0,0); 		// Modify the operand displayed.
     8a6:	80 e0       	ldi	r24, 0x00	; 0
     8a8:	60 e0       	ldi	r22, 0x00	; 0
     8aa:	b7 dc       	rcall	.-1682   	; 0x21a <move_to>

            case 1:
                send_data(key);
     8ac:	8f 2d       	mov	r24, r15
     8ae:	5b dc       	rcall	.-1866   	; 0x166 <send_data>
                count++;
     8b0:	80 91 c0 01 	lds	r24, 0x01C0
     8b4:	90 91 c1 01 	lds	r25, 0x01C1
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	90 93 c1 01 	sts	0x01C1, r25
     8be:	80 93 c0 01 	sts	0x01C0, r24
                state = 2;
     8c2:	82 e0       	ldi	r24, 0x02	; 2
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	90 93 bb 01 	sts	0x01BB, r25
     8ca:	80 93 ba 01 	sts	0x01BA, r24
                break;
     8ce:	62 c0       	rjmp	.+196    	; 0x994 <decide+0x3d4>

            case 3:
                calculate(a, op, b);
     8d0:	60 91 c6 01 	lds	r22, 0x01C6
     8d4:	70 91 c7 01 	lds	r23, 0x01C7
     8d8:	80 91 c8 01 	lds	r24, 0x01C8
     8dc:	90 91 c9 01 	lds	r25, 0x01C9
     8e0:	00 91 b6 01 	lds	r16, 0x01B6
     8e4:	10 91 b7 01 	lds	r17, 0x01B7
     8e8:	20 91 b8 01 	lds	r18, 0x01B8
     8ec:	30 91 b9 01 	lds	r19, 0x01B9
     8f0:	40 91 b5 01 	lds	r20, 0x01B5
     8f4:	18 dd       	rcall	.-1488   	; 0x326 <calculate>
                show_result();
     8f6:	03 de       	rcall	.-1018   	; 0x4fe <show_result>
				ans = calculate(a, op, b);
     8f8:	60 91 c6 01 	lds	r22, 0x01C6
     8fc:	70 91 c7 01 	lds	r23, 0x01C7
     900:	80 91 c8 01 	lds	r24, 0x01C8
     904:	90 91 c9 01 	lds	r25, 0x01C9
     908:	00 91 b6 01 	lds	r16, 0x01B6
     90c:	10 91 b7 01 	lds	r17, 0x01B7
     910:	20 91 b8 01 	lds	r18, 0x01B8
     914:	30 91 b9 01 	lds	r19, 0x01B9
     918:	40 91 b5 01 	lds	r20, 0x01B5
     91c:	04 dd       	rcall	.-1528   	; 0x326 <calculate>
     91e:	60 93 c2 01 	sts	0x01C2, r22
     922:	70 93 c3 01 	sts	0x01C3, r23
     926:	80 93 c4 01 	sts	0x01C4, r24
     92a:	90 93 c5 01 	sts	0x01C5, r25

            case 4:
                move_to(0, 0);
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	60 e0       	ldi	r22, 0x00	; 0
     932:	73 dc       	rcall	.-1818   	; 0x21a <move_to>
                line[0] = 'A'; 		// 'A' represents current result.
     934:	81 e4       	ldi	r24, 0x41	; 65
     936:	80 93 7b 00 	sts	0x007B, r24
                line[1] = key; 		// Operator of the operation.
     93a:	f0 92 7c 00 	sts	0x007C, r15
                send_string(line);
     93e:	8b e7       	ldi	r24, 0x7B	; 123
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	58 dc       	rcall	.-1872   	; 0x1f4 <send_string>

                move_to(2,0);
     944:	82 e0       	ldi	r24, 0x02	; 2
     946:	60 e0       	ldi	r22, 0x00	; 0
     948:	68 dc       	rcall	.-1840   	; 0x21a <move_to>
                count = 2;
     94a:	22 e0       	ldi	r18, 0x02	; 2
     94c:	30 e0       	ldi	r19, 0x00	; 0
     94e:	30 93 c1 01 	sts	0x01C1, r19
     952:	20 93 c0 01 	sts	0x01C0, r18
                a = r; 				// Put result into a.
     956:	80 91 bc 01 	lds	r24, 0x01BC
     95a:	90 91 bd 01 	lds	r25, 0x01BD
     95e:	a0 91 be 01 	lds	r26, 0x01BE
     962:	b0 91 bf 01 	lds	r27, 0x01BF
     966:	80 93 c6 01 	sts	0x01C6, r24
     96a:	90 93 c7 01 	sts	0x01C7, r25
     96e:	a0 93 c8 01 	sts	0x01C8, r26
     972:	b0 93 c9 01 	sts	0x01C9, r27
                b = 0; 				// Clear b.
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	dc 01       	movw	r26, r24
     97c:	80 93 b6 01 	sts	0x01B6, r24
     980:	90 93 b7 01 	sts	0x01B7, r25
     984:	a0 93 b8 01 	sts	0x01B8, r26
     988:	b0 93 b9 01 	sts	0x01B9, r27
                state = 2;
     98c:	30 93 bb 01 	sts	0x01BB, r19
     990:	20 93 ba 01 	sts	0x01BA, r18

                break;
            }

            op = key;
     994:	f0 92 b5 01 	sts	0x01B5, r15
            break;
     998:	5a c0       	rjmp	.+180    	; 0xa4e <decide+0x48e>

        case '=':
            if(state == 3){
     99a:	80 91 ba 01 	lds	r24, 0x01BA
     99e:	90 91 bb 01 	lds	r25, 0x01BB
     9a2:	83 30       	cpi	r24, 0x03	; 3
     9a4:	91 05       	cpc	r25, r1
     9a6:	09 f0       	breq	.+2      	; 0x9aa <decide+0x3ea>
     9a8:	52 c0       	rjmp	.+164    	; 0xa4e <decide+0x48e>
                calculate(a, op, b);
     9aa:	60 91 c6 01 	lds	r22, 0x01C6
     9ae:	70 91 c7 01 	lds	r23, 0x01C7
     9b2:	80 91 c8 01 	lds	r24, 0x01C8
     9b6:	90 91 c9 01 	lds	r25, 0x01C9
     9ba:	00 91 b6 01 	lds	r16, 0x01B6
     9be:	10 91 b7 01 	lds	r17, 0x01B7
     9c2:	20 91 b8 01 	lds	r18, 0x01B8
     9c6:	30 91 b9 01 	lds	r19, 0x01B9
     9ca:	40 91 b5 01 	lds	r20, 0x01B5
     9ce:	ab dc       	rcall	.-1706   	; 0x326 <calculate>
                show_result();
     9d0:	96 dd       	rcall	.-1236   	; 0x4fe <show_result>
				ans = calculate(a, op, b);
     9d2:	60 91 c6 01 	lds	r22, 0x01C6
     9d6:	70 91 c7 01 	lds	r23, 0x01C7
     9da:	80 91 c8 01 	lds	r24, 0x01C8
     9de:	90 91 c9 01 	lds	r25, 0x01C9
     9e2:	00 91 b6 01 	lds	r16, 0x01B6
     9e6:	10 91 b7 01 	lds	r17, 0x01B7
     9ea:	20 91 b8 01 	lds	r18, 0x01B8
     9ee:	30 91 b9 01 	lds	r19, 0x01B9
     9f2:	40 91 b5 01 	lds	r20, 0x01B5
     9f6:	97 dc       	rcall	.-1746   	; 0x326 <calculate>
     9f8:	60 93 c2 01 	sts	0x01C2, r22
     9fc:	70 93 c3 01 	sts	0x01C3, r23
     a00:	80 93 c4 01 	sts	0x01C4, r24
     a04:	90 93 c5 01 	sts	0x01C5, r25
     a08:	22 c0       	rjmp	.+68     	; 0xa4e <decide+0x48e>
            }
            break;

        case 'C': // "C" button.
            //if (state != 0) 
			reset();
     a0a:	ae dd       	rcall	.-1188   	; 0x568 <reset>
            break;
     a0c:	20 c0       	rjmp	.+64     	; 0xa4e <decide+0x48e>

        case 'A': // "ANS" button.
			send_data('A');
     a0e:	81 e4       	ldi	r24, 0x41	; 65
     a10:	aa db       	rcall	.-2220   	; 0x166 <send_data>
			b = ans;
     a12:	80 91 c2 01 	lds	r24, 0x01C2
     a16:	90 91 c3 01 	lds	r25, 0x01C3
     a1a:	a0 91 c4 01 	lds	r26, 0x01C4
     a1e:	b0 91 c5 01 	lds	r27, 0x01C5
     a22:	80 93 b6 01 	sts	0x01B6, r24
     a26:	90 93 b7 01 	sts	0x01B7, r25
     a2a:	a0 93 b8 01 	sts	0x01B8, r26
     a2e:	b0 93 b9 01 	sts	0x01B9, r27
			state = 3;
     a32:	83 e0       	ldi	r24, 0x03	; 3
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	90 93 bb 01 	sts	0x01BB, r25
     a3a:	80 93 ba 01 	sts	0x01BA, r24
            break;
     a3e:	07 c0       	rjmp	.+14     	; 0xa4e <decide+0x48e>

        case 'D': // "DEL" button.
			move_to(-1,0);
     a40:	8f ef       	ldi	r24, 0xFF	; 255
     a42:	60 e0       	ldi	r22, 0x00	; 0
     a44:	ea db       	rcall	.-2092   	; 0x21a <move_to>
			send_data(' ');
     a46:	80 e2       	ldi	r24, 0x20	; 32
     a48:	8e db       	rcall	.-2276   	; 0x166 <send_data>
            break;
     a4a:	01 c0       	rjmp	.+2      	; 0xa4e <decide+0x48e>
    clear();
    move_to(0, 0);		//начало верхней строки
    r = a = b = op = state = count = 0;
}

void on_off(){ disp_on_off(); }
     a4c:	f2 db       	rcall	.-2076   	; 0x232 <disp_on_off>
		case 'O':
			on_off();
			break;
        }
    }
}
     a4e:	df 91       	pop	r29
     a50:	cf 91       	pop	r28
     a52:	1f 91       	pop	r17
     a54:	0f 91       	pop	r16
     a56:	ff 90       	pop	r15
     a58:	ef 90       	pop	r14
     a5a:	df 90       	pop	r13
     a5c:	cf 90       	pop	r12
     a5e:	bf 90       	pop	r11
     a60:	af 90       	pop	r10
     a62:	9f 90       	pop	r9
     a64:	8f 90       	pop	r8
     a66:	7f 90       	pop	r7
     a68:	08 95       	ret

00000a6a <run>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
}

void run() {
     a6a:	ef 92       	push	r14
     a6c:	ff 92       	push	r15
     a6e:	0f 93       	push	r16
     a70:	1f 93       	push	r17
     a72:	df 93       	push	r29
     a74:	cf 93       	push	r28
     a76:	00 d0       	rcall	.+0      	; 0xa78 <run+0xe>
     a78:	0f 92       	push	r0
     a7a:	cd b7       	in	r28, 0x3d	; 61
     a7c:	de b7       	in	r29, 0x3e	; 62
	bool *is_dec_p;
	bool is_decimal = 0;		//флаг (0 - целая часть, 1 - дробная)
     a7e:	19 82       	std	Y+1, r1	; 0x01
	is_dec_p = &is_decimal;

	int *paw_p;
	int paw = 1;				//разряд после запятой
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	9b 83       	std	Y+3, r25	; 0x03
     a86:	8a 83       	std	Y+2, r24	; 0x02
	paw_p = &paw;
     a88:	42 e0       	ldi	r20, 0x02	; 2
     a8a:	e4 2e       	mov	r14, r20
     a8c:	f1 2c       	mov	r15, r1
     a8e:	ec 0e       	add	r14, r28
     a90:	fd 1e       	adc	r15, r29

    while (1) {
        decide(scan_key(), is_dec_p, paw_p);
     a92:	8e 01       	movw	r16, r28
     a94:	0f 5f       	subi	r16, 0xFF	; 255
     a96:	1f 4f       	sbci	r17, 0xFF	; 255
     a98:	fc db       	rcall	.-2056   	; 0x292 <scan_key>
     a9a:	b8 01       	movw	r22, r16
     a9c:	a7 01       	movw	r20, r14
     a9e:	90 dd       	rcall	.-1248   	; 0x5c0 <decide>
     aa0:	fb cf       	rjmp	.-10     	; 0xa98 <run+0x2e>

00000aa2 <init_calculator>:
     aa2:	8f e9       	ldi	r24, 0x9F	; 159
     aa4:	96 e8       	ldi	r25, 0x86	; 134
     aa6:	a1 e0       	ldi	r26, 0x01	; 1
     aa8:	81 50       	subi	r24, 0x01	; 1
     aaa:	90 40       	sbci	r25, 0x00	; 0
     aac:	a0 40       	sbci	r26, 0x00	; 0
     aae:	e1 f7       	brne	.-8      	; 0xaa8 <init_calculator+0x6>
     ab0:	00 c0       	rjmp	.+0      	; 0xab2 <init_calculator+0x10>
     ab2:	00 00       	nop
static char buffer[16];
static char overflow[] = "   Overflow   ";

void init_calculator() {
    _delay_ms(500);
    init_display();
     ab4:	66 db       	rcall	.-2356   	; 0x182 <init_display>
    init_keyboard();
     ab6:	e6 db       	rcall	.-2100   	; 0x284 <init_keyboard>

    reset();
     ab8:	57 dd       	rcall	.-1362   	; 0x568 <reset>
    run();
     aba:	d7 df       	rcall	.-82     	; 0xa6a <run>
}
     abc:	08 95       	ret

00000abe <_fpadd_parts>:
     abe:	a0 e0       	ldi	r26, 0x00	; 0
     ac0:	b0 e0       	ldi	r27, 0x00	; 0
     ac2:	e4 e6       	ldi	r30, 0x64	; 100
     ac4:	f5 e0       	ldi	r31, 0x05	; 5
     ac6:	48 c6       	rjmp	.+3216   	; 0x1758 <__prologue_saves__+0x8>
     ac8:	fc 01       	movw	r30, r24
     aca:	ea 01       	movw	r28, r20
     acc:	80 81       	ld	r24, Z
     ace:	82 30       	cpi	r24, 0x02	; 2
     ad0:	08 f4       	brcc	.+2      	; 0xad4 <_fpadd_parts+0x16>
     ad2:	38 c1       	rjmp	.+624    	; 0xd44 <_fpadd_parts+0x286>
     ad4:	db 01       	movw	r26, r22
     ad6:	9c 91       	ld	r25, X
     ad8:	92 30       	cpi	r25, 0x02	; 2
     ada:	08 f4       	brcc	.+2      	; 0xade <_fpadd_parts+0x20>
     adc:	30 c1       	rjmp	.+608    	; 0xd3e <_fpadd_parts+0x280>
     ade:	84 30       	cpi	r24, 0x04	; 4
     ae0:	59 f4       	brne	.+22     	; 0xaf8 <_fpadd_parts+0x3a>
     ae2:	94 30       	cpi	r25, 0x04	; 4
     ae4:	09 f0       	breq	.+2      	; 0xae8 <_fpadd_parts+0x2a>
     ae6:	2e c1       	rjmp	.+604    	; 0xd44 <_fpadd_parts+0x286>
     ae8:	91 81       	ldd	r25, Z+1	; 0x01
     aea:	11 96       	adiw	r26, 0x01	; 1
     aec:	8c 91       	ld	r24, X
     aee:	11 97       	sbiw	r26, 0x01	; 1
     af0:	98 17       	cp	r25, r24
     af2:	09 f0       	breq	.+2      	; 0xaf6 <_fpadd_parts+0x38>
     af4:	21 c1       	rjmp	.+578    	; 0xd38 <_fpadd_parts+0x27a>
     af6:	26 c1       	rjmp	.+588    	; 0xd44 <_fpadd_parts+0x286>
     af8:	94 30       	cpi	r25, 0x04	; 4
     afa:	09 f4       	brne	.+2      	; 0xafe <_fpadd_parts+0x40>
     afc:	20 c1       	rjmp	.+576    	; 0xd3e <_fpadd_parts+0x280>
     afe:	92 30       	cpi	r25, 0x02	; 2
     b00:	b1 f4       	brne	.+44     	; 0xb2e <_fpadd_parts+0x70>
     b02:	82 30       	cpi	r24, 0x02	; 2
     b04:	09 f0       	breq	.+2      	; 0xb08 <_fpadd_parts+0x4a>
     b06:	1e c1       	rjmp	.+572    	; 0xd44 <_fpadd_parts+0x286>
     b08:	ca 01       	movw	r24, r20
     b0a:	af 01       	movw	r20, r30
     b0c:	28 e0       	ldi	r18, 0x08	; 8
     b0e:	da 01       	movw	r26, r20
     b10:	0d 90       	ld	r0, X+
     b12:	ad 01       	movw	r20, r26
     b14:	dc 01       	movw	r26, r24
     b16:	0d 92       	st	X+, r0
     b18:	cd 01       	movw	r24, r26
     b1a:	21 50       	subi	r18, 0x01	; 1
     b1c:	c1 f7       	brne	.-16     	; 0xb0e <_fpadd_parts+0x50>
     b1e:	db 01       	movw	r26, r22
     b20:	11 96       	adiw	r26, 0x01	; 1
     b22:	8c 91       	ld	r24, X
     b24:	11 97       	sbiw	r26, 0x01	; 1
     b26:	91 81       	ldd	r25, Z+1	; 0x01
     b28:	89 23       	and	r24, r25
     b2a:	89 83       	std	Y+1, r24	; 0x01
     b2c:	0a c1       	rjmp	.+532    	; 0xd42 <_fpadd_parts+0x284>
     b2e:	82 30       	cpi	r24, 0x02	; 2
     b30:	09 f4       	brne	.+2      	; 0xb34 <_fpadd_parts+0x76>
     b32:	05 c1       	rjmp	.+522    	; 0xd3e <_fpadd_parts+0x280>
     b34:	c2 80       	ldd	r12, Z+2	; 0x02
     b36:	d3 80       	ldd	r13, Z+3	; 0x03
     b38:	db 01       	movw	r26, r22
     b3a:	12 96       	adiw	r26, 0x02	; 2
     b3c:	6d 90       	ld	r6, X+
     b3e:	7c 90       	ld	r7, X
     b40:	13 97       	sbiw	r26, 0x03	; 3
     b42:	24 81       	ldd	r18, Z+4	; 0x04
     b44:	35 81       	ldd	r19, Z+5	; 0x05
     b46:	46 81       	ldd	r20, Z+6	; 0x06
     b48:	57 81       	ldd	r21, Z+7	; 0x07
     b4a:	14 96       	adiw	r26, 0x04	; 4
     b4c:	ed 90       	ld	r14, X+
     b4e:	fd 90       	ld	r15, X+
     b50:	0d 91       	ld	r16, X+
     b52:	1c 91       	ld	r17, X
     b54:	17 97       	sbiw	r26, 0x07	; 7
     b56:	c6 01       	movw	r24, r12
     b58:	86 19       	sub	r24, r6
     b5a:	97 09       	sbc	r25, r7
     b5c:	5c 01       	movw	r10, r24
     b5e:	97 ff       	sbrs	r25, 7
     b60:	04 c0       	rjmp	.+8      	; 0xb6a <_fpadd_parts+0xac>
     b62:	aa 24       	eor	r10, r10
     b64:	bb 24       	eor	r11, r11
     b66:	a8 1a       	sub	r10, r24
     b68:	b9 0a       	sbc	r11, r25
     b6a:	b0 e2       	ldi	r27, 0x20	; 32
     b6c:	ab 16       	cp	r10, r27
     b6e:	b1 04       	cpc	r11, r1
     b70:	0c f0       	brlt	.+2      	; 0xb74 <_fpadd_parts+0xb6>
     b72:	61 c0       	rjmp	.+194    	; 0xc36 <_fpadd_parts+0x178>
     b74:	18 16       	cp	r1, r24
     b76:	19 06       	cpc	r1, r25
     b78:	6c f5       	brge	.+90     	; 0xbd4 <_fpadd_parts+0x116>
     b7a:	37 01       	movw	r6, r14
     b7c:	48 01       	movw	r8, r16
     b7e:	0a 2c       	mov	r0, r10
     b80:	04 c0       	rjmp	.+8      	; 0xb8a <_fpadd_parts+0xcc>
     b82:	96 94       	lsr	r9
     b84:	87 94       	ror	r8
     b86:	77 94       	ror	r7
     b88:	67 94       	ror	r6
     b8a:	0a 94       	dec	r0
     b8c:	d2 f7       	brpl	.-12     	; 0xb82 <_fpadd_parts+0xc4>
     b8e:	81 e0       	ldi	r24, 0x01	; 1
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	a0 e0       	ldi	r26, 0x00	; 0
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	0a 2c       	mov	r0, r10
     b98:	04 c0       	rjmp	.+8      	; 0xba2 <_fpadd_parts+0xe4>
     b9a:	88 0f       	add	r24, r24
     b9c:	99 1f       	adc	r25, r25
     b9e:	aa 1f       	adc	r26, r26
     ba0:	bb 1f       	adc	r27, r27
     ba2:	0a 94       	dec	r0
     ba4:	d2 f7       	brpl	.-12     	; 0xb9a <_fpadd_parts+0xdc>
     ba6:	01 97       	sbiw	r24, 0x01	; 1
     ba8:	a1 09       	sbc	r26, r1
     baa:	b1 09       	sbc	r27, r1
     bac:	8e 21       	and	r24, r14
     bae:	9f 21       	and	r25, r15
     bb0:	a0 23       	and	r26, r16
     bb2:	b1 23       	and	r27, r17
     bb4:	ee 24       	eor	r14, r14
     bb6:	ff 24       	eor	r15, r15
     bb8:	87 01       	movw	r16, r14
     bba:	e3 94       	inc	r14
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	a1 05       	cpc	r26, r1
     bc0:	b1 05       	cpc	r27, r1
     bc2:	19 f4       	brne	.+6      	; 0xbca <_fpadd_parts+0x10c>
     bc4:	ee 24       	eor	r14, r14
     bc6:	ff 24       	eor	r15, r15
     bc8:	87 01       	movw	r16, r14
     bca:	e6 28       	or	r14, r6
     bcc:	f7 28       	or	r15, r7
     bce:	08 29       	or	r16, r8
     bd0:	19 29       	or	r17, r9
     bd2:	3c c0       	rjmp	.+120    	; 0xc4c <_fpadd_parts+0x18e>
     bd4:	00 97       	sbiw	r24, 0x00	; 0
     bd6:	d1 f1       	breq	.+116    	; 0xc4c <_fpadd_parts+0x18e>
     bd8:	ca 0c       	add	r12, r10
     bda:	db 1c       	adc	r13, r11
     bdc:	39 01       	movw	r6, r18
     bde:	4a 01       	movw	r8, r20
     be0:	0a 2c       	mov	r0, r10
     be2:	04 c0       	rjmp	.+8      	; 0xbec <_fpadd_parts+0x12e>
     be4:	96 94       	lsr	r9
     be6:	87 94       	ror	r8
     be8:	77 94       	ror	r7
     bea:	67 94       	ror	r6
     bec:	0a 94       	dec	r0
     bee:	d2 f7       	brpl	.-12     	; 0xbe4 <_fpadd_parts+0x126>
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	a0 e0       	ldi	r26, 0x00	; 0
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	0a 2c       	mov	r0, r10
     bfa:	04 c0       	rjmp	.+8      	; 0xc04 <_fpadd_parts+0x146>
     bfc:	88 0f       	add	r24, r24
     bfe:	99 1f       	adc	r25, r25
     c00:	aa 1f       	adc	r26, r26
     c02:	bb 1f       	adc	r27, r27
     c04:	0a 94       	dec	r0
     c06:	d2 f7       	brpl	.-12     	; 0xbfc <_fpadd_parts+0x13e>
     c08:	01 97       	sbiw	r24, 0x01	; 1
     c0a:	a1 09       	sbc	r26, r1
     c0c:	b1 09       	sbc	r27, r1
     c0e:	82 23       	and	r24, r18
     c10:	93 23       	and	r25, r19
     c12:	a4 23       	and	r26, r20
     c14:	b5 23       	and	r27, r21
     c16:	21 e0       	ldi	r18, 0x01	; 1
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	40 e0       	ldi	r20, 0x00	; 0
     c1c:	50 e0       	ldi	r21, 0x00	; 0
     c1e:	00 97       	sbiw	r24, 0x00	; 0
     c20:	a1 05       	cpc	r26, r1
     c22:	b1 05       	cpc	r27, r1
     c24:	19 f4       	brne	.+6      	; 0xc2c <_fpadd_parts+0x16e>
     c26:	20 e0       	ldi	r18, 0x00	; 0
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	a9 01       	movw	r20, r18
     c2c:	26 29       	or	r18, r6
     c2e:	37 29       	or	r19, r7
     c30:	48 29       	or	r20, r8
     c32:	59 29       	or	r21, r9
     c34:	0b c0       	rjmp	.+22     	; 0xc4c <_fpadd_parts+0x18e>
     c36:	6c 14       	cp	r6, r12
     c38:	7d 04       	cpc	r7, r13
     c3a:	24 f4       	brge	.+8      	; 0xc44 <_fpadd_parts+0x186>
     c3c:	ee 24       	eor	r14, r14
     c3e:	ff 24       	eor	r15, r15
     c40:	87 01       	movw	r16, r14
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <_fpadd_parts+0x18e>
     c44:	63 01       	movw	r12, r6
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	a9 01       	movw	r20, r18
     c4c:	81 81       	ldd	r24, Z+1	; 0x01
     c4e:	fb 01       	movw	r30, r22
     c50:	91 81       	ldd	r25, Z+1	; 0x01
     c52:	89 17       	cp	r24, r25
     c54:	09 f4       	brne	.+2      	; 0xc58 <_fpadd_parts+0x19a>
     c56:	45 c0       	rjmp	.+138    	; 0xce2 <_fpadd_parts+0x224>
     c58:	88 23       	and	r24, r24
     c5a:	49 f0       	breq	.+18     	; 0xc6e <_fpadd_parts+0x1b0>
     c5c:	d8 01       	movw	r26, r16
     c5e:	c7 01       	movw	r24, r14
     c60:	82 1b       	sub	r24, r18
     c62:	93 0b       	sbc	r25, r19
     c64:	a4 0b       	sbc	r26, r20
     c66:	b5 0b       	sbc	r27, r21
     c68:	9c 01       	movw	r18, r24
     c6a:	ad 01       	movw	r20, r26
     c6c:	04 c0       	rjmp	.+8      	; 0xc76 <_fpadd_parts+0x1b8>
     c6e:	2e 19       	sub	r18, r14
     c70:	3f 09       	sbc	r19, r15
     c72:	40 0b       	sbc	r20, r16
     c74:	51 0b       	sbc	r21, r17
     c76:	57 fd       	sbrc	r21, 7
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <_fpadd_parts+0x1c4>
     c7a:	19 82       	std	Y+1, r1	; 0x01
     c7c:	db 82       	std	Y+3, r13	; 0x03
     c7e:	ca 82       	std	Y+2, r12	; 0x02
     c80:	0b c0       	rjmp	.+22     	; 0xc98 <_fpadd_parts+0x1da>
     c82:	81 e0       	ldi	r24, 0x01	; 1
     c84:	89 83       	std	Y+1, r24	; 0x01
     c86:	db 82       	std	Y+3, r13	; 0x03
     c88:	ca 82       	std	Y+2, r12	; 0x02
     c8a:	50 95       	com	r21
     c8c:	40 95       	com	r20
     c8e:	30 95       	com	r19
     c90:	21 95       	neg	r18
     c92:	3f 4f       	sbci	r19, 0xFF	; 255
     c94:	4f 4f       	sbci	r20, 0xFF	; 255
     c96:	5f 4f       	sbci	r21, 0xFF	; 255
     c98:	2c 83       	std	Y+4, r18	; 0x04
     c9a:	3d 83       	std	Y+5, r19	; 0x05
     c9c:	4e 83       	std	Y+6, r20	; 0x06
     c9e:	5f 83       	std	Y+7, r21	; 0x07
     ca0:	0d c0       	rjmp	.+26     	; 0xcbc <_fpadd_parts+0x1fe>
     ca2:	88 0f       	add	r24, r24
     ca4:	99 1f       	adc	r25, r25
     ca6:	aa 1f       	adc	r26, r26
     ca8:	bb 1f       	adc	r27, r27
     caa:	8c 83       	std	Y+4, r24	; 0x04
     cac:	9d 83       	std	Y+5, r25	; 0x05
     cae:	ae 83       	std	Y+6, r26	; 0x06
     cb0:	bf 83       	std	Y+7, r27	; 0x07
     cb2:	8a 81       	ldd	r24, Y+2	; 0x02
     cb4:	9b 81       	ldd	r25, Y+3	; 0x03
     cb6:	01 97       	sbiw	r24, 0x01	; 1
     cb8:	9b 83       	std	Y+3, r25	; 0x03
     cba:	8a 83       	std	Y+2, r24	; 0x02
     cbc:	8c 81       	ldd	r24, Y+4	; 0x04
     cbe:	9d 81       	ldd	r25, Y+5	; 0x05
     cc0:	ae 81       	ldd	r26, Y+6	; 0x06
     cc2:	bf 81       	ldd	r27, Y+7	; 0x07
     cc4:	9c 01       	movw	r18, r24
     cc6:	ad 01       	movw	r20, r26
     cc8:	21 50       	subi	r18, 0x01	; 1
     cca:	30 40       	sbci	r19, 0x00	; 0
     ccc:	40 40       	sbci	r20, 0x00	; 0
     cce:	50 40       	sbci	r21, 0x00	; 0
     cd0:	2f 3f       	cpi	r18, 0xFF	; 255
     cd2:	ef ef       	ldi	r30, 0xFF	; 255
     cd4:	3e 07       	cpc	r19, r30
     cd6:	ef ef       	ldi	r30, 0xFF	; 255
     cd8:	4e 07       	cpc	r20, r30
     cda:	ef e3       	ldi	r30, 0x3F	; 63
     cdc:	5e 07       	cpc	r21, r30
     cde:	08 f3       	brcs	.-62     	; 0xca2 <_fpadd_parts+0x1e4>
     ce0:	0b c0       	rjmp	.+22     	; 0xcf8 <_fpadd_parts+0x23a>
     ce2:	89 83       	std	Y+1, r24	; 0x01
     ce4:	db 82       	std	Y+3, r13	; 0x03
     ce6:	ca 82       	std	Y+2, r12	; 0x02
     ce8:	2e 0d       	add	r18, r14
     cea:	3f 1d       	adc	r19, r15
     cec:	40 1f       	adc	r20, r16
     cee:	51 1f       	adc	r21, r17
     cf0:	2c 83       	std	Y+4, r18	; 0x04
     cf2:	3d 83       	std	Y+5, r19	; 0x05
     cf4:	4e 83       	std	Y+6, r20	; 0x06
     cf6:	5f 83       	std	Y+7, r21	; 0x07
     cf8:	83 e0       	ldi	r24, 0x03	; 3
     cfa:	88 83       	st	Y, r24
     cfc:	2c 81       	ldd	r18, Y+4	; 0x04
     cfe:	3d 81       	ldd	r19, Y+5	; 0x05
     d00:	4e 81       	ldd	r20, Y+6	; 0x06
     d02:	5f 81       	ldd	r21, Y+7	; 0x07
     d04:	57 ff       	sbrs	r21, 7
     d06:	1d c0       	rjmp	.+58     	; 0xd42 <_fpadd_parts+0x284>
     d08:	da 01       	movw	r26, r20
     d0a:	c9 01       	movw	r24, r18
     d0c:	81 70       	andi	r24, 0x01	; 1
     d0e:	90 70       	andi	r25, 0x00	; 0
     d10:	a0 70       	andi	r26, 0x00	; 0
     d12:	b0 70       	andi	r27, 0x00	; 0
     d14:	56 95       	lsr	r21
     d16:	47 95       	ror	r20
     d18:	37 95       	ror	r19
     d1a:	27 95       	ror	r18
     d1c:	82 2b       	or	r24, r18
     d1e:	93 2b       	or	r25, r19
     d20:	a4 2b       	or	r26, r20
     d22:	b5 2b       	or	r27, r21
     d24:	8c 83       	std	Y+4, r24	; 0x04
     d26:	9d 83       	std	Y+5, r25	; 0x05
     d28:	ae 83       	std	Y+6, r26	; 0x06
     d2a:	bf 83       	std	Y+7, r27	; 0x07
     d2c:	8a 81       	ldd	r24, Y+2	; 0x02
     d2e:	9b 81       	ldd	r25, Y+3	; 0x03
     d30:	01 96       	adiw	r24, 0x01	; 1
     d32:	9b 83       	std	Y+3, r25	; 0x03
     d34:	8a 83       	std	Y+2, r24	; 0x02
     d36:	05 c0       	rjmp	.+10     	; 0xd42 <_fpadd_parts+0x284>
     d38:	eb e9       	ldi	r30, 0x9B	; 155
     d3a:	f0 e0       	ldi	r31, 0x00	; 0
     d3c:	03 c0       	rjmp	.+6      	; 0xd44 <_fpadd_parts+0x286>
     d3e:	fb 01       	movw	r30, r22
     d40:	01 c0       	rjmp	.+2      	; 0xd44 <_fpadd_parts+0x286>
     d42:	fe 01       	movw	r30, r28
     d44:	cf 01       	movw	r24, r30
     d46:	cd b7       	in	r28, 0x3d	; 61
     d48:	de b7       	in	r29, 0x3e	; 62
     d4a:	ee e0       	ldi	r30, 0x0E	; 14
     d4c:	21 c5       	rjmp	.+2626   	; 0x1790 <__epilogue_restores__+0x8>

00000d4e <__addsf3>:
     d4e:	a0 e2       	ldi	r26, 0x20	; 32
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	ec ea       	ldi	r30, 0xAC	; 172
     d54:	f6 e0       	ldi	r31, 0x06	; 6
     d56:	08 c5       	rjmp	.+2576   	; 0x1768 <__prologue_saves__+0x18>
     d58:	69 83       	std	Y+1, r22	; 0x01
     d5a:	7a 83       	std	Y+2, r23	; 0x02
     d5c:	8b 83       	std	Y+3, r24	; 0x03
     d5e:	9c 83       	std	Y+4, r25	; 0x04
     d60:	2d 83       	std	Y+5, r18	; 0x05
     d62:	3e 83       	std	Y+6, r19	; 0x06
     d64:	4f 83       	std	Y+7, r20	; 0x07
     d66:	58 87       	std	Y+8, r21	; 0x08
     d68:	89 e0       	ldi	r24, 0x09	; 9
     d6a:	e8 2e       	mov	r14, r24
     d6c:	f1 2c       	mov	r15, r1
     d6e:	ec 0e       	add	r14, r28
     d70:	fd 1e       	adc	r15, r29
     d72:	ce 01       	movw	r24, r28
     d74:	01 96       	adiw	r24, 0x01	; 1
     d76:	b7 01       	movw	r22, r14
     d78:	02 d4       	rcall	.+2052   	; 0x157e <__unpack_f>
     d7a:	8e 01       	movw	r16, r28
     d7c:	0f 5e       	subi	r16, 0xEF	; 239
     d7e:	1f 4f       	sbci	r17, 0xFF	; 255
     d80:	ce 01       	movw	r24, r28
     d82:	05 96       	adiw	r24, 0x05	; 5
     d84:	b8 01       	movw	r22, r16
     d86:	fb d3       	rcall	.+2038   	; 0x157e <__unpack_f>
     d88:	c7 01       	movw	r24, r14
     d8a:	b8 01       	movw	r22, r16
     d8c:	ae 01       	movw	r20, r28
     d8e:	47 5e       	subi	r20, 0xE7	; 231
     d90:	5f 4f       	sbci	r21, 0xFF	; 255
     d92:	95 de       	rcall	.-726    	; 0xabe <_fpadd_parts>
     d94:	27 d3       	rcall	.+1614   	; 0x13e4 <__pack_f>
     d96:	a0 96       	adiw	r28, 0x20	; 32
     d98:	e6 e0       	ldi	r30, 0x06	; 6
     d9a:	02 c5       	rjmp	.+2564   	; 0x17a0 <__epilogue_restores__+0x18>

00000d9c <__subsf3>:
     d9c:	a0 e2       	ldi	r26, 0x20	; 32
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e3 ed       	ldi	r30, 0xD3	; 211
     da2:	f6 e0       	ldi	r31, 0x06	; 6
     da4:	e1 c4       	rjmp	.+2498   	; 0x1768 <__prologue_saves__+0x18>
     da6:	69 83       	std	Y+1, r22	; 0x01
     da8:	7a 83       	std	Y+2, r23	; 0x02
     daa:	8b 83       	std	Y+3, r24	; 0x03
     dac:	9c 83       	std	Y+4, r25	; 0x04
     dae:	2d 83       	std	Y+5, r18	; 0x05
     db0:	3e 83       	std	Y+6, r19	; 0x06
     db2:	4f 83       	std	Y+7, r20	; 0x07
     db4:	58 87       	std	Y+8, r21	; 0x08
     db6:	8e 01       	movw	r16, r28
     db8:	07 5f       	subi	r16, 0xF7	; 247
     dba:	1f 4f       	sbci	r17, 0xFF	; 255
     dbc:	ce 01       	movw	r24, r28
     dbe:	01 96       	adiw	r24, 0x01	; 1
     dc0:	b8 01       	movw	r22, r16
     dc2:	dd d3       	rcall	.+1978   	; 0x157e <__unpack_f>
     dc4:	91 e1       	ldi	r25, 0x11	; 17
     dc6:	e9 2e       	mov	r14, r25
     dc8:	f1 2c       	mov	r15, r1
     dca:	ec 0e       	add	r14, r28
     dcc:	fd 1e       	adc	r15, r29
     dce:	ce 01       	movw	r24, r28
     dd0:	05 96       	adiw	r24, 0x05	; 5
     dd2:	b7 01       	movw	r22, r14
     dd4:	d4 d3       	rcall	.+1960   	; 0x157e <__unpack_f>
     dd6:	8a 89       	ldd	r24, Y+18	; 0x12
     dd8:	91 e0       	ldi	r25, 0x01	; 1
     dda:	89 27       	eor	r24, r25
     ddc:	8a 8b       	std	Y+18, r24	; 0x12
     dde:	c8 01       	movw	r24, r16
     de0:	b7 01       	movw	r22, r14
     de2:	ae 01       	movw	r20, r28
     de4:	47 5e       	subi	r20, 0xE7	; 231
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	6a de       	rcall	.-812    	; 0xabe <_fpadd_parts>
     dea:	fc d2       	rcall	.+1528   	; 0x13e4 <__pack_f>
     dec:	a0 96       	adiw	r28, 0x20	; 32
     dee:	e6 e0       	ldi	r30, 0x06	; 6
     df0:	d7 c4       	rjmp	.+2478   	; 0x17a0 <__epilogue_restores__+0x18>

00000df2 <__mulsf3>:
     df2:	a0 e2       	ldi	r26, 0x20	; 32
     df4:	b0 e0       	ldi	r27, 0x00	; 0
     df6:	ee ef       	ldi	r30, 0xFE	; 254
     df8:	f6 e0       	ldi	r31, 0x06	; 6
     dfa:	aa c4       	rjmp	.+2388   	; 0x1750 <__prologue_saves__>
     dfc:	69 83       	std	Y+1, r22	; 0x01
     dfe:	7a 83       	std	Y+2, r23	; 0x02
     e00:	8b 83       	std	Y+3, r24	; 0x03
     e02:	9c 83       	std	Y+4, r25	; 0x04
     e04:	2d 83       	std	Y+5, r18	; 0x05
     e06:	3e 83       	std	Y+6, r19	; 0x06
     e08:	4f 83       	std	Y+7, r20	; 0x07
     e0a:	58 87       	std	Y+8, r21	; 0x08
     e0c:	ce 01       	movw	r24, r28
     e0e:	01 96       	adiw	r24, 0x01	; 1
     e10:	be 01       	movw	r22, r28
     e12:	67 5f       	subi	r22, 0xF7	; 247
     e14:	7f 4f       	sbci	r23, 0xFF	; 255
     e16:	b3 d3       	rcall	.+1894   	; 0x157e <__unpack_f>
     e18:	ce 01       	movw	r24, r28
     e1a:	05 96       	adiw	r24, 0x05	; 5
     e1c:	be 01       	movw	r22, r28
     e1e:	6f 5e       	subi	r22, 0xEF	; 239
     e20:	7f 4f       	sbci	r23, 0xFF	; 255
     e22:	ad d3       	rcall	.+1882   	; 0x157e <__unpack_f>
     e24:	99 85       	ldd	r25, Y+9	; 0x09
     e26:	92 30       	cpi	r25, 0x02	; 2
     e28:	78 f0       	brcs	.+30     	; 0xe48 <__mulsf3+0x56>
     e2a:	89 89       	ldd	r24, Y+17	; 0x11
     e2c:	82 30       	cpi	r24, 0x02	; 2
     e2e:	c0 f0       	brcs	.+48     	; 0xe60 <__mulsf3+0x6e>
     e30:	94 30       	cpi	r25, 0x04	; 4
     e32:	19 f4       	brne	.+6      	; 0xe3a <__mulsf3+0x48>
     e34:	82 30       	cpi	r24, 0x02	; 2
     e36:	41 f4       	brne	.+16     	; 0xe48 <__mulsf3+0x56>
     e38:	cb c0       	rjmp	.+406    	; 0xfd0 <__mulsf3+0x1de>
     e3a:	84 30       	cpi	r24, 0x04	; 4
     e3c:	19 f4       	brne	.+6      	; 0xe44 <__mulsf3+0x52>
     e3e:	92 30       	cpi	r25, 0x02	; 2
     e40:	79 f4       	brne	.+30     	; 0xe60 <__mulsf3+0x6e>
     e42:	c6 c0       	rjmp	.+396    	; 0xfd0 <__mulsf3+0x1de>
     e44:	92 30       	cpi	r25, 0x02	; 2
     e46:	51 f4       	brne	.+20     	; 0xe5c <__mulsf3+0x6a>
     e48:	81 e0       	ldi	r24, 0x01	; 1
     e4a:	2a 85       	ldd	r18, Y+10	; 0x0a
     e4c:	9a 89       	ldd	r25, Y+18	; 0x12
     e4e:	29 17       	cp	r18, r25
     e50:	09 f4       	brne	.+2      	; 0xe54 <__mulsf3+0x62>
     e52:	80 e0       	ldi	r24, 0x00	; 0
     e54:	8a 87       	std	Y+10, r24	; 0x0a
     e56:	ce 01       	movw	r24, r28
     e58:	09 96       	adiw	r24, 0x09	; 9
     e5a:	bc c0       	rjmp	.+376    	; 0xfd4 <__mulsf3+0x1e2>
     e5c:	82 30       	cpi	r24, 0x02	; 2
     e5e:	51 f4       	brne	.+20     	; 0xe74 <__mulsf3+0x82>
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	2a 85       	ldd	r18, Y+10	; 0x0a
     e64:	9a 89       	ldd	r25, Y+18	; 0x12
     e66:	29 17       	cp	r18, r25
     e68:	09 f4       	brne	.+2      	; 0xe6c <__mulsf3+0x7a>
     e6a:	80 e0       	ldi	r24, 0x00	; 0
     e6c:	8a 8b       	std	Y+18, r24	; 0x12
     e6e:	ce 01       	movw	r24, r28
     e70:	41 96       	adiw	r24, 0x11	; 17
     e72:	b0 c0       	rjmp	.+352    	; 0xfd4 <__mulsf3+0x1e2>
     e74:	6d 84       	ldd	r6, Y+13	; 0x0d
     e76:	7e 84       	ldd	r7, Y+14	; 0x0e
     e78:	8f 84       	ldd	r8, Y+15	; 0x0f
     e7a:	98 88       	ldd	r9, Y+16	; 0x10
     e7c:	ed 88       	ldd	r14, Y+21	; 0x15
     e7e:	fe 88       	ldd	r15, Y+22	; 0x16
     e80:	0f 89       	ldd	r16, Y+23	; 0x17
     e82:	18 8d       	ldd	r17, Y+24	; 0x18
     e84:	e0 e2       	ldi	r30, 0x20	; 32
     e86:	f0 e0       	ldi	r31, 0x00	; 0
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	dc 01       	movw	r26, r24
     e8e:	aa 24       	eor	r10, r10
     e90:	bb 24       	eor	r11, r11
     e92:	65 01       	movw	r12, r10
     e94:	20 e0       	ldi	r18, 0x00	; 0
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	a9 01       	movw	r20, r18
     e9a:	b3 01       	movw	r22, r6
     e9c:	61 70       	andi	r22, 0x01	; 1
     e9e:	70 70       	andi	r23, 0x00	; 0
     ea0:	61 15       	cp	r22, r1
     ea2:	71 05       	cpc	r23, r1
     ea4:	d1 f0       	breq	.+52     	; 0xeda <__mulsf3+0xe8>
     ea6:	2e 0d       	add	r18, r14
     ea8:	3f 1d       	adc	r19, r15
     eaa:	40 1f       	adc	r20, r16
     eac:	51 1f       	adc	r21, r17
     eae:	15 01       	movw	r2, r10
     eb0:	26 01       	movw	r4, r12
     eb2:	28 0e       	add	r2, r24
     eb4:	39 1e       	adc	r3, r25
     eb6:	4a 1e       	adc	r4, r26
     eb8:	5b 1e       	adc	r5, r27
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	a0 e0       	ldi	r26, 0x00	; 0
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	2e 15       	cp	r18, r14
     ec4:	3f 05       	cpc	r19, r15
     ec6:	40 07       	cpc	r20, r16
     ec8:	51 07       	cpc	r21, r17
     eca:	18 f0       	brcs	.+6      	; 0xed2 <__mulsf3+0xe0>
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	dc 01       	movw	r26, r24
     ed2:	82 0d       	add	r24, r2
     ed4:	93 1d       	adc	r25, r3
     ed6:	a4 1d       	adc	r26, r4
     ed8:	b5 1d       	adc	r27, r5
     eda:	aa 0c       	add	r10, r10
     edc:	bb 1c       	adc	r11, r11
     ede:	cc 1c       	adc	r12, r12
     ee0:	dd 1c       	adc	r13, r13
     ee2:	17 ff       	sbrs	r17, 7
     ee4:	09 c0       	rjmp	.+18     	; 0xef8 <__mulsf3+0x106>
     ee6:	61 e0       	ldi	r22, 0x01	; 1
     ee8:	26 2e       	mov	r2, r22
     eea:	31 2c       	mov	r3, r1
     eec:	41 2c       	mov	r4, r1
     eee:	51 2c       	mov	r5, r1
     ef0:	a2 28       	or	r10, r2
     ef2:	b3 28       	or	r11, r3
     ef4:	c4 28       	or	r12, r4
     ef6:	d5 28       	or	r13, r5
     ef8:	31 97       	sbiw	r30, 0x01	; 1
     efa:	49 f0       	breq	.+18     	; 0xf0e <__mulsf3+0x11c>
     efc:	ee 0c       	add	r14, r14
     efe:	ff 1c       	adc	r15, r15
     f00:	00 1f       	adc	r16, r16
     f02:	11 1f       	adc	r17, r17
     f04:	96 94       	lsr	r9
     f06:	87 94       	ror	r8
     f08:	77 94       	ror	r7
     f0a:	67 94       	ror	r6
     f0c:	c6 cf       	rjmp	.-116    	; 0xe9a <__mulsf3+0xa8>
     f0e:	6b 89       	ldd	r22, Y+19	; 0x13
     f10:	7c 89       	ldd	r23, Y+20	; 0x14
     f12:	eb 85       	ldd	r30, Y+11	; 0x0b
     f14:	fc 85       	ldd	r31, Y+12	; 0x0c
     f16:	6e 0f       	add	r22, r30
     f18:	7f 1f       	adc	r23, r31
     f1a:	6e 5f       	subi	r22, 0xFE	; 254
     f1c:	7f 4f       	sbci	r23, 0xFF	; 255
     f1e:	7c 8f       	std	Y+28, r23	; 0x1c
     f20:	6b 8f       	std	Y+27, r22	; 0x1b
     f22:	61 e0       	ldi	r22, 0x01	; 1
     f24:	ea 85       	ldd	r30, Y+10	; 0x0a
     f26:	7a 89       	ldd	r23, Y+18	; 0x12
     f28:	e7 17       	cp	r30, r23
     f2a:	09 f4       	brne	.+2      	; 0xf2e <__mulsf3+0x13c>
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	6a 8f       	std	Y+26, r22	; 0x1a
     f30:	6b 8d       	ldd	r22, Y+27	; 0x1b
     f32:	7c 8d       	ldd	r23, Y+28	; 0x1c
     f34:	10 c0       	rjmp	.+32     	; 0xf56 <__mulsf3+0x164>
     f36:	fc 01       	movw	r30, r24
     f38:	e1 70       	andi	r30, 0x01	; 1
     f3a:	f0 70       	andi	r31, 0x00	; 0
     f3c:	30 97       	sbiw	r30, 0x00	; 0
     f3e:	29 f0       	breq	.+10     	; 0xf4a <__mulsf3+0x158>
     f40:	56 95       	lsr	r21
     f42:	47 95       	ror	r20
     f44:	37 95       	ror	r19
     f46:	27 95       	ror	r18
     f48:	50 68       	ori	r21, 0x80	; 128
     f4a:	b6 95       	lsr	r27
     f4c:	a7 95       	ror	r26
     f4e:	97 95       	ror	r25
     f50:	87 95       	ror	r24
     f52:	6f 5f       	subi	r22, 0xFF	; 255
     f54:	7f 4f       	sbci	r23, 0xFF	; 255
     f56:	b7 fd       	sbrc	r27, 7
     f58:	ee cf       	rjmp	.-36     	; 0xf36 <__mulsf3+0x144>
     f5a:	0c c0       	rjmp	.+24     	; 0xf74 <__mulsf3+0x182>
     f5c:	88 0f       	add	r24, r24
     f5e:	99 1f       	adc	r25, r25
     f60:	aa 1f       	adc	r26, r26
     f62:	bb 1f       	adc	r27, r27
     f64:	57 fd       	sbrc	r21, 7
     f66:	81 60       	ori	r24, 0x01	; 1
     f68:	22 0f       	add	r18, r18
     f6a:	33 1f       	adc	r19, r19
     f6c:	44 1f       	adc	r20, r20
     f6e:	55 1f       	adc	r21, r21
     f70:	61 50       	subi	r22, 0x01	; 1
     f72:	70 40       	sbci	r23, 0x00	; 0
     f74:	80 30       	cpi	r24, 0x00	; 0
     f76:	e0 e0       	ldi	r30, 0x00	; 0
     f78:	9e 07       	cpc	r25, r30
     f7a:	e0 e0       	ldi	r30, 0x00	; 0
     f7c:	ae 07       	cpc	r26, r30
     f7e:	e0 e4       	ldi	r30, 0x40	; 64
     f80:	be 07       	cpc	r27, r30
     f82:	60 f3       	brcs	.-40     	; 0xf5c <__mulsf3+0x16a>
     f84:	6b 8f       	std	Y+27, r22	; 0x1b
     f86:	7c 8f       	std	Y+28, r23	; 0x1c
     f88:	6f e7       	ldi	r22, 0x7F	; 127
     f8a:	e6 2e       	mov	r14, r22
     f8c:	f1 2c       	mov	r15, r1
     f8e:	01 2d       	mov	r16, r1
     f90:	11 2d       	mov	r17, r1
     f92:	e8 22       	and	r14, r24
     f94:	f9 22       	and	r15, r25
     f96:	0a 23       	and	r16, r26
     f98:	1b 23       	and	r17, r27
     f9a:	60 e4       	ldi	r22, 0x40	; 64
     f9c:	e6 16       	cp	r14, r22
     f9e:	f1 04       	cpc	r15, r1
     fa0:	01 05       	cpc	r16, r1
     fa2:	11 05       	cpc	r17, r1
     fa4:	61 f4       	brne	.+24     	; 0xfbe <__mulsf3+0x1cc>
     fa6:	87 fd       	sbrc	r24, 7
     fa8:	0a c0       	rjmp	.+20     	; 0xfbe <__mulsf3+0x1cc>
     faa:	21 15       	cp	r18, r1
     fac:	31 05       	cpc	r19, r1
     fae:	41 05       	cpc	r20, r1
     fb0:	51 05       	cpc	r21, r1
     fb2:	29 f0       	breq	.+10     	; 0xfbe <__mulsf3+0x1cc>
     fb4:	80 5c       	subi	r24, 0xC0	; 192
     fb6:	9f 4f       	sbci	r25, 0xFF	; 255
     fb8:	af 4f       	sbci	r26, 0xFF	; 255
     fba:	bf 4f       	sbci	r27, 0xFF	; 255
     fbc:	80 78       	andi	r24, 0x80	; 128
     fbe:	8d 8f       	std	Y+29, r24	; 0x1d
     fc0:	9e 8f       	std	Y+30, r25	; 0x1e
     fc2:	af 8f       	std	Y+31, r26	; 0x1f
     fc4:	b8 a3       	std	Y+32, r27	; 0x20
     fc6:	83 e0       	ldi	r24, 0x03	; 3
     fc8:	89 8f       	std	Y+25, r24	; 0x19
     fca:	ce 01       	movw	r24, r28
     fcc:	49 96       	adiw	r24, 0x19	; 25
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <__mulsf3+0x1e2>
     fd0:	8b e9       	ldi	r24, 0x9B	; 155
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	07 d2       	rcall	.+1038   	; 0x13e4 <__pack_f>
     fd6:	a0 96       	adiw	r28, 0x20	; 32
     fd8:	e2 e1       	ldi	r30, 0x12	; 18
     fda:	d6 c3       	rjmp	.+1964   	; 0x1788 <__epilogue_restores__>

00000fdc <__divsf3>:
     fdc:	a8 e1       	ldi	r26, 0x18	; 24
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	e3 ef       	ldi	r30, 0xF3	; 243
     fe2:	f7 e0       	ldi	r31, 0x07	; 7
     fe4:	bd c3       	rjmp	.+1914   	; 0x1760 <__prologue_saves__+0x10>
     fe6:	69 83       	std	Y+1, r22	; 0x01
     fe8:	7a 83       	std	Y+2, r23	; 0x02
     fea:	8b 83       	std	Y+3, r24	; 0x03
     fec:	9c 83       	std	Y+4, r25	; 0x04
     fee:	2d 83       	std	Y+5, r18	; 0x05
     ff0:	3e 83       	std	Y+6, r19	; 0x06
     ff2:	4f 83       	std	Y+7, r20	; 0x07
     ff4:	58 87       	std	Y+8, r21	; 0x08
     ff6:	8e 01       	movw	r16, r28
     ff8:	07 5f       	subi	r16, 0xF7	; 247
     ffa:	1f 4f       	sbci	r17, 0xFF	; 255
     ffc:	ce 01       	movw	r24, r28
     ffe:	01 96       	adiw	r24, 0x01	; 1
    1000:	b8 01       	movw	r22, r16
    1002:	bd d2       	rcall	.+1402   	; 0x157e <__unpack_f>
    1004:	81 e1       	ldi	r24, 0x11	; 17
    1006:	e8 2e       	mov	r14, r24
    1008:	f1 2c       	mov	r15, r1
    100a:	ec 0e       	add	r14, r28
    100c:	fd 1e       	adc	r15, r29
    100e:	ce 01       	movw	r24, r28
    1010:	05 96       	adiw	r24, 0x05	; 5
    1012:	b7 01       	movw	r22, r14
    1014:	b4 d2       	rcall	.+1384   	; 0x157e <__unpack_f>
    1016:	99 85       	ldd	r25, Y+9	; 0x09
    1018:	92 30       	cpi	r25, 0x02	; 2
    101a:	08 f4       	brcc	.+2      	; 0x101e <__divsf3+0x42>
    101c:	83 c0       	rjmp	.+262    	; 0x1124 <__divsf3+0x148>
    101e:	89 89       	ldd	r24, Y+17	; 0x11
    1020:	82 30       	cpi	r24, 0x02	; 2
    1022:	08 f4       	brcc	.+2      	; 0x1026 <__divsf3+0x4a>
    1024:	7b c0       	rjmp	.+246    	; 0x111c <__divsf3+0x140>
    1026:	2a 85       	ldd	r18, Y+10	; 0x0a
    1028:	3a 89       	ldd	r19, Y+18	; 0x12
    102a:	23 27       	eor	r18, r19
    102c:	2a 87       	std	Y+10, r18	; 0x0a
    102e:	94 30       	cpi	r25, 0x04	; 4
    1030:	11 f0       	breq	.+4      	; 0x1036 <__divsf3+0x5a>
    1032:	92 30       	cpi	r25, 0x02	; 2
    1034:	21 f4       	brne	.+8      	; 0x103e <__divsf3+0x62>
    1036:	98 17       	cp	r25, r24
    1038:	09 f0       	breq	.+2      	; 0x103c <__divsf3+0x60>
    103a:	6c c0       	rjmp	.+216    	; 0x1114 <__divsf3+0x138>
    103c:	71 c0       	rjmp	.+226    	; 0x1120 <__divsf3+0x144>
    103e:	84 30       	cpi	r24, 0x04	; 4
    1040:	39 f4       	brne	.+14     	; 0x1050 <__divsf3+0x74>
    1042:	1d 86       	std	Y+13, r1	; 0x0d
    1044:	1e 86       	std	Y+14, r1	; 0x0e
    1046:	1f 86       	std	Y+15, r1	; 0x0f
    1048:	18 8a       	std	Y+16, r1	; 0x10
    104a:	1c 86       	std	Y+12, r1	; 0x0c
    104c:	1b 86       	std	Y+11, r1	; 0x0b
    104e:	6a c0       	rjmp	.+212    	; 0x1124 <__divsf3+0x148>
    1050:	82 30       	cpi	r24, 0x02	; 2
    1052:	19 f4       	brne	.+6      	; 0x105a <__divsf3+0x7e>
    1054:	84 e0       	ldi	r24, 0x04	; 4
    1056:	89 87       	std	Y+9, r24	; 0x09
    1058:	65 c0       	rjmp	.+202    	; 0x1124 <__divsf3+0x148>
    105a:	8b 85       	ldd	r24, Y+11	; 0x0b
    105c:	9c 85       	ldd	r25, Y+12	; 0x0c
    105e:	2b 89       	ldd	r18, Y+19	; 0x13
    1060:	3c 89       	ldd	r19, Y+20	; 0x14
    1062:	82 1b       	sub	r24, r18
    1064:	93 0b       	sbc	r25, r19
    1066:	9c 87       	std	Y+12, r25	; 0x0c
    1068:	8b 87       	std	Y+11, r24	; 0x0b
    106a:	2d 85       	ldd	r18, Y+13	; 0x0d
    106c:	3e 85       	ldd	r19, Y+14	; 0x0e
    106e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1070:	58 89       	ldd	r21, Y+16	; 0x10
    1072:	ed 88       	ldd	r14, Y+21	; 0x15
    1074:	fe 88       	ldd	r15, Y+22	; 0x16
    1076:	0f 89       	ldd	r16, Y+23	; 0x17
    1078:	18 8d       	ldd	r17, Y+24	; 0x18
    107a:	2e 15       	cp	r18, r14
    107c:	3f 05       	cpc	r19, r15
    107e:	40 07       	cpc	r20, r16
    1080:	51 07       	cpc	r21, r17
    1082:	38 f4       	brcc	.+14     	; 0x1092 <__divsf3+0xb6>
    1084:	22 0f       	add	r18, r18
    1086:	33 1f       	adc	r19, r19
    1088:	44 1f       	adc	r20, r20
    108a:	55 1f       	adc	r21, r21
    108c:	01 97       	sbiw	r24, 0x01	; 1
    108e:	9c 87       	std	Y+12, r25	; 0x0c
    1090:	8b 87       	std	Y+11, r24	; 0x0b
    1092:	6f e1       	ldi	r22, 0x1F	; 31
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	a1 2c       	mov	r10, r1
    1098:	b1 2c       	mov	r11, r1
    109a:	c1 2c       	mov	r12, r1
    109c:	a0 e4       	ldi	r26, 0x40	; 64
    109e:	da 2e       	mov	r13, r26
    10a0:	80 e0       	ldi	r24, 0x00	; 0
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	dc 01       	movw	r26, r24
    10a6:	2e 15       	cp	r18, r14
    10a8:	3f 05       	cpc	r19, r15
    10aa:	40 07       	cpc	r20, r16
    10ac:	51 07       	cpc	r21, r17
    10ae:	40 f0       	brcs	.+16     	; 0x10c0 <__divsf3+0xe4>
    10b0:	8a 29       	or	r24, r10
    10b2:	9b 29       	or	r25, r11
    10b4:	ac 29       	or	r26, r12
    10b6:	bd 29       	or	r27, r13
    10b8:	2e 19       	sub	r18, r14
    10ba:	3f 09       	sbc	r19, r15
    10bc:	40 0b       	sbc	r20, r16
    10be:	51 0b       	sbc	r21, r17
    10c0:	d6 94       	lsr	r13
    10c2:	c7 94       	ror	r12
    10c4:	b7 94       	ror	r11
    10c6:	a7 94       	ror	r10
    10c8:	22 0f       	add	r18, r18
    10ca:	33 1f       	adc	r19, r19
    10cc:	44 1f       	adc	r20, r20
    10ce:	55 1f       	adc	r21, r21
    10d0:	61 50       	subi	r22, 0x01	; 1
    10d2:	70 40       	sbci	r23, 0x00	; 0
    10d4:	41 f7       	brne	.-48     	; 0x10a6 <__divsf3+0xca>
    10d6:	6f e7       	ldi	r22, 0x7F	; 127
    10d8:	e6 2e       	mov	r14, r22
    10da:	f1 2c       	mov	r15, r1
    10dc:	01 2d       	mov	r16, r1
    10de:	11 2d       	mov	r17, r1
    10e0:	e8 22       	and	r14, r24
    10e2:	f9 22       	and	r15, r25
    10e4:	0a 23       	and	r16, r26
    10e6:	1b 23       	and	r17, r27
    10e8:	60 e4       	ldi	r22, 0x40	; 64
    10ea:	e6 16       	cp	r14, r22
    10ec:	f1 04       	cpc	r15, r1
    10ee:	01 05       	cpc	r16, r1
    10f0:	11 05       	cpc	r17, r1
    10f2:	61 f4       	brne	.+24     	; 0x110c <__divsf3+0x130>
    10f4:	87 fd       	sbrc	r24, 7
    10f6:	0a c0       	rjmp	.+20     	; 0x110c <__divsf3+0x130>
    10f8:	21 15       	cp	r18, r1
    10fa:	31 05       	cpc	r19, r1
    10fc:	41 05       	cpc	r20, r1
    10fe:	51 05       	cpc	r21, r1
    1100:	29 f0       	breq	.+10     	; 0x110c <__divsf3+0x130>
    1102:	80 5c       	subi	r24, 0xC0	; 192
    1104:	9f 4f       	sbci	r25, 0xFF	; 255
    1106:	af 4f       	sbci	r26, 0xFF	; 255
    1108:	bf 4f       	sbci	r27, 0xFF	; 255
    110a:	80 78       	andi	r24, 0x80	; 128
    110c:	8d 87       	std	Y+13, r24	; 0x0d
    110e:	9e 87       	std	Y+14, r25	; 0x0e
    1110:	af 87       	std	Y+15, r26	; 0x0f
    1112:	b8 8b       	std	Y+16, r27	; 0x10
    1114:	8e 01       	movw	r16, r28
    1116:	07 5f       	subi	r16, 0xF7	; 247
    1118:	1f 4f       	sbci	r17, 0xFF	; 255
    111a:	04 c0       	rjmp	.+8      	; 0x1124 <__divsf3+0x148>
    111c:	87 01       	movw	r16, r14
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <__divsf3+0x148>
    1120:	0b e9       	ldi	r16, 0x9B	; 155
    1122:	10 e0       	ldi	r17, 0x00	; 0
    1124:	c8 01       	movw	r24, r16
    1126:	5e d1       	rcall	.+700    	; 0x13e4 <__pack_f>
    1128:	68 96       	adiw	r28, 0x18	; 24
    112a:	ea e0       	ldi	r30, 0x0A	; 10
    112c:	35 c3       	rjmp	.+1642   	; 0x1798 <__epilogue_restores__+0x10>

0000112e <__ltsf2>:
    112e:	a8 e1       	ldi	r26, 0x18	; 24
    1130:	b0 e0       	ldi	r27, 0x00	; 0
    1132:	ec e9       	ldi	r30, 0x9C	; 156
    1134:	f8 e0       	ldi	r31, 0x08	; 8
    1136:	18 c3       	rjmp	.+1584   	; 0x1768 <__prologue_saves__+0x18>
    1138:	69 83       	std	Y+1, r22	; 0x01
    113a:	7a 83       	std	Y+2, r23	; 0x02
    113c:	8b 83       	std	Y+3, r24	; 0x03
    113e:	9c 83       	std	Y+4, r25	; 0x04
    1140:	2d 83       	std	Y+5, r18	; 0x05
    1142:	3e 83       	std	Y+6, r19	; 0x06
    1144:	4f 83       	std	Y+7, r20	; 0x07
    1146:	58 87       	std	Y+8, r21	; 0x08
    1148:	8e 01       	movw	r16, r28
    114a:	07 5f       	subi	r16, 0xF7	; 247
    114c:	1f 4f       	sbci	r17, 0xFF	; 255
    114e:	ce 01       	movw	r24, r28
    1150:	01 96       	adiw	r24, 0x01	; 1
    1152:	b8 01       	movw	r22, r16
    1154:	14 d2       	rcall	.+1064   	; 0x157e <__unpack_f>
    1156:	81 e1       	ldi	r24, 0x11	; 17
    1158:	e8 2e       	mov	r14, r24
    115a:	f1 2c       	mov	r15, r1
    115c:	ec 0e       	add	r14, r28
    115e:	fd 1e       	adc	r15, r29
    1160:	ce 01       	movw	r24, r28
    1162:	05 96       	adiw	r24, 0x05	; 5
    1164:	b7 01       	movw	r22, r14
    1166:	0b d2       	rcall	.+1046   	; 0x157e <__unpack_f>
    1168:	89 85       	ldd	r24, Y+9	; 0x09
    116a:	82 30       	cpi	r24, 0x02	; 2
    116c:	38 f0       	brcs	.+14     	; 0x117c <__ltsf2+0x4e>
    116e:	89 89       	ldd	r24, Y+17	; 0x11
    1170:	82 30       	cpi	r24, 0x02	; 2
    1172:	20 f0       	brcs	.+8      	; 0x117c <__ltsf2+0x4e>
    1174:	c8 01       	movw	r24, r16
    1176:	b7 01       	movw	r22, r14
    1178:	6b d2       	rcall	.+1238   	; 0x1650 <__fpcmp_parts_f>
    117a:	01 c0       	rjmp	.+2      	; 0x117e <__ltsf2+0x50>
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	68 96       	adiw	r28, 0x18	; 24
    1180:	e6 e0       	ldi	r30, 0x06	; 6
    1182:	0e c3       	rjmp	.+1564   	; 0x17a0 <__epilogue_restores__+0x18>

00001184 <__lesf2>:
    1184:	a8 e1       	ldi	r26, 0x18	; 24
    1186:	b0 e0       	ldi	r27, 0x00	; 0
    1188:	e7 ec       	ldi	r30, 0xC7	; 199
    118a:	f8 e0       	ldi	r31, 0x08	; 8
    118c:	ed c2       	rjmp	.+1498   	; 0x1768 <__prologue_saves__+0x18>
    118e:	69 83       	std	Y+1, r22	; 0x01
    1190:	7a 83       	std	Y+2, r23	; 0x02
    1192:	8b 83       	std	Y+3, r24	; 0x03
    1194:	9c 83       	std	Y+4, r25	; 0x04
    1196:	2d 83       	std	Y+5, r18	; 0x05
    1198:	3e 83       	std	Y+6, r19	; 0x06
    119a:	4f 83       	std	Y+7, r20	; 0x07
    119c:	58 87       	std	Y+8, r21	; 0x08
    119e:	8e 01       	movw	r16, r28
    11a0:	07 5f       	subi	r16, 0xF7	; 247
    11a2:	1f 4f       	sbci	r17, 0xFF	; 255
    11a4:	ce 01       	movw	r24, r28
    11a6:	01 96       	adiw	r24, 0x01	; 1
    11a8:	b8 01       	movw	r22, r16
    11aa:	e9 d1       	rcall	.+978    	; 0x157e <__unpack_f>
    11ac:	81 e1       	ldi	r24, 0x11	; 17
    11ae:	e8 2e       	mov	r14, r24
    11b0:	f1 2c       	mov	r15, r1
    11b2:	ec 0e       	add	r14, r28
    11b4:	fd 1e       	adc	r15, r29
    11b6:	ce 01       	movw	r24, r28
    11b8:	05 96       	adiw	r24, 0x05	; 5
    11ba:	b7 01       	movw	r22, r14
    11bc:	e0 d1       	rcall	.+960    	; 0x157e <__unpack_f>
    11be:	89 85       	ldd	r24, Y+9	; 0x09
    11c0:	82 30       	cpi	r24, 0x02	; 2
    11c2:	38 f0       	brcs	.+14     	; 0x11d2 <__lesf2+0x4e>
    11c4:	89 89       	ldd	r24, Y+17	; 0x11
    11c6:	82 30       	cpi	r24, 0x02	; 2
    11c8:	20 f0       	brcs	.+8      	; 0x11d2 <__lesf2+0x4e>
    11ca:	c8 01       	movw	r24, r16
    11cc:	b7 01       	movw	r22, r14
    11ce:	40 d2       	rcall	.+1152   	; 0x1650 <__fpcmp_parts_f>
    11d0:	01 c0       	rjmp	.+2      	; 0x11d4 <__lesf2+0x50>
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	68 96       	adiw	r28, 0x18	; 24
    11d6:	e6 e0       	ldi	r30, 0x06	; 6
    11d8:	e3 c2       	rjmp	.+1478   	; 0x17a0 <__epilogue_restores__+0x18>

000011da <__floatsisf>:
    11da:	a8 e0       	ldi	r26, 0x08	; 8
    11dc:	b0 e0       	ldi	r27, 0x00	; 0
    11de:	e2 ef       	ldi	r30, 0xF2	; 242
    11e0:	f8 e0       	ldi	r31, 0x08	; 8
    11e2:	c2 c2       	rjmp	.+1412   	; 0x1768 <__prologue_saves__+0x18>
    11e4:	7b 01       	movw	r14, r22
    11e6:	8c 01       	movw	r16, r24
    11e8:	83 e0       	ldi	r24, 0x03	; 3
    11ea:	89 83       	std	Y+1, r24	; 0x01
    11ec:	d8 01       	movw	r26, r16
    11ee:	c7 01       	movw	r24, r14
    11f0:	88 27       	eor	r24, r24
    11f2:	b7 fd       	sbrc	r27, 7
    11f4:	83 95       	inc	r24
    11f6:	99 27       	eor	r25, r25
    11f8:	aa 27       	eor	r26, r26
    11fa:	bb 27       	eor	r27, r27
    11fc:	28 2f       	mov	r18, r24
    11fe:	8a 83       	std	Y+2, r24	; 0x02
    1200:	e1 14       	cp	r14, r1
    1202:	f1 04       	cpc	r15, r1
    1204:	01 05       	cpc	r16, r1
    1206:	11 05       	cpc	r17, r1
    1208:	19 f4       	brne	.+6      	; 0x1210 <__floatsisf+0x36>
    120a:	82 e0       	ldi	r24, 0x02	; 2
    120c:	89 83       	std	Y+1, r24	; 0x01
    120e:	36 c0       	rjmp	.+108    	; 0x127c <__floatsisf+0xa2>
    1210:	8e e1       	ldi	r24, 0x1E	; 30
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	9c 83       	std	Y+4, r25	; 0x04
    1216:	8b 83       	std	Y+3, r24	; 0x03
    1218:	22 23       	and	r18, r18
    121a:	89 f0       	breq	.+34     	; 0x123e <__floatsisf+0x64>
    121c:	80 e0       	ldi	r24, 0x00	; 0
    121e:	e8 16       	cp	r14, r24
    1220:	80 e0       	ldi	r24, 0x00	; 0
    1222:	f8 06       	cpc	r15, r24
    1224:	80 e0       	ldi	r24, 0x00	; 0
    1226:	08 07       	cpc	r16, r24
    1228:	80 e8       	ldi	r24, 0x80	; 128
    122a:	18 07       	cpc	r17, r24
    122c:	59 f1       	breq	.+86     	; 0x1284 <__floatsisf+0xaa>
    122e:	10 95       	com	r17
    1230:	00 95       	com	r16
    1232:	f0 94       	com	r15
    1234:	e0 94       	com	r14
    1236:	e1 1c       	adc	r14, r1
    1238:	f1 1c       	adc	r15, r1
    123a:	01 1d       	adc	r16, r1
    123c:	11 1d       	adc	r17, r1
    123e:	ed 82       	std	Y+5, r14	; 0x05
    1240:	fe 82       	std	Y+6, r15	; 0x06
    1242:	0f 83       	std	Y+7, r16	; 0x07
    1244:	18 87       	std	Y+8, r17	; 0x08
    1246:	c8 01       	movw	r24, r16
    1248:	b7 01       	movw	r22, r14
    124a:	72 d0       	rcall	.+228    	; 0x1330 <__clzsi2>
    124c:	9c 01       	movw	r18, r24
    124e:	21 50       	subi	r18, 0x01	; 1
    1250:	30 40       	sbci	r19, 0x00	; 0
    1252:	12 16       	cp	r1, r18
    1254:	13 06       	cpc	r1, r19
    1256:	94 f4       	brge	.+36     	; 0x127c <__floatsisf+0xa2>
    1258:	02 2e       	mov	r0, r18
    125a:	04 c0       	rjmp	.+8      	; 0x1264 <__floatsisf+0x8a>
    125c:	ee 0c       	add	r14, r14
    125e:	ff 1c       	adc	r15, r15
    1260:	00 1f       	adc	r16, r16
    1262:	11 1f       	adc	r17, r17
    1264:	0a 94       	dec	r0
    1266:	d2 f7       	brpl	.-12     	; 0x125c <__floatsisf+0x82>
    1268:	ed 82       	std	Y+5, r14	; 0x05
    126a:	fe 82       	std	Y+6, r15	; 0x06
    126c:	0f 83       	std	Y+7, r16	; 0x07
    126e:	18 87       	std	Y+8, r17	; 0x08
    1270:	8e e1       	ldi	r24, 0x1E	; 30
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	82 1b       	sub	r24, r18
    1276:	93 0b       	sbc	r25, r19
    1278:	9c 83       	std	Y+4, r25	; 0x04
    127a:	8b 83       	std	Y+3, r24	; 0x03
    127c:	ce 01       	movw	r24, r28
    127e:	01 96       	adiw	r24, 0x01	; 1
    1280:	b1 d0       	rcall	.+354    	; 0x13e4 <__pack_f>
    1282:	04 c0       	rjmp	.+8      	; 0x128c <__floatsisf+0xb2>
    1284:	60 e0       	ldi	r22, 0x00	; 0
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	9f ec       	ldi	r25, 0xCF	; 207
    128c:	28 96       	adiw	r28, 0x08	; 8
    128e:	e6 e0       	ldi	r30, 0x06	; 6
    1290:	87 c2       	rjmp	.+1294   	; 0x17a0 <__epilogue_restores__+0x18>

00001292 <__fixsfsi>:
    1292:	ac e0       	ldi	r26, 0x0C	; 12
    1294:	b0 e0       	ldi	r27, 0x00	; 0
    1296:	ee e4       	ldi	r30, 0x4E	; 78
    1298:	f9 e0       	ldi	r31, 0x09	; 9
    129a:	6a c2       	rjmp	.+1236   	; 0x1770 <__prologue_saves__+0x20>
    129c:	69 83       	std	Y+1, r22	; 0x01
    129e:	7a 83       	std	Y+2, r23	; 0x02
    12a0:	8b 83       	std	Y+3, r24	; 0x03
    12a2:	9c 83       	std	Y+4, r25	; 0x04
    12a4:	ce 01       	movw	r24, r28
    12a6:	01 96       	adiw	r24, 0x01	; 1
    12a8:	be 01       	movw	r22, r28
    12aa:	6b 5f       	subi	r22, 0xFB	; 251
    12ac:	7f 4f       	sbci	r23, 0xFF	; 255
    12ae:	67 d1       	rcall	.+718    	; 0x157e <__unpack_f>
    12b0:	8d 81       	ldd	r24, Y+5	; 0x05
    12b2:	82 30       	cpi	r24, 0x02	; 2
    12b4:	81 f1       	breq	.+96     	; 0x1316 <__fixsfsi+0x84>
    12b6:	82 30       	cpi	r24, 0x02	; 2
    12b8:	70 f1       	brcs	.+92     	; 0x1316 <__fixsfsi+0x84>
    12ba:	84 30       	cpi	r24, 0x04	; 4
    12bc:	21 f4       	brne	.+8      	; 0x12c6 <__fixsfsi+0x34>
    12be:	8e 81       	ldd	r24, Y+6	; 0x06
    12c0:	88 23       	and	r24, r24
    12c2:	69 f1       	breq	.+90     	; 0x131e <__fixsfsi+0x8c>
    12c4:	0a c0       	rjmp	.+20     	; 0x12da <__fixsfsi+0x48>
    12c6:	2f 81       	ldd	r18, Y+7	; 0x07
    12c8:	38 85       	ldd	r19, Y+8	; 0x08
    12ca:	37 fd       	sbrc	r19, 7
    12cc:	24 c0       	rjmp	.+72     	; 0x1316 <__fixsfsi+0x84>
    12ce:	6e 81       	ldd	r22, Y+6	; 0x06
    12d0:	2f 31       	cpi	r18, 0x1F	; 31
    12d2:	31 05       	cpc	r19, r1
    12d4:	3c f0       	brlt	.+14     	; 0x12e4 <__fixsfsi+0x52>
    12d6:	66 23       	and	r22, r22
    12d8:	11 f1       	breq	.+68     	; 0x131e <__fixsfsi+0x8c>
    12da:	20 e0       	ldi	r18, 0x00	; 0
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	40 e0       	ldi	r20, 0x00	; 0
    12e0:	50 e8       	ldi	r21, 0x80	; 128
    12e2:	21 c0       	rjmp	.+66     	; 0x1326 <__fixsfsi+0x94>
    12e4:	8e e1       	ldi	r24, 0x1E	; 30
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	82 1b       	sub	r24, r18
    12ea:	93 0b       	sbc	r25, r19
    12ec:	29 85       	ldd	r18, Y+9	; 0x09
    12ee:	3a 85       	ldd	r19, Y+10	; 0x0a
    12f0:	4b 85       	ldd	r20, Y+11	; 0x0b
    12f2:	5c 85       	ldd	r21, Y+12	; 0x0c
    12f4:	04 c0       	rjmp	.+8      	; 0x12fe <__fixsfsi+0x6c>
    12f6:	56 95       	lsr	r21
    12f8:	47 95       	ror	r20
    12fa:	37 95       	ror	r19
    12fc:	27 95       	ror	r18
    12fe:	8a 95       	dec	r24
    1300:	d2 f7       	brpl	.-12     	; 0x12f6 <__fixsfsi+0x64>
    1302:	66 23       	and	r22, r22
    1304:	81 f0       	breq	.+32     	; 0x1326 <__fixsfsi+0x94>
    1306:	50 95       	com	r21
    1308:	40 95       	com	r20
    130a:	30 95       	com	r19
    130c:	21 95       	neg	r18
    130e:	3f 4f       	sbci	r19, 0xFF	; 255
    1310:	4f 4f       	sbci	r20, 0xFF	; 255
    1312:	5f 4f       	sbci	r21, 0xFF	; 255
    1314:	08 c0       	rjmp	.+16     	; 0x1326 <__fixsfsi+0x94>
    1316:	20 e0       	ldi	r18, 0x00	; 0
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	a9 01       	movw	r20, r18
    131c:	04 c0       	rjmp	.+8      	; 0x1326 <__fixsfsi+0x94>
    131e:	2f ef       	ldi	r18, 0xFF	; 255
    1320:	3f ef       	ldi	r19, 0xFF	; 255
    1322:	4f ef       	ldi	r20, 0xFF	; 255
    1324:	5f e7       	ldi	r21, 0x7F	; 127
    1326:	b9 01       	movw	r22, r18
    1328:	ca 01       	movw	r24, r20
    132a:	2c 96       	adiw	r28, 0x0c	; 12
    132c:	e2 e0       	ldi	r30, 0x02	; 2
    132e:	3c c2       	rjmp	.+1144   	; 0x17a8 <__epilogue_restores__+0x20>

00001330 <__clzsi2>:
    1330:	af 92       	push	r10
    1332:	bf 92       	push	r11
    1334:	cf 92       	push	r12
    1336:	df 92       	push	r13
    1338:	ef 92       	push	r14
    133a:	ff 92       	push	r15
    133c:	0f 93       	push	r16
    133e:	1f 93       	push	r17
    1340:	7b 01       	movw	r14, r22
    1342:	8c 01       	movw	r16, r24
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	e8 16       	cp	r14, r24
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	f8 06       	cpc	r15, r24
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	08 07       	cpc	r16, r24
    1350:	80 e0       	ldi	r24, 0x00	; 0
    1352:	18 07       	cpc	r17, r24
    1354:	58 f4       	brcc	.+22     	; 0x136c <__clzsi2+0x3c>
    1356:	ef ef       	ldi	r30, 0xFF	; 255
    1358:	ee 16       	cp	r14, r30
    135a:	f1 04       	cpc	r15, r1
    135c:	01 05       	cpc	r16, r1
    135e:	11 05       	cpc	r17, r1
    1360:	09 f0       	breq	.+2      	; 0x1364 <__clzsi2+0x34>
    1362:	90 f4       	brcc	.+36     	; 0x1388 <__clzsi2+0x58>
    1364:	80 e0       	ldi	r24, 0x00	; 0
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	dc 01       	movw	r26, r24
    136a:	17 c0       	rjmp	.+46     	; 0x139a <__clzsi2+0x6a>
    136c:	f0 e0       	ldi	r31, 0x00	; 0
    136e:	ef 16       	cp	r14, r31
    1370:	f0 e0       	ldi	r31, 0x00	; 0
    1372:	ff 06       	cpc	r15, r31
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	0f 07       	cpc	r16, r31
    1378:	f1 e0       	ldi	r31, 0x01	; 1
    137a:	1f 07       	cpc	r17, r31
    137c:	50 f4       	brcc	.+20     	; 0x1392 <__clzsi2+0x62>
    137e:	80 e1       	ldi	r24, 0x10	; 16
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	a0 e0       	ldi	r26, 0x00	; 0
    1384:	b0 e0       	ldi	r27, 0x00	; 0
    1386:	09 c0       	rjmp	.+18     	; 0x139a <__clzsi2+0x6a>
    1388:	88 e0       	ldi	r24, 0x08	; 8
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	a0 e0       	ldi	r26, 0x00	; 0
    138e:	b0 e0       	ldi	r27, 0x00	; 0
    1390:	04 c0       	rjmp	.+8      	; 0x139a <__clzsi2+0x6a>
    1392:	88 e1       	ldi	r24, 0x18	; 24
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	a0 e0       	ldi	r26, 0x00	; 0
    1398:	b0 e0       	ldi	r27, 0x00	; 0
    139a:	20 e2       	ldi	r18, 0x20	; 32
    139c:	30 e0       	ldi	r19, 0x00	; 0
    139e:	40 e0       	ldi	r20, 0x00	; 0
    13a0:	50 e0       	ldi	r21, 0x00	; 0
    13a2:	28 1b       	sub	r18, r24
    13a4:	39 0b       	sbc	r19, r25
    13a6:	4a 0b       	sbc	r20, r26
    13a8:	5b 0b       	sbc	r21, r27
    13aa:	57 01       	movw	r10, r14
    13ac:	68 01       	movw	r12, r16
    13ae:	04 c0       	rjmp	.+8      	; 0x13b8 <__clzsi2+0x88>
    13b0:	d6 94       	lsr	r13
    13b2:	c7 94       	ror	r12
    13b4:	b7 94       	ror	r11
    13b6:	a7 94       	ror	r10
    13b8:	8a 95       	dec	r24
    13ba:	d2 f7       	brpl	.-12     	; 0x13b0 <__clzsi2+0x80>
    13bc:	d6 01       	movw	r26, r12
    13be:	c5 01       	movw	r24, r10
    13c0:	8d 55       	subi	r24, 0x5D	; 93
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	fc 01       	movw	r30, r24
    13c6:	80 81       	ld	r24, Z
    13c8:	28 1b       	sub	r18, r24
    13ca:	31 09       	sbc	r19, r1
    13cc:	41 09       	sbc	r20, r1
    13ce:	51 09       	sbc	r21, r1
    13d0:	c9 01       	movw	r24, r18
    13d2:	1f 91       	pop	r17
    13d4:	0f 91       	pop	r16
    13d6:	ff 90       	pop	r15
    13d8:	ef 90       	pop	r14
    13da:	df 90       	pop	r13
    13dc:	cf 90       	pop	r12
    13de:	bf 90       	pop	r11
    13e0:	af 90       	pop	r10
    13e2:	08 95       	ret

000013e4 <__pack_f>:
    13e4:	ef 92       	push	r14
    13e6:	ff 92       	push	r15
    13e8:	0f 93       	push	r16
    13ea:	1f 93       	push	r17
    13ec:	cf 93       	push	r28
    13ee:	df 93       	push	r29
    13f0:	fc 01       	movw	r30, r24
    13f2:	24 81       	ldd	r18, Z+4	; 0x04
    13f4:	35 81       	ldd	r19, Z+5	; 0x05
    13f6:	46 81       	ldd	r20, Z+6	; 0x06
    13f8:	57 81       	ldd	r21, Z+7	; 0x07
    13fa:	61 81       	ldd	r22, Z+1	; 0x01
    13fc:	80 81       	ld	r24, Z
    13fe:	82 30       	cpi	r24, 0x02	; 2
    1400:	20 f4       	brcc	.+8      	; 0x140a <__pack_f+0x26>
    1402:	40 61       	ori	r20, 0x10	; 16
    1404:	ef ef       	ldi	r30, 0xFF	; 255
    1406:	f0 e0       	ldi	r31, 0x00	; 0
    1408:	a3 c0       	rjmp	.+326    	; 0x1550 <__pack_f+0x16c>
    140a:	84 30       	cpi	r24, 0x04	; 4
    140c:	09 f4       	brne	.+2      	; 0x1410 <__pack_f+0x2c>
    140e:	9b c0       	rjmp	.+310    	; 0x1546 <__pack_f+0x162>
    1410:	82 30       	cpi	r24, 0x02	; 2
    1412:	09 f4       	brne	.+2      	; 0x1416 <__pack_f+0x32>
    1414:	92 c0       	rjmp	.+292    	; 0x153a <__pack_f+0x156>
    1416:	21 15       	cp	r18, r1
    1418:	31 05       	cpc	r19, r1
    141a:	41 05       	cpc	r20, r1
    141c:	51 05       	cpc	r21, r1
    141e:	09 f4       	brne	.+2      	; 0x1422 <__pack_f+0x3e>
    1420:	8f c0       	rjmp	.+286    	; 0x1540 <__pack_f+0x15c>
    1422:	02 80       	ldd	r0, Z+2	; 0x02
    1424:	f3 81       	ldd	r31, Z+3	; 0x03
    1426:	e0 2d       	mov	r30, r0
    1428:	8f ef       	ldi	r24, 0xFF	; 255
    142a:	e2 38       	cpi	r30, 0x82	; 130
    142c:	f8 07       	cpc	r31, r24
    142e:	0c f0       	brlt	.+2      	; 0x1432 <__pack_f+0x4e>
    1430:	5a c0       	rjmp	.+180    	; 0x14e6 <__pack_f+0x102>
    1432:	c2 e8       	ldi	r28, 0x82	; 130
    1434:	df ef       	ldi	r29, 0xFF	; 255
    1436:	ce 1b       	sub	r28, r30
    1438:	df 0b       	sbc	r29, r31
    143a:	ca 31       	cpi	r28, 0x1A	; 26
    143c:	d1 05       	cpc	r29, r1
    143e:	6c f5       	brge	.+90     	; 0x149a <__pack_f+0xb6>
    1440:	79 01       	movw	r14, r18
    1442:	8a 01       	movw	r16, r20
    1444:	0c 2e       	mov	r0, r28
    1446:	04 c0       	rjmp	.+8      	; 0x1450 <__pack_f+0x6c>
    1448:	16 95       	lsr	r17
    144a:	07 95       	ror	r16
    144c:	f7 94       	ror	r15
    144e:	e7 94       	ror	r14
    1450:	0a 94       	dec	r0
    1452:	d2 f7       	brpl	.-12     	; 0x1448 <__pack_f+0x64>
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	a0 e0       	ldi	r26, 0x00	; 0
    145a:	b0 e0       	ldi	r27, 0x00	; 0
    145c:	0c 2e       	mov	r0, r28
    145e:	04 c0       	rjmp	.+8      	; 0x1468 <__pack_f+0x84>
    1460:	88 0f       	add	r24, r24
    1462:	99 1f       	adc	r25, r25
    1464:	aa 1f       	adc	r26, r26
    1466:	bb 1f       	adc	r27, r27
    1468:	0a 94       	dec	r0
    146a:	d2 f7       	brpl	.-12     	; 0x1460 <__pack_f+0x7c>
    146c:	01 97       	sbiw	r24, 0x01	; 1
    146e:	a1 09       	sbc	r26, r1
    1470:	b1 09       	sbc	r27, r1
    1472:	82 23       	and	r24, r18
    1474:	93 23       	and	r25, r19
    1476:	a4 23       	and	r26, r20
    1478:	b5 23       	and	r27, r21
    147a:	21 e0       	ldi	r18, 0x01	; 1
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	40 e0       	ldi	r20, 0x00	; 0
    1480:	50 e0       	ldi	r21, 0x00	; 0
    1482:	00 97       	sbiw	r24, 0x00	; 0
    1484:	a1 05       	cpc	r26, r1
    1486:	b1 05       	cpc	r27, r1
    1488:	19 f4       	brne	.+6      	; 0x1490 <__pack_f+0xac>
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	a9 01       	movw	r20, r18
    1490:	2e 29       	or	r18, r14
    1492:	3f 29       	or	r19, r15
    1494:	40 2b       	or	r20, r16
    1496:	51 2b       	or	r21, r17
    1498:	03 c0       	rjmp	.+6      	; 0x14a0 <__pack_f+0xbc>
    149a:	20 e0       	ldi	r18, 0x00	; 0
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	a9 01       	movw	r20, r18
    14a0:	da 01       	movw	r26, r20
    14a2:	c9 01       	movw	r24, r18
    14a4:	8f 77       	andi	r24, 0x7F	; 127
    14a6:	90 70       	andi	r25, 0x00	; 0
    14a8:	a0 70       	andi	r26, 0x00	; 0
    14aa:	b0 70       	andi	r27, 0x00	; 0
    14ac:	80 34       	cpi	r24, 0x40	; 64
    14ae:	91 05       	cpc	r25, r1
    14b0:	a1 05       	cpc	r26, r1
    14b2:	b1 05       	cpc	r27, r1
    14b4:	39 f4       	brne	.+14     	; 0x14c4 <__pack_f+0xe0>
    14b6:	27 ff       	sbrs	r18, 7
    14b8:	09 c0       	rjmp	.+18     	; 0x14cc <__pack_f+0xe8>
    14ba:	20 5c       	subi	r18, 0xC0	; 192
    14bc:	3f 4f       	sbci	r19, 0xFF	; 255
    14be:	4f 4f       	sbci	r20, 0xFF	; 255
    14c0:	5f 4f       	sbci	r21, 0xFF	; 255
    14c2:	04 c0       	rjmp	.+8      	; 0x14cc <__pack_f+0xe8>
    14c4:	21 5c       	subi	r18, 0xC1	; 193
    14c6:	3f 4f       	sbci	r19, 0xFF	; 255
    14c8:	4f 4f       	sbci	r20, 0xFF	; 255
    14ca:	5f 4f       	sbci	r21, 0xFF	; 255
    14cc:	e1 e0       	ldi	r30, 0x01	; 1
    14ce:	f0 e0       	ldi	r31, 0x00	; 0
    14d0:	20 30       	cpi	r18, 0x00	; 0
    14d2:	80 e0       	ldi	r24, 0x00	; 0
    14d4:	38 07       	cpc	r19, r24
    14d6:	80 e0       	ldi	r24, 0x00	; 0
    14d8:	48 07       	cpc	r20, r24
    14da:	80 e4       	ldi	r24, 0x40	; 64
    14dc:	58 07       	cpc	r21, r24
    14de:	28 f5       	brcc	.+74     	; 0x152a <__pack_f+0x146>
    14e0:	e0 e0       	ldi	r30, 0x00	; 0
    14e2:	f0 e0       	ldi	r31, 0x00	; 0
    14e4:	22 c0       	rjmp	.+68     	; 0x152a <__pack_f+0x146>
    14e6:	e0 38       	cpi	r30, 0x80	; 128
    14e8:	f1 05       	cpc	r31, r1
    14ea:	6c f5       	brge	.+90     	; 0x1546 <__pack_f+0x162>
    14ec:	e1 58       	subi	r30, 0x81	; 129
    14ee:	ff 4f       	sbci	r31, 0xFF	; 255
    14f0:	da 01       	movw	r26, r20
    14f2:	c9 01       	movw	r24, r18
    14f4:	8f 77       	andi	r24, 0x7F	; 127
    14f6:	90 70       	andi	r25, 0x00	; 0
    14f8:	a0 70       	andi	r26, 0x00	; 0
    14fa:	b0 70       	andi	r27, 0x00	; 0
    14fc:	80 34       	cpi	r24, 0x40	; 64
    14fe:	91 05       	cpc	r25, r1
    1500:	a1 05       	cpc	r26, r1
    1502:	b1 05       	cpc	r27, r1
    1504:	39 f4       	brne	.+14     	; 0x1514 <__pack_f+0x130>
    1506:	27 ff       	sbrs	r18, 7
    1508:	09 c0       	rjmp	.+18     	; 0x151c <__pack_f+0x138>
    150a:	20 5c       	subi	r18, 0xC0	; 192
    150c:	3f 4f       	sbci	r19, 0xFF	; 255
    150e:	4f 4f       	sbci	r20, 0xFF	; 255
    1510:	5f 4f       	sbci	r21, 0xFF	; 255
    1512:	04 c0       	rjmp	.+8      	; 0x151c <__pack_f+0x138>
    1514:	21 5c       	subi	r18, 0xC1	; 193
    1516:	3f 4f       	sbci	r19, 0xFF	; 255
    1518:	4f 4f       	sbci	r20, 0xFF	; 255
    151a:	5f 4f       	sbci	r21, 0xFF	; 255
    151c:	57 ff       	sbrs	r21, 7
    151e:	05 c0       	rjmp	.+10     	; 0x152a <__pack_f+0x146>
    1520:	56 95       	lsr	r21
    1522:	47 95       	ror	r20
    1524:	37 95       	ror	r19
    1526:	27 95       	ror	r18
    1528:	31 96       	adiw	r30, 0x01	; 1
    152a:	87 e0       	ldi	r24, 0x07	; 7
    152c:	56 95       	lsr	r21
    152e:	47 95       	ror	r20
    1530:	37 95       	ror	r19
    1532:	27 95       	ror	r18
    1534:	8a 95       	dec	r24
    1536:	d1 f7       	brne	.-12     	; 0x152c <__pack_f+0x148>
    1538:	0b c0       	rjmp	.+22     	; 0x1550 <__pack_f+0x16c>
    153a:	e0 e0       	ldi	r30, 0x00	; 0
    153c:	f0 e0       	ldi	r31, 0x00	; 0
    153e:	05 c0       	rjmp	.+10     	; 0x154a <__pack_f+0x166>
    1540:	e0 e0       	ldi	r30, 0x00	; 0
    1542:	f0 e0       	ldi	r31, 0x00	; 0
    1544:	05 c0       	rjmp	.+10     	; 0x1550 <__pack_f+0x16c>
    1546:	ef ef       	ldi	r30, 0xFF	; 255
    1548:	f0 e0       	ldi	r31, 0x00	; 0
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	30 e0       	ldi	r19, 0x00	; 0
    154e:	a9 01       	movw	r20, r18
    1550:	8e 2f       	mov	r24, r30
    1552:	87 95       	ror	r24
    1554:	88 27       	eor	r24, r24
    1556:	87 95       	ror	r24
    1558:	94 2f       	mov	r25, r20
    155a:	9f 77       	andi	r25, 0x7F	; 127
    155c:	67 95       	ror	r22
    155e:	66 27       	eor	r22, r22
    1560:	67 95       	ror	r22
    1562:	e6 95       	lsr	r30
    1564:	e2 2e       	mov	r14, r18
    1566:	a9 2f       	mov	r26, r25
    1568:	a8 2b       	or	r26, r24
    156a:	fe 2f       	mov	r31, r30
    156c:	f6 2b       	or	r31, r22
    156e:	62 2f       	mov	r22, r18
    1570:	73 2f       	mov	r23, r19
    1572:	8a 2f       	mov	r24, r26
    1574:	9f 2f       	mov	r25, r31
    1576:	cd b7       	in	r28, 0x3d	; 61
    1578:	de b7       	in	r29, 0x3e	; 62
    157a:	e6 e0       	ldi	r30, 0x06	; 6
    157c:	11 c1       	rjmp	.+546    	; 0x17a0 <__epilogue_restores__+0x18>

0000157e <__unpack_f>:
    157e:	dc 01       	movw	r26, r24
    1580:	fb 01       	movw	r30, r22
    1582:	2c 91       	ld	r18, X
    1584:	11 96       	adiw	r26, 0x01	; 1
    1586:	3c 91       	ld	r19, X
    1588:	11 97       	sbiw	r26, 0x01	; 1
    158a:	12 96       	adiw	r26, 0x02	; 2
    158c:	8c 91       	ld	r24, X
    158e:	12 97       	sbiw	r26, 0x02	; 2
    1590:	48 2f       	mov	r20, r24
    1592:	4f 77       	andi	r20, 0x7F	; 127
    1594:	50 e0       	ldi	r21, 0x00	; 0
    1596:	98 2f       	mov	r25, r24
    1598:	99 1f       	adc	r25, r25
    159a:	99 27       	eor	r25, r25
    159c:	99 1f       	adc	r25, r25
    159e:	13 96       	adiw	r26, 0x03	; 3
    15a0:	6c 91       	ld	r22, X
    15a2:	13 97       	sbiw	r26, 0x03	; 3
    15a4:	86 2f       	mov	r24, r22
    15a6:	88 0f       	add	r24, r24
    15a8:	89 2b       	or	r24, r25
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	66 1f       	adc	r22, r22
    15ae:	66 27       	eor	r22, r22
    15b0:	66 1f       	adc	r22, r22
    15b2:	61 83       	std	Z+1, r22	; 0x01
    15b4:	00 97       	sbiw	r24, 0x00	; 0
    15b6:	39 f5       	brne	.+78     	; 0x1606 <__unpack_f+0x88>
    15b8:	21 15       	cp	r18, r1
    15ba:	31 05       	cpc	r19, r1
    15bc:	41 05       	cpc	r20, r1
    15be:	51 05       	cpc	r21, r1
    15c0:	11 f4       	brne	.+4      	; 0x15c6 <__unpack_f+0x48>
    15c2:	82 e0       	ldi	r24, 0x02	; 2
    15c4:	29 c0       	rjmp	.+82     	; 0x1618 <__unpack_f+0x9a>
    15c6:	82 e8       	ldi	r24, 0x82	; 130
    15c8:	9f ef       	ldi	r25, 0xFF	; 255
    15ca:	93 83       	std	Z+3, r25	; 0x03
    15cc:	82 83       	std	Z+2, r24	; 0x02
    15ce:	67 e0       	ldi	r22, 0x07	; 7
    15d0:	22 0f       	add	r18, r18
    15d2:	33 1f       	adc	r19, r19
    15d4:	44 1f       	adc	r20, r20
    15d6:	55 1f       	adc	r21, r21
    15d8:	6a 95       	dec	r22
    15da:	d1 f7       	brne	.-12     	; 0x15d0 <__unpack_f+0x52>
    15dc:	83 e0       	ldi	r24, 0x03	; 3
    15de:	80 83       	st	Z, r24
    15e0:	09 c0       	rjmp	.+18     	; 0x15f4 <__unpack_f+0x76>
    15e2:	22 0f       	add	r18, r18
    15e4:	33 1f       	adc	r19, r19
    15e6:	44 1f       	adc	r20, r20
    15e8:	55 1f       	adc	r21, r21
    15ea:	82 81       	ldd	r24, Z+2	; 0x02
    15ec:	93 81       	ldd	r25, Z+3	; 0x03
    15ee:	01 97       	sbiw	r24, 0x01	; 1
    15f0:	93 83       	std	Z+3, r25	; 0x03
    15f2:	82 83       	std	Z+2, r24	; 0x02
    15f4:	20 30       	cpi	r18, 0x00	; 0
    15f6:	80 e0       	ldi	r24, 0x00	; 0
    15f8:	38 07       	cpc	r19, r24
    15fa:	80 e0       	ldi	r24, 0x00	; 0
    15fc:	48 07       	cpc	r20, r24
    15fe:	80 e4       	ldi	r24, 0x40	; 64
    1600:	58 07       	cpc	r21, r24
    1602:	78 f3       	brcs	.-34     	; 0x15e2 <__unpack_f+0x64>
    1604:	20 c0       	rjmp	.+64     	; 0x1646 <__unpack_f+0xc8>
    1606:	8f 3f       	cpi	r24, 0xFF	; 255
    1608:	91 05       	cpc	r25, r1
    160a:	79 f4       	brne	.+30     	; 0x162a <__unpack_f+0xac>
    160c:	21 15       	cp	r18, r1
    160e:	31 05       	cpc	r19, r1
    1610:	41 05       	cpc	r20, r1
    1612:	51 05       	cpc	r21, r1
    1614:	19 f4       	brne	.+6      	; 0x161c <__unpack_f+0x9e>
    1616:	84 e0       	ldi	r24, 0x04	; 4
    1618:	80 83       	st	Z, r24
    161a:	08 95       	ret
    161c:	44 ff       	sbrs	r20, 4
    161e:	03 c0       	rjmp	.+6      	; 0x1626 <__unpack_f+0xa8>
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	80 83       	st	Z, r24
    1624:	10 c0       	rjmp	.+32     	; 0x1646 <__unpack_f+0xc8>
    1626:	10 82       	st	Z, r1
    1628:	0e c0       	rjmp	.+28     	; 0x1646 <__unpack_f+0xc8>
    162a:	8f 57       	subi	r24, 0x7F	; 127
    162c:	90 40       	sbci	r25, 0x00	; 0
    162e:	93 83       	std	Z+3, r25	; 0x03
    1630:	82 83       	std	Z+2, r24	; 0x02
    1632:	83 e0       	ldi	r24, 0x03	; 3
    1634:	80 83       	st	Z, r24
    1636:	87 e0       	ldi	r24, 0x07	; 7
    1638:	22 0f       	add	r18, r18
    163a:	33 1f       	adc	r19, r19
    163c:	44 1f       	adc	r20, r20
    163e:	55 1f       	adc	r21, r21
    1640:	8a 95       	dec	r24
    1642:	d1 f7       	brne	.-12     	; 0x1638 <__unpack_f+0xba>
    1644:	50 64       	ori	r21, 0x40	; 64
    1646:	24 83       	std	Z+4, r18	; 0x04
    1648:	35 83       	std	Z+5, r19	; 0x05
    164a:	46 83       	std	Z+6, r20	; 0x06
    164c:	57 83       	std	Z+7, r21	; 0x07
    164e:	08 95       	ret

00001650 <__fpcmp_parts_f>:
    1650:	fc 01       	movw	r30, r24
    1652:	db 01       	movw	r26, r22
    1654:	90 81       	ld	r25, Z
    1656:	92 30       	cpi	r25, 0x02	; 2
    1658:	08 f4       	brcc	.+2      	; 0x165c <__fpcmp_parts_f+0xc>
    165a:	49 c0       	rjmp	.+146    	; 0x16ee <__fpcmp_parts_f+0x9e>
    165c:	8c 91       	ld	r24, X
    165e:	82 30       	cpi	r24, 0x02	; 2
    1660:	08 f4       	brcc	.+2      	; 0x1664 <__fpcmp_parts_f+0x14>
    1662:	45 c0       	rjmp	.+138    	; 0x16ee <__fpcmp_parts_f+0x9e>
    1664:	94 30       	cpi	r25, 0x04	; 4
    1666:	51 f4       	brne	.+20     	; 0x167c <__fpcmp_parts_f+0x2c>
    1668:	61 81       	ldd	r22, Z+1	; 0x01
    166a:	84 30       	cpi	r24, 0x04	; 4
    166c:	b1 f5       	brne	.+108    	; 0x16da <__fpcmp_parts_f+0x8a>
    166e:	11 96       	adiw	r26, 0x01	; 1
    1670:	2c 91       	ld	r18, X
    1672:	11 97       	sbiw	r26, 0x01	; 1
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	26 1b       	sub	r18, r22
    1678:	31 09       	sbc	r19, r1
    167a:	41 c0       	rjmp	.+130    	; 0x16fe <__fpcmp_parts_f+0xae>
    167c:	84 30       	cpi	r24, 0x04	; 4
    167e:	21 f0       	breq	.+8      	; 0x1688 <__fpcmp_parts_f+0x38>
    1680:	92 30       	cpi	r25, 0x02	; 2
    1682:	41 f4       	brne	.+16     	; 0x1694 <__fpcmp_parts_f+0x44>
    1684:	82 30       	cpi	r24, 0x02	; 2
    1686:	b1 f1       	breq	.+108    	; 0x16f4 <__fpcmp_parts_f+0xa4>
    1688:	11 96       	adiw	r26, 0x01	; 1
    168a:	8c 91       	ld	r24, X
    168c:	11 97       	sbiw	r26, 0x01	; 1
    168e:	88 23       	and	r24, r24
    1690:	a1 f1       	breq	.+104    	; 0x16fa <__fpcmp_parts_f+0xaa>
    1692:	2d c0       	rjmp	.+90     	; 0x16ee <__fpcmp_parts_f+0x9e>
    1694:	61 81       	ldd	r22, Z+1	; 0x01
    1696:	82 30       	cpi	r24, 0x02	; 2
    1698:	01 f1       	breq	.+64     	; 0x16da <__fpcmp_parts_f+0x8a>
    169a:	11 96       	adiw	r26, 0x01	; 1
    169c:	8c 91       	ld	r24, X
    169e:	11 97       	sbiw	r26, 0x01	; 1
    16a0:	68 17       	cp	r22, r24
    16a2:	d9 f4       	brne	.+54     	; 0x16da <__fpcmp_parts_f+0x8a>
    16a4:	22 81       	ldd	r18, Z+2	; 0x02
    16a6:	33 81       	ldd	r19, Z+3	; 0x03
    16a8:	12 96       	adiw	r26, 0x02	; 2
    16aa:	8d 91       	ld	r24, X+
    16ac:	9c 91       	ld	r25, X
    16ae:	13 97       	sbiw	r26, 0x03	; 3
    16b0:	82 17       	cp	r24, r18
    16b2:	93 07       	cpc	r25, r19
    16b4:	94 f0       	brlt	.+36     	; 0x16da <__fpcmp_parts_f+0x8a>
    16b6:	28 17       	cp	r18, r24
    16b8:	39 07       	cpc	r19, r25
    16ba:	bc f0       	brlt	.+46     	; 0x16ea <__fpcmp_parts_f+0x9a>
    16bc:	24 81       	ldd	r18, Z+4	; 0x04
    16be:	35 81       	ldd	r19, Z+5	; 0x05
    16c0:	46 81       	ldd	r20, Z+6	; 0x06
    16c2:	57 81       	ldd	r21, Z+7	; 0x07
    16c4:	14 96       	adiw	r26, 0x04	; 4
    16c6:	8d 91       	ld	r24, X+
    16c8:	9d 91       	ld	r25, X+
    16ca:	0d 90       	ld	r0, X+
    16cc:	bc 91       	ld	r27, X
    16ce:	a0 2d       	mov	r26, r0
    16d0:	82 17       	cp	r24, r18
    16d2:	93 07       	cpc	r25, r19
    16d4:	a4 07       	cpc	r26, r20
    16d6:	b5 07       	cpc	r27, r21
    16d8:	18 f4       	brcc	.+6      	; 0x16e0 <__fpcmp_parts_f+0x90>
    16da:	66 23       	and	r22, r22
    16dc:	41 f0       	breq	.+16     	; 0x16ee <__fpcmp_parts_f+0x9e>
    16de:	0d c0       	rjmp	.+26     	; 0x16fa <__fpcmp_parts_f+0xaa>
    16e0:	28 17       	cp	r18, r24
    16e2:	39 07       	cpc	r19, r25
    16e4:	4a 07       	cpc	r20, r26
    16e6:	5b 07       	cpc	r21, r27
    16e8:	28 f4       	brcc	.+10     	; 0x16f4 <__fpcmp_parts_f+0xa4>
    16ea:	66 23       	and	r22, r22
    16ec:	31 f0       	breq	.+12     	; 0x16fa <__fpcmp_parts_f+0xaa>
    16ee:	21 e0       	ldi	r18, 0x01	; 1
    16f0:	30 e0       	ldi	r19, 0x00	; 0
    16f2:	05 c0       	rjmp	.+10     	; 0x16fe <__fpcmp_parts_f+0xae>
    16f4:	20 e0       	ldi	r18, 0x00	; 0
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	02 c0       	rjmp	.+4      	; 0x16fe <__fpcmp_parts_f+0xae>
    16fa:	2f ef       	ldi	r18, 0xFF	; 255
    16fc:	3f ef       	ldi	r19, 0xFF	; 255
    16fe:	c9 01       	movw	r24, r18
    1700:	08 95       	ret

00001702 <__divmodhi4>:
    1702:	97 fb       	bst	r25, 7
    1704:	09 2e       	mov	r0, r25
    1706:	07 26       	eor	r0, r23
    1708:	0a d0       	rcall	.+20     	; 0x171e <__divmodhi4_neg1>
    170a:	77 fd       	sbrc	r23, 7
    170c:	04 d0       	rcall	.+8      	; 0x1716 <__divmodhi4_neg2>
    170e:	0c d0       	rcall	.+24     	; 0x1728 <__udivmodhi4>
    1710:	06 d0       	rcall	.+12     	; 0x171e <__divmodhi4_neg1>
    1712:	00 20       	and	r0, r0
    1714:	1a f4       	brpl	.+6      	; 0x171c <__divmodhi4_exit>

00001716 <__divmodhi4_neg2>:
    1716:	70 95       	com	r23
    1718:	61 95       	neg	r22
    171a:	7f 4f       	sbci	r23, 0xFF	; 255

0000171c <__divmodhi4_exit>:
    171c:	08 95       	ret

0000171e <__divmodhi4_neg1>:
    171e:	f6 f7       	brtc	.-4      	; 0x171c <__divmodhi4_exit>
    1720:	90 95       	com	r25
    1722:	81 95       	neg	r24
    1724:	9f 4f       	sbci	r25, 0xFF	; 255
    1726:	08 95       	ret

00001728 <__udivmodhi4>:
    1728:	aa 1b       	sub	r26, r26
    172a:	bb 1b       	sub	r27, r27
    172c:	51 e1       	ldi	r21, 0x11	; 17
    172e:	07 c0       	rjmp	.+14     	; 0x173e <__udivmodhi4_ep>

00001730 <__udivmodhi4_loop>:
    1730:	aa 1f       	adc	r26, r26
    1732:	bb 1f       	adc	r27, r27
    1734:	a6 17       	cp	r26, r22
    1736:	b7 07       	cpc	r27, r23
    1738:	10 f0       	brcs	.+4      	; 0x173e <__udivmodhi4_ep>
    173a:	a6 1b       	sub	r26, r22
    173c:	b7 0b       	sbc	r27, r23

0000173e <__udivmodhi4_ep>:
    173e:	88 1f       	adc	r24, r24
    1740:	99 1f       	adc	r25, r25
    1742:	5a 95       	dec	r21
    1744:	a9 f7       	brne	.-22     	; 0x1730 <__udivmodhi4_loop>
    1746:	80 95       	com	r24
    1748:	90 95       	com	r25
    174a:	bc 01       	movw	r22, r24
    174c:	cd 01       	movw	r24, r26
    174e:	08 95       	ret

00001750 <__prologue_saves__>:
    1750:	2f 92       	push	r2
    1752:	3f 92       	push	r3
    1754:	4f 92       	push	r4
    1756:	5f 92       	push	r5
    1758:	6f 92       	push	r6
    175a:	7f 92       	push	r7
    175c:	8f 92       	push	r8
    175e:	9f 92       	push	r9
    1760:	af 92       	push	r10
    1762:	bf 92       	push	r11
    1764:	cf 92       	push	r12
    1766:	df 92       	push	r13
    1768:	ef 92       	push	r14
    176a:	ff 92       	push	r15
    176c:	0f 93       	push	r16
    176e:	1f 93       	push	r17
    1770:	cf 93       	push	r28
    1772:	df 93       	push	r29
    1774:	cd b7       	in	r28, 0x3d	; 61
    1776:	de b7       	in	r29, 0x3e	; 62
    1778:	ca 1b       	sub	r28, r26
    177a:	db 0b       	sbc	r29, r27
    177c:	0f b6       	in	r0, 0x3f	; 63
    177e:	f8 94       	cli
    1780:	de bf       	out	0x3e, r29	; 62
    1782:	0f be       	out	0x3f, r0	; 63
    1784:	cd bf       	out	0x3d, r28	; 61
    1786:	09 94       	ijmp

00001788 <__epilogue_restores__>:
    1788:	2a 88       	ldd	r2, Y+18	; 0x12
    178a:	39 88       	ldd	r3, Y+17	; 0x11
    178c:	48 88       	ldd	r4, Y+16	; 0x10
    178e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1790:	6e 84       	ldd	r6, Y+14	; 0x0e
    1792:	7d 84       	ldd	r7, Y+13	; 0x0d
    1794:	8c 84       	ldd	r8, Y+12	; 0x0c
    1796:	9b 84       	ldd	r9, Y+11	; 0x0b
    1798:	aa 84       	ldd	r10, Y+10	; 0x0a
    179a:	b9 84       	ldd	r11, Y+9	; 0x09
    179c:	c8 84       	ldd	r12, Y+8	; 0x08
    179e:	df 80       	ldd	r13, Y+7	; 0x07
    17a0:	ee 80       	ldd	r14, Y+6	; 0x06
    17a2:	fd 80       	ldd	r15, Y+5	; 0x05
    17a4:	0c 81       	ldd	r16, Y+4	; 0x04
    17a6:	1b 81       	ldd	r17, Y+3	; 0x03
    17a8:	aa 81       	ldd	r26, Y+2	; 0x02
    17aa:	b9 81       	ldd	r27, Y+1	; 0x01
    17ac:	ce 0f       	add	r28, r30
    17ae:	d1 1d       	adc	r29, r1
    17b0:	0f b6       	in	r0, 0x3f	; 63
    17b2:	f8 94       	cli
    17b4:	de bf       	out	0x3e, r29	; 62
    17b6:	0f be       	out	0x3f, r0	; 63
    17b8:	cd bf       	out	0x3d, r28	; 61
    17ba:	ed 01       	movw	r28, r26
    17bc:	08 95       	ret

000017be <dtostrf>:
    17be:	ef 92       	push	r14
    17c0:	ff 92       	push	r15
    17c2:	0f 93       	push	r16
    17c4:	1f 93       	push	r17
    17c6:	32 2f       	mov	r19, r18
    17c8:	f0 2e       	mov	r15, r16
    17ca:	47 ff       	sbrs	r20, 7
    17cc:	02 c0       	rjmp	.+4      	; 0x17d2 <dtostrf+0x14>
    17ce:	a4 e1       	ldi	r26, 0x14	; 20
    17d0:	01 c0       	rjmp	.+2      	; 0x17d4 <dtostrf+0x16>
    17d2:	a4 e0       	ldi	r26, 0x04	; 4
    17d4:	e4 2f       	mov	r30, r20
    17d6:	ff 27       	eor	r31, r31
    17d8:	e7 fd       	sbrc	r30, 7
    17da:	f0 95       	com	r31
    17dc:	f7 ff       	sbrs	r31, 7
    17de:	03 c0       	rjmp	.+6      	; 0x17e6 <dtostrf+0x28>
    17e0:	f0 95       	com	r31
    17e2:	e1 95       	neg	r30
    17e4:	ff 4f       	sbci	r31, 0xFF	; 255
    17e6:	4f 2d       	mov	r20, r15
    17e8:	51 2f       	mov	r21, r17
    17ea:	2e 2f       	mov	r18, r30
    17ec:	03 2f       	mov	r16, r19
    17ee:	ea 2e       	mov	r14, r26
    17f0:	07 d0       	rcall	.+14     	; 0x1800 <dtoa_prf>
    17f2:	8f 2d       	mov	r24, r15
    17f4:	91 2f       	mov	r25, r17
    17f6:	1f 91       	pop	r17
    17f8:	0f 91       	pop	r16
    17fa:	ff 90       	pop	r15
    17fc:	ef 90       	pop	r14
    17fe:	08 95       	ret

00001800 <dtoa_prf>:
    1800:	a9 e0       	ldi	r26, 0x09	; 9
    1802:	b0 e0       	ldi	r27, 0x00	; 0
    1804:	e5 e0       	ldi	r30, 0x05	; 5
    1806:	fc e0       	ldi	r31, 0x0C	; 12
    1808:	ab cf       	rjmp	.-170    	; 0x1760 <__prologue_saves__+0x10>
    180a:	6a 01       	movw	r12, r20
    180c:	f2 2e       	mov	r15, r18
    180e:	10 2f       	mov	r17, r16
    1810:	0c 33       	cpi	r16, 0x3C	; 60
    1812:	18 f4       	brcc	.+6      	; 0x181a <dtoa_prf+0x1a>
    1814:	b0 2e       	mov	r11, r16
    1816:	b3 94       	inc	r11
    1818:	02 c0       	rjmp	.+4      	; 0x181e <dtoa_prf+0x1e>
    181a:	ec e3       	ldi	r30, 0x3C	; 60
    181c:	be 2e       	mov	r11, r30
    181e:	ae 01       	movw	r20, r28
    1820:	4f 5f       	subi	r20, 0xFF	; 255
    1822:	5f 4f       	sbci	r21, 0xFF	; 255
    1824:	27 e0       	ldi	r18, 0x07	; 7
    1826:	0b 2d       	mov	r16, r11
    1828:	3f d1       	rcall	.+638    	; 0x1aa8 <__ftoa_engine>
    182a:	29 81       	ldd	r18, Y+1	; 0x01
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	a9 01       	movw	r20, r18
    1830:	49 70       	andi	r20, 0x09	; 9
    1832:	50 70       	andi	r21, 0x00	; 0
    1834:	41 30       	cpi	r20, 0x01	; 1
    1836:	51 05       	cpc	r21, r1
    1838:	31 f0       	breq	.+12     	; 0x1846 <dtoa_prf+0x46>
    183a:	e1 fc       	sbrc	r14, 1
    183c:	06 c0       	rjmp	.+12     	; 0x184a <dtoa_prf+0x4a>
    183e:	e0 fe       	sbrs	r14, 0
    1840:	06 c0       	rjmp	.+12     	; 0x184e <dtoa_prf+0x4e>
    1842:	e0 e2       	ldi	r30, 0x20	; 32
    1844:	05 c0       	rjmp	.+10     	; 0x1850 <dtoa_prf+0x50>
    1846:	ed e2       	ldi	r30, 0x2D	; 45
    1848:	03 c0       	rjmp	.+6      	; 0x1850 <dtoa_prf+0x50>
    184a:	eb e2       	ldi	r30, 0x2B	; 43
    184c:	01 c0       	rjmp	.+2      	; 0x1850 <dtoa_prf+0x50>
    184e:	e0 e0       	ldi	r30, 0x00	; 0
    1850:	23 ff       	sbrs	r18, 3
    1852:	37 c0       	rjmp	.+110    	; 0x18c2 <dtoa_prf+0xc2>
    1854:	ee 23       	and	r30, r30
    1856:	11 f0       	breq	.+4      	; 0x185c <dtoa_prf+0x5c>
    1858:	84 e0       	ldi	r24, 0x04	; 4
    185a:	01 c0       	rjmp	.+2      	; 0x185e <dtoa_prf+0x5e>
    185c:	83 e0       	ldi	r24, 0x03	; 3
    185e:	8f 15       	cp	r24, r15
    1860:	18 f4       	brcc	.+6      	; 0x1868 <dtoa_prf+0x68>
    1862:	f8 1a       	sub	r15, r24
    1864:	8f 2d       	mov	r24, r15
    1866:	01 c0       	rjmp	.+2      	; 0x186a <dtoa_prf+0x6a>
    1868:	80 e0       	ldi	r24, 0x00	; 0
    186a:	e4 fc       	sbrc	r14, 4
    186c:	0b c0       	rjmp	.+22     	; 0x1884 <dtoa_prf+0x84>
    186e:	98 2f       	mov	r25, r24
    1870:	d6 01       	movw	r26, r12
    1872:	20 e2       	ldi	r18, 0x20	; 32
    1874:	02 c0       	rjmp	.+4      	; 0x187a <dtoa_prf+0x7a>
    1876:	2d 93       	st	X+, r18
    1878:	91 50       	subi	r25, 0x01	; 1
    187a:	99 23       	and	r25, r25
    187c:	e1 f7       	brne	.-8      	; 0x1876 <dtoa_prf+0x76>
    187e:	c8 0e       	add	r12, r24
    1880:	d1 1c       	adc	r13, r1
    1882:	80 e0       	ldi	r24, 0x00	; 0
    1884:	ee 23       	and	r30, r30
    1886:	19 f0       	breq	.+6      	; 0x188e <dtoa_prf+0x8e>
    1888:	d6 01       	movw	r26, r12
    188a:	ed 93       	st	X+, r30
    188c:	6d 01       	movw	r12, r26
    188e:	f6 01       	movw	r30, r12
    1890:	31 96       	adiw	r30, 0x01	; 1
    1892:	e2 fe       	sbrs	r14, 2
    1894:	05 c0       	rjmp	.+10     	; 0x18a0 <dtoa_prf+0xa0>
    1896:	9e e4       	ldi	r25, 0x4E	; 78
    1898:	d6 01       	movw	r26, r12
    189a:	9c 93       	st	X, r25
    189c:	21 e4       	ldi	r18, 0x41	; 65
    189e:	04 c0       	rjmp	.+8      	; 0x18a8 <dtoa_prf+0xa8>
    18a0:	9e e6       	ldi	r25, 0x6E	; 110
    18a2:	d6 01       	movw	r26, r12
    18a4:	9c 93       	st	X, r25
    18a6:	21 e6       	ldi	r18, 0x61	; 97
    18a8:	11 96       	adiw	r26, 0x01	; 1
    18aa:	2c 93       	st	X, r18
    18ac:	91 83       	std	Z+1, r25	; 0x01
    18ae:	32 96       	adiw	r30, 0x02	; 2
    18b0:	98 2f       	mov	r25, r24
    18b2:	df 01       	movw	r26, r30
    18b4:	20 e2       	ldi	r18, 0x20	; 32
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <dtoa_prf+0xbc>
    18b8:	2d 93       	st	X+, r18
    18ba:	91 50       	subi	r25, 0x01	; 1
    18bc:	99 23       	and	r25, r25
    18be:	e1 f7       	brne	.-8      	; 0x18b8 <dtoa_prf+0xb8>
    18c0:	3d c0       	rjmp	.+122    	; 0x193c <dtoa_prf+0x13c>
    18c2:	22 ff       	sbrs	r18, 2
    18c4:	41 c0       	rjmp	.+130    	; 0x1948 <dtoa_prf+0x148>
    18c6:	ee 23       	and	r30, r30
    18c8:	11 f0       	breq	.+4      	; 0x18ce <dtoa_prf+0xce>
    18ca:	84 e0       	ldi	r24, 0x04	; 4
    18cc:	01 c0       	rjmp	.+2      	; 0x18d0 <dtoa_prf+0xd0>
    18ce:	83 e0       	ldi	r24, 0x03	; 3
    18d0:	8f 15       	cp	r24, r15
    18d2:	18 f4       	brcc	.+6      	; 0x18da <dtoa_prf+0xda>
    18d4:	f8 1a       	sub	r15, r24
    18d6:	8f 2d       	mov	r24, r15
    18d8:	01 c0       	rjmp	.+2      	; 0x18dc <dtoa_prf+0xdc>
    18da:	80 e0       	ldi	r24, 0x00	; 0
    18dc:	e4 fc       	sbrc	r14, 4
    18de:	0b c0       	rjmp	.+22     	; 0x18f6 <dtoa_prf+0xf6>
    18e0:	98 2f       	mov	r25, r24
    18e2:	d6 01       	movw	r26, r12
    18e4:	20 e2       	ldi	r18, 0x20	; 32
    18e6:	02 c0       	rjmp	.+4      	; 0x18ec <dtoa_prf+0xec>
    18e8:	2d 93       	st	X+, r18
    18ea:	91 50       	subi	r25, 0x01	; 1
    18ec:	99 23       	and	r25, r25
    18ee:	e1 f7       	brne	.-8      	; 0x18e8 <dtoa_prf+0xe8>
    18f0:	c8 0e       	add	r12, r24
    18f2:	d1 1c       	adc	r13, r1
    18f4:	80 e0       	ldi	r24, 0x00	; 0
    18f6:	ee 23       	and	r30, r30
    18f8:	19 f0       	breq	.+6      	; 0x1900 <dtoa_prf+0x100>
    18fa:	d6 01       	movw	r26, r12
    18fc:	ed 93       	st	X+, r30
    18fe:	6d 01       	movw	r12, r26
    1900:	f6 01       	movw	r30, r12
    1902:	31 96       	adiw	r30, 0x01	; 1
    1904:	e2 fe       	sbrs	r14, 2
    1906:	09 c0       	rjmp	.+18     	; 0x191a <dtoa_prf+0x11a>
    1908:	99 e4       	ldi	r25, 0x49	; 73
    190a:	d6 01       	movw	r26, r12
    190c:	9c 93       	st	X, r25
    190e:	9e e4       	ldi	r25, 0x4E	; 78
    1910:	11 96       	adiw	r26, 0x01	; 1
    1912:	9c 93       	st	X, r25
    1914:	11 97       	sbiw	r26, 0x01	; 1
    1916:	96 e4       	ldi	r25, 0x46	; 70
    1918:	07 c0       	rjmp	.+14     	; 0x1928 <dtoa_prf+0x128>
    191a:	99 e6       	ldi	r25, 0x69	; 105
    191c:	d6 01       	movw	r26, r12
    191e:	9c 93       	st	X, r25
    1920:	9e e6       	ldi	r25, 0x6E	; 110
    1922:	11 96       	adiw	r26, 0x01	; 1
    1924:	9c 93       	st	X, r25
    1926:	96 e6       	ldi	r25, 0x66	; 102
    1928:	91 83       	std	Z+1, r25	; 0x01
    192a:	32 96       	adiw	r30, 0x02	; 2
    192c:	98 2f       	mov	r25, r24
    192e:	df 01       	movw	r26, r30
    1930:	20 e2       	ldi	r18, 0x20	; 32
    1932:	02 c0       	rjmp	.+4      	; 0x1938 <dtoa_prf+0x138>
    1934:	2d 93       	st	X+, r18
    1936:	91 50       	subi	r25, 0x01	; 1
    1938:	99 23       	and	r25, r25
    193a:	e1 f7       	brne	.-8      	; 0x1934 <dtoa_prf+0x134>
    193c:	e8 0f       	add	r30, r24
    193e:	f1 1d       	adc	r31, r1
    1940:	10 82       	st	Z, r1
    1942:	2e ef       	ldi	r18, 0xFE	; 254
    1944:	3f ef       	ldi	r19, 0xFF	; 255
    1946:	ac c0       	rjmp	.+344    	; 0x1aa0 <dtoa_prf+0x2a0>
    1948:	41 e0       	ldi	r20, 0x01	; 1
    194a:	50 e0       	ldi	r21, 0x00	; 0
    194c:	ee 23       	and	r30, r30
    194e:	11 f4       	brne	.+4      	; 0x1954 <dtoa_prf+0x154>
    1950:	40 e0       	ldi	r20, 0x00	; 0
    1952:	50 e0       	ldi	r21, 0x00	; 0
    1954:	18 16       	cp	r1, r24
    1956:	19 06       	cpc	r1, r25
    1958:	24 f4       	brge	.+8      	; 0x1962 <dtoa_prf+0x162>
    195a:	bc 01       	movw	r22, r24
    195c:	6f 5f       	subi	r22, 0xFF	; 255
    195e:	7f 4f       	sbci	r23, 0xFF	; 255
    1960:	02 c0       	rjmp	.+4      	; 0x1966 <dtoa_prf+0x166>
    1962:	61 e0       	ldi	r22, 0x01	; 1
    1964:	70 e0       	ldi	r23, 0x00	; 0
    1966:	64 0f       	add	r22, r20
    1968:	75 1f       	adc	r23, r21
    196a:	11 23       	and	r17, r17
    196c:	29 f0       	breq	.+10     	; 0x1978 <dtoa_prf+0x178>
    196e:	41 2f       	mov	r20, r17
    1970:	50 e0       	ldi	r21, 0x00	; 0
    1972:	4f 5f       	subi	r20, 0xFF	; 255
    1974:	5f 4f       	sbci	r21, 0xFF	; 255
    1976:	02 c0       	rjmp	.+4      	; 0x197c <dtoa_prf+0x17c>
    1978:	40 e0       	ldi	r20, 0x00	; 0
    197a:	50 e0       	ldi	r21, 0x00	; 0
    197c:	46 0f       	add	r20, r22
    197e:	57 1f       	adc	r21, r23
    1980:	6f 2d       	mov	r22, r15
    1982:	70 e0       	ldi	r23, 0x00	; 0
    1984:	46 17       	cp	r20, r22
    1986:	57 07       	cpc	r21, r23
    1988:	1c f4       	brge	.+6      	; 0x1990 <dtoa_prf+0x190>
    198a:	0f 2d       	mov	r16, r15
    198c:	04 1b       	sub	r16, r20
    198e:	01 c0       	rjmp	.+2      	; 0x1992 <dtoa_prf+0x192>
    1990:	00 e0       	ldi	r16, 0x00	; 0
    1992:	ff 24       	eor	r15, r15
    1994:	a7 01       	movw	r20, r14
    1996:	40 71       	andi	r20, 0x10	; 16
    1998:	50 70       	andi	r21, 0x00	; 0
    199a:	e4 fc       	sbrc	r14, 4
    199c:	0d c0       	rjmp	.+26     	; 0x19b8 <dtoa_prf+0x1b8>
    199e:	e3 fc       	sbrc	r14, 3
    19a0:	0b c0       	rjmp	.+22     	; 0x19b8 <dtoa_prf+0x1b8>
    19a2:	60 2f       	mov	r22, r16
    19a4:	d6 01       	movw	r26, r12
    19a6:	70 e2       	ldi	r23, 0x20	; 32
    19a8:	02 c0       	rjmp	.+4      	; 0x19ae <dtoa_prf+0x1ae>
    19aa:	7d 93       	st	X+, r23
    19ac:	61 50       	subi	r22, 0x01	; 1
    19ae:	66 23       	and	r22, r22
    19b0:	e1 f7       	brne	.-8      	; 0x19aa <dtoa_prf+0x1aa>
    19b2:	c0 0e       	add	r12, r16
    19b4:	d1 1c       	adc	r13, r1
    19b6:	00 e0       	ldi	r16, 0x00	; 0
    19b8:	ee 23       	and	r30, r30
    19ba:	19 f0       	breq	.+6      	; 0x19c2 <dtoa_prf+0x1c2>
    19bc:	d6 01       	movw	r26, r12
    19be:	ed 93       	st	X+, r30
    19c0:	6d 01       	movw	r12, r26
    19c2:	41 15       	cp	r20, r1
    19c4:	51 05       	cpc	r21, r1
    19c6:	59 f4       	brne	.+22     	; 0x19de <dtoa_prf+0x1de>
    19c8:	40 2f       	mov	r20, r16
    19ca:	f6 01       	movw	r30, r12
    19cc:	50 e3       	ldi	r21, 0x30	; 48
    19ce:	02 c0       	rjmp	.+4      	; 0x19d4 <dtoa_prf+0x1d4>
    19d0:	51 93       	st	Z+, r21
    19d2:	41 50       	subi	r20, 0x01	; 1
    19d4:	44 23       	and	r20, r20
    19d6:	e1 f7       	brne	.-8      	; 0x19d0 <dtoa_prf+0x1d0>
    19d8:	c0 0e       	add	r12, r16
    19da:	d1 1c       	adc	r13, r1
    19dc:	00 e0       	ldi	r16, 0x00	; 0
    19de:	b8 0e       	add	r11, r24
    19e0:	fa 80       	ldd	r15, Y+2	; 0x02
    19e2:	a9 01       	movw	r20, r18
    19e4:	40 71       	andi	r20, 0x10	; 16
    19e6:	50 70       	andi	r21, 0x00	; 0
    19e8:	24 ff       	sbrs	r18, 4
    19ea:	04 c0       	rjmp	.+8      	; 0x19f4 <dtoa_prf+0x1f4>
    19ec:	bf 2d       	mov	r27, r15
    19ee:	b1 33       	cpi	r27, 0x31	; 49
    19f0:	09 f4       	brne	.+2      	; 0x19f4 <dtoa_prf+0x1f4>
    19f2:	ba 94       	dec	r11
    19f4:	1b 14       	cp	r1, r11
    19f6:	2c f4       	brge	.+10     	; 0x1a02 <dtoa_prf+0x202>
    19f8:	ab 2d       	mov	r26, r11
    19fa:	a9 30       	cpi	r26, 0x09	; 9
    19fc:	18 f0       	brcs	.+6      	; 0x1a04 <dtoa_prf+0x204>
    19fe:	a8 e0       	ldi	r26, 0x08	; 8
    1a00:	01 c0       	rjmp	.+2      	; 0x1a04 <dtoa_prf+0x204>
    1a02:	a1 e0       	ldi	r26, 0x01	; 1
    1a04:	9c 01       	movw	r18, r24
    1a06:	97 ff       	sbrs	r25, 7
    1a08:	02 c0       	rjmp	.+4      	; 0x1a0e <dtoa_prf+0x20e>
    1a0a:	20 e0       	ldi	r18, 0x00	; 0
    1a0c:	30 e0       	ldi	r19, 0x00	; 0
    1a0e:	bc 01       	movw	r22, r24
    1a10:	6f 5f       	subi	r22, 0xFF	; 255
    1a12:	7f 4f       	sbci	r23, 0xFF	; 255
    1a14:	62 1b       	sub	r22, r18
    1a16:	73 0b       	sbc	r23, r19
    1a18:	fe 01       	movw	r30, r28
    1a1a:	31 96       	adiw	r30, 0x01	; 1
    1a1c:	e6 0f       	add	r30, r22
    1a1e:	f7 1f       	adc	r31, r23
    1a20:	6e e2       	ldi	r22, 0x2E	; 46
    1a22:	e6 2e       	mov	r14, r22
    1a24:	bc 01       	movw	r22, r24
    1a26:	6a 1b       	sub	r22, r26
    1a28:	71 09       	sbc	r23, r1
    1a2a:	a1 2f       	mov	r26, r17
    1a2c:	b0 e0       	ldi	r27, 0x00	; 0
    1a2e:	aa 24       	eor	r10, r10
    1a30:	bb 24       	eor	r11, r11
    1a32:	aa 1a       	sub	r10, r26
    1a34:	bb 0a       	sbc	r11, r27
    1a36:	1f ef       	ldi	r17, 0xFF	; 255
    1a38:	2f 3f       	cpi	r18, 0xFF	; 255
    1a3a:	31 07       	cpc	r19, r17
    1a3c:	19 f4       	brne	.+6      	; 0x1a44 <dtoa_prf+0x244>
    1a3e:	d6 01       	movw	r26, r12
    1a40:	ed 92       	st	X+, r14
    1a42:	6d 01       	movw	r12, r26
    1a44:	82 17       	cp	r24, r18
    1a46:	93 07       	cpc	r25, r19
    1a48:	2c f0       	brlt	.+10     	; 0x1a54 <dtoa_prf+0x254>
    1a4a:	62 17       	cp	r22, r18
    1a4c:	73 07       	cpc	r23, r19
    1a4e:	14 f4       	brge	.+4      	; 0x1a54 <dtoa_prf+0x254>
    1a50:	10 81       	ld	r17, Z
    1a52:	01 c0       	rjmp	.+2      	; 0x1a56 <dtoa_prf+0x256>
    1a54:	10 e3       	ldi	r17, 0x30	; 48
    1a56:	21 50       	subi	r18, 0x01	; 1
    1a58:	30 40       	sbci	r19, 0x00	; 0
    1a5a:	31 96       	adiw	r30, 0x01	; 1
    1a5c:	2a 15       	cp	r18, r10
    1a5e:	3b 05       	cpc	r19, r11
    1a60:	24 f0       	brlt	.+8      	; 0x1a6a <dtoa_prf+0x26a>
    1a62:	d6 01       	movw	r26, r12
    1a64:	1d 93       	st	X+, r17
    1a66:	6d 01       	movw	r12, r26
    1a68:	e6 cf       	rjmp	.-52     	; 0x1a36 <dtoa_prf+0x236>
    1a6a:	28 17       	cp	r18, r24
    1a6c:	39 07       	cpc	r19, r25
    1a6e:	49 f4       	brne	.+18     	; 0x1a82 <dtoa_prf+0x282>
    1a70:	bf 2d       	mov	r27, r15
    1a72:	b6 33       	cpi	r27, 0x36	; 54
    1a74:	28 f4       	brcc	.+10     	; 0x1a80 <dtoa_prf+0x280>
    1a76:	b5 33       	cpi	r27, 0x35	; 53
    1a78:	21 f4       	brne	.+8      	; 0x1a82 <dtoa_prf+0x282>
    1a7a:	41 15       	cp	r20, r1
    1a7c:	51 05       	cpc	r21, r1
    1a7e:	09 f4       	brne	.+2      	; 0x1a82 <dtoa_prf+0x282>
    1a80:	11 e3       	ldi	r17, 0x31	; 49
    1a82:	f6 01       	movw	r30, r12
    1a84:	11 93       	st	Z+, r17
    1a86:	80 2f       	mov	r24, r16
    1a88:	df 01       	movw	r26, r30
    1a8a:	90 e2       	ldi	r25, 0x20	; 32
    1a8c:	02 c0       	rjmp	.+4      	; 0x1a92 <dtoa_prf+0x292>
    1a8e:	9d 93       	st	X+, r25
    1a90:	81 50       	subi	r24, 0x01	; 1
    1a92:	88 23       	and	r24, r24
    1a94:	e1 f7       	brne	.-8      	; 0x1a8e <dtoa_prf+0x28e>
    1a96:	e0 0f       	add	r30, r16
    1a98:	f1 1d       	adc	r31, r1
    1a9a:	10 82       	st	Z, r1
    1a9c:	20 e0       	ldi	r18, 0x00	; 0
    1a9e:	30 e0       	ldi	r19, 0x00	; 0
    1aa0:	c9 01       	movw	r24, r18
    1aa2:	29 96       	adiw	r28, 0x09	; 9
    1aa4:	ea e0       	ldi	r30, 0x0A	; 10
    1aa6:	78 ce       	rjmp	.-784    	; 0x1798 <__epilogue_restores__+0x10>

00001aa8 <__ftoa_engine>:
    1aa8:	28 30       	cpi	r18, 0x08	; 8
    1aaa:	08 f0       	brcs	.+2      	; 0x1aae <__ftoa_engine+0x6>
    1aac:	27 e0       	ldi	r18, 0x07	; 7
    1aae:	33 27       	eor	r19, r19
    1ab0:	da 01       	movw	r26, r20
    1ab2:	99 0f       	add	r25, r25
    1ab4:	31 1d       	adc	r19, r1
    1ab6:	87 fd       	sbrc	r24, 7
    1ab8:	91 60       	ori	r25, 0x01	; 1
    1aba:	00 96       	adiw	r24, 0x00	; 0
    1abc:	61 05       	cpc	r22, r1
    1abe:	71 05       	cpc	r23, r1
    1ac0:	39 f4       	brne	.+14     	; 0x1ad0 <__ftoa_engine+0x28>
    1ac2:	32 60       	ori	r19, 0x02	; 2
    1ac4:	2e 5f       	subi	r18, 0xFE	; 254
    1ac6:	3d 93       	st	X+, r19
    1ac8:	30 e3       	ldi	r19, 0x30	; 48
    1aca:	2a 95       	dec	r18
    1acc:	e1 f7       	brne	.-8      	; 0x1ac6 <__ftoa_engine+0x1e>
    1ace:	08 95       	ret
    1ad0:	9f 3f       	cpi	r25, 0xFF	; 255
    1ad2:	30 f0       	brcs	.+12     	; 0x1ae0 <__ftoa_engine+0x38>
    1ad4:	80 38       	cpi	r24, 0x80	; 128
    1ad6:	71 05       	cpc	r23, r1
    1ad8:	61 05       	cpc	r22, r1
    1ada:	09 f0       	breq	.+2      	; 0x1ade <__ftoa_engine+0x36>
    1adc:	3c 5f       	subi	r19, 0xFC	; 252
    1ade:	3c 5f       	subi	r19, 0xFC	; 252
    1ae0:	3d 93       	st	X+, r19
    1ae2:	91 30       	cpi	r25, 0x01	; 1
    1ae4:	08 f0       	brcs	.+2      	; 0x1ae8 <__ftoa_engine+0x40>
    1ae6:	80 68       	ori	r24, 0x80	; 128
    1ae8:	91 1d       	adc	r25, r1
    1aea:	df 93       	push	r29
    1aec:	cf 93       	push	r28
    1aee:	1f 93       	push	r17
    1af0:	0f 93       	push	r16
    1af2:	ff 92       	push	r15
    1af4:	ef 92       	push	r14
    1af6:	19 2f       	mov	r17, r25
    1af8:	98 7f       	andi	r25, 0xF8	; 248
    1afa:	96 95       	lsr	r25
    1afc:	e9 2f       	mov	r30, r25
    1afe:	96 95       	lsr	r25
    1b00:	96 95       	lsr	r25
    1b02:	e9 0f       	add	r30, r25
    1b04:	ff 27       	eor	r31, r31
    1b06:	e4 58       	subi	r30, 0x84	; 132
    1b08:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0a:	99 27       	eor	r25, r25
    1b0c:	33 27       	eor	r19, r19
    1b0e:	ee 24       	eor	r14, r14
    1b10:	ff 24       	eor	r15, r15
    1b12:	a7 01       	movw	r20, r14
    1b14:	e7 01       	movw	r28, r14
    1b16:	05 90       	lpm	r0, Z+
    1b18:	08 94       	sec
    1b1a:	07 94       	ror	r0
    1b1c:	28 f4       	brcc	.+10     	; 0x1b28 <__ftoa_engine+0x80>
    1b1e:	36 0f       	add	r19, r22
    1b20:	e7 1e       	adc	r14, r23
    1b22:	f8 1e       	adc	r15, r24
    1b24:	49 1f       	adc	r20, r25
    1b26:	51 1d       	adc	r21, r1
    1b28:	66 0f       	add	r22, r22
    1b2a:	77 1f       	adc	r23, r23
    1b2c:	88 1f       	adc	r24, r24
    1b2e:	99 1f       	adc	r25, r25
    1b30:	06 94       	lsr	r0
    1b32:	a1 f7       	brne	.-24     	; 0x1b1c <__ftoa_engine+0x74>
    1b34:	05 90       	lpm	r0, Z+
    1b36:	07 94       	ror	r0
    1b38:	28 f4       	brcc	.+10     	; 0x1b44 <__ftoa_engine+0x9c>
    1b3a:	e7 0e       	add	r14, r23
    1b3c:	f8 1e       	adc	r15, r24
    1b3e:	49 1f       	adc	r20, r25
    1b40:	56 1f       	adc	r21, r22
    1b42:	c1 1d       	adc	r28, r1
    1b44:	77 0f       	add	r23, r23
    1b46:	88 1f       	adc	r24, r24
    1b48:	99 1f       	adc	r25, r25
    1b4a:	66 1f       	adc	r22, r22
    1b4c:	06 94       	lsr	r0
    1b4e:	a1 f7       	brne	.-24     	; 0x1b38 <__ftoa_engine+0x90>
    1b50:	05 90       	lpm	r0, Z+
    1b52:	07 94       	ror	r0
    1b54:	28 f4       	brcc	.+10     	; 0x1b60 <__ftoa_engine+0xb8>
    1b56:	f8 0e       	add	r15, r24
    1b58:	49 1f       	adc	r20, r25
    1b5a:	56 1f       	adc	r21, r22
    1b5c:	c7 1f       	adc	r28, r23
    1b5e:	d1 1d       	adc	r29, r1
    1b60:	88 0f       	add	r24, r24
    1b62:	99 1f       	adc	r25, r25
    1b64:	66 1f       	adc	r22, r22
    1b66:	77 1f       	adc	r23, r23
    1b68:	06 94       	lsr	r0
    1b6a:	a1 f7       	brne	.-24     	; 0x1b54 <__ftoa_engine+0xac>
    1b6c:	05 90       	lpm	r0, Z+
    1b6e:	07 94       	ror	r0
    1b70:	20 f4       	brcc	.+8      	; 0x1b7a <__ftoa_engine+0xd2>
    1b72:	49 0f       	add	r20, r25
    1b74:	56 1f       	adc	r21, r22
    1b76:	c7 1f       	adc	r28, r23
    1b78:	d8 1f       	adc	r29, r24
    1b7a:	99 0f       	add	r25, r25
    1b7c:	66 1f       	adc	r22, r22
    1b7e:	77 1f       	adc	r23, r23
    1b80:	88 1f       	adc	r24, r24
    1b82:	06 94       	lsr	r0
    1b84:	a9 f7       	brne	.-22     	; 0x1b70 <__ftoa_engine+0xc8>
    1b86:	84 91       	lpm	r24, Z+
    1b88:	10 95       	com	r17
    1b8a:	17 70       	andi	r17, 0x07	; 7
    1b8c:	41 f0       	breq	.+16     	; 0x1b9e <__ftoa_engine+0xf6>
    1b8e:	d6 95       	lsr	r29
    1b90:	c7 95       	ror	r28
    1b92:	57 95       	ror	r21
    1b94:	47 95       	ror	r20
    1b96:	f7 94       	ror	r15
    1b98:	e7 94       	ror	r14
    1b9a:	1a 95       	dec	r17
    1b9c:	c1 f7       	brne	.-16     	; 0x1b8e <__ftoa_engine+0xe6>
    1b9e:	e2 e2       	ldi	r30, 0x22	; 34
    1ba0:	f0 e0       	ldi	r31, 0x00	; 0
    1ba2:	68 94       	set
    1ba4:	15 90       	lpm	r1, Z+
    1ba6:	15 91       	lpm	r17, Z+
    1ba8:	35 91       	lpm	r19, Z+
    1baa:	65 91       	lpm	r22, Z+
    1bac:	95 91       	lpm	r25, Z+
    1bae:	05 90       	lpm	r0, Z+
    1bb0:	7f e2       	ldi	r23, 0x2F	; 47
    1bb2:	73 95       	inc	r23
    1bb4:	e1 18       	sub	r14, r1
    1bb6:	f1 0a       	sbc	r15, r17
    1bb8:	43 0b       	sbc	r20, r19
    1bba:	56 0b       	sbc	r21, r22
    1bbc:	c9 0b       	sbc	r28, r25
    1bbe:	d0 09       	sbc	r29, r0
    1bc0:	c0 f7       	brcc	.-16     	; 0x1bb2 <__ftoa_engine+0x10a>
    1bc2:	e1 0c       	add	r14, r1
    1bc4:	f1 1e       	adc	r15, r17
    1bc6:	43 1f       	adc	r20, r19
    1bc8:	56 1f       	adc	r21, r22
    1bca:	c9 1f       	adc	r28, r25
    1bcc:	d0 1d       	adc	r29, r0
    1bce:	7e f4       	brtc	.+30     	; 0x1bee <__ftoa_engine+0x146>
    1bd0:	70 33       	cpi	r23, 0x30	; 48
    1bd2:	11 f4       	brne	.+4      	; 0x1bd8 <__ftoa_engine+0x130>
    1bd4:	8a 95       	dec	r24
    1bd6:	e6 cf       	rjmp	.-52     	; 0x1ba4 <__ftoa_engine+0xfc>
    1bd8:	e8 94       	clt
    1bda:	01 50       	subi	r16, 0x01	; 1
    1bdc:	30 f0       	brcs	.+12     	; 0x1bea <__ftoa_engine+0x142>
    1bde:	08 0f       	add	r16, r24
    1be0:	0a f4       	brpl	.+2      	; 0x1be4 <__ftoa_engine+0x13c>
    1be2:	00 27       	eor	r16, r16
    1be4:	02 17       	cp	r16, r18
    1be6:	08 f4       	brcc	.+2      	; 0x1bea <__ftoa_engine+0x142>
    1be8:	20 2f       	mov	r18, r16
    1bea:	23 95       	inc	r18
    1bec:	02 2f       	mov	r16, r18
    1bee:	7a 33       	cpi	r23, 0x3A	; 58
    1bf0:	28 f0       	brcs	.+10     	; 0x1bfc <__ftoa_engine+0x154>
    1bf2:	79 e3       	ldi	r23, 0x39	; 57
    1bf4:	7d 93       	st	X+, r23
    1bf6:	2a 95       	dec	r18
    1bf8:	e9 f7       	brne	.-6      	; 0x1bf4 <__ftoa_engine+0x14c>
    1bfa:	10 c0       	rjmp	.+32     	; 0x1c1c <__ftoa_engine+0x174>
    1bfc:	7d 93       	st	X+, r23
    1bfe:	2a 95       	dec	r18
    1c00:	89 f6       	brne	.-94     	; 0x1ba4 <__ftoa_engine+0xfc>
    1c02:	06 94       	lsr	r0
    1c04:	97 95       	ror	r25
    1c06:	67 95       	ror	r22
    1c08:	37 95       	ror	r19
    1c0a:	17 95       	ror	r17
    1c0c:	17 94       	ror	r1
    1c0e:	e1 18       	sub	r14, r1
    1c10:	f1 0a       	sbc	r15, r17
    1c12:	43 0b       	sbc	r20, r19
    1c14:	56 0b       	sbc	r21, r22
    1c16:	c9 0b       	sbc	r28, r25
    1c18:	d0 09       	sbc	r29, r0
    1c1a:	98 f0       	brcs	.+38     	; 0x1c42 <__ftoa_engine+0x19a>
    1c1c:	23 95       	inc	r18
    1c1e:	7e 91       	ld	r23, -X
    1c20:	73 95       	inc	r23
    1c22:	7a 33       	cpi	r23, 0x3A	; 58
    1c24:	08 f0       	brcs	.+2      	; 0x1c28 <__ftoa_engine+0x180>
    1c26:	70 e3       	ldi	r23, 0x30	; 48
    1c28:	7c 93       	st	X, r23
    1c2a:	20 13       	cpse	r18, r16
    1c2c:	b8 f7       	brcc	.-18     	; 0x1c1c <__ftoa_engine+0x174>
    1c2e:	7e 91       	ld	r23, -X
    1c30:	70 61       	ori	r23, 0x10	; 16
    1c32:	7d 93       	st	X+, r23
    1c34:	30 f0       	brcs	.+12     	; 0x1c42 <__ftoa_engine+0x19a>
    1c36:	83 95       	inc	r24
    1c38:	71 e3       	ldi	r23, 0x31	; 49
    1c3a:	7d 93       	st	X+, r23
    1c3c:	70 e3       	ldi	r23, 0x30	; 48
    1c3e:	2a 95       	dec	r18
    1c40:	e1 f7       	brne	.-8      	; 0x1c3a <__ftoa_engine+0x192>
    1c42:	11 24       	eor	r1, r1
    1c44:	ef 90       	pop	r14
    1c46:	ff 90       	pop	r15
    1c48:	0f 91       	pop	r16
    1c4a:	1f 91       	pop	r17
    1c4c:	cf 91       	pop	r28
    1c4e:	df 91       	pop	r29
    1c50:	99 27       	eor	r25, r25
    1c52:	87 fd       	sbrc	r24, 7
    1c54:	90 95       	com	r25
    1c56:	08 95       	ret

00001c58 <_exit>:
    1c58:	f8 94       	cli

00001c5a <__stop_program>:
    1c5a:	ff cf       	rjmp	.-2      	; 0x1c5a <__stop_program>
