
avr-calc-8515.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c26  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  00001c26  00001cba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  008001a4  008001a4  00001dfe  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  00001e00  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000110  00000000  00000000  00002f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  00003014  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000399  00000000  00000000  00003234  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002d03  00000000  00000000  000035cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001626  00000000  00000000  000062d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002500  00000000  00000000  000078f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000350  00000000  00000000  00009df8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000067b  00000000  00000000  0000a148  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000016f0  00000000  00000000  0000a7c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000063c  00000000  00000000  0000beb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000150  00000000  00000000  0000c4ef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	a7 c0       	rjmp	.+334    	; 0x152 <__bad_interrupt>
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	a5 c0       	rjmp	.+330    	; 0x152 <__bad_interrupt>
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	a3 c0       	rjmp	.+326    	; 0x152 <__bad_interrupt>
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	a1 c0       	rjmp	.+322    	; 0x152 <__bad_interrupt>
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	9f c0       	rjmp	.+318    	; 0x152 <__bad_interrupt>
      14:	9e c0       	rjmp	.+316    	; 0x152 <__bad_interrupt>
      16:	9d c0       	rjmp	.+314    	; 0x152 <__bad_interrupt>
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	9b c0       	rjmp	.+310    	; 0x152 <__bad_interrupt>
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	99 c0       	rjmp	.+306    	; 0x152 <__bad_interrupt>
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 40       	sbci	r16, 0x00	; 0
      24:	7a 10       	cpse	r7, r10
      26:	f3 5a       	subi	r31, 0xA3	; 163
      28:	00 a0       	ldd	r0, Z+32	; 0x20
      2a:	72 4e       	sbci	r23, 0xE2	; 226
      2c:	18 09       	sbc	r17, r8
      2e:	00 10       	cpse	r0, r0
      30:	a5 d4       	rcall	.+2378   	; 0x97c <decide+0x46e>
      32:	e8 00       	.word	0x00e8	; ????
      34:	00 e8       	ldi	r16, 0x80	; 128
      36:	76 48       	sbci	r23, 0x86	; 134
      38:	17 00       	.word	0x0017	; ????
      3a:	00 e4       	ldi	r16, 0x40	; 64
      3c:	0b 54       	subi	r16, 0x4B	; 75
      3e:	02 00       	.word	0x0002	; ????
      40:	00 ca       	rjmp	.-3072   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      42:	9a 3b       	cpi	r25, 0xBA	; 186
      44:	00 00       	nop
      46:	00 e1       	ldi	r16, 0x10	; 16
      48:	f5 05       	cpc	r31, r5
      4a:	00 00       	nop
      4c:	80 96       	adiw	r24, 0x20	; 32
      4e:	98 00       	.word	0x0098	; ????
      50:	00 00       	nop
      52:	40 42       	sbci	r20, 0x20	; 32
      54:	0f 00       	.word	0x000f	; ????
      56:	00 00       	nop
      58:	a0 86       	std	Z+8, r10	; 0x08
      5a:	01 00       	.word	0x0001	; ????
      5c:	00 00       	nop
      5e:	10 27       	eor	r17, r16
      60:	00 00       	nop
      62:	00 00       	nop
      64:	e8 03       	fmulsu	r22, r16
      66:	00 00       	nop
      68:	00 00       	nop
      6a:	64 00       	.word	0x0064	; ????
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	0a 00       	.word	0x000a	; ????
      72:	00 00       	nop
      74:	00 00       	nop
      76:	01 00       	.word	0x0001	; ????
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	2c 76       	andi	r18, 0x6C	; 108
      7e:	d8 88       	ldd	r13, Y+16	; 0x10
      80:	dc 67       	ori	r29, 0x7C	; 124
      82:	4f 08       	sbc	r4, r15
      84:	23 df       	rcall	.-442    	; 0xfffffecc <__eeprom_end+0xff7efecc>
      86:	c1 df       	rcall	.-126    	; 0xa <__zero_reg__+0x9>
      88:	ae 59       	subi	r26, 0x9E	; 158
      8a:	e1 b1       	in	r30, 0x01	; 1
      8c:	b7 96       	adiw	r30, 0x27	; 39
      8e:	e5 e3       	ldi	r30, 0x35	; 53
      90:	e4 53       	subi	r30, 0x34	; 52
      92:	c6 3a       	cpi	r28, 0xA6	; 166
      94:	e6 51       	subi	r30, 0x16	; 22
      96:	99 76       	andi	r25, 0x69	; 105
      98:	96 e8       	ldi	r25, 0x86	; 134
      9a:	e6 c2       	rjmp	.+1484   	; 0x668 <decide+0x15a>
      9c:	84 26       	eor	r8, r20
      9e:	eb 89       	ldd	r30, Y+19	; 0x13
      a0:	8c 9b       	sbis	0x11, 4	; 17
      a2:	62 ed       	ldi	r22, 0xD2	; 210
      a4:	40 7c       	andi	r20, 0xC0	; 192
      a6:	6f fc       	.word	0xfc6f	; ????
      a8:	ef bc       	out	0x2f, r14	; 47
      aa:	9c 9f       	mul	r25, r28
      ac:	40 f2       	brcs	.-112    	; 0x3e <__SP_H__>
      ae:	ba a5       	ldd	r27, Y+42	; 0x2a
      b0:	6f a5       	ldd	r22, Y+47	; 0x2f
      b2:	f4 90       	lpm	r15, Z+
      b4:	05 5a       	subi	r16, 0xA5	; 165
      b6:	2a f7       	brpl	.-54     	; 0x82 <__SREG__+0x43>
      b8:	5c 93       	st	X, r21
      ba:	6b 6c       	ori	r22, 0xCB	; 203
      bc:	f9 67       	ori	r31, 0x79	; 121
      be:	6d c1       	rjmp	.+730    	; 0x39a <calculate+0x12>
      c0:	1b fc       	.word	0xfc1b	; ????
      c2:	e0 e4       	ldi	r30, 0x40	; 64
      c4:	0d 47       	sbci	r16, 0x7D	; 125
      c6:	fe f5       	brtc	.+126    	; 0x146 <.do_clear_bss_loop>
      c8:	20 e6       	ldi	r18, 0x60	; 96
      ca:	b5 00       	.word	0x00b5	; ????
      cc:	d0 ed       	ldi	r29, 0xD0	; 208
      ce:	90 2e       	mov	r9, r16
      d0:	03 00       	.word	0x0003	; ????
      d2:	94 35       	cpi	r25, 0x54	; 84
      d4:	77 05       	cpc	r23, r7
      d6:	00 80       	ld	r0, Z
      d8:	84 1e       	adc	r8, r20
      da:	08 00       	.word	0x0008	; ????
      dc:	00 20       	and	r0, r0
      de:	4e 0a       	sbc	r4, r30
      e0:	00 00       	nop
      e2:	00 c8       	rjmp	.-4096   	; 0xfffff0e4 <__eeprom_end+0xff7ef0e4>
      e4:	0c 33       	cpi	r16, 0x3C	; 60
      e6:	33 33       	cpi	r19, 0x33	; 51
      e8:	33 0f       	add	r19, r19
      ea:	98 6e       	ori	r25, 0xE8	; 232
      ec:	12 83       	std	Z+2, r17	; 0x02
      ee:	11 41       	sbci	r17, 0x11	; 17
      f0:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f2:	21 14       	cp	r2, r1
      f4:	89 3b       	cpi	r24, 0xB9	; 185
      f6:	e6 55       	subi	r30, 0x56	; 86
      f8:	16 cf       	rjmp	.-468    	; 0xffffff26 <__eeprom_end+0xff7eff26>
      fa:	fe e6       	ldi	r31, 0x6E	; 110
      fc:	db 18       	sub	r13, r11
      fe:	d1 84       	ldd	r13, Z+9	; 0x09
     100:	4b 38       	cpi	r20, 0x8B	; 139
     102:	1b f7       	brvc	.-58     	; 0xca <__SREG__+0x8b>
     104:	7c 1d       	adc	r23, r12
     106:	90 1d       	adc	r25, r0
     108:	a4 bb       	out	0x14, r26	; 20
     10a:	e4 24       	eor	r14, r4
     10c:	20 32       	cpi	r18, 0x20	; 32
     10e:	84 72       	andi	r24, 0x24	; 36
     110:	5e 22       	and	r5, r30
     112:	81 00       	.word	0x0081	; ????
     114:	c9 f1       	breq	.+114    	; 0x188 <init_display+0x6>
     116:	24 ec       	ldi	r18, 0xC4	; 196
     118:	a1 e5       	ldi	r26, 0x51	; 81
     11a:	3d 27       	eor	r19, r29

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf e5       	ldi	r28, 0x5F	; 95
     122:	d2 e0       	ldi	r29, 0x02	; 2
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e6       	ldi	r26, 0x60	; 96
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	e6 e2       	ldi	r30, 0x26	; 38
     130:	fc e1       	ldi	r31, 0x1C	; 28
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
     134:	05 90       	lpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a4 3a       	cpi	r26, 0xA4	; 164
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	a4 ea       	ldi	r26, 0xA4	; 164
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	aa 3c       	cpi	r26, 0xCA	; 202
     14a:	b1 07       	cpc	r27, r17
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	02 d0       	rcall	.+4      	; 0x154 <main>
     150:	68 cd       	rjmp	.-1328   	; 0xfffffc22 <__eeprom_end+0xff7efc22>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <main>:
# define F_CPU 1000000UL
#include "calculator.h"

int main(void){

    init_calculator();
     154:	93 d4       	rcall	.+2342   	; 0xa7c <init_calculator>

	return 0;
}
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <trigger>:
}

//Функция генерирующая строб на линии E.
//По этому стробу производится запись команды/данных или чтение.
void trigger(){
    PORTC |= (1<<PC6); // Set PC6 (E).
     15c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	00 00       	nop
    _delay_us(1);
    PORTC &=~(1<<PC6); // Reset PC6 (E).
     160:	ae 98       	cbi	0x15, 6	; 21
     162:	00 00       	nop
	_delay_us(1);
}
     164:	08 95       	ret

00000166 <send_data>:
	_delay_us( 40 );
}

//Функция записи байта (символа) данных в lcd контроллер
void send_data(unsigned char data){
    PORTA = data;
     166:	8b bb       	out	0x1b, r24	; 27
    trigger();
     168:	f9 df       	rcall	.-14     	; 0x15c <trigger>
     16a:	8d e0       	ldi	r24, 0x0D	; 13
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <send_data+0x6>
     170:	00 00       	nop
	_delay_us( 40 );
}
     172:	08 95       	ret

00000174 <send_command>:
	on_flag = 1;
}

//Функция записи байта (символа) команды в lcd контроллер
void send_command(unsigned char command){
    PORTA = command;
     174:	8b bb       	out	0x1b, r24	; 27
    trigger();
     176:	f2 df       	rcall	.-28     	; 0x15c <trigger>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <send_command+0x6>
     17e:	00 00       	nop
	_delay_us( 40 );
}
     180:	08 95       	ret

00000182 <init_display>:

bool on_flag;

//Функция инициализации lcd контроллера hd44780
void init_display(){
    DDRC |= (1<<PC4)|(1<<PC6); 	// PC 4 is output for RS, 6 is output for Enable.
     182:	84 b3       	in	r24, 0x14	; 20
     184:	80 65       	ori	r24, 0x50	; 80
     186:	84 bb       	out	0x14, r24	; 20
    DDRA = 0xFF; 				// PA 0-7 is 8 bit data output bus.
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	8a bb       	out	0x1a, r24	; 26

	PORTC &=~(1<<PC6); // Reset PC6 (E).
     18c:	ae 98       	cbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	85 ea       	ldi	r24, 0xA5	; 165
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <init_display+0x10>
     196:	00 c0       	rjmp	.+0      	; 0x198 <init_display+0x16>
     198:	00 00       	nop

	_delay_ms(15); 

	send_command(0x38); // 2 line mode.
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	eb df       	rcall	.-42     	; 0x174 <send_command>
     19e:	81 ee       	ldi	r24, 0xE1	; 225
     1a0:	94 e0       	ldi	r25, 0x04	; 4
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <init_display+0x20>
     1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <init_display+0x26>
     1a8:	00 00       	nop
	_delay_ms(5); 
	send_command(0x38); // 2 line mode.
     1aa:	88 e3       	ldi	r24, 0x38	; 56
     1ac:	e3 df       	rcall	.-58     	; 0x174 <send_command>
     1ae:	87 ea       	ldi	r24, 0xA7	; 167
     1b0:	91 e6       	ldi	r25, 0x61	; 97
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <init_display+0x30>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <init_display+0x36>
     1b8:	00 00       	nop
	_delay_ms(100); 
	send_command(0x38); // 2 line mode.	
     1ba:	88 e3       	ldi	r24, 0x38	; 56
     1bc:	db df       	rcall	.-74     	; 0x174 <send_command>

	send_command(0x0F);	// LCD ON, cursor ON
     1be:	8f e0       	ldi	r24, 0x0F	; 15
     1c0:	d9 df       	rcall	.-78     	; 0x174 <send_command>
     1c2:	83 ec       	ldi	r24, 0xC3	; 195
     1c4:	99 e0       	ldi	r25, 0x09	; 9
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <init_display+0x44>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <init_display+0x4a>
     1cc:	00 00       	nop
	_delay_ms(10);
	send_command(0x01); // Clear display screen
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	d1 df       	rcall	.-94     	; 0x174 <send_command>
     1d2:	83 ec       	ldi	r24, 0xC3	; 195
     1d4:	99 e0       	ldi	r25, 0x09	; 9
     1d6:	01 97       	sbiw	r24, 0x01	; 1
     1d8:	f1 f7       	brne	.-4      	; 0x1d6 <init_display+0x54>
     1da:	00 c0       	rjmp	.+0      	; 0x1dc <init_display+0x5a>
     1dc:	00 00       	nop
	_delay_ms(10);
	send_command(0x81); 
     1de:	81 e8       	ldi	r24, 0x81	; 129
     1e0:	c9 df       	rcall	.-110    	; 0x174 <send_command>
     1e2:	83 ec       	ldi	r24, 0xC3	; 195
     1e4:	99 e0       	ldi	r25, 0x09	; 9
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <init_display+0x64>
     1ea:	00 c0       	rjmp	.+0      	; 0x1ec <init_display+0x6a>
     1ec:	00 00       	nop
	_delay_ms(10);

	PORTC |= (1<<PC6); // Set PC6 (E).
     1ee:	ae 9a       	sbi	0x15, 6	; 21

	on_flag = 1;
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	80 93 b4 01 	sts	0x01B4, r24
}
     1f6:	08 95       	ret

000001f8 <send_string>:
    PORTC &=~(1<<PC6); // Reset PC6 (E).
	_delay_us(1);
}

//Функция вывода строки
void send_string(const char *str){
     1f8:	ef 92       	push	r14
     1fa:	ff 92       	push	r15
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	e8 2e       	mov	r14, r24
     202:	e7 01       	movw	r28, r14
     204:	7e 01       	movw	r14, r28
     206:	f9 2e       	mov	r15, r25
     208:	e7 01       	movw	r28, r14
    while(*str) send_data(*str++); // Send characters one by one.
     20a:	01 c0       	rjmp	.+2      	; 0x20e <send_string+0x16>
     20c:	ac df       	rcall	.-168    	; 0x166 <send_data>
     20e:	89 91       	ld	r24, Y+
     210:	88 23       	and	r24, r24
     212:	e1 f7       	brne	.-8      	; 0x20c <send_string+0x14>
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	ff 90       	pop	r15
     21a:	ef 90       	pop	r14
     21c:	08 95       	ret

0000021e <move_to>:

//Функция изменения текущей позиции курсора,
//x — номер символа в строке, y — номер строки
void move_to(unsigned char x, unsigned char y){
	unsigned char address = x;
	if ( y ) {
     21e:	61 11       	cpse	r22, r1
    	address += 0x40;
     220:	80 5c       	subi	r24, 0xC0	; 192
  	}
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     222:	ac 98       	cbi	0x15, 4	; 21
    send_command(1<<7 | address);
     224:	80 68       	ori	r24, 0x80	; 128
     226:	a6 df       	rcall	.-180    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     228:	ac 9a       	sbi	0x15, 4	; 21
}
     22a:	08 95       	ret

0000022c <clear>:

void clear(){
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     22c:	ac 98       	cbi	0x15, 4	; 21
    send_command(0x01);
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	a1 df       	rcall	.-190    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     232:	ac 9a       	sbi	0x15, 4	; 21
}
     234:	08 95       	ret

00000236 <disp_on_off>:

void disp_on_off(){
	if (on_flag == 1) {
     236:	80 91 b4 01 	lds	r24, 0x01B4
     23a:	88 23       	and	r24, r24
     23c:	39 f0       	breq	.+14     	; 0x24c <disp_on_off+0x16>
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     23e:	ac 98       	cbi	0x15, 4	; 21
   		send_command(0x08);
     240:	88 e0       	ldi	r24, 0x08	; 8
     242:	98 df       	rcall	.-208    	; 0x174 <send_command>
		PORTC |=(1<<PC4); // Set PC4 (RS).
     244:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 0;
     246:	10 92 b4 01 	sts	0x01B4, r1
     24a:	08 95       	ret
	}
	else {
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     24c:	ac 98       	cbi	0x15, 4	; 21

		send_command(0x0F);	// LCD ON, cursor ON
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	91 df       	rcall	.-222    	; 0x174 <send_command>
     252:	83 ec       	ldi	r24, 0xC3	; 195
     254:	99 e0       	ldi	r25, 0x09	; 9
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <disp_on_off+0x20>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <disp_on_off+0x26>
     25c:	00 00       	nop
		_delay_ms(10);
		send_command(0x01); // Clear display screen
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	89 df       	rcall	.-238    	; 0x174 <send_command>
     262:	83 ec       	ldi	r24, 0xC3	; 195
     264:	99 e0       	ldi	r25, 0x09	; 9
     266:	01 97       	sbiw	r24, 0x01	; 1
     268:	f1 f7       	brne	.-4      	; 0x266 <__stack+0x7>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <__stack+0xd>
     26c:	00 00       	nop
		_delay_ms(10);
		send_command(0x81); 
     26e:	81 e8       	ldi	r24, 0x81	; 129
     270:	81 df       	rcall	.-254    	; 0x174 <send_command>
     272:	83 ec       	ldi	r24, 0xC3	; 195
     274:	99 e0       	ldi	r25, 0x09	; 9
     276:	01 97       	sbiw	r24, 0x01	; 1
     278:	f1 f7       	brne	.-4      	; 0x276 <__stack+0x17>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <__stack+0x1d>
     27c:	00 00       	nop
		_delay_ms(10);

		PORTC |=(1<<PC4); // Set PC4 (RS).
     27e:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 1;
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	80 93 b4 01 	sts	0x01B4, r24
     286:	08 95       	ret

00000288 <init_keyboard>:
    {'1', '2', '3', '+', '-', '='},
    {'0', '.', 'p', 'u', 'A', '='}
};

void init_keyboard() {
    DDRC |= 0x0F; // PB 0-3 output for rows.
     288:	84 b3       	in	r24, 0x14	; 20
     28a:	8f 60       	ori	r24, 0x0F	; 15
     28c:	84 bb       	out	0x14, r24	; 20
    DDRD &= 0x03; // PC 2-7 input for columns.
     28e:	81 b3       	in	r24, 0x11	; 17
     290:	83 70       	andi	r24, 0x03	; 3
     292:	81 bb       	out	0x11, r24	; 17
}
     294:	08 95       	ret

00000296 <scan_key>:

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	70 e0       	ldi	r23, 0x00	; 0
    DDRD &= 0x03; // PC 2-7 input for columns.
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
     29a:	82 b3       	in	r24, 0x12	; 18
     29c:	8c 6f       	ori	r24, 0xFC	; 252
     29e:	82 bb       	out	0x12, r24	; 18
        for(int i = 0;i<4;i++){
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
            PORTC = ~(1 << i);
     2a4:	cb 01       	movw	r24, r22
     2a6:	02 2e       	mov	r0, r18
     2a8:	02 c0       	rjmp	.+4      	; 0x2ae <scan_key+0x18>
     2aa:	88 0f       	add	r24, r24
     2ac:	99 1f       	adc	r25, r25
     2ae:	0a 94       	dec	r0
     2b0:	e2 f7       	brpl	.-8      	; 0x2aa <scan_key+0x14>
     2b2:	80 95       	com	r24
     2b4:	85 bb       	out	0x15, r24	; 21
            for(int j = 2;j < 8;j++){
     2b6:	82 e0       	ldi	r24, 0x02	; 2
     2b8:	90 e0       	ldi	r25, 0x00	; 0
                if(bit_is_clear(PIND, j)){
     2ba:	40 b3       	in	r20, 0x10	; 16
     2bc:	50 e0       	ldi	r21, 0x00	; 0
     2be:	08 2e       	mov	r0, r24
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <scan_key+0x30>
     2c2:	55 95       	asr	r21
     2c4:	47 95       	ror	r20
     2c6:	0a 94       	dec	r0
     2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <scan_key+0x2c>
     2ca:	40 fd       	sbrc	r20, 0
     2cc:	23 c0       	rjmp	.+70     	; 0x314 <scan_key+0x7e>
     2ce:	41 e0       	ldi	r20, 0x01	; 1
     2d0:	50 e0       	ldi	r21, 0x00	; 0
     2d2:	08 2e       	mov	r0, r24
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <scan_key+0x44>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	0a 94       	dec	r0
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <scan_key+0x40>
     2de:	06 c0       	rjmp	.+12     	; 0x2ec <scan_key+0x56>
     2e0:	e3 ed       	ldi	r30, 0xD3	; 211
     2e2:	f0 e3       	ldi	r31, 0x30	; 48
     2e4:	31 97       	sbiw	r30, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <scan_key+0x4e>
     2e8:	00 c0       	rjmp	.+0      	; 0x2ea <scan_key+0x54>
     2ea:	00 00       	nop
                    while(bit_is_clear(PIND, j)) _delay_ms(50);
     2ec:	60 b3       	in	r22, 0x10	; 16
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	64 23       	and	r22, r20
     2f2:	75 23       	and	r23, r21
     2f4:	61 15       	cp	r22, r1
     2f6:	71 05       	cpc	r23, r1
     2f8:	99 f3       	breq	.-26     	; 0x2e0 <scan_key+0x4a>
                    return keys[i][j-2];
     2fa:	f9 01       	movw	r30, r18
     2fc:	ee 0f       	add	r30, r30
     2fe:	ff 1f       	adc	r31, r31
     300:	e2 0f       	add	r30, r18
     302:	f3 1f       	adc	r31, r19
     304:	ee 0f       	add	r30, r30
     306:	ff 1f       	adc	r31, r31
     308:	e8 0f       	add	r30, r24
     30a:	f9 1f       	adc	r31, r25
     30c:	e2 5a       	subi	r30, 0xA2	; 162
     30e:	ff 4f       	sbci	r31, 0xFF	; 255
                }
            }
        }
    }
}
     310:	80 81       	ld	r24, Z
     312:	08 95       	ret
unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
            for(int j = 2;j < 8;j++){
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	88 30       	cpi	r24, 0x08	; 8
     318:	91 05       	cpc	r25, r1
     31a:	79 f6       	brne	.-98     	; 0x2ba <scan_key+0x24>
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        for(int i = 0;i<4;i++){
     31c:	2f 5f       	subi	r18, 0xFF	; 255
     31e:	3f 4f       	sbci	r19, 0xFF	; 255
     320:	24 30       	cpi	r18, 0x04	; 4
     322:	31 05       	cpc	r19, r1
     324:	09 f0       	breq	.+2      	; 0x328 <scan_key+0x92>
     326:	be cf       	rjmp	.-132    	; 0x2a4 <scan_key+0xe>
     328:	b8 cf       	rjmp	.-144    	; 0x29a <scan_key+0x4>

0000032a <uart>:

    reset();
    run();
}

void uart() {
     32a:	ef 92       	push	r14
     32c:	ff 92       	push	r15
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	df 93       	push	r29
     334:	cf 93       	push	r28
     336:	cd b7       	in	r28, 0x3d	; 61
     338:	de b7       	in	r29, 0x3e	; 62
     33a:	c0 54       	subi	r28, 0x40	; 64
     33c:	d0 40       	sbci	r29, 0x00	; 0
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	f8 94       	cli
     342:	de bf       	out	0x3e, r29	; 62
     344:	0f be       	out	0x3f, r0	; 63
     346:	cd bf       	out	0x3d, r28	; 61
	char uart_ans[64];
	dtostrf(ans, 9, 5, uart_ans);
     348:	60 91 c2 01 	lds	r22, 0x01C2
     34c:	70 91 c3 01 	lds	r23, 0x01C3
     350:	80 91 c4 01 	lds	r24, 0x01C4
     354:	90 91 c5 01 	lds	r25, 0x01C5
     358:	49 e0       	ldi	r20, 0x09	; 9
     35a:	25 e0       	ldi	r18, 0x05	; 5
     35c:	7e 01       	movw	r14, r28
     35e:	08 94       	sec
     360:	e1 1c       	adc	r14, r1
     362:	f1 1c       	adc	r15, r1
     364:	87 01       	movw	r16, r14
     366:	10 da       	rcall	.-3040   	; 0xfffff788 <__eeprom_end+0xff7ef788>
	Transmit(uart_ans);
     368:	c7 01       	movw	r24, r14
     36a:	9e d3       	rcall	.+1852   	; 0xaa8 <Transmit>
}
     36c:	c0 5c       	subi	r28, 0xC0	; 192
     36e:	df 4f       	sbci	r29, 0xFF	; 255
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf 91       	pop	r28
     37c:	df 91       	pop	r29
     37e:	1f 91       	pop	r17
     380:	0f 91       	pop	r16
     382:	ff 90       	pop	r15
     384:	ef 90       	pop	r14
     386:	08 95       	ret

00000388 <calculate>:

double calculate(float m, char operator, float n) {
     388:	ef 92       	push	r14
     38a:	ff 92       	push	r15
     38c:	0f 93       	push	r16
     38e:	1f 93       	push	r17
     390:	cf 93       	push	r28
     392:	df 93       	push	r29
     394:	78 01       	movw	r14, r16
     396:	89 01       	movw	r16, r18
    switch (operator) {
     398:	4d 36       	cpi	r20, 0x6D	; 109
     39a:	59 f1       	breq	.+86     	; 0x3f2 <calculate+0x6a>
     39c:	4e 36       	cpi	r20, 0x6E	; 110
     39e:	60 f4       	brcc	.+24     	; 0x3b8 <calculate+0x30>
     3a0:	4b 32       	cpi	r20, 0x2B	; 43
     3a2:	79 f0       	breq	.+30     	; 0x3c2 <calculate+0x3a>
     3a4:	4c 32       	cpi	r20, 0x2C	; 44
     3a6:	18 f4       	brcc	.+6      	; 0x3ae <calculate+0x26>
     3a8:	4a 32       	cpi	r20, 0x2A	; 42
     3aa:	e9 f5       	brne	.+122    	; 0x426 <calculate+0x9e>
     3ac:	12 c0       	rjmp	.+36     	; 0x3d2 <calculate+0x4a>
     3ae:	4d 32       	cpi	r20, 0x2D	; 45
     3b0:	61 f0       	breq	.+24     	; 0x3ca <calculate+0x42>
     3b2:	4f 32       	cpi	r20, 0x2F	; 47
     3b4:	c1 f5       	brne	.+112    	; 0x426 <calculate+0x9e>
     3b6:	11 c0       	rjmp	.+34     	; 0x3da <calculate+0x52>
     3b8:	40 37       	cpi	r20, 0x70	; 112
     3ba:	91 f0       	breq	.+36     	; 0x3e0 <calculate+0x58>
     3bc:	46 37       	cpi	r20, 0x76	; 118
     3be:	99 f5       	brne	.+102    	; 0x426 <calculate+0x9e>
     3c0:	26 c0       	rjmp	.+76     	; 0x40e <calculate+0x86>
    case '+':
        return r = m + n;
     3c2:	a8 01       	movw	r20, r16
     3c4:	97 01       	movw	r18, r14
     3c6:	d3 d4       	rcall	.+2470   	; 0xd6e <__addsf3>
     3c8:	2e c0       	rjmp	.+92     	; 0x426 <calculate+0x9e>
    case '-':
        return r = m - n;
     3ca:	a8 01       	movw	r20, r16
     3cc:	97 01       	movw	r18, r14
     3ce:	f6 d4       	rcall	.+2540   	; 0xdbc <__subsf3>
     3d0:	2a c0       	rjmp	.+84     	; 0x426 <calculate+0x9e>
    case '*':
        return r = m * n;
     3d2:	a8 01       	movw	r20, r16
     3d4:	97 01       	movw	r18, r14
     3d6:	1d d5       	rcall	.+2618   	; 0xe12 <__mulsf3>
     3d8:	26 c0       	rjmp	.+76     	; 0x426 <calculate+0x9e>
    case '/':
        return r = m / n;
     3da:	a8 01       	movw	r20, r16
     3dc:	97 01       	movw	r18, r14
     3de:	07 c0       	rjmp	.+14     	; 0x3ee <calculate+0x66>

    case 'p':
        return r = m * n / 100;
     3e0:	a8 01       	movw	r20, r16
     3e2:	97 01       	movw	r18, r14
     3e4:	16 d5       	rcall	.+2604   	; 0xe12 <__mulsf3>
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	48 ec       	ldi	r20, 0xC8	; 200
     3ec:	52 e4       	ldi	r21, 0x42	; 66
     3ee:	06 d6       	rcall	.+3084   	; 0xffc <__divsf3>
     3f0:	1a c0       	rjmp	.+52     	; 0x426 <calculate+0x9e>
    case 'm':
        return r = (int)m % (int)n;
     3f2:	34 d7       	rcall	.+3688   	; 0x125c <__fixsfsi>
     3f4:	eb 01       	movw	r28, r22
     3f6:	c8 01       	movw	r24, r16
     3f8:	b7 01       	movw	r22, r14
     3fa:	30 d7       	rcall	.+3680   	; 0x125c <__fixsfsi>
     3fc:	ce 01       	movw	r24, r28
     3fe:	66 d9       	rcall	.-3380   	; 0xfffff6cc <__eeprom_end+0xff7ef6cc>
     400:	9c 01       	movw	r18, r24
     402:	b9 01       	movw	r22, r18
     404:	88 27       	eor	r24, r24
     406:	77 fd       	sbrc	r23, 7
     408:	80 95       	com	r24
     40a:	98 2f       	mov	r25, r24
     40c:	0b c0       	rjmp	.+22     	; 0x424 <calculate+0x9c>
    case 'v':
        return r = (int)m / (int)n;
     40e:	26 d7       	rcall	.+3660   	; 0x125c <__fixsfsi>
     410:	eb 01       	movw	r28, r22
     412:	c8 01       	movw	r24, r16
     414:	b7 01       	movw	r22, r14
     416:	22 d7       	rcall	.+3652   	; 0x125c <__fixsfsi>
     418:	ce 01       	movw	r24, r28
     41a:	58 d9       	rcall	.-3408   	; 0xfffff6cc <__eeprom_end+0xff7ef6cc>
     41c:	88 27       	eor	r24, r24
     41e:	77 fd       	sbrc	r23, 7
     420:	80 95       	com	r24
     422:	98 2f       	mov	r25, r24
     424:	bf d6       	rcall	.+3454   	; 0x11a4 <__floatsisf>

    }
    return r = m;
     426:	26 2f       	mov	r18, r22
     428:	37 2f       	mov	r19, r23
     42a:	48 2f       	mov	r20, r24
     42c:	59 2f       	mov	r21, r25
     42e:	20 93 bc 01 	sts	0x01BC, r18
     432:	30 93 bd 01 	sts	0x01BD, r19
     436:	40 93 be 01 	sts	0x01BE, r20
     43a:	50 93 bf 01 	sts	0x01BF, r21
}
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	1f 91       	pop	r17
     444:	0f 91       	pop	r16
     446:	ff 90       	pop	r15
     448:	ef 90       	pop	r14
     44a:	08 95       	ret

0000044c <show_result>:

void show_result() {
     44c:	ef 92       	push	r14
     44e:	ff 92       	push	r15
     450:	0f 93       	push	r16
     452:	1f 93       	push	r17
    move_to(0, 1);			//начало нижней строки
     454:	80 e0       	ldi	r24, 0x00	; 0
     456:	61 e0       	ldi	r22, 0x01	; 1
     458:	e2 de       	rcall	.-572    	; 0x21e <move_to>
    send_string("A=");
     45a:	88 e7       	ldi	r24, 0x78	; 120
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	cc de       	rcall	.-616    	; 0x1f8 <send_string>
    char *data = buffer;

    if (r <= 999999999999)
     460:	e0 90 bc 01 	lds	r14, 0x01BC
     464:	f0 90 bd 01 	lds	r15, 0x01BD
     468:	00 91 be 01 	lds	r16, 0x01BE
     46c:	10 91 bf 01 	lds	r17, 0x01BF
     470:	c8 01       	movw	r24, r16
     472:	b7 01       	movw	r22, r14
     474:	25 ea       	ldi	r18, 0xA5	; 165
     476:	34 ed       	ldi	r19, 0xD4	; 212
     478:	48 e6       	ldi	r20, 0x68	; 104
     47a:	53 e5       	ldi	r21, 0x53	; 83
     47c:	68 d6       	rcall	.+3280   	; 0x114e <__lesf2>
     47e:	18 16       	cp	r1, r24
     480:	4c f0       	brlt	.+18     	; 0x494 <show_result+0x48>
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
     482:	c8 01       	movw	r24, r16
     484:	b7 01       	movw	r22, r14
     486:	49 e0       	ldi	r20, 0x09	; 9
     488:	25 e0       	ldi	r18, 0x05	; 5
     48a:	04 ea       	ldi	r16, 0xA4	; 164
     48c:	11 e0       	ldi	r17, 0x01	; 1
     48e:	7c d9       	rcall	.-3336   	; 0xfffff788 <__eeprom_end+0xff7ef788>
}

void show_result() {
    move_to(0, 1);			//начало нижней строки
    send_string("A=");
    char *data = buffer;
     490:	c8 01       	movw	r24, r16
     492:	02 c0       	rjmp	.+4      	; 0x498 <show_result+0x4c>

    if (r <= 999999999999)
        dtostrf(r, 9, 5, buffer);	//данные с плавающей точкой -> массив символов
    else 
		data = overflow;
     494:	8c e8       	ldi	r24, 0x8C	; 140
     496:	90 e0       	ldi	r25, 0x00	; 0

    send_string(data);
     498:	af de       	rcall	.-674    	; 0x1f8 <send_string>
    state = 4;
     49a:	84 e0       	ldi	r24, 0x04	; 4
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	90 93 bb 01 	sts	0x01BB, r25
     4a2:	80 93 ba 01 	sts	0x01BA, r24
}
     4a6:	1f 91       	pop	r17
     4a8:	0f 91       	pop	r16
     4aa:	ff 90       	pop	r15
     4ac:	ef 90       	pop	r14
     4ae:	08 95       	ret

000004b0 <send_digit>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
     4b0:	80 5d       	subi	r24, 0xD0	; 208
     4b2:	59 de       	rcall	.-846    	; 0x166 <send_data>
}
     4b4:	08 95       	ret

000004b6 <reset>:
        decide(scan_key(), is_dec_p, paw_p);
    }
}

void reset() {
    clear();
     4b6:	ba de       	rcall	.-652    	; 0x22c <clear>
    move_to(0, 0);		//начало верхней строки
     4b8:	80 e0       	ldi	r24, 0x00	; 0
     4ba:	60 e0       	ldi	r22, 0x00	; 0
     4bc:	b0 de       	rcall	.-672    	; 0x21e <move_to>
    r = a = b = op = state = count = 0;
     4be:	10 92 c1 01 	sts	0x01C1, r1
     4c2:	10 92 c0 01 	sts	0x01C0, r1
     4c6:	10 92 bb 01 	sts	0x01BB, r1
     4ca:	10 92 ba 01 	sts	0x01BA, r1
     4ce:	10 92 b5 01 	sts	0x01B5, r1
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	dc 01       	movw	r26, r24
     4d8:	80 93 b6 01 	sts	0x01B6, r24
     4dc:	90 93 b7 01 	sts	0x01B7, r25
     4e0:	a0 93 b8 01 	sts	0x01B8, r26
     4e4:	b0 93 b9 01 	sts	0x01B9, r27
     4e8:	80 93 c6 01 	sts	0x01C6, r24
     4ec:	90 93 c7 01 	sts	0x01C7, r25
     4f0:	a0 93 c8 01 	sts	0x01C8, r26
     4f4:	b0 93 c9 01 	sts	0x01C9, r27
     4f8:	80 93 bc 01 	sts	0x01BC, r24
     4fc:	90 93 bd 01 	sts	0x01BD, r25
     500:	a0 93 be 01 	sts	0x01BE, r26
     504:	b0 93 bf 01 	sts	0x01BF, r27
}
     508:	08 95       	ret

0000050a <on_off>:

void on_off(){ disp_on_off(); }
     50a:	95 de       	rcall	.-726    	; 0x236 <disp_on_off>
     50c:	08 95       	ret

0000050e <decide>:
2 - Middle Operator pressed, op.
3 - Input second operand, b.
4 - Result displayed.
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
     50e:	4f 92       	push	r4
     510:	5f 92       	push	r5
     512:	6f 92       	push	r6
     514:	7f 92       	push	r7
     516:	8f 92       	push	r8
     518:	9f 92       	push	r9
     51a:	af 92       	push	r10
     51c:	bf 92       	push	r11
     51e:	cf 92       	push	r12
     520:	df 92       	push	r13
     522:	ff 92       	push	r15
     524:	0f 93       	push	r16
     526:	1f 93       	push	r17
     528:	cf 93       	push	r28
     52a:	df 93       	push	r29
     52c:	f8 2e       	mov	r15, r24
     52e:	eb 01       	movw	r28, r22
     530:	6a 01       	movw	r12, r20
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     532:	18 2f       	mov	r17, r24
     534:	10 53       	subi	r17, 0x30	; 48
            count++;
            break;

        case 4:
            if (digit) {
                line[0] = ' ';
     536:	00 e2       	ldi	r16, 0x20	; 32

                move_to(0, 0);					//начало верхней строки
                send_string(line); 				// Clear 1st line.

                move_to(0, 0);
                a = b = op = count = 0;
     538:	0f 2e       	mov	r0, r31
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	8f 2e       	mov	r8, r31
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	9f 2e       	mov	r9, r31
     542:	f0 e0       	ldi	r31, 0x00	; 0
     544:	af 2e       	mov	r10, r31
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	bf 2e       	mov	r11, r31
     54a:	f0 2d       	mov	r31, r0
                state = 1;
     54c:	a1 e0       	ldi	r26, 0x01	; 1
     54e:	6a 2e       	mov	r6, r26
     550:	71 2c       	mov	r7, r1
*/

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     552:	1a 30       	cpi	r17, 0x0A	; 10
     554:	08 f0       	brcs	.+2      	; 0x558 <decide+0x4a>
     556:	3b c1       	rjmp	.+630    	; 0x7ce <decide+0x2c0>
    {
		unsigned char digit = key - '0'; // '2' --> 2

        switch (state) {
     558:	80 91 ba 01 	lds	r24, 0x01BA
     55c:	90 91 bb 01 	lds	r25, 0x01BB
     560:	82 30       	cpi	r24, 0x02	; 2
     562:	91 05       	cpc	r25, r1
     564:	09 f4       	brne	.+2      	; 0x568 <decide+0x5a>
     566:	8a c0       	rjmp	.+276    	; 0x67c <decide+0x16e>
     568:	83 30       	cpi	r24, 0x03	; 3
     56a:	91 05       	cpc	r25, r1
     56c:	38 f4       	brcc	.+14     	; 0x57c <decide+0x6e>
     56e:	00 97       	sbiw	r24, 0x00	; 0
     570:	71 f0       	breq	.+28     	; 0x58e <decide+0x80>
     572:	81 30       	cpi	r24, 0x01	; 1
     574:	91 05       	cpc	r25, r1
     576:	09 f0       	breq	.+2      	; 0x57a <decide+0x6c>
     578:	55 c2       	rjmp	.+1194   	; 0xa24 <decide+0x516>
     57a:	11 c0       	rjmp	.+34     	; 0x59e <decide+0x90>
     57c:	83 30       	cpi	r24, 0x03	; 3
     57e:	91 05       	cpc	r25, r1
     580:	09 f4       	brne	.+2      	; 0x584 <decide+0x76>
     582:	84 c0       	rjmp	.+264    	; 0x68c <decide+0x17e>
     584:	84 30       	cpi	r24, 0x04	; 4
     586:	91 05       	cpc	r25, r1
     588:	09 f0       	breq	.+2      	; 0x58c <decide+0x7e>
     58a:	4c c2       	rjmp	.+1176   	; 0xa24 <decide+0x516>
     58c:	f5 c0       	rjmp	.+490    	; 0x778 <decide+0x26a>

        case 0:
            if (digit) {
     58e:	11 23       	and	r17, r17
     590:	31 f0       	breq	.+12     	; 0x59e <decide+0x90>
                //clear(); 						// Clear screen if input is non-zero.
                state = 1;
     592:	81 e0       	ldi	r24, 0x01	; 1
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	90 93 bb 01 	sts	0x01BB, r25
     59a:	80 93 ba 01 	sts	0x01BA, r24
            }

        case 1:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.
     59e:	80 91 c0 01 	lds	r24, 0x01C0
     5a2:	90 91 c1 01 	lds	r25, 0x01C1
     5a6:	8e 30       	cpi	r24, 0x0E	; 14
     5a8:	91 05       	cpc	r25, r1
     5aa:	09 f4       	brne	.+2      	; 0x5ae <decide+0xa0>
     5ac:	3b c2       	rjmp	.+1142   	; 0xa24 <decide+0x516>

			if (*is_dec_p == 0) {
     5ae:	88 81       	ld	r24, Y
     5b0:	88 23       	and	r24, r24
     5b2:	41 f0       	breq	.+16     	; 0x5c4 <decide+0xb6>
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     5b4:	f6 01       	movw	r30, r12
     5b6:	c0 81       	ld	r28, Z
     5b8:	d1 81       	ldd	r29, Z+1	; 0x01
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	61 e0       	ldi	r22, 0x01	; 1
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	2f c0       	rjmp	.+94     	; 0x622 <decide+0x114>

        case 1:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.

			if (*is_dec_p == 0) {
            	a = a * 10 + digit;				// append to a
     5c4:	60 91 c6 01 	lds	r22, 0x01C6
     5c8:	70 91 c7 01 	lds	r23, 0x01C7
     5cc:	80 91 c8 01 	lds	r24, 0x01C8
     5d0:	90 91 c9 01 	lds	r25, 0x01C9
     5d4:	20 e0       	ldi	r18, 0x00	; 0
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	40 e2       	ldi	r20, 0x20	; 32
     5da:	51 e4       	ldi	r21, 0x41	; 65
     5dc:	1a d4       	rcall	.+2100   	; 0xe12 <__mulsf3>
     5de:	4b 01       	movw	r8, r22
     5e0:	5c 01       	movw	r10, r24
     5e2:	61 2f       	mov	r22, r17
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	88 27       	eor	r24, r24
     5e8:	77 fd       	sbrc	r23, 7
     5ea:	80 95       	com	r24
     5ec:	98 2f       	mov	r25, r24
     5ee:	da d5       	rcall	.+2996   	; 0x11a4 <__floatsisf>
     5f0:	9b 01       	movw	r18, r22
     5f2:	ac 01       	movw	r20, r24
     5f4:	c5 01       	movw	r24, r10
     5f6:	b4 01       	movw	r22, r8
     5f8:	ba d3       	rcall	.+1908   	; 0xd6e <__addsf3>
     5fa:	60 93 c6 01 	sts	0x01C6, r22
     5fe:	70 93 c7 01 	sts	0x01C7, r23
     602:	80 93 c8 01 	sts	0x01C8, r24
     606:	90 93 c9 01 	sts	0x01C9, r25
     60a:	aa c0       	rjmp	.+340    	; 0x760 <decide+0x252>

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     60c:	9b 01       	movw	r18, r22
     60e:	22 0f       	add	r18, r18
     610:	33 1f       	adc	r19, r19
     612:	e3 e0       	ldi	r30, 0x03	; 3
     614:	66 0f       	add	r22, r22
     616:	77 1f       	adc	r23, r23
     618:	ea 95       	dec	r30
     61a:	e1 f7       	brne	.-8      	; 0x614 <decide+0x106>
     61c:	62 0f       	add	r22, r18
     61e:	73 1f       	adc	r23, r19
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     620:	01 96       	adiw	r24, 0x01	; 1
     622:	8c 17       	cp	r24, r28
     624:	9d 07       	cpc	r25, r29
     626:	94 f3       	brlt	.-28     	; 0x60c <decide+0xfe>
					d = d * 10;
				}

				a = (a * d + digit) / d;
     628:	88 27       	eor	r24, r24
     62a:	77 fd       	sbrc	r23, 7
     62c:	80 95       	com	r24
     62e:	98 2f       	mov	r25, r24
     630:	b9 d5       	rcall	.+2930   	; 0x11a4 <__floatsisf>
     632:	4b 01       	movw	r8, r22
     634:	5c 01       	movw	r10, r24
     636:	20 91 c6 01 	lds	r18, 0x01C6
     63a:	30 91 c7 01 	lds	r19, 0x01C7
     63e:	40 91 c8 01 	lds	r20, 0x01C8
     642:	50 91 c9 01 	lds	r21, 0x01C9
     646:	e5 d3       	rcall	.+1994   	; 0xe12 <__mulsf3>
     648:	2b 01       	movw	r4, r22
     64a:	3c 01       	movw	r6, r24
     64c:	61 2f       	mov	r22, r17
     64e:	70 e0       	ldi	r23, 0x00	; 0
     650:	88 27       	eor	r24, r24
     652:	77 fd       	sbrc	r23, 7
     654:	80 95       	com	r24
     656:	98 2f       	mov	r25, r24
     658:	a5 d5       	rcall	.+2890   	; 0x11a4 <__floatsisf>
     65a:	9b 01       	movw	r18, r22
     65c:	ac 01       	movw	r20, r24
     65e:	c3 01       	movw	r24, r6
     660:	b2 01       	movw	r22, r4
     662:	85 d3       	rcall	.+1802   	; 0xd6e <__addsf3>
     664:	a5 01       	movw	r20, r10
     666:	94 01       	movw	r18, r8
     668:	c9 d4       	rcall	.+2450   	; 0xffc <__divsf3>
     66a:	60 93 c6 01 	sts	0x01C6, r22
     66e:	70 93 c7 01 	sts	0x01C7, r23
     672:	80 93 c8 01 	sts	0x01C8, r24
     676:	90 93 c9 01 	sts	0x01C9, r25
     67a:	6e c0       	rjmp	.+220    	; 0x758 <decide+0x24a>
            send_data(key);
            count++;
            break;

        case 2:
            if (digit) {
     67c:	11 23       	and	r17, r17
     67e:	31 f0       	breq	.+12     	; 0x68c <decide+0x17e>
				state = 3;
     680:	83 e0       	ldi	r24, 0x03	; 3
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	90 93 bb 01 	sts	0x01BB, r25
     688:	80 93 ba 01 	sts	0x01BA, r24
			}

        case 3:
			if (*is_dec_p == 0) {
     68c:	88 81       	ld	r24, Y
     68e:	88 23       	and	r24, r24
     690:	41 f0       	breq	.+16     	; 0x6a2 <decide+0x194>
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     692:	f6 01       	movw	r30, r12
     694:	c0 81       	ld	r28, Z
     696:	d1 81       	ldd	r29, Z+1	; 0x01
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	61 e0       	ldi	r22, 0x01	; 1
     69e:	70 e0       	ldi	r23, 0x00	; 0
     6a0:	2f c0       	rjmp	.+94     	; 0x700 <decide+0x1f2>
				state = 3;
			}

        case 3:
			if (*is_dec_p == 0) {
            	b = b * 10 + digit;				// append to b
     6a2:	60 91 b6 01 	lds	r22, 0x01B6
     6a6:	70 91 b7 01 	lds	r23, 0x01B7
     6aa:	80 91 b8 01 	lds	r24, 0x01B8
     6ae:	90 91 b9 01 	lds	r25, 0x01B9
     6b2:	20 e0       	ldi	r18, 0x00	; 0
     6b4:	30 e0       	ldi	r19, 0x00	; 0
     6b6:	40 e2       	ldi	r20, 0x20	; 32
     6b8:	51 e4       	ldi	r21, 0x41	; 65
     6ba:	ab d3       	rcall	.+1878   	; 0xe12 <__mulsf3>
     6bc:	4b 01       	movw	r8, r22
     6be:	5c 01       	movw	r10, r24
     6c0:	61 2f       	mov	r22, r17
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	88 27       	eor	r24, r24
     6c6:	77 fd       	sbrc	r23, 7
     6c8:	80 95       	com	r24
     6ca:	98 2f       	mov	r25, r24
     6cc:	6b d5       	rcall	.+2774   	; 0x11a4 <__floatsisf>
     6ce:	9b 01       	movw	r18, r22
     6d0:	ac 01       	movw	r20, r24
     6d2:	c5 01       	movw	r24, r10
     6d4:	b4 01       	movw	r22, r8
     6d6:	4b d3       	rcall	.+1686   	; 0xd6e <__addsf3>
     6d8:	60 93 b6 01 	sts	0x01B6, r22
     6dc:	70 93 b7 01 	sts	0x01B7, r23
     6e0:	80 93 b8 01 	sts	0x01B8, r24
     6e4:	90 93 b9 01 	sts	0x01B9, r25
     6e8:	3b c0       	rjmp	.+118    	; 0x760 <decide+0x252>
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     6ea:	9b 01       	movw	r18, r22
     6ec:	22 0f       	add	r18, r18
     6ee:	33 1f       	adc	r19, r19
     6f0:	43 e0       	ldi	r20, 0x03	; 3
     6f2:	66 0f       	add	r22, r22
     6f4:	77 1f       	adc	r23, r23
     6f6:	4a 95       	dec	r20
     6f8:	e1 f7       	brne	.-8      	; 0x6f2 <decide+0x1e4>
     6fa:	62 0f       	add	r22, r18
     6fc:	73 1f       	adc	r23, r19
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     6fe:	01 96       	adiw	r24, 0x01	; 1
     700:	8c 17       	cp	r24, r28
     702:	9d 07       	cpc	r25, r29
     704:	94 f3       	brlt	.-28     	; 0x6ea <decide+0x1dc>
					d = d * 10;
				}

				b = (b * d + digit) / d;
     706:	88 27       	eor	r24, r24
     708:	77 fd       	sbrc	r23, 7
     70a:	80 95       	com	r24
     70c:	98 2f       	mov	r25, r24
     70e:	4a d5       	rcall	.+2708   	; 0x11a4 <__floatsisf>
     710:	4b 01       	movw	r8, r22
     712:	5c 01       	movw	r10, r24
     714:	20 91 b6 01 	lds	r18, 0x01B6
     718:	30 91 b7 01 	lds	r19, 0x01B7
     71c:	40 91 b8 01 	lds	r20, 0x01B8
     720:	50 91 b9 01 	lds	r21, 0x01B9
     724:	76 d3       	rcall	.+1772   	; 0xe12 <__mulsf3>
     726:	2b 01       	movw	r4, r22
     728:	3c 01       	movw	r6, r24
     72a:	61 2f       	mov	r22, r17
     72c:	70 e0       	ldi	r23, 0x00	; 0
     72e:	88 27       	eor	r24, r24
     730:	77 fd       	sbrc	r23, 7
     732:	80 95       	com	r24
     734:	98 2f       	mov	r25, r24
     736:	36 d5       	rcall	.+2668   	; 0x11a4 <__floatsisf>
     738:	9b 01       	movw	r18, r22
     73a:	ac 01       	movw	r20, r24
     73c:	c3 01       	movw	r24, r6
     73e:	b2 01       	movw	r22, r4
     740:	16 d3       	rcall	.+1580   	; 0xd6e <__addsf3>
     742:	a5 01       	movw	r20, r10
     744:	94 01       	movw	r18, r8
     746:	5a d4       	rcall	.+2228   	; 0xffc <__divsf3>
     748:	60 93 b6 01 	sts	0x01B6, r22
     74c:	70 93 b7 01 	sts	0x01B7, r23
     750:	80 93 b8 01 	sts	0x01B8, r24
     754:	90 93 b9 01 	sts	0x01B9, r25

				*paw_p = *paw_p + 1;
     758:	21 96       	adiw	r28, 0x01	; 1
     75a:	f6 01       	movw	r30, r12
     75c:	d1 83       	std	Z+1, r29	; 0x01
     75e:	c0 83       	st	Z, r28
			}

            send_data(key);
     760:	8f 2d       	mov	r24, r15
     762:	01 dd       	rcall	.-1534   	; 0x166 <send_data>
            count++;
     764:	80 91 c0 01 	lds	r24, 0x01C0
     768:	90 91 c1 01 	lds	r25, 0x01C1
     76c:	01 96       	adiw	r24, 0x01	; 1
     76e:	90 93 c1 01 	sts	0x01C1, r25
     772:	80 93 c0 01 	sts	0x01C0, r24
            break;
     776:	56 c1       	rjmp	.+684    	; 0xa24 <decide+0x516>

        case 4:
            if (digit) {
     778:	11 23       	and	r17, r17
     77a:	09 f4       	brne	.+2      	; 0x77e <decide+0x270>
     77c:	53 c1       	rjmp	.+678    	; 0xa24 <decide+0x516>
                line[0] = ' ';
     77e:	00 93 7b 00 	sts	0x007B, r16
                line[1] = ' ';
     782:	00 93 7c 00 	sts	0x007C, r16

                move_to(0, 0);					//начало верхней строки
     786:	80 e0       	ldi	r24, 0x00	; 0
     788:	60 e0       	ldi	r22, 0x00	; 0
     78a:	49 dd       	rcall	.-1390   	; 0x21e <move_to>
                send_string(line); 				// Clear 1st line.
     78c:	8b e7       	ldi	r24, 0x7B	; 123
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	33 dd       	rcall	.-1434   	; 0x1f8 <send_string>

                move_to(0, 0);
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	60 e0       	ldi	r22, 0x00	; 0
     796:	43 dd       	rcall	.-1402   	; 0x21e <move_to>
                a = b = op = count = 0;
     798:	10 92 c1 01 	sts	0x01C1, r1
     79c:	10 92 c0 01 	sts	0x01C0, r1
     7a0:	10 92 b5 01 	sts	0x01B5, r1
     7a4:	80 92 b6 01 	sts	0x01B6, r8
     7a8:	90 92 b7 01 	sts	0x01B7, r9
     7ac:	a0 92 b8 01 	sts	0x01B8, r10
     7b0:	b0 92 b9 01 	sts	0x01B9, r11
     7b4:	80 92 c6 01 	sts	0x01C6, r8
     7b8:	90 92 c7 01 	sts	0x01C7, r9
     7bc:	a0 92 c8 01 	sts	0x01C8, r10
     7c0:	b0 92 c9 01 	sts	0x01C9, r11
                state = 1;
     7c4:	70 92 bb 01 	sts	0x01BB, r7
     7c8:	60 92 ba 01 	sts	0x01BA, r6

                decide(key, is_dec_p, paw_p); 	// Recursively capture digit.
                return;
     7cc:	c2 ce       	rjmp	.-636    	; 0x552 <decide+0x44>
            break;

        }
    } 

	else if (key == '.') {
     7ce:	ff 2d       	mov	r31, r15
     7d0:	fe 32       	cpi	r31, 0x2E	; 46
     7d2:	21 f4       	brne	.+8      	; 0x7dc <decide+0x2ce>
		*is_dec_p = 1;
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	88 83       	st	Y, r24
		send_data(key);
     7d8:	8e e2       	ldi	r24, 0x2E	; 46
     7da:	1f c1       	rjmp	.+574    	; 0xa1a <decide+0x50c>
	}

	else {
		
		*is_dec_p = 0;
     7dc:	18 82       	st	Y, r1
		*paw_p = 1;		
     7de:	81 e0       	ldi	r24, 0x01	; 1
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	f6 01       	movw	r30, r12
     7e4:	91 83       	std	Z+1, r25	; 0x01
     7e6:	80 83       	st	Z, r24

        switch (key) {
     7e8:	ff 2d       	mov	r31, r15
     7ea:	f4 34       	cpi	r31, 0x44	; 68
     7ec:	09 f4       	brne	.+2      	; 0x7f0 <decide+0x2e2>
     7ee:	11 c1       	rjmp	.+546    	; 0xa12 <decide+0x504>
     7f0:	f5 34       	cpi	r31, 0x45	; 69
     7f2:	c0 f4       	brcc	.+48     	; 0x824 <decide+0x316>
     7f4:	fd 33       	cpi	r31, 0x3D	; 61
     7f6:	09 f4       	brne	.+2      	; 0x7fa <decide+0x2ec>
     7f8:	b9 c0       	rjmp	.+370    	; 0x96c <decide+0x45e>
     7fa:	fe 33       	cpi	r31, 0x3E	; 62
     7fc:	58 f4       	brcc	.+22     	; 0x814 <decide+0x306>
     7fe:	fa 32       	cpi	r31, 0x2A	; 42
     800:	08 f4       	brcc	.+2      	; 0x804 <decide+0x2f6>
     802:	10 c1       	rjmp	.+544    	; 0xa24 <decide+0x516>
     804:	fc 32       	cpi	r31, 0x2C	; 44
     806:	08 f1       	brcs	.+66     	; 0x84a <decide+0x33c>
     808:	fd 32       	cpi	r31, 0x2D	; 45
     80a:	f9 f0       	breq	.+62     	; 0x84a <decide+0x33c>
     80c:	ff 32       	cpi	r31, 0x2F	; 47
     80e:	09 f0       	breq	.+2      	; 0x812 <decide+0x304>
     810:	09 c1       	rjmp	.+530    	; 0xa24 <decide+0x516>
     812:	1b c0       	rjmp	.+54     	; 0x84a <decide+0x33c>
     814:	8f 2d       	mov	r24, r15
     816:	81 34       	cpi	r24, 0x41	; 65
     818:	09 f4       	brne	.+2      	; 0x81c <decide+0x30e>
     81a:	e2 c0       	rjmp	.+452    	; 0x9e0 <decide+0x4d2>
     81c:	83 34       	cpi	r24, 0x43	; 67
     81e:	09 f0       	breq	.+2      	; 0x822 <decide+0x314>
     820:	01 c1       	rjmp	.+514    	; 0xa24 <decide+0x516>
     822:	dc c0       	rjmp	.+440    	; 0x9dc <decide+0x4ce>
     824:	ef 2d       	mov	r30, r15
     826:	e0 37       	cpi	r30, 0x70	; 112
     828:	81 f0       	breq	.+32     	; 0x84a <decide+0x33c>
     82a:	e1 37       	cpi	r30, 0x71	; 113
     82c:	38 f4       	brcc	.+14     	; 0x83c <decide+0x32e>
     82e:	ef 34       	cpi	r30, 0x4F	; 79
     830:	09 f4       	brne	.+2      	; 0x834 <decide+0x326>
     832:	f5 c0       	rjmp	.+490    	; 0xa1e <decide+0x510>
     834:	ed 36       	cpi	r30, 0x6D	; 109
     836:	09 f0       	breq	.+2      	; 0x83a <decide+0x32c>
     838:	f5 c0       	rjmp	.+490    	; 0xa24 <decide+0x516>
     83a:	07 c0       	rjmp	.+14     	; 0x84a <decide+0x33c>
     83c:	ff 2d       	mov	r31, r15
     83e:	f5 37       	cpi	r31, 0x75	; 117
     840:	09 f4       	brne	.+2      	; 0x844 <decide+0x336>
     842:	ef c0       	rjmp	.+478    	; 0xa22 <decide+0x514>
     844:	f6 37       	cpi	r31, 0x76	; 118
     846:	09 f0       	breq	.+2      	; 0x84a <decide+0x33c>
     848:	ed c0       	rjmp	.+474    	; 0xa24 <decide+0x516>
        case '+':
        case '-':
        case 'p':
        case 'm':
		case 'v':
            switch (state) {
     84a:	80 91 ba 01 	lds	r24, 0x01BA
     84e:	90 91 bb 01 	lds	r25, 0x01BB
     852:	82 30       	cpi	r24, 0x02	; 2
     854:	91 05       	cpc	r25, r1
     856:	81 f0       	breq	.+32     	; 0x878 <decide+0x36a>
     858:	83 30       	cpi	r24, 0x03	; 3
     85a:	91 05       	cpc	r25, r1
     85c:	28 f4       	brcc	.+10     	; 0x868 <decide+0x35a>
     85e:	81 30       	cpi	r24, 0x01	; 1
     860:	91 05       	cpc	r25, r1
     862:	09 f0       	breq	.+2      	; 0x866 <decide+0x358>
     864:	80 c0       	rjmp	.+256    	; 0x966 <decide+0x458>
     866:	0b c0       	rjmp	.+22     	; 0x87e <decide+0x370>
     868:	83 30       	cpi	r24, 0x03	; 3
     86a:	91 05       	cpc	r25, r1
     86c:	d1 f0       	breq	.+52     	; 0x8a2 <decide+0x394>
     86e:	84 30       	cpi	r24, 0x04	; 4
     870:	91 05       	cpc	r25, r1
     872:	09 f0       	breq	.+2      	; 0x876 <decide+0x368>
     874:	78 c0       	rjmp	.+240    	; 0x966 <decide+0x458>
     876:	44 c0       	rjmp	.+136    	; 0x900 <decide+0x3f2>

            case 2:
                move_to(0,0); 		// Modify the operand displayed.
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	60 e0       	ldi	r22, 0x00	; 0
     87c:	d0 dc       	rcall	.-1632   	; 0x21e <move_to>

            case 1:
                send_data(key);
     87e:	8f 2d       	mov	r24, r15
     880:	72 dc       	rcall	.-1820   	; 0x166 <send_data>
                count++;
     882:	80 91 c0 01 	lds	r24, 0x01C0
     886:	90 91 c1 01 	lds	r25, 0x01C1
     88a:	01 96       	adiw	r24, 0x01	; 1
     88c:	90 93 c1 01 	sts	0x01C1, r25
     890:	80 93 c0 01 	sts	0x01C0, r24
                state = 2;
     894:	82 e0       	ldi	r24, 0x02	; 2
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	90 93 bb 01 	sts	0x01BB, r25
     89c:	80 93 ba 01 	sts	0x01BA, r24
                break;
     8a0:	62 c0       	rjmp	.+196    	; 0x966 <decide+0x458>

            case 3:
                calculate(a, op, b);
     8a2:	60 91 c6 01 	lds	r22, 0x01C6
     8a6:	70 91 c7 01 	lds	r23, 0x01C7
     8aa:	80 91 c8 01 	lds	r24, 0x01C8
     8ae:	90 91 c9 01 	lds	r25, 0x01C9
     8b2:	00 91 b6 01 	lds	r16, 0x01B6
     8b6:	10 91 b7 01 	lds	r17, 0x01B7
     8ba:	20 91 b8 01 	lds	r18, 0x01B8
     8be:	30 91 b9 01 	lds	r19, 0x01B9
     8c2:	40 91 b5 01 	lds	r20, 0x01B5
     8c6:	60 dd       	rcall	.-1344   	; 0x388 <calculate>
                show_result();
     8c8:	c1 dd       	rcall	.-1150   	; 0x44c <show_result>
				ans = calculate(a, op, b);
     8ca:	60 91 c6 01 	lds	r22, 0x01C6
     8ce:	70 91 c7 01 	lds	r23, 0x01C7
     8d2:	80 91 c8 01 	lds	r24, 0x01C8
     8d6:	90 91 c9 01 	lds	r25, 0x01C9
     8da:	00 91 b6 01 	lds	r16, 0x01B6
     8de:	10 91 b7 01 	lds	r17, 0x01B7
     8e2:	20 91 b8 01 	lds	r18, 0x01B8
     8e6:	30 91 b9 01 	lds	r19, 0x01B9
     8ea:	40 91 b5 01 	lds	r20, 0x01B5
     8ee:	4c dd       	rcall	.-1384   	; 0x388 <calculate>
     8f0:	60 93 c2 01 	sts	0x01C2, r22
     8f4:	70 93 c3 01 	sts	0x01C3, r23
     8f8:	80 93 c4 01 	sts	0x01C4, r24
     8fc:	90 93 c5 01 	sts	0x01C5, r25

            case 4:
                move_to(0, 0);
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	8c dc       	rcall	.-1768   	; 0x21e <move_to>
                line[0] = 'A'; 		// 'A' represents current result.
     906:	81 e4       	ldi	r24, 0x41	; 65
     908:	80 93 7b 00 	sts	0x007B, r24
                line[1] = key; 		// Operator of the operation.
     90c:	f0 92 7c 00 	sts	0x007C, r15
                send_string(line);
     910:	8b e7       	ldi	r24, 0x7B	; 123
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	71 dc       	rcall	.-1822   	; 0x1f8 <send_string>

                move_to(2,0);
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	60 e0       	ldi	r22, 0x00	; 0
     91a:	81 dc       	rcall	.-1790   	; 0x21e <move_to>
                count = 2;
     91c:	22 e0       	ldi	r18, 0x02	; 2
     91e:	30 e0       	ldi	r19, 0x00	; 0
     920:	30 93 c1 01 	sts	0x01C1, r19
     924:	20 93 c0 01 	sts	0x01C0, r18
                a = r; 				// Put result into a.
     928:	80 91 bc 01 	lds	r24, 0x01BC
     92c:	90 91 bd 01 	lds	r25, 0x01BD
     930:	a0 91 be 01 	lds	r26, 0x01BE
     934:	b0 91 bf 01 	lds	r27, 0x01BF
     938:	80 93 c6 01 	sts	0x01C6, r24
     93c:	90 93 c7 01 	sts	0x01C7, r25
     940:	a0 93 c8 01 	sts	0x01C8, r26
     944:	b0 93 c9 01 	sts	0x01C9, r27
                b = 0; 				// Clear b.
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	dc 01       	movw	r26, r24
     94e:	80 93 b6 01 	sts	0x01B6, r24
     952:	90 93 b7 01 	sts	0x01B7, r25
     956:	a0 93 b8 01 	sts	0x01B8, r26
     95a:	b0 93 b9 01 	sts	0x01B9, r27
                state = 2;
     95e:	30 93 bb 01 	sts	0x01BB, r19
     962:	20 93 ba 01 	sts	0x01BA, r18

                break;
            }

            op = key;
     966:	f0 92 b5 01 	sts	0x01B5, r15

            break;
     96a:	5c c0       	rjmp	.+184    	; 0xa24 <decide+0x516>

        case '=':
            if(state == 3){
     96c:	80 91 ba 01 	lds	r24, 0x01BA
     970:	90 91 bb 01 	lds	r25, 0x01BB
     974:	83 30       	cpi	r24, 0x03	; 3
     976:	91 05       	cpc	r25, r1
     978:	09 f0       	breq	.+2      	; 0x97c <decide+0x46e>
     97a:	54 c0       	rjmp	.+168    	; 0xa24 <decide+0x516>
                calculate(a, op, b);
     97c:	60 91 c6 01 	lds	r22, 0x01C6
     980:	70 91 c7 01 	lds	r23, 0x01C7
     984:	80 91 c8 01 	lds	r24, 0x01C8
     988:	90 91 c9 01 	lds	r25, 0x01C9
     98c:	00 91 b6 01 	lds	r16, 0x01B6
     990:	10 91 b7 01 	lds	r17, 0x01B7
     994:	20 91 b8 01 	lds	r18, 0x01B8
     998:	30 91 b9 01 	lds	r19, 0x01B9
     99c:	40 91 b5 01 	lds	r20, 0x01B5
     9a0:	f3 dc       	rcall	.-1562   	; 0x388 <calculate>
                show_result();
     9a2:	54 dd       	rcall	.-1368   	; 0x44c <show_result>
				ans = calculate(a, op, b);
     9a4:	60 91 c6 01 	lds	r22, 0x01C6
     9a8:	70 91 c7 01 	lds	r23, 0x01C7
     9ac:	80 91 c8 01 	lds	r24, 0x01C8
     9b0:	90 91 c9 01 	lds	r25, 0x01C9
     9b4:	00 91 b6 01 	lds	r16, 0x01B6
     9b8:	10 91 b7 01 	lds	r17, 0x01B7
     9bc:	20 91 b8 01 	lds	r18, 0x01B8
     9c0:	30 91 b9 01 	lds	r19, 0x01B9
     9c4:	40 91 b5 01 	lds	r20, 0x01B5
     9c8:	df dc       	rcall	.-1602   	; 0x388 <calculate>
     9ca:	60 93 c2 01 	sts	0x01C2, r22
     9ce:	70 93 c3 01 	sts	0x01C3, r23
     9d2:	80 93 c4 01 	sts	0x01C4, r24
     9d6:	90 93 c5 01 	sts	0x01C5, r25
     9da:	24 c0       	rjmp	.+72     	; 0xa24 <decide+0x516>
            }
            break;

        case 'C': // "C" button.
            //if (state != 0) 
			reset();
     9dc:	6c dd       	rcall	.-1320   	; 0x4b6 <reset>
            break;
     9de:	22 c0       	rjmp	.+68     	; 0xa24 <decide+0x516>

        case 'A': // "ANS" button.
			send_data('A');
     9e0:	81 e4       	ldi	r24, 0x41	; 65
     9e2:	c1 db       	rcall	.-2174   	; 0x166 <send_data>
			b = ans;
     9e4:	80 91 c2 01 	lds	r24, 0x01C2
     9e8:	90 91 c3 01 	lds	r25, 0x01C3
     9ec:	a0 91 c4 01 	lds	r26, 0x01C4
     9f0:	b0 91 c5 01 	lds	r27, 0x01C5
     9f4:	80 93 b6 01 	sts	0x01B6, r24
     9f8:	90 93 b7 01 	sts	0x01B7, r25
     9fc:	a0 93 b8 01 	sts	0x01B8, r26
     a00:	b0 93 b9 01 	sts	0x01B9, r27
			state = 3;
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	90 93 bb 01 	sts	0x01BB, r25
     a0c:	80 93 ba 01 	sts	0x01BA, r24
            break;
     a10:	09 c0       	rjmp	.+18     	; 0xa24 <decide+0x516>

        case 'D': // "DEL" button.
			move_to(-1,0);
     a12:	8f ef       	ldi	r24, 0xFF	; 255
     a14:	60 e0       	ldi	r22, 0x00	; 0
     a16:	03 dc       	rcall	.-2042   	; 0x21e <move_to>
			send_data(' ');
     a18:	80 e2       	ldi	r24, 0x20	; 32
     a1a:	a5 db       	rcall	.-2230   	; 0x166 <send_data>
            break;
     a1c:	03 c0       	rjmp	.+6      	; 0xa24 <decide+0x516>
    clear();
    move_to(0, 0);		//начало верхней строки
    r = a = b = op = state = count = 0;
}

void on_off(){ disp_on_off(); }
     a1e:	0b dc       	rcall	.-2026   	; 0x236 <disp_on_off>
			send_data(' ');
            break;

		case 'O':
			on_off();
			break;
     a20:	01 c0       	rjmp	.+2      	; 0xa24 <decide+0x516>

		case 'u':
			uart();
     a22:	83 dc       	rcall	.-1786   	; 0x32a <uart>
			break;
        }
    }
}
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	1f 91       	pop	r17
     a2a:	0f 91       	pop	r16
     a2c:	ff 90       	pop	r15
     a2e:	df 90       	pop	r13
     a30:	cf 90       	pop	r12
     a32:	bf 90       	pop	r11
     a34:	af 90       	pop	r10
     a36:	9f 90       	pop	r9
     a38:	8f 90       	pop	r8
     a3a:	7f 90       	pop	r7
     a3c:	6f 90       	pop	r6
     a3e:	5f 90       	pop	r5
     a40:	4f 90       	pop	r4
     a42:	08 95       	ret

00000a44 <run>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
}

void run() {
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	df 93       	push	r29
     a4e:	cf 93       	push	r28
     a50:	00 d0       	rcall	.+0      	; 0xa52 <run+0xe>
     a52:	0f 92       	push	r0
     a54:	cd b7       	in	r28, 0x3d	; 61
     a56:	de b7       	in	r29, 0x3e	; 62
	bool *is_dec_p;
	bool is_decimal = 0;		//флаг (0 - целая часть, 1 - дробная)
     a58:	19 82       	std	Y+1, r1	; 0x01
	is_dec_p = &is_decimal;

	int *paw_p;
	int paw = 1;				//разряд после запятой
     a5a:	81 e0       	ldi	r24, 0x01	; 1
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	9b 83       	std	Y+3, r25	; 0x03
     a60:	8a 83       	std	Y+2, r24	; 0x02
	paw_p = &paw;
     a62:	b2 e0       	ldi	r27, 0x02	; 2
     a64:	eb 2e       	mov	r14, r27
     a66:	f1 2c       	mov	r15, r1
     a68:	ec 0e       	add	r14, r28
     a6a:	fd 1e       	adc	r15, r29

    while (1) {
        decide(scan_key(), is_dec_p, paw_p);
     a6c:	8e 01       	movw	r16, r28
     a6e:	0f 5f       	subi	r16, 0xFF	; 255
     a70:	1f 4f       	sbci	r17, 0xFF	; 255
     a72:	11 dc       	rcall	.-2014   	; 0x296 <scan_key>
     a74:	b8 01       	movw	r22, r16
     a76:	a7 01       	movw	r20, r14
     a78:	4a dd       	rcall	.-1388   	; 0x50e <decide>
     a7a:	fb cf       	rjmp	.-10     	; 0xa72 <run+0x2e>

00000a7c <init_calculator>:
     a7c:	8f e9       	ldi	r24, 0x9F	; 159
     a7e:	96 e8       	ldi	r25, 0x86	; 134
     a80:	a1 e0       	ldi	r26, 0x01	; 1
     a82:	81 50       	subi	r24, 0x01	; 1
     a84:	90 40       	sbci	r25, 0x00	; 0
     a86:	a0 40       	sbci	r26, 0x00	; 0
     a88:	e1 f7       	brne	.-8      	; 0xa82 <init_calculator+0x6>
     a8a:	00 c0       	rjmp	.+0      	; 0xa8c <init_calculator+0x10>
     a8c:	00 00       	nop
static char buffer[16];
static char overflow[] = "   Overflow   ";

void init_calculator() {
    _delay_ms(500);
    init_display();
     a8e:	79 db       	rcall	.-2318   	; 0x182 <init_display>
    init_keyboard();
     a90:	fb db       	rcall	.-2058   	; 0x288 <init_keyboard>
	UsartInit();
     a92:	03 d0       	rcall	.+6      	; 0xa9a <UsartInit>

    reset();
     a94:	10 dd       	rcall	.-1504   	; 0x4b6 <reset>
    run();
     a96:	d6 df       	rcall	.-84     	; 0xa44 <run>
}
     a98:	08 95       	ret

00000a9a <UsartInit>:

#include "uart.h"

void UsartInit()
{
	UBRRL=25;                  				//1 000 000 / (2400 * 16) - 1 = 25
     a9a:	89 e1       	ldi	r24, 0x19	; 25
     a9c:	89 b9       	out	0x09, r24	; 9
  	UCSRB=(1<<TXEN);              			//?ac?aoaai ia?aaa?o
     a9e:	88 e0       	ldi	r24, 0x08	; 8
     aa0:	8a b9       	out	0x0a, r24	; 10
  	UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));   //?a?ei ?aaiou 8 aeo
     aa2:	86 e8       	ldi	r24, 0x86	; 134
     aa4:	80 bd       	out	0x20, r24	; 32
}
     aa6:	08 95       	ret

00000aa8 <Transmit>:

void Transmit(char* data)
{
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
  	for (int i=0; i<strlen(data); i++)
     aac:	28 2f       	mov	r18, r24
     aae:	39 2f       	mov	r19, r25
     ab0:	e9 01       	movw	r28, r18
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	06 c0       	rjmp	.+12     	; 0xac4 <Transmit+0x1c>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
     ab8:	5d 9b       	sbis	0x0b, 5	; 11
     aba:	fe cf       	rjmp	.-4      	; 0xab8 <Transmit+0x10>
      	UDR = data[i];
     abc:	49 91       	ld	r20, Y+
     abe:	4c b9       	out	0x0c, r20	; 12
  	UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));   //?a?ei ?aaiou 8 aeo
}

void Transmit(char* data)
{
  	for (int i=0; i<strlen(data); i++)
     ac0:	2f 5f       	subi	r18, 0xFF	; 255
     ac2:	3f 4f       	sbci	r19, 0xFF	; 255
     ac4:	fc 01       	movw	r30, r24
     ac6:	01 90       	ld	r0, Z+
     ac8:	00 20       	and	r0, r0
     aca:	e9 f7       	brne	.-6      	; 0xac6 <Transmit+0x1e>
     acc:	31 97       	sbiw	r30, 0x01	; 1
     ace:	e8 1b       	sub	r30, r24
     ad0:	f9 0b       	sbc	r31, r25
     ad2:	2e 17       	cp	r18, r30
     ad4:	3f 07       	cpc	r19, r31
     ad6:	80 f3       	brcs	.-32     	; 0xab8 <Transmit+0x10>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
      	UDR = data[i];
  	}
}
     ad8:	df 91       	pop	r29
     ada:	cf 91       	pop	r28
     adc:	08 95       	ret

00000ade <_fpadd_parts>:
     ade:	a0 e0       	ldi	r26, 0x00	; 0
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	e4 e7       	ldi	r30, 0x74	; 116
     ae4:	f5 e0       	ldi	r31, 0x05	; 5
     ae6:	1d c6       	rjmp	.+3130   	; 0x1722 <__prologue_saves__+0x8>
     ae8:	fc 01       	movw	r30, r24
     aea:	ea 01       	movw	r28, r20
     aec:	80 81       	ld	r24, Z
     aee:	82 30       	cpi	r24, 0x02	; 2
     af0:	08 f4       	brcc	.+2      	; 0xaf4 <_fpadd_parts+0x16>
     af2:	38 c1       	rjmp	.+624    	; 0xd64 <_fpadd_parts+0x286>
     af4:	db 01       	movw	r26, r22
     af6:	9c 91       	ld	r25, X
     af8:	92 30       	cpi	r25, 0x02	; 2
     afa:	08 f4       	brcc	.+2      	; 0xafe <_fpadd_parts+0x20>
     afc:	30 c1       	rjmp	.+608    	; 0xd5e <_fpadd_parts+0x280>
     afe:	84 30       	cpi	r24, 0x04	; 4
     b00:	59 f4       	brne	.+22     	; 0xb18 <_fpadd_parts+0x3a>
     b02:	94 30       	cpi	r25, 0x04	; 4
     b04:	09 f0       	breq	.+2      	; 0xb08 <_fpadd_parts+0x2a>
     b06:	2e c1       	rjmp	.+604    	; 0xd64 <_fpadd_parts+0x286>
     b08:	91 81       	ldd	r25, Z+1	; 0x01
     b0a:	11 96       	adiw	r26, 0x01	; 1
     b0c:	8c 91       	ld	r24, X
     b0e:	11 97       	sbiw	r26, 0x01	; 1
     b10:	98 17       	cp	r25, r24
     b12:	09 f0       	breq	.+2      	; 0xb16 <_fpadd_parts+0x38>
     b14:	21 c1       	rjmp	.+578    	; 0xd58 <_fpadd_parts+0x27a>
     b16:	26 c1       	rjmp	.+588    	; 0xd64 <_fpadd_parts+0x286>
     b18:	94 30       	cpi	r25, 0x04	; 4
     b1a:	09 f4       	brne	.+2      	; 0xb1e <_fpadd_parts+0x40>
     b1c:	20 c1       	rjmp	.+576    	; 0xd5e <_fpadd_parts+0x280>
     b1e:	92 30       	cpi	r25, 0x02	; 2
     b20:	b1 f4       	brne	.+44     	; 0xb4e <_fpadd_parts+0x70>
     b22:	82 30       	cpi	r24, 0x02	; 2
     b24:	09 f0       	breq	.+2      	; 0xb28 <_fpadd_parts+0x4a>
     b26:	1e c1       	rjmp	.+572    	; 0xd64 <_fpadd_parts+0x286>
     b28:	ca 01       	movw	r24, r20
     b2a:	af 01       	movw	r20, r30
     b2c:	28 e0       	ldi	r18, 0x08	; 8
     b2e:	da 01       	movw	r26, r20
     b30:	0d 90       	ld	r0, X+
     b32:	ad 01       	movw	r20, r26
     b34:	dc 01       	movw	r26, r24
     b36:	0d 92       	st	X+, r0
     b38:	cd 01       	movw	r24, r26
     b3a:	21 50       	subi	r18, 0x01	; 1
     b3c:	c1 f7       	brne	.-16     	; 0xb2e <_fpadd_parts+0x50>
     b3e:	db 01       	movw	r26, r22
     b40:	11 96       	adiw	r26, 0x01	; 1
     b42:	8c 91       	ld	r24, X
     b44:	11 97       	sbiw	r26, 0x01	; 1
     b46:	91 81       	ldd	r25, Z+1	; 0x01
     b48:	89 23       	and	r24, r25
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	0a c1       	rjmp	.+532    	; 0xd62 <_fpadd_parts+0x284>
     b4e:	82 30       	cpi	r24, 0x02	; 2
     b50:	09 f4       	brne	.+2      	; 0xb54 <_fpadd_parts+0x76>
     b52:	05 c1       	rjmp	.+522    	; 0xd5e <_fpadd_parts+0x280>
     b54:	c2 80       	ldd	r12, Z+2	; 0x02
     b56:	d3 80       	ldd	r13, Z+3	; 0x03
     b58:	db 01       	movw	r26, r22
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	6d 90       	ld	r6, X+
     b5e:	7c 90       	ld	r7, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	24 81       	ldd	r18, Z+4	; 0x04
     b64:	35 81       	ldd	r19, Z+5	; 0x05
     b66:	46 81       	ldd	r20, Z+6	; 0x06
     b68:	57 81       	ldd	r21, Z+7	; 0x07
     b6a:	14 96       	adiw	r26, 0x04	; 4
     b6c:	ed 90       	ld	r14, X+
     b6e:	fd 90       	ld	r15, X+
     b70:	0d 91       	ld	r16, X+
     b72:	1c 91       	ld	r17, X
     b74:	17 97       	sbiw	r26, 0x07	; 7
     b76:	c6 01       	movw	r24, r12
     b78:	86 19       	sub	r24, r6
     b7a:	97 09       	sbc	r25, r7
     b7c:	5c 01       	movw	r10, r24
     b7e:	97 ff       	sbrs	r25, 7
     b80:	04 c0       	rjmp	.+8      	; 0xb8a <_fpadd_parts+0xac>
     b82:	aa 24       	eor	r10, r10
     b84:	bb 24       	eor	r11, r11
     b86:	a8 1a       	sub	r10, r24
     b88:	b9 0a       	sbc	r11, r25
     b8a:	b0 e2       	ldi	r27, 0x20	; 32
     b8c:	ab 16       	cp	r10, r27
     b8e:	b1 04       	cpc	r11, r1
     b90:	0c f0       	brlt	.+2      	; 0xb94 <_fpadd_parts+0xb6>
     b92:	61 c0       	rjmp	.+194    	; 0xc56 <_fpadd_parts+0x178>
     b94:	18 16       	cp	r1, r24
     b96:	19 06       	cpc	r1, r25
     b98:	6c f5       	brge	.+90     	; 0xbf4 <_fpadd_parts+0x116>
     b9a:	37 01       	movw	r6, r14
     b9c:	48 01       	movw	r8, r16
     b9e:	0a 2c       	mov	r0, r10
     ba0:	04 c0       	rjmp	.+8      	; 0xbaa <_fpadd_parts+0xcc>
     ba2:	96 94       	lsr	r9
     ba4:	87 94       	ror	r8
     ba6:	77 94       	ror	r7
     ba8:	67 94       	ror	r6
     baa:	0a 94       	dec	r0
     bac:	d2 f7       	brpl	.-12     	; 0xba2 <_fpadd_parts+0xc4>
     bae:	81 e0       	ldi	r24, 0x01	; 1
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	a0 e0       	ldi	r26, 0x00	; 0
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	0a 2c       	mov	r0, r10
     bb8:	04 c0       	rjmp	.+8      	; 0xbc2 <_fpadd_parts+0xe4>
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	aa 1f       	adc	r26, r26
     bc0:	bb 1f       	adc	r27, r27
     bc2:	0a 94       	dec	r0
     bc4:	d2 f7       	brpl	.-12     	; 0xbba <_fpadd_parts+0xdc>
     bc6:	01 97       	sbiw	r24, 0x01	; 1
     bc8:	a1 09       	sbc	r26, r1
     bca:	b1 09       	sbc	r27, r1
     bcc:	8e 21       	and	r24, r14
     bce:	9f 21       	and	r25, r15
     bd0:	a0 23       	and	r26, r16
     bd2:	b1 23       	and	r27, r17
     bd4:	ee 24       	eor	r14, r14
     bd6:	ff 24       	eor	r15, r15
     bd8:	87 01       	movw	r16, r14
     bda:	e3 94       	inc	r14
     bdc:	00 97       	sbiw	r24, 0x00	; 0
     bde:	a1 05       	cpc	r26, r1
     be0:	b1 05       	cpc	r27, r1
     be2:	19 f4       	brne	.+6      	; 0xbea <_fpadd_parts+0x10c>
     be4:	ee 24       	eor	r14, r14
     be6:	ff 24       	eor	r15, r15
     be8:	87 01       	movw	r16, r14
     bea:	e6 28       	or	r14, r6
     bec:	f7 28       	or	r15, r7
     bee:	08 29       	or	r16, r8
     bf0:	19 29       	or	r17, r9
     bf2:	3c c0       	rjmp	.+120    	; 0xc6c <_fpadd_parts+0x18e>
     bf4:	00 97       	sbiw	r24, 0x00	; 0
     bf6:	d1 f1       	breq	.+116    	; 0xc6c <_fpadd_parts+0x18e>
     bf8:	ca 0c       	add	r12, r10
     bfa:	db 1c       	adc	r13, r11
     bfc:	39 01       	movw	r6, r18
     bfe:	4a 01       	movw	r8, r20
     c00:	0a 2c       	mov	r0, r10
     c02:	04 c0       	rjmp	.+8      	; 0xc0c <_fpadd_parts+0x12e>
     c04:	96 94       	lsr	r9
     c06:	87 94       	ror	r8
     c08:	77 94       	ror	r7
     c0a:	67 94       	ror	r6
     c0c:	0a 94       	dec	r0
     c0e:	d2 f7       	brpl	.-12     	; 0xc04 <_fpadd_parts+0x126>
     c10:	81 e0       	ldi	r24, 0x01	; 1
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	a0 e0       	ldi	r26, 0x00	; 0
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	0a 2c       	mov	r0, r10
     c1a:	04 c0       	rjmp	.+8      	; 0xc24 <_fpadd_parts+0x146>
     c1c:	88 0f       	add	r24, r24
     c1e:	99 1f       	adc	r25, r25
     c20:	aa 1f       	adc	r26, r26
     c22:	bb 1f       	adc	r27, r27
     c24:	0a 94       	dec	r0
     c26:	d2 f7       	brpl	.-12     	; 0xc1c <_fpadd_parts+0x13e>
     c28:	01 97       	sbiw	r24, 0x01	; 1
     c2a:	a1 09       	sbc	r26, r1
     c2c:	b1 09       	sbc	r27, r1
     c2e:	82 23       	and	r24, r18
     c30:	93 23       	and	r25, r19
     c32:	a4 23       	and	r26, r20
     c34:	b5 23       	and	r27, r21
     c36:	21 e0       	ldi	r18, 0x01	; 1
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	40 e0       	ldi	r20, 0x00	; 0
     c3c:	50 e0       	ldi	r21, 0x00	; 0
     c3e:	00 97       	sbiw	r24, 0x00	; 0
     c40:	a1 05       	cpc	r26, r1
     c42:	b1 05       	cpc	r27, r1
     c44:	19 f4       	brne	.+6      	; 0xc4c <_fpadd_parts+0x16e>
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	a9 01       	movw	r20, r18
     c4c:	26 29       	or	r18, r6
     c4e:	37 29       	or	r19, r7
     c50:	48 29       	or	r20, r8
     c52:	59 29       	or	r21, r9
     c54:	0b c0       	rjmp	.+22     	; 0xc6c <_fpadd_parts+0x18e>
     c56:	6c 14       	cp	r6, r12
     c58:	7d 04       	cpc	r7, r13
     c5a:	24 f4       	brge	.+8      	; 0xc64 <_fpadd_parts+0x186>
     c5c:	ee 24       	eor	r14, r14
     c5e:	ff 24       	eor	r15, r15
     c60:	87 01       	movw	r16, r14
     c62:	04 c0       	rjmp	.+8      	; 0xc6c <_fpadd_parts+0x18e>
     c64:	63 01       	movw	r12, r6
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	a9 01       	movw	r20, r18
     c6c:	81 81       	ldd	r24, Z+1	; 0x01
     c6e:	fb 01       	movw	r30, r22
     c70:	91 81       	ldd	r25, Z+1	; 0x01
     c72:	89 17       	cp	r24, r25
     c74:	09 f4       	brne	.+2      	; 0xc78 <_fpadd_parts+0x19a>
     c76:	45 c0       	rjmp	.+138    	; 0xd02 <_fpadd_parts+0x224>
     c78:	88 23       	and	r24, r24
     c7a:	49 f0       	breq	.+18     	; 0xc8e <_fpadd_parts+0x1b0>
     c7c:	d8 01       	movw	r26, r16
     c7e:	c7 01       	movw	r24, r14
     c80:	82 1b       	sub	r24, r18
     c82:	93 0b       	sbc	r25, r19
     c84:	a4 0b       	sbc	r26, r20
     c86:	b5 0b       	sbc	r27, r21
     c88:	9c 01       	movw	r18, r24
     c8a:	ad 01       	movw	r20, r26
     c8c:	04 c0       	rjmp	.+8      	; 0xc96 <_fpadd_parts+0x1b8>
     c8e:	2e 19       	sub	r18, r14
     c90:	3f 09       	sbc	r19, r15
     c92:	40 0b       	sbc	r20, r16
     c94:	51 0b       	sbc	r21, r17
     c96:	57 fd       	sbrc	r21, 7
     c98:	04 c0       	rjmp	.+8      	; 0xca2 <_fpadd_parts+0x1c4>
     c9a:	19 82       	std	Y+1, r1	; 0x01
     c9c:	db 82       	std	Y+3, r13	; 0x03
     c9e:	ca 82       	std	Y+2, r12	; 0x02
     ca0:	0b c0       	rjmp	.+22     	; 0xcb8 <_fpadd_parts+0x1da>
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	89 83       	std	Y+1, r24	; 0x01
     ca6:	db 82       	std	Y+3, r13	; 0x03
     ca8:	ca 82       	std	Y+2, r12	; 0x02
     caa:	50 95       	com	r21
     cac:	40 95       	com	r20
     cae:	30 95       	com	r19
     cb0:	21 95       	neg	r18
     cb2:	3f 4f       	sbci	r19, 0xFF	; 255
     cb4:	4f 4f       	sbci	r20, 0xFF	; 255
     cb6:	5f 4f       	sbci	r21, 0xFF	; 255
     cb8:	2c 83       	std	Y+4, r18	; 0x04
     cba:	3d 83       	std	Y+5, r19	; 0x05
     cbc:	4e 83       	std	Y+6, r20	; 0x06
     cbe:	5f 83       	std	Y+7, r21	; 0x07
     cc0:	0d c0       	rjmp	.+26     	; 0xcdc <_fpadd_parts+0x1fe>
     cc2:	88 0f       	add	r24, r24
     cc4:	99 1f       	adc	r25, r25
     cc6:	aa 1f       	adc	r26, r26
     cc8:	bb 1f       	adc	r27, r27
     cca:	8c 83       	std	Y+4, r24	; 0x04
     ccc:	9d 83       	std	Y+5, r25	; 0x05
     cce:	ae 83       	std	Y+6, r26	; 0x06
     cd0:	bf 83       	std	Y+7, r27	; 0x07
     cd2:	8a 81       	ldd	r24, Y+2	; 0x02
     cd4:	9b 81       	ldd	r25, Y+3	; 0x03
     cd6:	01 97       	sbiw	r24, 0x01	; 1
     cd8:	9b 83       	std	Y+3, r25	; 0x03
     cda:	8a 83       	std	Y+2, r24	; 0x02
     cdc:	8c 81       	ldd	r24, Y+4	; 0x04
     cde:	9d 81       	ldd	r25, Y+5	; 0x05
     ce0:	ae 81       	ldd	r26, Y+6	; 0x06
     ce2:	bf 81       	ldd	r27, Y+7	; 0x07
     ce4:	9c 01       	movw	r18, r24
     ce6:	ad 01       	movw	r20, r26
     ce8:	21 50       	subi	r18, 0x01	; 1
     cea:	30 40       	sbci	r19, 0x00	; 0
     cec:	40 40       	sbci	r20, 0x00	; 0
     cee:	50 40       	sbci	r21, 0x00	; 0
     cf0:	2f 3f       	cpi	r18, 0xFF	; 255
     cf2:	ef ef       	ldi	r30, 0xFF	; 255
     cf4:	3e 07       	cpc	r19, r30
     cf6:	ef ef       	ldi	r30, 0xFF	; 255
     cf8:	4e 07       	cpc	r20, r30
     cfa:	ef e3       	ldi	r30, 0x3F	; 63
     cfc:	5e 07       	cpc	r21, r30
     cfe:	08 f3       	brcs	.-62     	; 0xcc2 <_fpadd_parts+0x1e4>
     d00:	0b c0       	rjmp	.+22     	; 0xd18 <_fpadd_parts+0x23a>
     d02:	89 83       	std	Y+1, r24	; 0x01
     d04:	db 82       	std	Y+3, r13	; 0x03
     d06:	ca 82       	std	Y+2, r12	; 0x02
     d08:	2e 0d       	add	r18, r14
     d0a:	3f 1d       	adc	r19, r15
     d0c:	40 1f       	adc	r20, r16
     d0e:	51 1f       	adc	r21, r17
     d10:	2c 83       	std	Y+4, r18	; 0x04
     d12:	3d 83       	std	Y+5, r19	; 0x05
     d14:	4e 83       	std	Y+6, r20	; 0x06
     d16:	5f 83       	std	Y+7, r21	; 0x07
     d18:	83 e0       	ldi	r24, 0x03	; 3
     d1a:	88 83       	st	Y, r24
     d1c:	2c 81       	ldd	r18, Y+4	; 0x04
     d1e:	3d 81       	ldd	r19, Y+5	; 0x05
     d20:	4e 81       	ldd	r20, Y+6	; 0x06
     d22:	5f 81       	ldd	r21, Y+7	; 0x07
     d24:	57 ff       	sbrs	r21, 7
     d26:	1d c0       	rjmp	.+58     	; 0xd62 <_fpadd_parts+0x284>
     d28:	da 01       	movw	r26, r20
     d2a:	c9 01       	movw	r24, r18
     d2c:	81 70       	andi	r24, 0x01	; 1
     d2e:	90 70       	andi	r25, 0x00	; 0
     d30:	a0 70       	andi	r26, 0x00	; 0
     d32:	b0 70       	andi	r27, 0x00	; 0
     d34:	56 95       	lsr	r21
     d36:	47 95       	ror	r20
     d38:	37 95       	ror	r19
     d3a:	27 95       	ror	r18
     d3c:	82 2b       	or	r24, r18
     d3e:	93 2b       	or	r25, r19
     d40:	a4 2b       	or	r26, r20
     d42:	b5 2b       	or	r27, r21
     d44:	8c 83       	std	Y+4, r24	; 0x04
     d46:	9d 83       	std	Y+5, r25	; 0x05
     d48:	ae 83       	std	Y+6, r26	; 0x06
     d4a:	bf 83       	std	Y+7, r27	; 0x07
     d4c:	8a 81       	ldd	r24, Y+2	; 0x02
     d4e:	9b 81       	ldd	r25, Y+3	; 0x03
     d50:	01 96       	adiw	r24, 0x01	; 1
     d52:	9b 83       	std	Y+3, r25	; 0x03
     d54:	8a 83       	std	Y+2, r24	; 0x02
     d56:	05 c0       	rjmp	.+10     	; 0xd62 <_fpadd_parts+0x284>
     d58:	eb e9       	ldi	r30, 0x9B	; 155
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	03 c0       	rjmp	.+6      	; 0xd64 <_fpadd_parts+0x286>
     d5e:	fb 01       	movw	r30, r22
     d60:	01 c0       	rjmp	.+2      	; 0xd64 <_fpadd_parts+0x286>
     d62:	fe 01       	movw	r30, r28
     d64:	cf 01       	movw	r24, r30
     d66:	cd b7       	in	r28, 0x3d	; 61
     d68:	de b7       	in	r29, 0x3e	; 62
     d6a:	ee e0       	ldi	r30, 0x0E	; 14
     d6c:	f6 c4       	rjmp	.+2540   	; 0x175a <__epilogue_restores__+0x8>

00000d6e <__addsf3>:
     d6e:	a0 e2       	ldi	r26, 0x20	; 32
     d70:	b0 e0       	ldi	r27, 0x00	; 0
     d72:	ec eb       	ldi	r30, 0xBC	; 188
     d74:	f6 e0       	ldi	r31, 0x06	; 6
     d76:	dd c4       	rjmp	.+2490   	; 0x1732 <__prologue_saves__+0x18>
     d78:	69 83       	std	Y+1, r22	; 0x01
     d7a:	7a 83       	std	Y+2, r23	; 0x02
     d7c:	8b 83       	std	Y+3, r24	; 0x03
     d7e:	9c 83       	std	Y+4, r25	; 0x04
     d80:	2d 83       	std	Y+5, r18	; 0x05
     d82:	3e 83       	std	Y+6, r19	; 0x06
     d84:	4f 83       	std	Y+7, r20	; 0x07
     d86:	58 87       	std	Y+8, r21	; 0x08
     d88:	89 e0       	ldi	r24, 0x09	; 9
     d8a:	e8 2e       	mov	r14, r24
     d8c:	f1 2c       	mov	r15, r1
     d8e:	ec 0e       	add	r14, r28
     d90:	fd 1e       	adc	r15, r29
     d92:	ce 01       	movw	r24, r28
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	b7 01       	movw	r22, r14
     d98:	d7 d3       	rcall	.+1966   	; 0x1548 <__unpack_f>
     d9a:	8e 01       	movw	r16, r28
     d9c:	0f 5e       	subi	r16, 0xEF	; 239
     d9e:	1f 4f       	sbci	r17, 0xFF	; 255
     da0:	ce 01       	movw	r24, r28
     da2:	05 96       	adiw	r24, 0x05	; 5
     da4:	b8 01       	movw	r22, r16
     da6:	d0 d3       	rcall	.+1952   	; 0x1548 <__unpack_f>
     da8:	c7 01       	movw	r24, r14
     daa:	b8 01       	movw	r22, r16
     dac:	ae 01       	movw	r20, r28
     dae:	47 5e       	subi	r20, 0xE7	; 231
     db0:	5f 4f       	sbci	r21, 0xFF	; 255
     db2:	95 de       	rcall	.-726    	; 0xade <_fpadd_parts>
     db4:	fc d2       	rcall	.+1528   	; 0x13ae <__pack_f>
     db6:	a0 96       	adiw	r28, 0x20	; 32
     db8:	e6 e0       	ldi	r30, 0x06	; 6
     dba:	d7 c4       	rjmp	.+2478   	; 0x176a <__epilogue_restores__+0x18>

00000dbc <__subsf3>:
     dbc:	a0 e2       	ldi	r26, 0x20	; 32
     dbe:	b0 e0       	ldi	r27, 0x00	; 0
     dc0:	e3 ee       	ldi	r30, 0xE3	; 227
     dc2:	f6 e0       	ldi	r31, 0x06	; 6
     dc4:	b6 c4       	rjmp	.+2412   	; 0x1732 <__prologue_saves__+0x18>
     dc6:	69 83       	std	Y+1, r22	; 0x01
     dc8:	7a 83       	std	Y+2, r23	; 0x02
     dca:	8b 83       	std	Y+3, r24	; 0x03
     dcc:	9c 83       	std	Y+4, r25	; 0x04
     dce:	2d 83       	std	Y+5, r18	; 0x05
     dd0:	3e 83       	std	Y+6, r19	; 0x06
     dd2:	4f 83       	std	Y+7, r20	; 0x07
     dd4:	58 87       	std	Y+8, r21	; 0x08
     dd6:	8e 01       	movw	r16, r28
     dd8:	07 5f       	subi	r16, 0xF7	; 247
     dda:	1f 4f       	sbci	r17, 0xFF	; 255
     ddc:	ce 01       	movw	r24, r28
     dde:	01 96       	adiw	r24, 0x01	; 1
     de0:	b8 01       	movw	r22, r16
     de2:	b2 d3       	rcall	.+1892   	; 0x1548 <__unpack_f>
     de4:	91 e1       	ldi	r25, 0x11	; 17
     de6:	e9 2e       	mov	r14, r25
     de8:	f1 2c       	mov	r15, r1
     dea:	ec 0e       	add	r14, r28
     dec:	fd 1e       	adc	r15, r29
     dee:	ce 01       	movw	r24, r28
     df0:	05 96       	adiw	r24, 0x05	; 5
     df2:	b7 01       	movw	r22, r14
     df4:	a9 d3       	rcall	.+1874   	; 0x1548 <__unpack_f>
     df6:	8a 89       	ldd	r24, Y+18	; 0x12
     df8:	91 e0       	ldi	r25, 0x01	; 1
     dfa:	89 27       	eor	r24, r25
     dfc:	8a 8b       	std	Y+18, r24	; 0x12
     dfe:	c8 01       	movw	r24, r16
     e00:	b7 01       	movw	r22, r14
     e02:	ae 01       	movw	r20, r28
     e04:	47 5e       	subi	r20, 0xE7	; 231
     e06:	5f 4f       	sbci	r21, 0xFF	; 255
     e08:	6a de       	rcall	.-812    	; 0xade <_fpadd_parts>
     e0a:	d1 d2       	rcall	.+1442   	; 0x13ae <__pack_f>
     e0c:	a0 96       	adiw	r28, 0x20	; 32
     e0e:	e6 e0       	ldi	r30, 0x06	; 6
     e10:	ac c4       	rjmp	.+2392   	; 0x176a <__epilogue_restores__+0x18>

00000e12 <__mulsf3>:
     e12:	a0 e2       	ldi	r26, 0x20	; 32
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	ee e0       	ldi	r30, 0x0E	; 14
     e18:	f7 e0       	ldi	r31, 0x07	; 7
     e1a:	7f c4       	rjmp	.+2302   	; 0x171a <__prologue_saves__>
     e1c:	69 83       	std	Y+1, r22	; 0x01
     e1e:	7a 83       	std	Y+2, r23	; 0x02
     e20:	8b 83       	std	Y+3, r24	; 0x03
     e22:	9c 83       	std	Y+4, r25	; 0x04
     e24:	2d 83       	std	Y+5, r18	; 0x05
     e26:	3e 83       	std	Y+6, r19	; 0x06
     e28:	4f 83       	std	Y+7, r20	; 0x07
     e2a:	58 87       	std	Y+8, r21	; 0x08
     e2c:	ce 01       	movw	r24, r28
     e2e:	01 96       	adiw	r24, 0x01	; 1
     e30:	be 01       	movw	r22, r28
     e32:	67 5f       	subi	r22, 0xF7	; 247
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	88 d3       	rcall	.+1808   	; 0x1548 <__unpack_f>
     e38:	ce 01       	movw	r24, r28
     e3a:	05 96       	adiw	r24, 0x05	; 5
     e3c:	be 01       	movw	r22, r28
     e3e:	6f 5e       	subi	r22, 0xEF	; 239
     e40:	7f 4f       	sbci	r23, 0xFF	; 255
     e42:	82 d3       	rcall	.+1796   	; 0x1548 <__unpack_f>
     e44:	99 85       	ldd	r25, Y+9	; 0x09
     e46:	92 30       	cpi	r25, 0x02	; 2
     e48:	78 f0       	brcs	.+30     	; 0xe68 <__mulsf3+0x56>
     e4a:	89 89       	ldd	r24, Y+17	; 0x11
     e4c:	82 30       	cpi	r24, 0x02	; 2
     e4e:	c0 f0       	brcs	.+48     	; 0xe80 <__mulsf3+0x6e>
     e50:	94 30       	cpi	r25, 0x04	; 4
     e52:	19 f4       	brne	.+6      	; 0xe5a <__mulsf3+0x48>
     e54:	82 30       	cpi	r24, 0x02	; 2
     e56:	41 f4       	brne	.+16     	; 0xe68 <__mulsf3+0x56>
     e58:	cb c0       	rjmp	.+406    	; 0xff0 <__mulsf3+0x1de>
     e5a:	84 30       	cpi	r24, 0x04	; 4
     e5c:	19 f4       	brne	.+6      	; 0xe64 <__mulsf3+0x52>
     e5e:	92 30       	cpi	r25, 0x02	; 2
     e60:	79 f4       	brne	.+30     	; 0xe80 <__mulsf3+0x6e>
     e62:	c6 c0       	rjmp	.+396    	; 0xff0 <__mulsf3+0x1de>
     e64:	92 30       	cpi	r25, 0x02	; 2
     e66:	51 f4       	brne	.+20     	; 0xe7c <__mulsf3+0x6a>
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	2a 85       	ldd	r18, Y+10	; 0x0a
     e6c:	9a 89       	ldd	r25, Y+18	; 0x12
     e6e:	29 17       	cp	r18, r25
     e70:	09 f4       	brne	.+2      	; 0xe74 <__mulsf3+0x62>
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	8a 87       	std	Y+10, r24	; 0x0a
     e76:	ce 01       	movw	r24, r28
     e78:	09 96       	adiw	r24, 0x09	; 9
     e7a:	bc c0       	rjmp	.+376    	; 0xff4 <__mulsf3+0x1e2>
     e7c:	82 30       	cpi	r24, 0x02	; 2
     e7e:	51 f4       	brne	.+20     	; 0xe94 <__mulsf3+0x82>
     e80:	81 e0       	ldi	r24, 0x01	; 1
     e82:	2a 85       	ldd	r18, Y+10	; 0x0a
     e84:	9a 89       	ldd	r25, Y+18	; 0x12
     e86:	29 17       	cp	r18, r25
     e88:	09 f4       	brne	.+2      	; 0xe8c <__mulsf3+0x7a>
     e8a:	80 e0       	ldi	r24, 0x00	; 0
     e8c:	8a 8b       	std	Y+18, r24	; 0x12
     e8e:	ce 01       	movw	r24, r28
     e90:	41 96       	adiw	r24, 0x11	; 17
     e92:	b0 c0       	rjmp	.+352    	; 0xff4 <__mulsf3+0x1e2>
     e94:	6d 84       	ldd	r6, Y+13	; 0x0d
     e96:	7e 84       	ldd	r7, Y+14	; 0x0e
     e98:	8f 84       	ldd	r8, Y+15	; 0x0f
     e9a:	98 88       	ldd	r9, Y+16	; 0x10
     e9c:	ed 88       	ldd	r14, Y+21	; 0x15
     e9e:	fe 88       	ldd	r15, Y+22	; 0x16
     ea0:	0f 89       	ldd	r16, Y+23	; 0x17
     ea2:	18 8d       	ldd	r17, Y+24	; 0x18
     ea4:	e0 e2       	ldi	r30, 0x20	; 32
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	dc 01       	movw	r26, r24
     eae:	aa 24       	eor	r10, r10
     eb0:	bb 24       	eor	r11, r11
     eb2:	65 01       	movw	r12, r10
     eb4:	20 e0       	ldi	r18, 0x00	; 0
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	a9 01       	movw	r20, r18
     eba:	b3 01       	movw	r22, r6
     ebc:	61 70       	andi	r22, 0x01	; 1
     ebe:	70 70       	andi	r23, 0x00	; 0
     ec0:	61 15       	cp	r22, r1
     ec2:	71 05       	cpc	r23, r1
     ec4:	d1 f0       	breq	.+52     	; 0xefa <__mulsf3+0xe8>
     ec6:	2e 0d       	add	r18, r14
     ec8:	3f 1d       	adc	r19, r15
     eca:	40 1f       	adc	r20, r16
     ecc:	51 1f       	adc	r21, r17
     ece:	15 01       	movw	r2, r10
     ed0:	26 01       	movw	r4, r12
     ed2:	28 0e       	add	r2, r24
     ed4:	39 1e       	adc	r3, r25
     ed6:	4a 1e       	adc	r4, r26
     ed8:	5b 1e       	adc	r5, r27
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	2e 15       	cp	r18, r14
     ee4:	3f 05       	cpc	r19, r15
     ee6:	40 07       	cpc	r20, r16
     ee8:	51 07       	cpc	r21, r17
     eea:	18 f0       	brcs	.+6      	; 0xef2 <__mulsf3+0xe0>
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	dc 01       	movw	r26, r24
     ef2:	82 0d       	add	r24, r2
     ef4:	93 1d       	adc	r25, r3
     ef6:	a4 1d       	adc	r26, r4
     ef8:	b5 1d       	adc	r27, r5
     efa:	aa 0c       	add	r10, r10
     efc:	bb 1c       	adc	r11, r11
     efe:	cc 1c       	adc	r12, r12
     f00:	dd 1c       	adc	r13, r13
     f02:	17 ff       	sbrs	r17, 7
     f04:	09 c0       	rjmp	.+18     	; 0xf18 <__mulsf3+0x106>
     f06:	61 e0       	ldi	r22, 0x01	; 1
     f08:	26 2e       	mov	r2, r22
     f0a:	31 2c       	mov	r3, r1
     f0c:	41 2c       	mov	r4, r1
     f0e:	51 2c       	mov	r5, r1
     f10:	a2 28       	or	r10, r2
     f12:	b3 28       	or	r11, r3
     f14:	c4 28       	or	r12, r4
     f16:	d5 28       	or	r13, r5
     f18:	31 97       	sbiw	r30, 0x01	; 1
     f1a:	49 f0       	breq	.+18     	; 0xf2e <__mulsf3+0x11c>
     f1c:	ee 0c       	add	r14, r14
     f1e:	ff 1c       	adc	r15, r15
     f20:	00 1f       	adc	r16, r16
     f22:	11 1f       	adc	r17, r17
     f24:	96 94       	lsr	r9
     f26:	87 94       	ror	r8
     f28:	77 94       	ror	r7
     f2a:	67 94       	ror	r6
     f2c:	c6 cf       	rjmp	.-116    	; 0xeba <__mulsf3+0xa8>
     f2e:	6b 89       	ldd	r22, Y+19	; 0x13
     f30:	7c 89       	ldd	r23, Y+20	; 0x14
     f32:	eb 85       	ldd	r30, Y+11	; 0x0b
     f34:	fc 85       	ldd	r31, Y+12	; 0x0c
     f36:	6e 0f       	add	r22, r30
     f38:	7f 1f       	adc	r23, r31
     f3a:	6e 5f       	subi	r22, 0xFE	; 254
     f3c:	7f 4f       	sbci	r23, 0xFF	; 255
     f3e:	7c 8f       	std	Y+28, r23	; 0x1c
     f40:	6b 8f       	std	Y+27, r22	; 0x1b
     f42:	61 e0       	ldi	r22, 0x01	; 1
     f44:	ea 85       	ldd	r30, Y+10	; 0x0a
     f46:	7a 89       	ldd	r23, Y+18	; 0x12
     f48:	e7 17       	cp	r30, r23
     f4a:	09 f4       	brne	.+2      	; 0xf4e <__mulsf3+0x13c>
     f4c:	60 e0       	ldi	r22, 0x00	; 0
     f4e:	6a 8f       	std	Y+26, r22	; 0x1a
     f50:	6b 8d       	ldd	r22, Y+27	; 0x1b
     f52:	7c 8d       	ldd	r23, Y+28	; 0x1c
     f54:	10 c0       	rjmp	.+32     	; 0xf76 <__mulsf3+0x164>
     f56:	fc 01       	movw	r30, r24
     f58:	e1 70       	andi	r30, 0x01	; 1
     f5a:	f0 70       	andi	r31, 0x00	; 0
     f5c:	30 97       	sbiw	r30, 0x00	; 0
     f5e:	29 f0       	breq	.+10     	; 0xf6a <__mulsf3+0x158>
     f60:	56 95       	lsr	r21
     f62:	47 95       	ror	r20
     f64:	37 95       	ror	r19
     f66:	27 95       	ror	r18
     f68:	50 68       	ori	r21, 0x80	; 128
     f6a:	b6 95       	lsr	r27
     f6c:	a7 95       	ror	r26
     f6e:	97 95       	ror	r25
     f70:	87 95       	ror	r24
     f72:	6f 5f       	subi	r22, 0xFF	; 255
     f74:	7f 4f       	sbci	r23, 0xFF	; 255
     f76:	b7 fd       	sbrc	r27, 7
     f78:	ee cf       	rjmp	.-36     	; 0xf56 <__mulsf3+0x144>
     f7a:	0c c0       	rjmp	.+24     	; 0xf94 <__mulsf3+0x182>
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	aa 1f       	adc	r26, r26
     f82:	bb 1f       	adc	r27, r27
     f84:	57 fd       	sbrc	r21, 7
     f86:	81 60       	ori	r24, 0x01	; 1
     f88:	22 0f       	add	r18, r18
     f8a:	33 1f       	adc	r19, r19
     f8c:	44 1f       	adc	r20, r20
     f8e:	55 1f       	adc	r21, r21
     f90:	61 50       	subi	r22, 0x01	; 1
     f92:	70 40       	sbci	r23, 0x00	; 0
     f94:	80 30       	cpi	r24, 0x00	; 0
     f96:	e0 e0       	ldi	r30, 0x00	; 0
     f98:	9e 07       	cpc	r25, r30
     f9a:	e0 e0       	ldi	r30, 0x00	; 0
     f9c:	ae 07       	cpc	r26, r30
     f9e:	e0 e4       	ldi	r30, 0x40	; 64
     fa0:	be 07       	cpc	r27, r30
     fa2:	60 f3       	brcs	.-40     	; 0xf7c <__mulsf3+0x16a>
     fa4:	6b 8f       	std	Y+27, r22	; 0x1b
     fa6:	7c 8f       	std	Y+28, r23	; 0x1c
     fa8:	6f e7       	ldi	r22, 0x7F	; 127
     faa:	e6 2e       	mov	r14, r22
     fac:	f1 2c       	mov	r15, r1
     fae:	01 2d       	mov	r16, r1
     fb0:	11 2d       	mov	r17, r1
     fb2:	e8 22       	and	r14, r24
     fb4:	f9 22       	and	r15, r25
     fb6:	0a 23       	and	r16, r26
     fb8:	1b 23       	and	r17, r27
     fba:	60 e4       	ldi	r22, 0x40	; 64
     fbc:	e6 16       	cp	r14, r22
     fbe:	f1 04       	cpc	r15, r1
     fc0:	01 05       	cpc	r16, r1
     fc2:	11 05       	cpc	r17, r1
     fc4:	61 f4       	brne	.+24     	; 0xfde <__mulsf3+0x1cc>
     fc6:	87 fd       	sbrc	r24, 7
     fc8:	0a c0       	rjmp	.+20     	; 0xfde <__mulsf3+0x1cc>
     fca:	21 15       	cp	r18, r1
     fcc:	31 05       	cpc	r19, r1
     fce:	41 05       	cpc	r20, r1
     fd0:	51 05       	cpc	r21, r1
     fd2:	29 f0       	breq	.+10     	; 0xfde <__mulsf3+0x1cc>
     fd4:	80 5c       	subi	r24, 0xC0	; 192
     fd6:	9f 4f       	sbci	r25, 0xFF	; 255
     fd8:	af 4f       	sbci	r26, 0xFF	; 255
     fda:	bf 4f       	sbci	r27, 0xFF	; 255
     fdc:	80 78       	andi	r24, 0x80	; 128
     fde:	8d 8f       	std	Y+29, r24	; 0x1d
     fe0:	9e 8f       	std	Y+30, r25	; 0x1e
     fe2:	af 8f       	std	Y+31, r26	; 0x1f
     fe4:	b8 a3       	std	Y+32, r27	; 0x20
     fe6:	83 e0       	ldi	r24, 0x03	; 3
     fe8:	89 8f       	std	Y+25, r24	; 0x19
     fea:	ce 01       	movw	r24, r28
     fec:	49 96       	adiw	r24, 0x19	; 25
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <__mulsf3+0x1e2>
     ff0:	8b e9       	ldi	r24, 0x9B	; 155
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	dc d1       	rcall	.+952    	; 0x13ae <__pack_f>
     ff6:	a0 96       	adiw	r28, 0x20	; 32
     ff8:	e2 e1       	ldi	r30, 0x12	; 18
     ffa:	ab c3       	rjmp	.+1878   	; 0x1752 <__epilogue_restores__>

00000ffc <__divsf3>:
     ffc:	a8 e1       	ldi	r26, 0x18	; 24
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	e3 e0       	ldi	r30, 0x03	; 3
    1002:	f8 e0       	ldi	r31, 0x08	; 8
    1004:	92 c3       	rjmp	.+1828   	; 0x172a <__prologue_saves__+0x10>
    1006:	69 83       	std	Y+1, r22	; 0x01
    1008:	7a 83       	std	Y+2, r23	; 0x02
    100a:	8b 83       	std	Y+3, r24	; 0x03
    100c:	9c 83       	std	Y+4, r25	; 0x04
    100e:	2d 83       	std	Y+5, r18	; 0x05
    1010:	3e 83       	std	Y+6, r19	; 0x06
    1012:	4f 83       	std	Y+7, r20	; 0x07
    1014:	58 87       	std	Y+8, r21	; 0x08
    1016:	8e 01       	movw	r16, r28
    1018:	07 5f       	subi	r16, 0xF7	; 247
    101a:	1f 4f       	sbci	r17, 0xFF	; 255
    101c:	ce 01       	movw	r24, r28
    101e:	01 96       	adiw	r24, 0x01	; 1
    1020:	b8 01       	movw	r22, r16
    1022:	92 d2       	rcall	.+1316   	; 0x1548 <__unpack_f>
    1024:	81 e1       	ldi	r24, 0x11	; 17
    1026:	e8 2e       	mov	r14, r24
    1028:	f1 2c       	mov	r15, r1
    102a:	ec 0e       	add	r14, r28
    102c:	fd 1e       	adc	r15, r29
    102e:	ce 01       	movw	r24, r28
    1030:	05 96       	adiw	r24, 0x05	; 5
    1032:	b7 01       	movw	r22, r14
    1034:	89 d2       	rcall	.+1298   	; 0x1548 <__unpack_f>
    1036:	99 85       	ldd	r25, Y+9	; 0x09
    1038:	92 30       	cpi	r25, 0x02	; 2
    103a:	08 f4       	brcc	.+2      	; 0x103e <__divsf3+0x42>
    103c:	83 c0       	rjmp	.+262    	; 0x1144 <__divsf3+0x148>
    103e:	89 89       	ldd	r24, Y+17	; 0x11
    1040:	82 30       	cpi	r24, 0x02	; 2
    1042:	08 f4       	brcc	.+2      	; 0x1046 <__divsf3+0x4a>
    1044:	7b c0       	rjmp	.+246    	; 0x113c <__divsf3+0x140>
    1046:	2a 85       	ldd	r18, Y+10	; 0x0a
    1048:	3a 89       	ldd	r19, Y+18	; 0x12
    104a:	23 27       	eor	r18, r19
    104c:	2a 87       	std	Y+10, r18	; 0x0a
    104e:	94 30       	cpi	r25, 0x04	; 4
    1050:	11 f0       	breq	.+4      	; 0x1056 <__divsf3+0x5a>
    1052:	92 30       	cpi	r25, 0x02	; 2
    1054:	21 f4       	brne	.+8      	; 0x105e <__divsf3+0x62>
    1056:	98 17       	cp	r25, r24
    1058:	09 f0       	breq	.+2      	; 0x105c <__divsf3+0x60>
    105a:	6c c0       	rjmp	.+216    	; 0x1134 <__divsf3+0x138>
    105c:	71 c0       	rjmp	.+226    	; 0x1140 <__divsf3+0x144>
    105e:	84 30       	cpi	r24, 0x04	; 4
    1060:	39 f4       	brne	.+14     	; 0x1070 <__divsf3+0x74>
    1062:	1d 86       	std	Y+13, r1	; 0x0d
    1064:	1e 86       	std	Y+14, r1	; 0x0e
    1066:	1f 86       	std	Y+15, r1	; 0x0f
    1068:	18 8a       	std	Y+16, r1	; 0x10
    106a:	1c 86       	std	Y+12, r1	; 0x0c
    106c:	1b 86       	std	Y+11, r1	; 0x0b
    106e:	6a c0       	rjmp	.+212    	; 0x1144 <__divsf3+0x148>
    1070:	82 30       	cpi	r24, 0x02	; 2
    1072:	19 f4       	brne	.+6      	; 0x107a <__divsf3+0x7e>
    1074:	84 e0       	ldi	r24, 0x04	; 4
    1076:	89 87       	std	Y+9, r24	; 0x09
    1078:	65 c0       	rjmp	.+202    	; 0x1144 <__divsf3+0x148>
    107a:	8b 85       	ldd	r24, Y+11	; 0x0b
    107c:	9c 85       	ldd	r25, Y+12	; 0x0c
    107e:	2b 89       	ldd	r18, Y+19	; 0x13
    1080:	3c 89       	ldd	r19, Y+20	; 0x14
    1082:	82 1b       	sub	r24, r18
    1084:	93 0b       	sbc	r25, r19
    1086:	9c 87       	std	Y+12, r25	; 0x0c
    1088:	8b 87       	std	Y+11, r24	; 0x0b
    108a:	2d 85       	ldd	r18, Y+13	; 0x0d
    108c:	3e 85       	ldd	r19, Y+14	; 0x0e
    108e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1090:	58 89       	ldd	r21, Y+16	; 0x10
    1092:	ed 88       	ldd	r14, Y+21	; 0x15
    1094:	fe 88       	ldd	r15, Y+22	; 0x16
    1096:	0f 89       	ldd	r16, Y+23	; 0x17
    1098:	18 8d       	ldd	r17, Y+24	; 0x18
    109a:	2e 15       	cp	r18, r14
    109c:	3f 05       	cpc	r19, r15
    109e:	40 07       	cpc	r20, r16
    10a0:	51 07       	cpc	r21, r17
    10a2:	38 f4       	brcc	.+14     	; 0x10b2 <__divsf3+0xb6>
    10a4:	22 0f       	add	r18, r18
    10a6:	33 1f       	adc	r19, r19
    10a8:	44 1f       	adc	r20, r20
    10aa:	55 1f       	adc	r21, r21
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	9c 87       	std	Y+12, r25	; 0x0c
    10b0:	8b 87       	std	Y+11, r24	; 0x0b
    10b2:	6f e1       	ldi	r22, 0x1F	; 31
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	a1 2c       	mov	r10, r1
    10b8:	b1 2c       	mov	r11, r1
    10ba:	c1 2c       	mov	r12, r1
    10bc:	a0 e4       	ldi	r26, 0x40	; 64
    10be:	da 2e       	mov	r13, r26
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	dc 01       	movw	r26, r24
    10c6:	2e 15       	cp	r18, r14
    10c8:	3f 05       	cpc	r19, r15
    10ca:	40 07       	cpc	r20, r16
    10cc:	51 07       	cpc	r21, r17
    10ce:	40 f0       	brcs	.+16     	; 0x10e0 <__divsf3+0xe4>
    10d0:	8a 29       	or	r24, r10
    10d2:	9b 29       	or	r25, r11
    10d4:	ac 29       	or	r26, r12
    10d6:	bd 29       	or	r27, r13
    10d8:	2e 19       	sub	r18, r14
    10da:	3f 09       	sbc	r19, r15
    10dc:	40 0b       	sbc	r20, r16
    10de:	51 0b       	sbc	r21, r17
    10e0:	d6 94       	lsr	r13
    10e2:	c7 94       	ror	r12
    10e4:	b7 94       	ror	r11
    10e6:	a7 94       	ror	r10
    10e8:	22 0f       	add	r18, r18
    10ea:	33 1f       	adc	r19, r19
    10ec:	44 1f       	adc	r20, r20
    10ee:	55 1f       	adc	r21, r21
    10f0:	61 50       	subi	r22, 0x01	; 1
    10f2:	70 40       	sbci	r23, 0x00	; 0
    10f4:	41 f7       	brne	.-48     	; 0x10c6 <__divsf3+0xca>
    10f6:	6f e7       	ldi	r22, 0x7F	; 127
    10f8:	e6 2e       	mov	r14, r22
    10fa:	f1 2c       	mov	r15, r1
    10fc:	01 2d       	mov	r16, r1
    10fe:	11 2d       	mov	r17, r1
    1100:	e8 22       	and	r14, r24
    1102:	f9 22       	and	r15, r25
    1104:	0a 23       	and	r16, r26
    1106:	1b 23       	and	r17, r27
    1108:	60 e4       	ldi	r22, 0x40	; 64
    110a:	e6 16       	cp	r14, r22
    110c:	f1 04       	cpc	r15, r1
    110e:	01 05       	cpc	r16, r1
    1110:	11 05       	cpc	r17, r1
    1112:	61 f4       	brne	.+24     	; 0x112c <__divsf3+0x130>
    1114:	87 fd       	sbrc	r24, 7
    1116:	0a c0       	rjmp	.+20     	; 0x112c <__divsf3+0x130>
    1118:	21 15       	cp	r18, r1
    111a:	31 05       	cpc	r19, r1
    111c:	41 05       	cpc	r20, r1
    111e:	51 05       	cpc	r21, r1
    1120:	29 f0       	breq	.+10     	; 0x112c <__divsf3+0x130>
    1122:	80 5c       	subi	r24, 0xC0	; 192
    1124:	9f 4f       	sbci	r25, 0xFF	; 255
    1126:	af 4f       	sbci	r26, 0xFF	; 255
    1128:	bf 4f       	sbci	r27, 0xFF	; 255
    112a:	80 78       	andi	r24, 0x80	; 128
    112c:	8d 87       	std	Y+13, r24	; 0x0d
    112e:	9e 87       	std	Y+14, r25	; 0x0e
    1130:	af 87       	std	Y+15, r26	; 0x0f
    1132:	b8 8b       	std	Y+16, r27	; 0x10
    1134:	8e 01       	movw	r16, r28
    1136:	07 5f       	subi	r16, 0xF7	; 247
    1138:	1f 4f       	sbci	r17, 0xFF	; 255
    113a:	04 c0       	rjmp	.+8      	; 0x1144 <__divsf3+0x148>
    113c:	87 01       	movw	r16, r14
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <__divsf3+0x148>
    1140:	0b e9       	ldi	r16, 0x9B	; 155
    1142:	10 e0       	ldi	r17, 0x00	; 0
    1144:	c8 01       	movw	r24, r16
    1146:	33 d1       	rcall	.+614    	; 0x13ae <__pack_f>
    1148:	68 96       	adiw	r28, 0x18	; 24
    114a:	ea e0       	ldi	r30, 0x0A	; 10
    114c:	0a c3       	rjmp	.+1556   	; 0x1762 <__epilogue_restores__+0x10>

0000114e <__lesf2>:
    114e:	a8 e1       	ldi	r26, 0x18	; 24
    1150:	b0 e0       	ldi	r27, 0x00	; 0
    1152:	ec ea       	ldi	r30, 0xAC	; 172
    1154:	f8 e0       	ldi	r31, 0x08	; 8
    1156:	ed c2       	rjmp	.+1498   	; 0x1732 <__prologue_saves__+0x18>
    1158:	69 83       	std	Y+1, r22	; 0x01
    115a:	7a 83       	std	Y+2, r23	; 0x02
    115c:	8b 83       	std	Y+3, r24	; 0x03
    115e:	9c 83       	std	Y+4, r25	; 0x04
    1160:	2d 83       	std	Y+5, r18	; 0x05
    1162:	3e 83       	std	Y+6, r19	; 0x06
    1164:	4f 83       	std	Y+7, r20	; 0x07
    1166:	58 87       	std	Y+8, r21	; 0x08
    1168:	8e 01       	movw	r16, r28
    116a:	07 5f       	subi	r16, 0xF7	; 247
    116c:	1f 4f       	sbci	r17, 0xFF	; 255
    116e:	ce 01       	movw	r24, r28
    1170:	01 96       	adiw	r24, 0x01	; 1
    1172:	b8 01       	movw	r22, r16
    1174:	e9 d1       	rcall	.+978    	; 0x1548 <__unpack_f>
    1176:	81 e1       	ldi	r24, 0x11	; 17
    1178:	e8 2e       	mov	r14, r24
    117a:	f1 2c       	mov	r15, r1
    117c:	ec 0e       	add	r14, r28
    117e:	fd 1e       	adc	r15, r29
    1180:	ce 01       	movw	r24, r28
    1182:	05 96       	adiw	r24, 0x05	; 5
    1184:	b7 01       	movw	r22, r14
    1186:	e0 d1       	rcall	.+960    	; 0x1548 <__unpack_f>
    1188:	89 85       	ldd	r24, Y+9	; 0x09
    118a:	82 30       	cpi	r24, 0x02	; 2
    118c:	38 f0       	brcs	.+14     	; 0x119c <__lesf2+0x4e>
    118e:	89 89       	ldd	r24, Y+17	; 0x11
    1190:	82 30       	cpi	r24, 0x02	; 2
    1192:	20 f0       	brcs	.+8      	; 0x119c <__lesf2+0x4e>
    1194:	c8 01       	movw	r24, r16
    1196:	b7 01       	movw	r22, r14
    1198:	40 d2       	rcall	.+1152   	; 0x161a <__fpcmp_parts_f>
    119a:	01 c0       	rjmp	.+2      	; 0x119e <__lesf2+0x50>
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	68 96       	adiw	r28, 0x18	; 24
    11a0:	e6 e0       	ldi	r30, 0x06	; 6
    11a2:	e3 c2       	rjmp	.+1478   	; 0x176a <__epilogue_restores__+0x18>

000011a4 <__floatsisf>:
    11a4:	a8 e0       	ldi	r26, 0x08	; 8
    11a6:	b0 e0       	ldi	r27, 0x00	; 0
    11a8:	e7 ed       	ldi	r30, 0xD7	; 215
    11aa:	f8 e0       	ldi	r31, 0x08	; 8
    11ac:	c2 c2       	rjmp	.+1412   	; 0x1732 <__prologue_saves__+0x18>
    11ae:	7b 01       	movw	r14, r22
    11b0:	8c 01       	movw	r16, r24
    11b2:	83 e0       	ldi	r24, 0x03	; 3
    11b4:	89 83       	std	Y+1, r24	; 0x01
    11b6:	d8 01       	movw	r26, r16
    11b8:	c7 01       	movw	r24, r14
    11ba:	88 27       	eor	r24, r24
    11bc:	b7 fd       	sbrc	r27, 7
    11be:	83 95       	inc	r24
    11c0:	99 27       	eor	r25, r25
    11c2:	aa 27       	eor	r26, r26
    11c4:	bb 27       	eor	r27, r27
    11c6:	28 2f       	mov	r18, r24
    11c8:	8a 83       	std	Y+2, r24	; 0x02
    11ca:	e1 14       	cp	r14, r1
    11cc:	f1 04       	cpc	r15, r1
    11ce:	01 05       	cpc	r16, r1
    11d0:	11 05       	cpc	r17, r1
    11d2:	19 f4       	brne	.+6      	; 0x11da <__floatsisf+0x36>
    11d4:	82 e0       	ldi	r24, 0x02	; 2
    11d6:	89 83       	std	Y+1, r24	; 0x01
    11d8:	36 c0       	rjmp	.+108    	; 0x1246 <__floatsisf+0xa2>
    11da:	8e e1       	ldi	r24, 0x1E	; 30
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	9c 83       	std	Y+4, r25	; 0x04
    11e0:	8b 83       	std	Y+3, r24	; 0x03
    11e2:	22 23       	and	r18, r18
    11e4:	89 f0       	breq	.+34     	; 0x1208 <__floatsisf+0x64>
    11e6:	80 e0       	ldi	r24, 0x00	; 0
    11e8:	e8 16       	cp	r14, r24
    11ea:	80 e0       	ldi	r24, 0x00	; 0
    11ec:	f8 06       	cpc	r15, r24
    11ee:	80 e0       	ldi	r24, 0x00	; 0
    11f0:	08 07       	cpc	r16, r24
    11f2:	80 e8       	ldi	r24, 0x80	; 128
    11f4:	18 07       	cpc	r17, r24
    11f6:	59 f1       	breq	.+86     	; 0x124e <__floatsisf+0xaa>
    11f8:	10 95       	com	r17
    11fa:	00 95       	com	r16
    11fc:	f0 94       	com	r15
    11fe:	e0 94       	com	r14
    1200:	e1 1c       	adc	r14, r1
    1202:	f1 1c       	adc	r15, r1
    1204:	01 1d       	adc	r16, r1
    1206:	11 1d       	adc	r17, r1
    1208:	ed 82       	std	Y+5, r14	; 0x05
    120a:	fe 82       	std	Y+6, r15	; 0x06
    120c:	0f 83       	std	Y+7, r16	; 0x07
    120e:	18 87       	std	Y+8, r17	; 0x08
    1210:	c8 01       	movw	r24, r16
    1212:	b7 01       	movw	r22, r14
    1214:	72 d0       	rcall	.+228    	; 0x12fa <__clzsi2>
    1216:	9c 01       	movw	r18, r24
    1218:	21 50       	subi	r18, 0x01	; 1
    121a:	30 40       	sbci	r19, 0x00	; 0
    121c:	12 16       	cp	r1, r18
    121e:	13 06       	cpc	r1, r19
    1220:	94 f4       	brge	.+36     	; 0x1246 <__floatsisf+0xa2>
    1222:	02 2e       	mov	r0, r18
    1224:	04 c0       	rjmp	.+8      	; 0x122e <__floatsisf+0x8a>
    1226:	ee 0c       	add	r14, r14
    1228:	ff 1c       	adc	r15, r15
    122a:	00 1f       	adc	r16, r16
    122c:	11 1f       	adc	r17, r17
    122e:	0a 94       	dec	r0
    1230:	d2 f7       	brpl	.-12     	; 0x1226 <__floatsisf+0x82>
    1232:	ed 82       	std	Y+5, r14	; 0x05
    1234:	fe 82       	std	Y+6, r15	; 0x06
    1236:	0f 83       	std	Y+7, r16	; 0x07
    1238:	18 87       	std	Y+8, r17	; 0x08
    123a:	8e e1       	ldi	r24, 0x1E	; 30
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	82 1b       	sub	r24, r18
    1240:	93 0b       	sbc	r25, r19
    1242:	9c 83       	std	Y+4, r25	; 0x04
    1244:	8b 83       	std	Y+3, r24	; 0x03
    1246:	ce 01       	movw	r24, r28
    1248:	01 96       	adiw	r24, 0x01	; 1
    124a:	b1 d0       	rcall	.+354    	; 0x13ae <__pack_f>
    124c:	04 c0       	rjmp	.+8      	; 0x1256 <__floatsisf+0xb2>
    124e:	60 e0       	ldi	r22, 0x00	; 0
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	9f ec       	ldi	r25, 0xCF	; 207
    1256:	28 96       	adiw	r28, 0x08	; 8
    1258:	e6 e0       	ldi	r30, 0x06	; 6
    125a:	87 c2       	rjmp	.+1294   	; 0x176a <__epilogue_restores__+0x18>

0000125c <__fixsfsi>:
    125c:	ac e0       	ldi	r26, 0x0C	; 12
    125e:	b0 e0       	ldi	r27, 0x00	; 0
    1260:	e3 e3       	ldi	r30, 0x33	; 51
    1262:	f9 e0       	ldi	r31, 0x09	; 9
    1264:	6a c2       	rjmp	.+1236   	; 0x173a <__prologue_saves__+0x20>
    1266:	69 83       	std	Y+1, r22	; 0x01
    1268:	7a 83       	std	Y+2, r23	; 0x02
    126a:	8b 83       	std	Y+3, r24	; 0x03
    126c:	9c 83       	std	Y+4, r25	; 0x04
    126e:	ce 01       	movw	r24, r28
    1270:	01 96       	adiw	r24, 0x01	; 1
    1272:	be 01       	movw	r22, r28
    1274:	6b 5f       	subi	r22, 0xFB	; 251
    1276:	7f 4f       	sbci	r23, 0xFF	; 255
    1278:	67 d1       	rcall	.+718    	; 0x1548 <__unpack_f>
    127a:	8d 81       	ldd	r24, Y+5	; 0x05
    127c:	82 30       	cpi	r24, 0x02	; 2
    127e:	81 f1       	breq	.+96     	; 0x12e0 <__fixsfsi+0x84>
    1280:	82 30       	cpi	r24, 0x02	; 2
    1282:	70 f1       	brcs	.+92     	; 0x12e0 <__fixsfsi+0x84>
    1284:	84 30       	cpi	r24, 0x04	; 4
    1286:	21 f4       	brne	.+8      	; 0x1290 <__fixsfsi+0x34>
    1288:	8e 81       	ldd	r24, Y+6	; 0x06
    128a:	88 23       	and	r24, r24
    128c:	69 f1       	breq	.+90     	; 0x12e8 <__fixsfsi+0x8c>
    128e:	0a c0       	rjmp	.+20     	; 0x12a4 <__fixsfsi+0x48>
    1290:	2f 81       	ldd	r18, Y+7	; 0x07
    1292:	38 85       	ldd	r19, Y+8	; 0x08
    1294:	37 fd       	sbrc	r19, 7
    1296:	24 c0       	rjmp	.+72     	; 0x12e0 <__fixsfsi+0x84>
    1298:	6e 81       	ldd	r22, Y+6	; 0x06
    129a:	2f 31       	cpi	r18, 0x1F	; 31
    129c:	31 05       	cpc	r19, r1
    129e:	3c f0       	brlt	.+14     	; 0x12ae <__fixsfsi+0x52>
    12a0:	66 23       	and	r22, r22
    12a2:	11 f1       	breq	.+68     	; 0x12e8 <__fixsfsi+0x8c>
    12a4:	20 e0       	ldi	r18, 0x00	; 0
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	40 e0       	ldi	r20, 0x00	; 0
    12aa:	50 e8       	ldi	r21, 0x80	; 128
    12ac:	21 c0       	rjmp	.+66     	; 0x12f0 <__fixsfsi+0x94>
    12ae:	8e e1       	ldi	r24, 0x1E	; 30
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	82 1b       	sub	r24, r18
    12b4:	93 0b       	sbc	r25, r19
    12b6:	29 85       	ldd	r18, Y+9	; 0x09
    12b8:	3a 85       	ldd	r19, Y+10	; 0x0a
    12ba:	4b 85       	ldd	r20, Y+11	; 0x0b
    12bc:	5c 85       	ldd	r21, Y+12	; 0x0c
    12be:	04 c0       	rjmp	.+8      	; 0x12c8 <__fixsfsi+0x6c>
    12c0:	56 95       	lsr	r21
    12c2:	47 95       	ror	r20
    12c4:	37 95       	ror	r19
    12c6:	27 95       	ror	r18
    12c8:	8a 95       	dec	r24
    12ca:	d2 f7       	brpl	.-12     	; 0x12c0 <__fixsfsi+0x64>
    12cc:	66 23       	and	r22, r22
    12ce:	81 f0       	breq	.+32     	; 0x12f0 <__fixsfsi+0x94>
    12d0:	50 95       	com	r21
    12d2:	40 95       	com	r20
    12d4:	30 95       	com	r19
    12d6:	21 95       	neg	r18
    12d8:	3f 4f       	sbci	r19, 0xFF	; 255
    12da:	4f 4f       	sbci	r20, 0xFF	; 255
    12dc:	5f 4f       	sbci	r21, 0xFF	; 255
    12de:	08 c0       	rjmp	.+16     	; 0x12f0 <__fixsfsi+0x94>
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	a9 01       	movw	r20, r18
    12e6:	04 c0       	rjmp	.+8      	; 0x12f0 <__fixsfsi+0x94>
    12e8:	2f ef       	ldi	r18, 0xFF	; 255
    12ea:	3f ef       	ldi	r19, 0xFF	; 255
    12ec:	4f ef       	ldi	r20, 0xFF	; 255
    12ee:	5f e7       	ldi	r21, 0x7F	; 127
    12f0:	b9 01       	movw	r22, r18
    12f2:	ca 01       	movw	r24, r20
    12f4:	2c 96       	adiw	r28, 0x0c	; 12
    12f6:	e2 e0       	ldi	r30, 0x02	; 2
    12f8:	3c c2       	rjmp	.+1144   	; 0x1772 <__epilogue_restores__+0x20>

000012fa <__clzsi2>:
    12fa:	af 92       	push	r10
    12fc:	bf 92       	push	r11
    12fe:	cf 92       	push	r12
    1300:	df 92       	push	r13
    1302:	ef 92       	push	r14
    1304:	ff 92       	push	r15
    1306:	0f 93       	push	r16
    1308:	1f 93       	push	r17
    130a:	7b 01       	movw	r14, r22
    130c:	8c 01       	movw	r16, r24
    130e:	80 e0       	ldi	r24, 0x00	; 0
    1310:	e8 16       	cp	r14, r24
    1312:	80 e0       	ldi	r24, 0x00	; 0
    1314:	f8 06       	cpc	r15, r24
    1316:	81 e0       	ldi	r24, 0x01	; 1
    1318:	08 07       	cpc	r16, r24
    131a:	80 e0       	ldi	r24, 0x00	; 0
    131c:	18 07       	cpc	r17, r24
    131e:	58 f4       	brcc	.+22     	; 0x1336 <__clzsi2+0x3c>
    1320:	ef ef       	ldi	r30, 0xFF	; 255
    1322:	ee 16       	cp	r14, r30
    1324:	f1 04       	cpc	r15, r1
    1326:	01 05       	cpc	r16, r1
    1328:	11 05       	cpc	r17, r1
    132a:	09 f0       	breq	.+2      	; 0x132e <__clzsi2+0x34>
    132c:	90 f4       	brcc	.+36     	; 0x1352 <__clzsi2+0x58>
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	dc 01       	movw	r26, r24
    1334:	17 c0       	rjmp	.+46     	; 0x1364 <__clzsi2+0x6a>
    1336:	f0 e0       	ldi	r31, 0x00	; 0
    1338:	ef 16       	cp	r14, r31
    133a:	f0 e0       	ldi	r31, 0x00	; 0
    133c:	ff 06       	cpc	r15, r31
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	0f 07       	cpc	r16, r31
    1342:	f1 e0       	ldi	r31, 0x01	; 1
    1344:	1f 07       	cpc	r17, r31
    1346:	50 f4       	brcc	.+20     	; 0x135c <__clzsi2+0x62>
    1348:	80 e1       	ldi	r24, 0x10	; 16
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	a0 e0       	ldi	r26, 0x00	; 0
    134e:	b0 e0       	ldi	r27, 0x00	; 0
    1350:	09 c0       	rjmp	.+18     	; 0x1364 <__clzsi2+0x6a>
    1352:	88 e0       	ldi	r24, 0x08	; 8
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	a0 e0       	ldi	r26, 0x00	; 0
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	04 c0       	rjmp	.+8      	; 0x1364 <__clzsi2+0x6a>
    135c:	88 e1       	ldi	r24, 0x18	; 24
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	a0 e0       	ldi	r26, 0x00	; 0
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	20 e2       	ldi	r18, 0x20	; 32
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	40 e0       	ldi	r20, 0x00	; 0
    136a:	50 e0       	ldi	r21, 0x00	; 0
    136c:	28 1b       	sub	r18, r24
    136e:	39 0b       	sbc	r19, r25
    1370:	4a 0b       	sbc	r20, r26
    1372:	5b 0b       	sbc	r21, r27
    1374:	57 01       	movw	r10, r14
    1376:	68 01       	movw	r12, r16
    1378:	04 c0       	rjmp	.+8      	; 0x1382 <__clzsi2+0x88>
    137a:	d6 94       	lsr	r13
    137c:	c7 94       	ror	r12
    137e:	b7 94       	ror	r11
    1380:	a7 94       	ror	r10
    1382:	8a 95       	dec	r24
    1384:	d2 f7       	brpl	.-12     	; 0x137a <__clzsi2+0x80>
    1386:	d6 01       	movw	r26, r12
    1388:	c5 01       	movw	r24, r10
    138a:	8d 55       	subi	r24, 0x5D	; 93
    138c:	9f 4f       	sbci	r25, 0xFF	; 255
    138e:	fc 01       	movw	r30, r24
    1390:	80 81       	ld	r24, Z
    1392:	28 1b       	sub	r18, r24
    1394:	31 09       	sbc	r19, r1
    1396:	41 09       	sbc	r20, r1
    1398:	51 09       	sbc	r21, r1
    139a:	c9 01       	movw	r24, r18
    139c:	1f 91       	pop	r17
    139e:	0f 91       	pop	r16
    13a0:	ff 90       	pop	r15
    13a2:	ef 90       	pop	r14
    13a4:	df 90       	pop	r13
    13a6:	cf 90       	pop	r12
    13a8:	bf 90       	pop	r11
    13aa:	af 90       	pop	r10
    13ac:	08 95       	ret

000013ae <__pack_f>:
    13ae:	ef 92       	push	r14
    13b0:	ff 92       	push	r15
    13b2:	0f 93       	push	r16
    13b4:	1f 93       	push	r17
    13b6:	cf 93       	push	r28
    13b8:	df 93       	push	r29
    13ba:	fc 01       	movw	r30, r24
    13bc:	24 81       	ldd	r18, Z+4	; 0x04
    13be:	35 81       	ldd	r19, Z+5	; 0x05
    13c0:	46 81       	ldd	r20, Z+6	; 0x06
    13c2:	57 81       	ldd	r21, Z+7	; 0x07
    13c4:	61 81       	ldd	r22, Z+1	; 0x01
    13c6:	80 81       	ld	r24, Z
    13c8:	82 30       	cpi	r24, 0x02	; 2
    13ca:	20 f4       	brcc	.+8      	; 0x13d4 <__pack_f+0x26>
    13cc:	40 61       	ori	r20, 0x10	; 16
    13ce:	ef ef       	ldi	r30, 0xFF	; 255
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	a3 c0       	rjmp	.+326    	; 0x151a <__pack_f+0x16c>
    13d4:	84 30       	cpi	r24, 0x04	; 4
    13d6:	09 f4       	brne	.+2      	; 0x13da <__pack_f+0x2c>
    13d8:	9b c0       	rjmp	.+310    	; 0x1510 <__pack_f+0x162>
    13da:	82 30       	cpi	r24, 0x02	; 2
    13dc:	09 f4       	brne	.+2      	; 0x13e0 <__pack_f+0x32>
    13de:	92 c0       	rjmp	.+292    	; 0x1504 <__pack_f+0x156>
    13e0:	21 15       	cp	r18, r1
    13e2:	31 05       	cpc	r19, r1
    13e4:	41 05       	cpc	r20, r1
    13e6:	51 05       	cpc	r21, r1
    13e8:	09 f4       	brne	.+2      	; 0x13ec <__pack_f+0x3e>
    13ea:	8f c0       	rjmp	.+286    	; 0x150a <__pack_f+0x15c>
    13ec:	02 80       	ldd	r0, Z+2	; 0x02
    13ee:	f3 81       	ldd	r31, Z+3	; 0x03
    13f0:	e0 2d       	mov	r30, r0
    13f2:	8f ef       	ldi	r24, 0xFF	; 255
    13f4:	e2 38       	cpi	r30, 0x82	; 130
    13f6:	f8 07       	cpc	r31, r24
    13f8:	0c f0       	brlt	.+2      	; 0x13fc <__pack_f+0x4e>
    13fa:	5a c0       	rjmp	.+180    	; 0x14b0 <__pack_f+0x102>
    13fc:	c2 e8       	ldi	r28, 0x82	; 130
    13fe:	df ef       	ldi	r29, 0xFF	; 255
    1400:	ce 1b       	sub	r28, r30
    1402:	df 0b       	sbc	r29, r31
    1404:	ca 31       	cpi	r28, 0x1A	; 26
    1406:	d1 05       	cpc	r29, r1
    1408:	6c f5       	brge	.+90     	; 0x1464 <__pack_f+0xb6>
    140a:	79 01       	movw	r14, r18
    140c:	8a 01       	movw	r16, r20
    140e:	0c 2e       	mov	r0, r28
    1410:	04 c0       	rjmp	.+8      	; 0x141a <__pack_f+0x6c>
    1412:	16 95       	lsr	r17
    1414:	07 95       	ror	r16
    1416:	f7 94       	ror	r15
    1418:	e7 94       	ror	r14
    141a:	0a 94       	dec	r0
    141c:	d2 f7       	brpl	.-12     	; 0x1412 <__pack_f+0x64>
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	a0 e0       	ldi	r26, 0x00	; 0
    1424:	b0 e0       	ldi	r27, 0x00	; 0
    1426:	0c 2e       	mov	r0, r28
    1428:	04 c0       	rjmp	.+8      	; 0x1432 <__pack_f+0x84>
    142a:	88 0f       	add	r24, r24
    142c:	99 1f       	adc	r25, r25
    142e:	aa 1f       	adc	r26, r26
    1430:	bb 1f       	adc	r27, r27
    1432:	0a 94       	dec	r0
    1434:	d2 f7       	brpl	.-12     	; 0x142a <__pack_f+0x7c>
    1436:	01 97       	sbiw	r24, 0x01	; 1
    1438:	a1 09       	sbc	r26, r1
    143a:	b1 09       	sbc	r27, r1
    143c:	82 23       	and	r24, r18
    143e:	93 23       	and	r25, r19
    1440:	a4 23       	and	r26, r20
    1442:	b5 23       	and	r27, r21
    1444:	21 e0       	ldi	r18, 0x01	; 1
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	40 e0       	ldi	r20, 0x00	; 0
    144a:	50 e0       	ldi	r21, 0x00	; 0
    144c:	00 97       	sbiw	r24, 0x00	; 0
    144e:	a1 05       	cpc	r26, r1
    1450:	b1 05       	cpc	r27, r1
    1452:	19 f4       	brne	.+6      	; 0x145a <__pack_f+0xac>
    1454:	20 e0       	ldi	r18, 0x00	; 0
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	a9 01       	movw	r20, r18
    145a:	2e 29       	or	r18, r14
    145c:	3f 29       	or	r19, r15
    145e:	40 2b       	or	r20, r16
    1460:	51 2b       	or	r21, r17
    1462:	03 c0       	rjmp	.+6      	; 0x146a <__pack_f+0xbc>
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	a9 01       	movw	r20, r18
    146a:	da 01       	movw	r26, r20
    146c:	c9 01       	movw	r24, r18
    146e:	8f 77       	andi	r24, 0x7F	; 127
    1470:	90 70       	andi	r25, 0x00	; 0
    1472:	a0 70       	andi	r26, 0x00	; 0
    1474:	b0 70       	andi	r27, 0x00	; 0
    1476:	80 34       	cpi	r24, 0x40	; 64
    1478:	91 05       	cpc	r25, r1
    147a:	a1 05       	cpc	r26, r1
    147c:	b1 05       	cpc	r27, r1
    147e:	39 f4       	brne	.+14     	; 0x148e <__pack_f+0xe0>
    1480:	27 ff       	sbrs	r18, 7
    1482:	09 c0       	rjmp	.+18     	; 0x1496 <__pack_f+0xe8>
    1484:	20 5c       	subi	r18, 0xC0	; 192
    1486:	3f 4f       	sbci	r19, 0xFF	; 255
    1488:	4f 4f       	sbci	r20, 0xFF	; 255
    148a:	5f 4f       	sbci	r21, 0xFF	; 255
    148c:	04 c0       	rjmp	.+8      	; 0x1496 <__pack_f+0xe8>
    148e:	21 5c       	subi	r18, 0xC1	; 193
    1490:	3f 4f       	sbci	r19, 0xFF	; 255
    1492:	4f 4f       	sbci	r20, 0xFF	; 255
    1494:	5f 4f       	sbci	r21, 0xFF	; 255
    1496:	e1 e0       	ldi	r30, 0x01	; 1
    1498:	f0 e0       	ldi	r31, 0x00	; 0
    149a:	20 30       	cpi	r18, 0x00	; 0
    149c:	80 e0       	ldi	r24, 0x00	; 0
    149e:	38 07       	cpc	r19, r24
    14a0:	80 e0       	ldi	r24, 0x00	; 0
    14a2:	48 07       	cpc	r20, r24
    14a4:	80 e4       	ldi	r24, 0x40	; 64
    14a6:	58 07       	cpc	r21, r24
    14a8:	28 f5       	brcc	.+74     	; 0x14f4 <__pack_f+0x146>
    14aa:	e0 e0       	ldi	r30, 0x00	; 0
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	22 c0       	rjmp	.+68     	; 0x14f4 <__pack_f+0x146>
    14b0:	e0 38       	cpi	r30, 0x80	; 128
    14b2:	f1 05       	cpc	r31, r1
    14b4:	6c f5       	brge	.+90     	; 0x1510 <__pack_f+0x162>
    14b6:	e1 58       	subi	r30, 0x81	; 129
    14b8:	ff 4f       	sbci	r31, 0xFF	; 255
    14ba:	da 01       	movw	r26, r20
    14bc:	c9 01       	movw	r24, r18
    14be:	8f 77       	andi	r24, 0x7F	; 127
    14c0:	90 70       	andi	r25, 0x00	; 0
    14c2:	a0 70       	andi	r26, 0x00	; 0
    14c4:	b0 70       	andi	r27, 0x00	; 0
    14c6:	80 34       	cpi	r24, 0x40	; 64
    14c8:	91 05       	cpc	r25, r1
    14ca:	a1 05       	cpc	r26, r1
    14cc:	b1 05       	cpc	r27, r1
    14ce:	39 f4       	brne	.+14     	; 0x14de <__pack_f+0x130>
    14d0:	27 ff       	sbrs	r18, 7
    14d2:	09 c0       	rjmp	.+18     	; 0x14e6 <__pack_f+0x138>
    14d4:	20 5c       	subi	r18, 0xC0	; 192
    14d6:	3f 4f       	sbci	r19, 0xFF	; 255
    14d8:	4f 4f       	sbci	r20, 0xFF	; 255
    14da:	5f 4f       	sbci	r21, 0xFF	; 255
    14dc:	04 c0       	rjmp	.+8      	; 0x14e6 <__pack_f+0x138>
    14de:	21 5c       	subi	r18, 0xC1	; 193
    14e0:	3f 4f       	sbci	r19, 0xFF	; 255
    14e2:	4f 4f       	sbci	r20, 0xFF	; 255
    14e4:	5f 4f       	sbci	r21, 0xFF	; 255
    14e6:	57 ff       	sbrs	r21, 7
    14e8:	05 c0       	rjmp	.+10     	; 0x14f4 <__pack_f+0x146>
    14ea:	56 95       	lsr	r21
    14ec:	47 95       	ror	r20
    14ee:	37 95       	ror	r19
    14f0:	27 95       	ror	r18
    14f2:	31 96       	adiw	r30, 0x01	; 1
    14f4:	87 e0       	ldi	r24, 0x07	; 7
    14f6:	56 95       	lsr	r21
    14f8:	47 95       	ror	r20
    14fa:	37 95       	ror	r19
    14fc:	27 95       	ror	r18
    14fe:	8a 95       	dec	r24
    1500:	d1 f7       	brne	.-12     	; 0x14f6 <__pack_f+0x148>
    1502:	0b c0       	rjmp	.+22     	; 0x151a <__pack_f+0x16c>
    1504:	e0 e0       	ldi	r30, 0x00	; 0
    1506:	f0 e0       	ldi	r31, 0x00	; 0
    1508:	05 c0       	rjmp	.+10     	; 0x1514 <__pack_f+0x166>
    150a:	e0 e0       	ldi	r30, 0x00	; 0
    150c:	f0 e0       	ldi	r31, 0x00	; 0
    150e:	05 c0       	rjmp	.+10     	; 0x151a <__pack_f+0x16c>
    1510:	ef ef       	ldi	r30, 0xFF	; 255
    1512:	f0 e0       	ldi	r31, 0x00	; 0
    1514:	20 e0       	ldi	r18, 0x00	; 0
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	a9 01       	movw	r20, r18
    151a:	8e 2f       	mov	r24, r30
    151c:	87 95       	ror	r24
    151e:	88 27       	eor	r24, r24
    1520:	87 95       	ror	r24
    1522:	94 2f       	mov	r25, r20
    1524:	9f 77       	andi	r25, 0x7F	; 127
    1526:	67 95       	ror	r22
    1528:	66 27       	eor	r22, r22
    152a:	67 95       	ror	r22
    152c:	e6 95       	lsr	r30
    152e:	e2 2e       	mov	r14, r18
    1530:	a9 2f       	mov	r26, r25
    1532:	a8 2b       	or	r26, r24
    1534:	fe 2f       	mov	r31, r30
    1536:	f6 2b       	or	r31, r22
    1538:	62 2f       	mov	r22, r18
    153a:	73 2f       	mov	r23, r19
    153c:	8a 2f       	mov	r24, r26
    153e:	9f 2f       	mov	r25, r31
    1540:	cd b7       	in	r28, 0x3d	; 61
    1542:	de b7       	in	r29, 0x3e	; 62
    1544:	e6 e0       	ldi	r30, 0x06	; 6
    1546:	11 c1       	rjmp	.+546    	; 0x176a <__epilogue_restores__+0x18>

00001548 <__unpack_f>:
    1548:	dc 01       	movw	r26, r24
    154a:	fb 01       	movw	r30, r22
    154c:	2c 91       	ld	r18, X
    154e:	11 96       	adiw	r26, 0x01	; 1
    1550:	3c 91       	ld	r19, X
    1552:	11 97       	sbiw	r26, 0x01	; 1
    1554:	12 96       	adiw	r26, 0x02	; 2
    1556:	8c 91       	ld	r24, X
    1558:	12 97       	sbiw	r26, 0x02	; 2
    155a:	48 2f       	mov	r20, r24
    155c:	4f 77       	andi	r20, 0x7F	; 127
    155e:	50 e0       	ldi	r21, 0x00	; 0
    1560:	98 2f       	mov	r25, r24
    1562:	99 1f       	adc	r25, r25
    1564:	99 27       	eor	r25, r25
    1566:	99 1f       	adc	r25, r25
    1568:	13 96       	adiw	r26, 0x03	; 3
    156a:	6c 91       	ld	r22, X
    156c:	13 97       	sbiw	r26, 0x03	; 3
    156e:	86 2f       	mov	r24, r22
    1570:	88 0f       	add	r24, r24
    1572:	89 2b       	or	r24, r25
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	66 1f       	adc	r22, r22
    1578:	66 27       	eor	r22, r22
    157a:	66 1f       	adc	r22, r22
    157c:	61 83       	std	Z+1, r22	; 0x01
    157e:	00 97       	sbiw	r24, 0x00	; 0
    1580:	39 f5       	brne	.+78     	; 0x15d0 <__unpack_f+0x88>
    1582:	21 15       	cp	r18, r1
    1584:	31 05       	cpc	r19, r1
    1586:	41 05       	cpc	r20, r1
    1588:	51 05       	cpc	r21, r1
    158a:	11 f4       	brne	.+4      	; 0x1590 <__unpack_f+0x48>
    158c:	82 e0       	ldi	r24, 0x02	; 2
    158e:	29 c0       	rjmp	.+82     	; 0x15e2 <__unpack_f+0x9a>
    1590:	82 e8       	ldi	r24, 0x82	; 130
    1592:	9f ef       	ldi	r25, 0xFF	; 255
    1594:	93 83       	std	Z+3, r25	; 0x03
    1596:	82 83       	std	Z+2, r24	; 0x02
    1598:	67 e0       	ldi	r22, 0x07	; 7
    159a:	22 0f       	add	r18, r18
    159c:	33 1f       	adc	r19, r19
    159e:	44 1f       	adc	r20, r20
    15a0:	55 1f       	adc	r21, r21
    15a2:	6a 95       	dec	r22
    15a4:	d1 f7       	brne	.-12     	; 0x159a <__unpack_f+0x52>
    15a6:	83 e0       	ldi	r24, 0x03	; 3
    15a8:	80 83       	st	Z, r24
    15aa:	09 c0       	rjmp	.+18     	; 0x15be <__unpack_f+0x76>
    15ac:	22 0f       	add	r18, r18
    15ae:	33 1f       	adc	r19, r19
    15b0:	44 1f       	adc	r20, r20
    15b2:	55 1f       	adc	r21, r21
    15b4:	82 81       	ldd	r24, Z+2	; 0x02
    15b6:	93 81       	ldd	r25, Z+3	; 0x03
    15b8:	01 97       	sbiw	r24, 0x01	; 1
    15ba:	93 83       	std	Z+3, r25	; 0x03
    15bc:	82 83       	std	Z+2, r24	; 0x02
    15be:	20 30       	cpi	r18, 0x00	; 0
    15c0:	80 e0       	ldi	r24, 0x00	; 0
    15c2:	38 07       	cpc	r19, r24
    15c4:	80 e0       	ldi	r24, 0x00	; 0
    15c6:	48 07       	cpc	r20, r24
    15c8:	80 e4       	ldi	r24, 0x40	; 64
    15ca:	58 07       	cpc	r21, r24
    15cc:	78 f3       	brcs	.-34     	; 0x15ac <__unpack_f+0x64>
    15ce:	20 c0       	rjmp	.+64     	; 0x1610 <__unpack_f+0xc8>
    15d0:	8f 3f       	cpi	r24, 0xFF	; 255
    15d2:	91 05       	cpc	r25, r1
    15d4:	79 f4       	brne	.+30     	; 0x15f4 <__unpack_f+0xac>
    15d6:	21 15       	cp	r18, r1
    15d8:	31 05       	cpc	r19, r1
    15da:	41 05       	cpc	r20, r1
    15dc:	51 05       	cpc	r21, r1
    15de:	19 f4       	brne	.+6      	; 0x15e6 <__unpack_f+0x9e>
    15e0:	84 e0       	ldi	r24, 0x04	; 4
    15e2:	80 83       	st	Z, r24
    15e4:	08 95       	ret
    15e6:	44 ff       	sbrs	r20, 4
    15e8:	03 c0       	rjmp	.+6      	; 0x15f0 <__unpack_f+0xa8>
    15ea:	81 e0       	ldi	r24, 0x01	; 1
    15ec:	80 83       	st	Z, r24
    15ee:	10 c0       	rjmp	.+32     	; 0x1610 <__unpack_f+0xc8>
    15f0:	10 82       	st	Z, r1
    15f2:	0e c0       	rjmp	.+28     	; 0x1610 <__unpack_f+0xc8>
    15f4:	8f 57       	subi	r24, 0x7F	; 127
    15f6:	90 40       	sbci	r25, 0x00	; 0
    15f8:	93 83       	std	Z+3, r25	; 0x03
    15fa:	82 83       	std	Z+2, r24	; 0x02
    15fc:	83 e0       	ldi	r24, 0x03	; 3
    15fe:	80 83       	st	Z, r24
    1600:	87 e0       	ldi	r24, 0x07	; 7
    1602:	22 0f       	add	r18, r18
    1604:	33 1f       	adc	r19, r19
    1606:	44 1f       	adc	r20, r20
    1608:	55 1f       	adc	r21, r21
    160a:	8a 95       	dec	r24
    160c:	d1 f7       	brne	.-12     	; 0x1602 <__unpack_f+0xba>
    160e:	50 64       	ori	r21, 0x40	; 64
    1610:	24 83       	std	Z+4, r18	; 0x04
    1612:	35 83       	std	Z+5, r19	; 0x05
    1614:	46 83       	std	Z+6, r20	; 0x06
    1616:	57 83       	std	Z+7, r21	; 0x07
    1618:	08 95       	ret

0000161a <__fpcmp_parts_f>:
    161a:	fc 01       	movw	r30, r24
    161c:	db 01       	movw	r26, r22
    161e:	90 81       	ld	r25, Z
    1620:	92 30       	cpi	r25, 0x02	; 2
    1622:	08 f4       	brcc	.+2      	; 0x1626 <__fpcmp_parts_f+0xc>
    1624:	49 c0       	rjmp	.+146    	; 0x16b8 <__fpcmp_parts_f+0x9e>
    1626:	8c 91       	ld	r24, X
    1628:	82 30       	cpi	r24, 0x02	; 2
    162a:	08 f4       	brcc	.+2      	; 0x162e <__fpcmp_parts_f+0x14>
    162c:	45 c0       	rjmp	.+138    	; 0x16b8 <__fpcmp_parts_f+0x9e>
    162e:	94 30       	cpi	r25, 0x04	; 4
    1630:	51 f4       	brne	.+20     	; 0x1646 <__fpcmp_parts_f+0x2c>
    1632:	61 81       	ldd	r22, Z+1	; 0x01
    1634:	84 30       	cpi	r24, 0x04	; 4
    1636:	b1 f5       	brne	.+108    	; 0x16a4 <__fpcmp_parts_f+0x8a>
    1638:	11 96       	adiw	r26, 0x01	; 1
    163a:	2c 91       	ld	r18, X
    163c:	11 97       	sbiw	r26, 0x01	; 1
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	26 1b       	sub	r18, r22
    1642:	31 09       	sbc	r19, r1
    1644:	41 c0       	rjmp	.+130    	; 0x16c8 <__fpcmp_parts_f+0xae>
    1646:	84 30       	cpi	r24, 0x04	; 4
    1648:	21 f0       	breq	.+8      	; 0x1652 <__fpcmp_parts_f+0x38>
    164a:	92 30       	cpi	r25, 0x02	; 2
    164c:	41 f4       	brne	.+16     	; 0x165e <__fpcmp_parts_f+0x44>
    164e:	82 30       	cpi	r24, 0x02	; 2
    1650:	b1 f1       	breq	.+108    	; 0x16be <__fpcmp_parts_f+0xa4>
    1652:	11 96       	adiw	r26, 0x01	; 1
    1654:	8c 91       	ld	r24, X
    1656:	11 97       	sbiw	r26, 0x01	; 1
    1658:	88 23       	and	r24, r24
    165a:	a1 f1       	breq	.+104    	; 0x16c4 <__fpcmp_parts_f+0xaa>
    165c:	2d c0       	rjmp	.+90     	; 0x16b8 <__fpcmp_parts_f+0x9e>
    165e:	61 81       	ldd	r22, Z+1	; 0x01
    1660:	82 30       	cpi	r24, 0x02	; 2
    1662:	01 f1       	breq	.+64     	; 0x16a4 <__fpcmp_parts_f+0x8a>
    1664:	11 96       	adiw	r26, 0x01	; 1
    1666:	8c 91       	ld	r24, X
    1668:	11 97       	sbiw	r26, 0x01	; 1
    166a:	68 17       	cp	r22, r24
    166c:	d9 f4       	brne	.+54     	; 0x16a4 <__fpcmp_parts_f+0x8a>
    166e:	22 81       	ldd	r18, Z+2	; 0x02
    1670:	33 81       	ldd	r19, Z+3	; 0x03
    1672:	12 96       	adiw	r26, 0x02	; 2
    1674:	8d 91       	ld	r24, X+
    1676:	9c 91       	ld	r25, X
    1678:	13 97       	sbiw	r26, 0x03	; 3
    167a:	82 17       	cp	r24, r18
    167c:	93 07       	cpc	r25, r19
    167e:	94 f0       	brlt	.+36     	; 0x16a4 <__fpcmp_parts_f+0x8a>
    1680:	28 17       	cp	r18, r24
    1682:	39 07       	cpc	r19, r25
    1684:	bc f0       	brlt	.+46     	; 0x16b4 <__fpcmp_parts_f+0x9a>
    1686:	24 81       	ldd	r18, Z+4	; 0x04
    1688:	35 81       	ldd	r19, Z+5	; 0x05
    168a:	46 81       	ldd	r20, Z+6	; 0x06
    168c:	57 81       	ldd	r21, Z+7	; 0x07
    168e:	14 96       	adiw	r26, 0x04	; 4
    1690:	8d 91       	ld	r24, X+
    1692:	9d 91       	ld	r25, X+
    1694:	0d 90       	ld	r0, X+
    1696:	bc 91       	ld	r27, X
    1698:	a0 2d       	mov	r26, r0
    169a:	82 17       	cp	r24, r18
    169c:	93 07       	cpc	r25, r19
    169e:	a4 07       	cpc	r26, r20
    16a0:	b5 07       	cpc	r27, r21
    16a2:	18 f4       	brcc	.+6      	; 0x16aa <__fpcmp_parts_f+0x90>
    16a4:	66 23       	and	r22, r22
    16a6:	41 f0       	breq	.+16     	; 0x16b8 <__fpcmp_parts_f+0x9e>
    16a8:	0d c0       	rjmp	.+26     	; 0x16c4 <__fpcmp_parts_f+0xaa>
    16aa:	28 17       	cp	r18, r24
    16ac:	39 07       	cpc	r19, r25
    16ae:	4a 07       	cpc	r20, r26
    16b0:	5b 07       	cpc	r21, r27
    16b2:	28 f4       	brcc	.+10     	; 0x16be <__fpcmp_parts_f+0xa4>
    16b4:	66 23       	and	r22, r22
    16b6:	31 f0       	breq	.+12     	; 0x16c4 <__fpcmp_parts_f+0xaa>
    16b8:	21 e0       	ldi	r18, 0x01	; 1
    16ba:	30 e0       	ldi	r19, 0x00	; 0
    16bc:	05 c0       	rjmp	.+10     	; 0x16c8 <__fpcmp_parts_f+0xae>
    16be:	20 e0       	ldi	r18, 0x00	; 0
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <__fpcmp_parts_f+0xae>
    16c4:	2f ef       	ldi	r18, 0xFF	; 255
    16c6:	3f ef       	ldi	r19, 0xFF	; 255
    16c8:	c9 01       	movw	r24, r18
    16ca:	08 95       	ret

000016cc <__divmodhi4>:
    16cc:	97 fb       	bst	r25, 7
    16ce:	09 2e       	mov	r0, r25
    16d0:	07 26       	eor	r0, r23
    16d2:	0a d0       	rcall	.+20     	; 0x16e8 <__divmodhi4_neg1>
    16d4:	77 fd       	sbrc	r23, 7
    16d6:	04 d0       	rcall	.+8      	; 0x16e0 <__divmodhi4_neg2>
    16d8:	0c d0       	rcall	.+24     	; 0x16f2 <__udivmodhi4>
    16da:	06 d0       	rcall	.+12     	; 0x16e8 <__divmodhi4_neg1>
    16dc:	00 20       	and	r0, r0
    16de:	1a f4       	brpl	.+6      	; 0x16e6 <__divmodhi4_exit>

000016e0 <__divmodhi4_neg2>:
    16e0:	70 95       	com	r23
    16e2:	61 95       	neg	r22
    16e4:	7f 4f       	sbci	r23, 0xFF	; 255

000016e6 <__divmodhi4_exit>:
    16e6:	08 95       	ret

000016e8 <__divmodhi4_neg1>:
    16e8:	f6 f7       	brtc	.-4      	; 0x16e6 <__divmodhi4_exit>
    16ea:	90 95       	com	r25
    16ec:	81 95       	neg	r24
    16ee:	9f 4f       	sbci	r25, 0xFF	; 255
    16f0:	08 95       	ret

000016f2 <__udivmodhi4>:
    16f2:	aa 1b       	sub	r26, r26
    16f4:	bb 1b       	sub	r27, r27
    16f6:	51 e1       	ldi	r21, 0x11	; 17
    16f8:	07 c0       	rjmp	.+14     	; 0x1708 <__udivmodhi4_ep>

000016fa <__udivmodhi4_loop>:
    16fa:	aa 1f       	adc	r26, r26
    16fc:	bb 1f       	adc	r27, r27
    16fe:	a6 17       	cp	r26, r22
    1700:	b7 07       	cpc	r27, r23
    1702:	10 f0       	brcs	.+4      	; 0x1708 <__udivmodhi4_ep>
    1704:	a6 1b       	sub	r26, r22
    1706:	b7 0b       	sbc	r27, r23

00001708 <__udivmodhi4_ep>:
    1708:	88 1f       	adc	r24, r24
    170a:	99 1f       	adc	r25, r25
    170c:	5a 95       	dec	r21
    170e:	a9 f7       	brne	.-22     	; 0x16fa <__udivmodhi4_loop>
    1710:	80 95       	com	r24
    1712:	90 95       	com	r25
    1714:	bc 01       	movw	r22, r24
    1716:	cd 01       	movw	r24, r26
    1718:	08 95       	ret

0000171a <__prologue_saves__>:
    171a:	2f 92       	push	r2
    171c:	3f 92       	push	r3
    171e:	4f 92       	push	r4
    1720:	5f 92       	push	r5
    1722:	6f 92       	push	r6
    1724:	7f 92       	push	r7
    1726:	8f 92       	push	r8
    1728:	9f 92       	push	r9
    172a:	af 92       	push	r10
    172c:	bf 92       	push	r11
    172e:	cf 92       	push	r12
    1730:	df 92       	push	r13
    1732:	ef 92       	push	r14
    1734:	ff 92       	push	r15
    1736:	0f 93       	push	r16
    1738:	1f 93       	push	r17
    173a:	cf 93       	push	r28
    173c:	df 93       	push	r29
    173e:	cd b7       	in	r28, 0x3d	; 61
    1740:	de b7       	in	r29, 0x3e	; 62
    1742:	ca 1b       	sub	r28, r26
    1744:	db 0b       	sbc	r29, r27
    1746:	0f b6       	in	r0, 0x3f	; 63
    1748:	f8 94       	cli
    174a:	de bf       	out	0x3e, r29	; 62
    174c:	0f be       	out	0x3f, r0	; 63
    174e:	cd bf       	out	0x3d, r28	; 61
    1750:	09 94       	ijmp

00001752 <__epilogue_restores__>:
    1752:	2a 88       	ldd	r2, Y+18	; 0x12
    1754:	39 88       	ldd	r3, Y+17	; 0x11
    1756:	48 88       	ldd	r4, Y+16	; 0x10
    1758:	5f 84       	ldd	r5, Y+15	; 0x0f
    175a:	6e 84       	ldd	r6, Y+14	; 0x0e
    175c:	7d 84       	ldd	r7, Y+13	; 0x0d
    175e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1760:	9b 84       	ldd	r9, Y+11	; 0x0b
    1762:	aa 84       	ldd	r10, Y+10	; 0x0a
    1764:	b9 84       	ldd	r11, Y+9	; 0x09
    1766:	c8 84       	ldd	r12, Y+8	; 0x08
    1768:	df 80       	ldd	r13, Y+7	; 0x07
    176a:	ee 80       	ldd	r14, Y+6	; 0x06
    176c:	fd 80       	ldd	r15, Y+5	; 0x05
    176e:	0c 81       	ldd	r16, Y+4	; 0x04
    1770:	1b 81       	ldd	r17, Y+3	; 0x03
    1772:	aa 81       	ldd	r26, Y+2	; 0x02
    1774:	b9 81       	ldd	r27, Y+1	; 0x01
    1776:	ce 0f       	add	r28, r30
    1778:	d1 1d       	adc	r29, r1
    177a:	0f b6       	in	r0, 0x3f	; 63
    177c:	f8 94       	cli
    177e:	de bf       	out	0x3e, r29	; 62
    1780:	0f be       	out	0x3f, r0	; 63
    1782:	cd bf       	out	0x3d, r28	; 61
    1784:	ed 01       	movw	r28, r26
    1786:	08 95       	ret

00001788 <dtostrf>:
    1788:	ef 92       	push	r14
    178a:	ff 92       	push	r15
    178c:	0f 93       	push	r16
    178e:	1f 93       	push	r17
    1790:	32 2f       	mov	r19, r18
    1792:	f0 2e       	mov	r15, r16
    1794:	47 ff       	sbrs	r20, 7
    1796:	02 c0       	rjmp	.+4      	; 0x179c <dtostrf+0x14>
    1798:	a4 e1       	ldi	r26, 0x14	; 20
    179a:	01 c0       	rjmp	.+2      	; 0x179e <dtostrf+0x16>
    179c:	a4 e0       	ldi	r26, 0x04	; 4
    179e:	e4 2f       	mov	r30, r20
    17a0:	ff 27       	eor	r31, r31
    17a2:	e7 fd       	sbrc	r30, 7
    17a4:	f0 95       	com	r31
    17a6:	f7 ff       	sbrs	r31, 7
    17a8:	03 c0       	rjmp	.+6      	; 0x17b0 <dtostrf+0x28>
    17aa:	f0 95       	com	r31
    17ac:	e1 95       	neg	r30
    17ae:	ff 4f       	sbci	r31, 0xFF	; 255
    17b0:	4f 2d       	mov	r20, r15
    17b2:	51 2f       	mov	r21, r17
    17b4:	2e 2f       	mov	r18, r30
    17b6:	03 2f       	mov	r16, r19
    17b8:	ea 2e       	mov	r14, r26
    17ba:	07 d0       	rcall	.+14     	; 0x17ca <dtoa_prf>
    17bc:	8f 2d       	mov	r24, r15
    17be:	91 2f       	mov	r25, r17
    17c0:	1f 91       	pop	r17
    17c2:	0f 91       	pop	r16
    17c4:	ff 90       	pop	r15
    17c6:	ef 90       	pop	r14
    17c8:	08 95       	ret

000017ca <dtoa_prf>:
    17ca:	a9 e0       	ldi	r26, 0x09	; 9
    17cc:	b0 e0       	ldi	r27, 0x00	; 0
    17ce:	ea ee       	ldi	r30, 0xEA	; 234
    17d0:	fb e0       	ldi	r31, 0x0B	; 11
    17d2:	ab cf       	rjmp	.-170    	; 0x172a <__prologue_saves__+0x10>
    17d4:	6a 01       	movw	r12, r20
    17d6:	f2 2e       	mov	r15, r18
    17d8:	10 2f       	mov	r17, r16
    17da:	0c 33       	cpi	r16, 0x3C	; 60
    17dc:	18 f4       	brcc	.+6      	; 0x17e4 <dtoa_prf+0x1a>
    17de:	b0 2e       	mov	r11, r16
    17e0:	b3 94       	inc	r11
    17e2:	02 c0       	rjmp	.+4      	; 0x17e8 <dtoa_prf+0x1e>
    17e4:	ec e3       	ldi	r30, 0x3C	; 60
    17e6:	be 2e       	mov	r11, r30
    17e8:	ae 01       	movw	r20, r28
    17ea:	4f 5f       	subi	r20, 0xFF	; 255
    17ec:	5f 4f       	sbci	r21, 0xFF	; 255
    17ee:	27 e0       	ldi	r18, 0x07	; 7
    17f0:	0b 2d       	mov	r16, r11
    17f2:	3f d1       	rcall	.+638    	; 0x1a72 <__ftoa_engine>
    17f4:	29 81       	ldd	r18, Y+1	; 0x01
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	a9 01       	movw	r20, r18
    17fa:	49 70       	andi	r20, 0x09	; 9
    17fc:	50 70       	andi	r21, 0x00	; 0
    17fe:	41 30       	cpi	r20, 0x01	; 1
    1800:	51 05       	cpc	r21, r1
    1802:	31 f0       	breq	.+12     	; 0x1810 <dtoa_prf+0x46>
    1804:	e1 fc       	sbrc	r14, 1
    1806:	06 c0       	rjmp	.+12     	; 0x1814 <dtoa_prf+0x4a>
    1808:	e0 fe       	sbrs	r14, 0
    180a:	06 c0       	rjmp	.+12     	; 0x1818 <dtoa_prf+0x4e>
    180c:	e0 e2       	ldi	r30, 0x20	; 32
    180e:	05 c0       	rjmp	.+10     	; 0x181a <dtoa_prf+0x50>
    1810:	ed e2       	ldi	r30, 0x2D	; 45
    1812:	03 c0       	rjmp	.+6      	; 0x181a <dtoa_prf+0x50>
    1814:	eb e2       	ldi	r30, 0x2B	; 43
    1816:	01 c0       	rjmp	.+2      	; 0x181a <dtoa_prf+0x50>
    1818:	e0 e0       	ldi	r30, 0x00	; 0
    181a:	23 ff       	sbrs	r18, 3
    181c:	37 c0       	rjmp	.+110    	; 0x188c <dtoa_prf+0xc2>
    181e:	ee 23       	and	r30, r30
    1820:	11 f0       	breq	.+4      	; 0x1826 <dtoa_prf+0x5c>
    1822:	84 e0       	ldi	r24, 0x04	; 4
    1824:	01 c0       	rjmp	.+2      	; 0x1828 <dtoa_prf+0x5e>
    1826:	83 e0       	ldi	r24, 0x03	; 3
    1828:	8f 15       	cp	r24, r15
    182a:	18 f4       	brcc	.+6      	; 0x1832 <dtoa_prf+0x68>
    182c:	f8 1a       	sub	r15, r24
    182e:	8f 2d       	mov	r24, r15
    1830:	01 c0       	rjmp	.+2      	; 0x1834 <dtoa_prf+0x6a>
    1832:	80 e0       	ldi	r24, 0x00	; 0
    1834:	e4 fc       	sbrc	r14, 4
    1836:	0b c0       	rjmp	.+22     	; 0x184e <dtoa_prf+0x84>
    1838:	98 2f       	mov	r25, r24
    183a:	d6 01       	movw	r26, r12
    183c:	20 e2       	ldi	r18, 0x20	; 32
    183e:	02 c0       	rjmp	.+4      	; 0x1844 <dtoa_prf+0x7a>
    1840:	2d 93       	st	X+, r18
    1842:	91 50       	subi	r25, 0x01	; 1
    1844:	99 23       	and	r25, r25
    1846:	e1 f7       	brne	.-8      	; 0x1840 <dtoa_prf+0x76>
    1848:	c8 0e       	add	r12, r24
    184a:	d1 1c       	adc	r13, r1
    184c:	80 e0       	ldi	r24, 0x00	; 0
    184e:	ee 23       	and	r30, r30
    1850:	19 f0       	breq	.+6      	; 0x1858 <dtoa_prf+0x8e>
    1852:	d6 01       	movw	r26, r12
    1854:	ed 93       	st	X+, r30
    1856:	6d 01       	movw	r12, r26
    1858:	f6 01       	movw	r30, r12
    185a:	31 96       	adiw	r30, 0x01	; 1
    185c:	e2 fe       	sbrs	r14, 2
    185e:	05 c0       	rjmp	.+10     	; 0x186a <dtoa_prf+0xa0>
    1860:	9e e4       	ldi	r25, 0x4E	; 78
    1862:	d6 01       	movw	r26, r12
    1864:	9c 93       	st	X, r25
    1866:	21 e4       	ldi	r18, 0x41	; 65
    1868:	04 c0       	rjmp	.+8      	; 0x1872 <dtoa_prf+0xa8>
    186a:	9e e6       	ldi	r25, 0x6E	; 110
    186c:	d6 01       	movw	r26, r12
    186e:	9c 93       	st	X, r25
    1870:	21 e6       	ldi	r18, 0x61	; 97
    1872:	11 96       	adiw	r26, 0x01	; 1
    1874:	2c 93       	st	X, r18
    1876:	91 83       	std	Z+1, r25	; 0x01
    1878:	32 96       	adiw	r30, 0x02	; 2
    187a:	98 2f       	mov	r25, r24
    187c:	df 01       	movw	r26, r30
    187e:	20 e2       	ldi	r18, 0x20	; 32
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <dtoa_prf+0xbc>
    1882:	2d 93       	st	X+, r18
    1884:	91 50       	subi	r25, 0x01	; 1
    1886:	99 23       	and	r25, r25
    1888:	e1 f7       	brne	.-8      	; 0x1882 <dtoa_prf+0xb8>
    188a:	3d c0       	rjmp	.+122    	; 0x1906 <dtoa_prf+0x13c>
    188c:	22 ff       	sbrs	r18, 2
    188e:	41 c0       	rjmp	.+130    	; 0x1912 <dtoa_prf+0x148>
    1890:	ee 23       	and	r30, r30
    1892:	11 f0       	breq	.+4      	; 0x1898 <dtoa_prf+0xce>
    1894:	84 e0       	ldi	r24, 0x04	; 4
    1896:	01 c0       	rjmp	.+2      	; 0x189a <dtoa_prf+0xd0>
    1898:	83 e0       	ldi	r24, 0x03	; 3
    189a:	8f 15       	cp	r24, r15
    189c:	18 f4       	brcc	.+6      	; 0x18a4 <dtoa_prf+0xda>
    189e:	f8 1a       	sub	r15, r24
    18a0:	8f 2d       	mov	r24, r15
    18a2:	01 c0       	rjmp	.+2      	; 0x18a6 <dtoa_prf+0xdc>
    18a4:	80 e0       	ldi	r24, 0x00	; 0
    18a6:	e4 fc       	sbrc	r14, 4
    18a8:	0b c0       	rjmp	.+22     	; 0x18c0 <dtoa_prf+0xf6>
    18aa:	98 2f       	mov	r25, r24
    18ac:	d6 01       	movw	r26, r12
    18ae:	20 e2       	ldi	r18, 0x20	; 32
    18b0:	02 c0       	rjmp	.+4      	; 0x18b6 <dtoa_prf+0xec>
    18b2:	2d 93       	st	X+, r18
    18b4:	91 50       	subi	r25, 0x01	; 1
    18b6:	99 23       	and	r25, r25
    18b8:	e1 f7       	brne	.-8      	; 0x18b2 <dtoa_prf+0xe8>
    18ba:	c8 0e       	add	r12, r24
    18bc:	d1 1c       	adc	r13, r1
    18be:	80 e0       	ldi	r24, 0x00	; 0
    18c0:	ee 23       	and	r30, r30
    18c2:	19 f0       	breq	.+6      	; 0x18ca <dtoa_prf+0x100>
    18c4:	d6 01       	movw	r26, r12
    18c6:	ed 93       	st	X+, r30
    18c8:	6d 01       	movw	r12, r26
    18ca:	f6 01       	movw	r30, r12
    18cc:	31 96       	adiw	r30, 0x01	; 1
    18ce:	e2 fe       	sbrs	r14, 2
    18d0:	09 c0       	rjmp	.+18     	; 0x18e4 <dtoa_prf+0x11a>
    18d2:	99 e4       	ldi	r25, 0x49	; 73
    18d4:	d6 01       	movw	r26, r12
    18d6:	9c 93       	st	X, r25
    18d8:	9e e4       	ldi	r25, 0x4E	; 78
    18da:	11 96       	adiw	r26, 0x01	; 1
    18dc:	9c 93       	st	X, r25
    18de:	11 97       	sbiw	r26, 0x01	; 1
    18e0:	96 e4       	ldi	r25, 0x46	; 70
    18e2:	07 c0       	rjmp	.+14     	; 0x18f2 <dtoa_prf+0x128>
    18e4:	99 e6       	ldi	r25, 0x69	; 105
    18e6:	d6 01       	movw	r26, r12
    18e8:	9c 93       	st	X, r25
    18ea:	9e e6       	ldi	r25, 0x6E	; 110
    18ec:	11 96       	adiw	r26, 0x01	; 1
    18ee:	9c 93       	st	X, r25
    18f0:	96 e6       	ldi	r25, 0x66	; 102
    18f2:	91 83       	std	Z+1, r25	; 0x01
    18f4:	32 96       	adiw	r30, 0x02	; 2
    18f6:	98 2f       	mov	r25, r24
    18f8:	df 01       	movw	r26, r30
    18fa:	20 e2       	ldi	r18, 0x20	; 32
    18fc:	02 c0       	rjmp	.+4      	; 0x1902 <dtoa_prf+0x138>
    18fe:	2d 93       	st	X+, r18
    1900:	91 50       	subi	r25, 0x01	; 1
    1902:	99 23       	and	r25, r25
    1904:	e1 f7       	brne	.-8      	; 0x18fe <dtoa_prf+0x134>
    1906:	e8 0f       	add	r30, r24
    1908:	f1 1d       	adc	r31, r1
    190a:	10 82       	st	Z, r1
    190c:	2e ef       	ldi	r18, 0xFE	; 254
    190e:	3f ef       	ldi	r19, 0xFF	; 255
    1910:	ac c0       	rjmp	.+344    	; 0x1a6a <dtoa_prf+0x2a0>
    1912:	41 e0       	ldi	r20, 0x01	; 1
    1914:	50 e0       	ldi	r21, 0x00	; 0
    1916:	ee 23       	and	r30, r30
    1918:	11 f4       	brne	.+4      	; 0x191e <dtoa_prf+0x154>
    191a:	40 e0       	ldi	r20, 0x00	; 0
    191c:	50 e0       	ldi	r21, 0x00	; 0
    191e:	18 16       	cp	r1, r24
    1920:	19 06       	cpc	r1, r25
    1922:	24 f4       	brge	.+8      	; 0x192c <dtoa_prf+0x162>
    1924:	bc 01       	movw	r22, r24
    1926:	6f 5f       	subi	r22, 0xFF	; 255
    1928:	7f 4f       	sbci	r23, 0xFF	; 255
    192a:	02 c0       	rjmp	.+4      	; 0x1930 <dtoa_prf+0x166>
    192c:	61 e0       	ldi	r22, 0x01	; 1
    192e:	70 e0       	ldi	r23, 0x00	; 0
    1930:	64 0f       	add	r22, r20
    1932:	75 1f       	adc	r23, r21
    1934:	11 23       	and	r17, r17
    1936:	29 f0       	breq	.+10     	; 0x1942 <dtoa_prf+0x178>
    1938:	41 2f       	mov	r20, r17
    193a:	50 e0       	ldi	r21, 0x00	; 0
    193c:	4f 5f       	subi	r20, 0xFF	; 255
    193e:	5f 4f       	sbci	r21, 0xFF	; 255
    1940:	02 c0       	rjmp	.+4      	; 0x1946 <dtoa_prf+0x17c>
    1942:	40 e0       	ldi	r20, 0x00	; 0
    1944:	50 e0       	ldi	r21, 0x00	; 0
    1946:	46 0f       	add	r20, r22
    1948:	57 1f       	adc	r21, r23
    194a:	6f 2d       	mov	r22, r15
    194c:	70 e0       	ldi	r23, 0x00	; 0
    194e:	46 17       	cp	r20, r22
    1950:	57 07       	cpc	r21, r23
    1952:	1c f4       	brge	.+6      	; 0x195a <dtoa_prf+0x190>
    1954:	0f 2d       	mov	r16, r15
    1956:	04 1b       	sub	r16, r20
    1958:	01 c0       	rjmp	.+2      	; 0x195c <dtoa_prf+0x192>
    195a:	00 e0       	ldi	r16, 0x00	; 0
    195c:	ff 24       	eor	r15, r15
    195e:	a7 01       	movw	r20, r14
    1960:	40 71       	andi	r20, 0x10	; 16
    1962:	50 70       	andi	r21, 0x00	; 0
    1964:	e4 fc       	sbrc	r14, 4
    1966:	0d c0       	rjmp	.+26     	; 0x1982 <dtoa_prf+0x1b8>
    1968:	e3 fc       	sbrc	r14, 3
    196a:	0b c0       	rjmp	.+22     	; 0x1982 <dtoa_prf+0x1b8>
    196c:	60 2f       	mov	r22, r16
    196e:	d6 01       	movw	r26, r12
    1970:	70 e2       	ldi	r23, 0x20	; 32
    1972:	02 c0       	rjmp	.+4      	; 0x1978 <dtoa_prf+0x1ae>
    1974:	7d 93       	st	X+, r23
    1976:	61 50       	subi	r22, 0x01	; 1
    1978:	66 23       	and	r22, r22
    197a:	e1 f7       	brne	.-8      	; 0x1974 <dtoa_prf+0x1aa>
    197c:	c0 0e       	add	r12, r16
    197e:	d1 1c       	adc	r13, r1
    1980:	00 e0       	ldi	r16, 0x00	; 0
    1982:	ee 23       	and	r30, r30
    1984:	19 f0       	breq	.+6      	; 0x198c <dtoa_prf+0x1c2>
    1986:	d6 01       	movw	r26, r12
    1988:	ed 93       	st	X+, r30
    198a:	6d 01       	movw	r12, r26
    198c:	41 15       	cp	r20, r1
    198e:	51 05       	cpc	r21, r1
    1990:	59 f4       	brne	.+22     	; 0x19a8 <dtoa_prf+0x1de>
    1992:	40 2f       	mov	r20, r16
    1994:	f6 01       	movw	r30, r12
    1996:	50 e3       	ldi	r21, 0x30	; 48
    1998:	02 c0       	rjmp	.+4      	; 0x199e <dtoa_prf+0x1d4>
    199a:	51 93       	st	Z+, r21
    199c:	41 50       	subi	r20, 0x01	; 1
    199e:	44 23       	and	r20, r20
    19a0:	e1 f7       	brne	.-8      	; 0x199a <dtoa_prf+0x1d0>
    19a2:	c0 0e       	add	r12, r16
    19a4:	d1 1c       	adc	r13, r1
    19a6:	00 e0       	ldi	r16, 0x00	; 0
    19a8:	b8 0e       	add	r11, r24
    19aa:	fa 80       	ldd	r15, Y+2	; 0x02
    19ac:	a9 01       	movw	r20, r18
    19ae:	40 71       	andi	r20, 0x10	; 16
    19b0:	50 70       	andi	r21, 0x00	; 0
    19b2:	24 ff       	sbrs	r18, 4
    19b4:	04 c0       	rjmp	.+8      	; 0x19be <dtoa_prf+0x1f4>
    19b6:	bf 2d       	mov	r27, r15
    19b8:	b1 33       	cpi	r27, 0x31	; 49
    19ba:	09 f4       	brne	.+2      	; 0x19be <dtoa_prf+0x1f4>
    19bc:	ba 94       	dec	r11
    19be:	1b 14       	cp	r1, r11
    19c0:	2c f4       	brge	.+10     	; 0x19cc <dtoa_prf+0x202>
    19c2:	ab 2d       	mov	r26, r11
    19c4:	a9 30       	cpi	r26, 0x09	; 9
    19c6:	18 f0       	brcs	.+6      	; 0x19ce <dtoa_prf+0x204>
    19c8:	a8 e0       	ldi	r26, 0x08	; 8
    19ca:	01 c0       	rjmp	.+2      	; 0x19ce <dtoa_prf+0x204>
    19cc:	a1 e0       	ldi	r26, 0x01	; 1
    19ce:	9c 01       	movw	r18, r24
    19d0:	97 ff       	sbrs	r25, 7
    19d2:	02 c0       	rjmp	.+4      	; 0x19d8 <dtoa_prf+0x20e>
    19d4:	20 e0       	ldi	r18, 0x00	; 0
    19d6:	30 e0       	ldi	r19, 0x00	; 0
    19d8:	bc 01       	movw	r22, r24
    19da:	6f 5f       	subi	r22, 0xFF	; 255
    19dc:	7f 4f       	sbci	r23, 0xFF	; 255
    19de:	62 1b       	sub	r22, r18
    19e0:	73 0b       	sbc	r23, r19
    19e2:	fe 01       	movw	r30, r28
    19e4:	31 96       	adiw	r30, 0x01	; 1
    19e6:	e6 0f       	add	r30, r22
    19e8:	f7 1f       	adc	r31, r23
    19ea:	6e e2       	ldi	r22, 0x2E	; 46
    19ec:	e6 2e       	mov	r14, r22
    19ee:	bc 01       	movw	r22, r24
    19f0:	6a 1b       	sub	r22, r26
    19f2:	71 09       	sbc	r23, r1
    19f4:	a1 2f       	mov	r26, r17
    19f6:	b0 e0       	ldi	r27, 0x00	; 0
    19f8:	aa 24       	eor	r10, r10
    19fa:	bb 24       	eor	r11, r11
    19fc:	aa 1a       	sub	r10, r26
    19fe:	bb 0a       	sbc	r11, r27
    1a00:	1f ef       	ldi	r17, 0xFF	; 255
    1a02:	2f 3f       	cpi	r18, 0xFF	; 255
    1a04:	31 07       	cpc	r19, r17
    1a06:	19 f4       	brne	.+6      	; 0x1a0e <dtoa_prf+0x244>
    1a08:	d6 01       	movw	r26, r12
    1a0a:	ed 92       	st	X+, r14
    1a0c:	6d 01       	movw	r12, r26
    1a0e:	82 17       	cp	r24, r18
    1a10:	93 07       	cpc	r25, r19
    1a12:	2c f0       	brlt	.+10     	; 0x1a1e <dtoa_prf+0x254>
    1a14:	62 17       	cp	r22, r18
    1a16:	73 07       	cpc	r23, r19
    1a18:	14 f4       	brge	.+4      	; 0x1a1e <dtoa_prf+0x254>
    1a1a:	10 81       	ld	r17, Z
    1a1c:	01 c0       	rjmp	.+2      	; 0x1a20 <dtoa_prf+0x256>
    1a1e:	10 e3       	ldi	r17, 0x30	; 48
    1a20:	21 50       	subi	r18, 0x01	; 1
    1a22:	30 40       	sbci	r19, 0x00	; 0
    1a24:	31 96       	adiw	r30, 0x01	; 1
    1a26:	2a 15       	cp	r18, r10
    1a28:	3b 05       	cpc	r19, r11
    1a2a:	24 f0       	brlt	.+8      	; 0x1a34 <dtoa_prf+0x26a>
    1a2c:	d6 01       	movw	r26, r12
    1a2e:	1d 93       	st	X+, r17
    1a30:	6d 01       	movw	r12, r26
    1a32:	e6 cf       	rjmp	.-52     	; 0x1a00 <dtoa_prf+0x236>
    1a34:	28 17       	cp	r18, r24
    1a36:	39 07       	cpc	r19, r25
    1a38:	49 f4       	brne	.+18     	; 0x1a4c <dtoa_prf+0x282>
    1a3a:	bf 2d       	mov	r27, r15
    1a3c:	b6 33       	cpi	r27, 0x36	; 54
    1a3e:	28 f4       	brcc	.+10     	; 0x1a4a <dtoa_prf+0x280>
    1a40:	b5 33       	cpi	r27, 0x35	; 53
    1a42:	21 f4       	brne	.+8      	; 0x1a4c <dtoa_prf+0x282>
    1a44:	41 15       	cp	r20, r1
    1a46:	51 05       	cpc	r21, r1
    1a48:	09 f4       	brne	.+2      	; 0x1a4c <dtoa_prf+0x282>
    1a4a:	11 e3       	ldi	r17, 0x31	; 49
    1a4c:	f6 01       	movw	r30, r12
    1a4e:	11 93       	st	Z+, r17
    1a50:	80 2f       	mov	r24, r16
    1a52:	df 01       	movw	r26, r30
    1a54:	90 e2       	ldi	r25, 0x20	; 32
    1a56:	02 c0       	rjmp	.+4      	; 0x1a5c <dtoa_prf+0x292>
    1a58:	9d 93       	st	X+, r25
    1a5a:	81 50       	subi	r24, 0x01	; 1
    1a5c:	88 23       	and	r24, r24
    1a5e:	e1 f7       	brne	.-8      	; 0x1a58 <dtoa_prf+0x28e>
    1a60:	e0 0f       	add	r30, r16
    1a62:	f1 1d       	adc	r31, r1
    1a64:	10 82       	st	Z, r1
    1a66:	20 e0       	ldi	r18, 0x00	; 0
    1a68:	30 e0       	ldi	r19, 0x00	; 0
    1a6a:	c9 01       	movw	r24, r18
    1a6c:	29 96       	adiw	r28, 0x09	; 9
    1a6e:	ea e0       	ldi	r30, 0x0A	; 10
    1a70:	78 ce       	rjmp	.-784    	; 0x1762 <__epilogue_restores__+0x10>

00001a72 <__ftoa_engine>:
    1a72:	28 30       	cpi	r18, 0x08	; 8
    1a74:	08 f0       	brcs	.+2      	; 0x1a78 <__ftoa_engine+0x6>
    1a76:	27 e0       	ldi	r18, 0x07	; 7
    1a78:	33 27       	eor	r19, r19
    1a7a:	da 01       	movw	r26, r20
    1a7c:	99 0f       	add	r25, r25
    1a7e:	31 1d       	adc	r19, r1
    1a80:	87 fd       	sbrc	r24, 7
    1a82:	91 60       	ori	r25, 0x01	; 1
    1a84:	00 96       	adiw	r24, 0x00	; 0
    1a86:	61 05       	cpc	r22, r1
    1a88:	71 05       	cpc	r23, r1
    1a8a:	39 f4       	brne	.+14     	; 0x1a9a <__ftoa_engine+0x28>
    1a8c:	32 60       	ori	r19, 0x02	; 2
    1a8e:	2e 5f       	subi	r18, 0xFE	; 254
    1a90:	3d 93       	st	X+, r19
    1a92:	30 e3       	ldi	r19, 0x30	; 48
    1a94:	2a 95       	dec	r18
    1a96:	e1 f7       	brne	.-8      	; 0x1a90 <__ftoa_engine+0x1e>
    1a98:	08 95       	ret
    1a9a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a9c:	30 f0       	brcs	.+12     	; 0x1aaa <__ftoa_engine+0x38>
    1a9e:	80 38       	cpi	r24, 0x80	; 128
    1aa0:	71 05       	cpc	r23, r1
    1aa2:	61 05       	cpc	r22, r1
    1aa4:	09 f0       	breq	.+2      	; 0x1aa8 <__ftoa_engine+0x36>
    1aa6:	3c 5f       	subi	r19, 0xFC	; 252
    1aa8:	3c 5f       	subi	r19, 0xFC	; 252
    1aaa:	3d 93       	st	X+, r19
    1aac:	91 30       	cpi	r25, 0x01	; 1
    1aae:	08 f0       	brcs	.+2      	; 0x1ab2 <__ftoa_engine+0x40>
    1ab0:	80 68       	ori	r24, 0x80	; 128
    1ab2:	91 1d       	adc	r25, r1
    1ab4:	df 93       	push	r29
    1ab6:	cf 93       	push	r28
    1ab8:	1f 93       	push	r17
    1aba:	0f 93       	push	r16
    1abc:	ff 92       	push	r15
    1abe:	ef 92       	push	r14
    1ac0:	19 2f       	mov	r17, r25
    1ac2:	98 7f       	andi	r25, 0xF8	; 248
    1ac4:	96 95       	lsr	r25
    1ac6:	e9 2f       	mov	r30, r25
    1ac8:	96 95       	lsr	r25
    1aca:	96 95       	lsr	r25
    1acc:	e9 0f       	add	r30, r25
    1ace:	ff 27       	eor	r31, r31
    1ad0:	e4 58       	subi	r30, 0x84	; 132
    1ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad4:	99 27       	eor	r25, r25
    1ad6:	33 27       	eor	r19, r19
    1ad8:	ee 24       	eor	r14, r14
    1ada:	ff 24       	eor	r15, r15
    1adc:	a7 01       	movw	r20, r14
    1ade:	e7 01       	movw	r28, r14
    1ae0:	05 90       	lpm	r0, Z+
    1ae2:	08 94       	sec
    1ae4:	07 94       	ror	r0
    1ae6:	28 f4       	brcc	.+10     	; 0x1af2 <__ftoa_engine+0x80>
    1ae8:	36 0f       	add	r19, r22
    1aea:	e7 1e       	adc	r14, r23
    1aec:	f8 1e       	adc	r15, r24
    1aee:	49 1f       	adc	r20, r25
    1af0:	51 1d       	adc	r21, r1
    1af2:	66 0f       	add	r22, r22
    1af4:	77 1f       	adc	r23, r23
    1af6:	88 1f       	adc	r24, r24
    1af8:	99 1f       	adc	r25, r25
    1afa:	06 94       	lsr	r0
    1afc:	a1 f7       	brne	.-24     	; 0x1ae6 <__ftoa_engine+0x74>
    1afe:	05 90       	lpm	r0, Z+
    1b00:	07 94       	ror	r0
    1b02:	28 f4       	brcc	.+10     	; 0x1b0e <__ftoa_engine+0x9c>
    1b04:	e7 0e       	add	r14, r23
    1b06:	f8 1e       	adc	r15, r24
    1b08:	49 1f       	adc	r20, r25
    1b0a:	56 1f       	adc	r21, r22
    1b0c:	c1 1d       	adc	r28, r1
    1b0e:	77 0f       	add	r23, r23
    1b10:	88 1f       	adc	r24, r24
    1b12:	99 1f       	adc	r25, r25
    1b14:	66 1f       	adc	r22, r22
    1b16:	06 94       	lsr	r0
    1b18:	a1 f7       	brne	.-24     	; 0x1b02 <__ftoa_engine+0x90>
    1b1a:	05 90       	lpm	r0, Z+
    1b1c:	07 94       	ror	r0
    1b1e:	28 f4       	brcc	.+10     	; 0x1b2a <__ftoa_engine+0xb8>
    1b20:	f8 0e       	add	r15, r24
    1b22:	49 1f       	adc	r20, r25
    1b24:	56 1f       	adc	r21, r22
    1b26:	c7 1f       	adc	r28, r23
    1b28:	d1 1d       	adc	r29, r1
    1b2a:	88 0f       	add	r24, r24
    1b2c:	99 1f       	adc	r25, r25
    1b2e:	66 1f       	adc	r22, r22
    1b30:	77 1f       	adc	r23, r23
    1b32:	06 94       	lsr	r0
    1b34:	a1 f7       	brne	.-24     	; 0x1b1e <__ftoa_engine+0xac>
    1b36:	05 90       	lpm	r0, Z+
    1b38:	07 94       	ror	r0
    1b3a:	20 f4       	brcc	.+8      	; 0x1b44 <__ftoa_engine+0xd2>
    1b3c:	49 0f       	add	r20, r25
    1b3e:	56 1f       	adc	r21, r22
    1b40:	c7 1f       	adc	r28, r23
    1b42:	d8 1f       	adc	r29, r24
    1b44:	99 0f       	add	r25, r25
    1b46:	66 1f       	adc	r22, r22
    1b48:	77 1f       	adc	r23, r23
    1b4a:	88 1f       	adc	r24, r24
    1b4c:	06 94       	lsr	r0
    1b4e:	a9 f7       	brne	.-22     	; 0x1b3a <__ftoa_engine+0xc8>
    1b50:	84 91       	lpm	r24, Z+
    1b52:	10 95       	com	r17
    1b54:	17 70       	andi	r17, 0x07	; 7
    1b56:	41 f0       	breq	.+16     	; 0x1b68 <__ftoa_engine+0xf6>
    1b58:	d6 95       	lsr	r29
    1b5a:	c7 95       	ror	r28
    1b5c:	57 95       	ror	r21
    1b5e:	47 95       	ror	r20
    1b60:	f7 94       	ror	r15
    1b62:	e7 94       	ror	r14
    1b64:	1a 95       	dec	r17
    1b66:	c1 f7       	brne	.-16     	; 0x1b58 <__ftoa_engine+0xe6>
    1b68:	e2 e2       	ldi	r30, 0x22	; 34
    1b6a:	f0 e0       	ldi	r31, 0x00	; 0
    1b6c:	68 94       	set
    1b6e:	15 90       	lpm	r1, Z+
    1b70:	15 91       	lpm	r17, Z+
    1b72:	35 91       	lpm	r19, Z+
    1b74:	65 91       	lpm	r22, Z+
    1b76:	95 91       	lpm	r25, Z+
    1b78:	05 90       	lpm	r0, Z+
    1b7a:	7f e2       	ldi	r23, 0x2F	; 47
    1b7c:	73 95       	inc	r23
    1b7e:	e1 18       	sub	r14, r1
    1b80:	f1 0a       	sbc	r15, r17
    1b82:	43 0b       	sbc	r20, r19
    1b84:	56 0b       	sbc	r21, r22
    1b86:	c9 0b       	sbc	r28, r25
    1b88:	d0 09       	sbc	r29, r0
    1b8a:	c0 f7       	brcc	.-16     	; 0x1b7c <__ftoa_engine+0x10a>
    1b8c:	e1 0c       	add	r14, r1
    1b8e:	f1 1e       	adc	r15, r17
    1b90:	43 1f       	adc	r20, r19
    1b92:	56 1f       	adc	r21, r22
    1b94:	c9 1f       	adc	r28, r25
    1b96:	d0 1d       	adc	r29, r0
    1b98:	7e f4       	brtc	.+30     	; 0x1bb8 <__ftoa_engine+0x146>
    1b9a:	70 33       	cpi	r23, 0x30	; 48
    1b9c:	11 f4       	brne	.+4      	; 0x1ba2 <__ftoa_engine+0x130>
    1b9e:	8a 95       	dec	r24
    1ba0:	e6 cf       	rjmp	.-52     	; 0x1b6e <__ftoa_engine+0xfc>
    1ba2:	e8 94       	clt
    1ba4:	01 50       	subi	r16, 0x01	; 1
    1ba6:	30 f0       	brcs	.+12     	; 0x1bb4 <__ftoa_engine+0x142>
    1ba8:	08 0f       	add	r16, r24
    1baa:	0a f4       	brpl	.+2      	; 0x1bae <__ftoa_engine+0x13c>
    1bac:	00 27       	eor	r16, r16
    1bae:	02 17       	cp	r16, r18
    1bb0:	08 f4       	brcc	.+2      	; 0x1bb4 <__ftoa_engine+0x142>
    1bb2:	20 2f       	mov	r18, r16
    1bb4:	23 95       	inc	r18
    1bb6:	02 2f       	mov	r16, r18
    1bb8:	7a 33       	cpi	r23, 0x3A	; 58
    1bba:	28 f0       	brcs	.+10     	; 0x1bc6 <__ftoa_engine+0x154>
    1bbc:	79 e3       	ldi	r23, 0x39	; 57
    1bbe:	7d 93       	st	X+, r23
    1bc0:	2a 95       	dec	r18
    1bc2:	e9 f7       	brne	.-6      	; 0x1bbe <__ftoa_engine+0x14c>
    1bc4:	10 c0       	rjmp	.+32     	; 0x1be6 <__ftoa_engine+0x174>
    1bc6:	7d 93       	st	X+, r23
    1bc8:	2a 95       	dec	r18
    1bca:	89 f6       	brne	.-94     	; 0x1b6e <__ftoa_engine+0xfc>
    1bcc:	06 94       	lsr	r0
    1bce:	97 95       	ror	r25
    1bd0:	67 95       	ror	r22
    1bd2:	37 95       	ror	r19
    1bd4:	17 95       	ror	r17
    1bd6:	17 94       	ror	r1
    1bd8:	e1 18       	sub	r14, r1
    1bda:	f1 0a       	sbc	r15, r17
    1bdc:	43 0b       	sbc	r20, r19
    1bde:	56 0b       	sbc	r21, r22
    1be0:	c9 0b       	sbc	r28, r25
    1be2:	d0 09       	sbc	r29, r0
    1be4:	98 f0       	brcs	.+38     	; 0x1c0c <__ftoa_engine+0x19a>
    1be6:	23 95       	inc	r18
    1be8:	7e 91       	ld	r23, -X
    1bea:	73 95       	inc	r23
    1bec:	7a 33       	cpi	r23, 0x3A	; 58
    1bee:	08 f0       	brcs	.+2      	; 0x1bf2 <__ftoa_engine+0x180>
    1bf0:	70 e3       	ldi	r23, 0x30	; 48
    1bf2:	7c 93       	st	X, r23
    1bf4:	20 13       	cpse	r18, r16
    1bf6:	b8 f7       	brcc	.-18     	; 0x1be6 <__ftoa_engine+0x174>
    1bf8:	7e 91       	ld	r23, -X
    1bfa:	70 61       	ori	r23, 0x10	; 16
    1bfc:	7d 93       	st	X+, r23
    1bfe:	30 f0       	brcs	.+12     	; 0x1c0c <__ftoa_engine+0x19a>
    1c00:	83 95       	inc	r24
    1c02:	71 e3       	ldi	r23, 0x31	; 49
    1c04:	7d 93       	st	X+, r23
    1c06:	70 e3       	ldi	r23, 0x30	; 48
    1c08:	2a 95       	dec	r18
    1c0a:	e1 f7       	brne	.-8      	; 0x1c04 <__ftoa_engine+0x192>
    1c0c:	11 24       	eor	r1, r1
    1c0e:	ef 90       	pop	r14
    1c10:	ff 90       	pop	r15
    1c12:	0f 91       	pop	r16
    1c14:	1f 91       	pop	r17
    1c16:	cf 91       	pop	r28
    1c18:	df 91       	pop	r29
    1c1a:	99 27       	eor	r25, r25
    1c1c:	87 fd       	sbrc	r24, 7
    1c1e:	90 95       	com	r25
    1c20:	08 95       	ret

00001c22 <_exit>:
    1c22:	f8 94       	cli

00001c24 <__stop_program>:
    1c24:	ff cf       	rjmp	.-2      	; 0x1c24 <__stop_program>
