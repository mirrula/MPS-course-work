
avr-calc-8515.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000018a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  000018a4  00001938  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000021  008001a4  008001a4  00001a7c  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  00001a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000110  00000000  00000000  00002b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  00002c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000332  00000000  00000000  00002e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000029ff  00000000  00000000  000031c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001512  00000000  00000000  00005bc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000021e2  00000000  00000000  000070d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002f0  00000000  00000000  000092b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000060b  00000000  00000000  000095a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000154f  00000000  00000000  00009bb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000061e  00000000  00000000  0000b102  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000f8  00000000  00000000  0000b720  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	a7 c0       	rjmp	.+334    	; 0x152 <__bad_interrupt>
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	a5 c0       	rjmp	.+330    	; 0x152 <__bad_interrupt>
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	a3 c0       	rjmp	.+326    	; 0x152 <__bad_interrupt>
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	a1 c0       	rjmp	.+322    	; 0x152 <__bad_interrupt>
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	9f c0       	rjmp	.+318    	; 0x152 <__bad_interrupt>
      14:	9e c0       	rjmp	.+316    	; 0x152 <__bad_interrupt>
      16:	9d c0       	rjmp	.+314    	; 0x152 <__bad_interrupt>
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	9b c0       	rjmp	.+310    	; 0x152 <__bad_interrupt>
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	99 c0       	rjmp	.+306    	; 0x152 <__bad_interrupt>
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 40       	sbci	r16, 0x00	; 0
      24:	7a 10       	cpse	r7, r10
      26:	f3 5a       	subi	r31, 0xA3	; 163
      28:	00 a0       	ldd	r0, Z+32	; 0x20
      2a:	72 4e       	sbci	r23, 0xE2	; 226
      2c:	18 09       	sbc	r17, r8
      2e:	00 10       	cpse	r0, r0
      30:	a5 d4       	rcall	.+2378   	; 0x97c <_fpadd_parts+0x1d8>
      32:	e8 00       	.word	0x00e8	; ????
      34:	00 e8       	ldi	r16, 0x80	; 128
      36:	76 48       	sbci	r23, 0x86	; 134
      38:	17 00       	.word	0x0017	; ????
      3a:	00 e4       	ldi	r16, 0x40	; 64
      3c:	0b 54       	subi	r16, 0x4B	; 75
      3e:	02 00       	.word	0x0002	; ????
      40:	00 ca       	rjmp	.-3072   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      42:	9a 3b       	cpi	r25, 0xBA	; 186
      44:	00 00       	nop
      46:	00 e1       	ldi	r16, 0x10	; 16
      48:	f5 05       	cpc	r31, r5
      4a:	00 00       	nop
      4c:	80 96       	adiw	r24, 0x20	; 32
      4e:	98 00       	.word	0x0098	; ????
      50:	00 00       	nop
      52:	40 42       	sbci	r20, 0x20	; 32
      54:	0f 00       	.word	0x000f	; ????
      56:	00 00       	nop
      58:	a0 86       	std	Z+8, r10	; 0x08
      5a:	01 00       	.word	0x0001	; ????
      5c:	00 00       	nop
      5e:	10 27       	eor	r17, r16
      60:	00 00       	nop
      62:	00 00       	nop
      64:	e8 03       	fmulsu	r22, r16
      66:	00 00       	nop
      68:	00 00       	nop
      6a:	64 00       	.word	0x0064	; ????
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	0a 00       	.word	0x000a	; ????
      72:	00 00       	nop
      74:	00 00       	nop
      76:	01 00       	.word	0x0001	; ????
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	2c 76       	andi	r18, 0x6C	; 108
      7e:	d8 88       	ldd	r13, Y+16	; 0x10
      80:	dc 67       	ori	r29, 0x7C	; 124
      82:	4f 08       	sbc	r4, r15
      84:	23 df       	rcall	.-442    	; 0xfffffecc <__eeprom_end+0xff7efecc>
      86:	c1 df       	rcall	.-126    	; 0xa <__zero_reg__+0x9>
      88:	ae 59       	subi	r26, 0x9E	; 158
      8a:	e1 b1       	in	r30, 0x01	; 1
      8c:	b7 96       	adiw	r30, 0x27	; 39
      8e:	e5 e3       	ldi	r30, 0x35	; 53
      90:	e4 53       	subi	r30, 0x34	; 52
      92:	c6 3a       	cpi	r28, 0xA6	; 166
      94:	e6 51       	subi	r30, 0x16	; 22
      96:	99 76       	andi	r25, 0x69	; 105
      98:	96 e8       	ldi	r25, 0x86	; 134
      9a:	e6 c2       	rjmp	.+1484   	; 0x668 <decide+0x28e>
      9c:	84 26       	eor	r8, r20
      9e:	eb 89       	ldd	r30, Y+19	; 0x13
      a0:	8c 9b       	sbis	0x11, 4	; 17
      a2:	62 ed       	ldi	r22, 0xD2	; 210
      a4:	40 7c       	andi	r20, 0xC0	; 192
      a6:	6f fc       	.word	0xfc6f	; ????
      a8:	ef bc       	out	0x2f, r14	; 47
      aa:	9c 9f       	mul	r25, r28
      ac:	40 f2       	brcs	.-112    	; 0x3e <__SP_H__>
      ae:	ba a5       	ldd	r27, Y+42	; 0x2a
      b0:	6f a5       	ldd	r22, Y+47	; 0x2f
      b2:	f4 90       	lpm	r15, Z+
      b4:	05 5a       	subi	r16, 0xA5	; 165
      b6:	2a f7       	brpl	.-54     	; 0x82 <__SREG__+0x43>
      b8:	5c 93       	st	X, r21
      ba:	6b 6c       	ori	r22, 0xCB	; 203
      bc:	f9 67       	ori	r31, 0x79	; 121
      be:	6d c1       	rjmp	.+730    	; 0x39a <reset+0x14>
      c0:	1b fc       	.word	0xfc1b	; ????
      c2:	e0 e4       	ldi	r30, 0x40	; 64
      c4:	0d 47       	sbci	r16, 0x7D	; 125
      c6:	fe f5       	brtc	.+126    	; 0x146 <.do_clear_bss_loop>
      c8:	20 e6       	ldi	r18, 0x60	; 96
      ca:	b5 00       	.word	0x00b5	; ????
      cc:	d0 ed       	ldi	r29, 0xD0	; 208
      ce:	90 2e       	mov	r9, r16
      d0:	03 00       	.word	0x0003	; ????
      d2:	94 35       	cpi	r25, 0x54	; 84
      d4:	77 05       	cpc	r23, r7
      d6:	00 80       	ld	r0, Z
      d8:	84 1e       	adc	r8, r20
      da:	08 00       	.word	0x0008	; ????
      dc:	00 20       	and	r0, r0
      de:	4e 0a       	sbc	r4, r30
      e0:	00 00       	nop
      e2:	00 c8       	rjmp	.-4096   	; 0xfffff0e4 <__eeprom_end+0xff7ef0e4>
      e4:	0c 33       	cpi	r16, 0x3C	; 60
      e6:	33 33       	cpi	r19, 0x33	; 51
      e8:	33 0f       	add	r19, r19
      ea:	98 6e       	ori	r25, 0xE8	; 232
      ec:	12 83       	std	Z+2, r17	; 0x02
      ee:	11 41       	sbci	r17, 0x11	; 17
      f0:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f2:	21 14       	cp	r2, r1
      f4:	89 3b       	cpi	r24, 0xB9	; 185
      f6:	e6 55       	subi	r30, 0x56	; 86
      f8:	16 cf       	rjmp	.-468    	; 0xffffff26 <__eeprom_end+0xff7eff26>
      fa:	fe e6       	ldi	r31, 0x6E	; 110
      fc:	db 18       	sub	r13, r11
      fe:	d1 84       	ldd	r13, Z+9	; 0x09
     100:	4b 38       	cpi	r20, 0x8B	; 139
     102:	1b f7       	brvc	.-58     	; 0xca <__SREG__+0x8b>
     104:	7c 1d       	adc	r23, r12
     106:	90 1d       	adc	r25, r0
     108:	a4 bb       	out	0x14, r26	; 20
     10a:	e4 24       	eor	r14, r4
     10c:	20 32       	cpi	r18, 0x20	; 32
     10e:	84 72       	andi	r24, 0x24	; 36
     110:	5e 22       	and	r5, r30
     112:	81 00       	.word	0x0081	; ????
     114:	c9 f1       	breq	.+114    	; 0x188 <init_display+0x6>
     116:	24 ec       	ldi	r18, 0xC4	; 196
     118:	a1 e5       	ldi	r26, 0x51	; 81
     11a:	3d 27       	eor	r19, r29

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf e5       	ldi	r28, 0x5F	; 95
     122:	d2 e0       	ldi	r29, 0x02	; 2
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e6       	ldi	r26, 0x60	; 96
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	e4 ea       	ldi	r30, 0xA4	; 164
     130:	f8 e1       	ldi	r31, 0x18	; 24
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
     134:	05 90       	lpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a4 3a       	cpi	r26, 0xA4	; 164
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	a4 ea       	ldi	r26, 0xA4	; 164
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	a5 3c       	cpi	r26, 0xC5	; 197
     14a:	b1 07       	cpc	r27, r17
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	02 d0       	rcall	.+4      	; 0x154 <main>
     150:	a7 cb       	rjmp	.-2226   	; 0xfffff8a0 <__eeprom_end+0xff7ef8a0>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <main>:
#include "calculator.h"

int main(void){

    init_calculator();
     154:	19 d3       	rcall	.+1586   	; 0x788 <init_calculator>

	return 0;
}
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <trigger>:
}

//Функция генерирующая строб на линии E.
//По этому стробу производится запись команды/данных или чтение.
void trigger(){
    PORTC |= (1<<PC6); // Set PC6 (E).
     15c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	00 00       	nop
    _delay_us(1);
    PORTC &=~(1<<PC6); // Reset PC6 (E).
     160:	ae 98       	cbi	0x15, 6	; 21
     162:	00 00       	nop
	_delay_us(1);
}
     164:	08 95       	ret

00000166 <send_data>:
	_delay_us( 40 );
}

//Функция записи байта (символа) данных в lcd контроллер
void send_data(unsigned char data){
    PORTA = data;
     166:	8b bb       	out	0x1b, r24	; 27
    trigger();
     168:	f9 df       	rcall	.-14     	; 0x15c <trigger>
     16a:	8d e0       	ldi	r24, 0x0D	; 13
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <send_data+0x6>
     170:	00 00       	nop
	_delay_us( 40 );
}
     172:	08 95       	ret

00000174 <send_command>:
	PORTC |= (1<<PC6); // Set PC6 (E).
}

//Функция записи байта (символа) команды в lcd контроллер
void send_command(unsigned char command){
    PORTA = command;
     174:	8b bb       	out	0x1b, r24	; 27
    trigger();
     176:	f2 df       	rcall	.-28     	; 0x15c <trigger>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <send_command+0x6>
     17e:	00 00       	nop
	_delay_us( 40 );
}
     180:	08 95       	ret

00000182 <init_display>:

void trigger(void);

//Функция инициализации lcd контроллера hd44780
void init_display(){
    DDRC |= (1<<PC4)|(1<<PC6); 	// PC 4 is output for RS, 6 is output for Enable.
     182:	84 b3       	in	r24, 0x14	; 20
     184:	80 65       	ori	r24, 0x50	; 80
     186:	84 bb       	out	0x14, r24	; 20
    DDRA = 0xFF; 				// PA 0-7 is 8 bit data output bus.
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	8a bb       	out	0x1a, r24	; 26

	PORTC &=~(1<<PC6); // Reset PC6 (E).
     18c:	ae 98       	cbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	85 ea       	ldi	r24, 0xA5	; 165
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <init_display+0x10>
     196:	00 c0       	rjmp	.+0      	; 0x198 <init_display+0x16>
     198:	00 00       	nop

	_delay_ms(15); 

	send_command(0x38); // 2 line mode.
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	eb df       	rcall	.-42     	; 0x174 <send_command>
     19e:	81 ee       	ldi	r24, 0xE1	; 225
     1a0:	94 e0       	ldi	r25, 0x04	; 4
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <init_display+0x20>
     1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <init_display+0x26>
     1a8:	00 00       	nop
	_delay_ms(5); 
	send_command(0x38); // 2 line mode.
     1aa:	88 e3       	ldi	r24, 0x38	; 56
     1ac:	e3 df       	rcall	.-58     	; 0x174 <send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ae:	91 e2       	ldi	r25, 0x21	; 33
     1b0:	9a 95       	dec	r25
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <init_display+0x2e>
     1b4:	00 00       	nop
	_delay_us( 100 ); 
	send_command(0x38); // 2 line mode.	
     1b6:	88 e3       	ldi	r24, 0x38	; 56
     1b8:	dd df       	rcall	.-70     	; 0x174 <send_command>

	send_command(0x0F);
     1ba:	8f e0       	ldi	r24, 0x0F	; 15
     1bc:	db df       	rcall	.-74     	; 0x174 <send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1be:	83 ec       	ldi	r24, 0xC3	; 195
     1c0:	99 e0       	ldi	r25, 0x09	; 9
     1c2:	01 97       	sbiw	r24, 0x01	; 1
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <init_display+0x40>
     1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <init_display+0x46>
     1c8:	00 00       	nop
	_delay_ms(10);
	send_command(0x01); 
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	d3 df       	rcall	.-90     	; 0x174 <send_command>
     1ce:	83 ec       	ldi	r24, 0xC3	; 195
     1d0:	99 e0       	ldi	r25, 0x09	; 9
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <init_display+0x50>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <init_display+0x56>
     1d8:	00 00       	nop
	_delay_ms(10);
	send_command(0x81); 
     1da:	81 e8       	ldi	r24, 0x81	; 129
     1dc:	cb df       	rcall	.-106    	; 0x174 <send_command>
     1de:	83 ec       	ldi	r24, 0xC3	; 195
     1e0:	99 e0       	ldi	r25, 0x09	; 9
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <init_display+0x60>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <init_display+0x66>
     1e8:	00 00       	nop
	_delay_ms(10);

	PORTC |= (1<<PC6); // Set PC6 (E).
     1ea:	ae 9a       	sbi	0x15, 6	; 21
}
     1ec:	08 95       	ret

000001ee <send_string>:
    PORTC &=~(1<<PC6); // Reset PC6 (E).
	_delay_us(1);
}

//Функция вывода строки
void send_string(const char *str){
     1ee:	ef 92       	push	r14
     1f0:	ff 92       	push	r15
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	e8 2e       	mov	r14, r24
     1f8:	e7 01       	movw	r28, r14
     1fa:	7e 01       	movw	r14, r28
     1fc:	f9 2e       	mov	r15, r25
     1fe:	e7 01       	movw	r28, r14
    while(*str) send_data(*str++); // Send characters one by one.
     200:	01 c0       	rjmp	.+2      	; 0x204 <send_string+0x16>
     202:	b1 df       	rcall	.-158    	; 0x166 <send_data>
     204:	89 91       	ld	r24, Y+
     206:	88 23       	and	r24, r24
     208:	e1 f7       	brne	.-8      	; 0x202 <send_string+0x14>
}
     20a:	df 91       	pop	r29
     20c:	cf 91       	pop	r28
     20e:	ff 90       	pop	r15
     210:	ef 90       	pop	r14
     212:	08 95       	ret

00000214 <move_to>:

//Функция изменения текущей позиции курсора,
//x — номер символа в строке, y — номер строки
void move_to(unsigned char x, unsigned char y){
	unsigned char address = x;
	if ( y ) {
     214:	61 11       	cpse	r22, r1
    	address += 0x40;
     216:	80 5c       	subi	r24, 0xC0	; 192
  	}
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     218:	ac 98       	cbi	0x15, 4	; 21
    send_command(1<<7 | address);
     21a:	80 68       	ori	r24, 0x80	; 128
     21c:	ab df       	rcall	.-170    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     21e:	ac 9a       	sbi	0x15, 4	; 21
}
     220:	08 95       	ret

00000222 <clear>:

void clear(){
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     222:	ac 98       	cbi	0x15, 4	; 21
    send_command(0x01);
     224:	81 e0       	ldi	r24, 0x01	; 1
     226:	a6 df       	rcall	.-180    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     228:	ac 9a       	sbi	0x15, 4	; 21
}
     22a:	08 95       	ret

0000022c <init_keyboard>:
    {'1', '2', '3', '+', '-', 'D'},
    {'0', '.', 'm', 'p', 't', '='}
};

void init_keyboard() {
    DDRC |= 0x0F; // PB 0-3 output for rows.
     22c:	84 b3       	in	r24, 0x14	; 20
     22e:	8f 60       	ori	r24, 0x0F	; 15
     230:	84 bb       	out	0x14, r24	; 20
    DDRD &= 0xC0; // PC 0-5 input for columns.
     232:	81 b3       	in	r24, 0x11	; 17
     234:	80 7c       	andi	r24, 0xC0	; 192
     236:	81 bb       	out	0x11, r24	; 17
}
     238:	08 95       	ret

0000023a <scan_key>:

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
     23a:	61 e0       	ldi	r22, 0x01	; 1
     23c:	70 e0       	ldi	r23, 0x00	; 0
    DDRD &= 0xC0; // PC 0-5 input for columns.
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
     23e:	82 b3       	in	r24, 0x12	; 18
     240:	8f 63       	ori	r24, 0x3F	; 63
     242:	82 bb       	out	0x12, r24	; 18
        for(int i = 0;i<4;i++){
     244:	20 e0       	ldi	r18, 0x00	; 0
     246:	30 e0       	ldi	r19, 0x00	; 0
            PORTC = ~(1 << i);
     248:	cb 01       	movw	r24, r22
     24a:	02 2e       	mov	r0, r18
     24c:	02 c0       	rjmp	.+4      	; 0x252 <scan_key+0x18>
     24e:	88 0f       	add	r24, r24
     250:	99 1f       	adc	r25, r25
     252:	0a 94       	dec	r0
     254:	e2 f7       	brpl	.-8      	; 0x24e <scan_key+0x14>
     256:	80 95       	com	r24
     258:	85 bb       	out	0x15, r24	; 21
            for(int j = 0;j < 6;j++){
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
                if(bit_is_clear(PIND, j)){
     25e:	40 b3       	in	r20, 0x10	; 16
     260:	50 e0       	ldi	r21, 0x00	; 0
     262:	08 2e       	mov	r0, r24
     264:	02 c0       	rjmp	.+4      	; 0x26a <__stack+0xb>
     266:	55 95       	asr	r21
     268:	47 95       	ror	r20
     26a:	0a 94       	dec	r0
     26c:	e2 f7       	brpl	.-8      	; 0x266 <__stack+0x7>
     26e:	40 fd       	sbrc	r20, 0
     270:	23 c0       	rjmp	.+70     	; 0x2b8 <__stack+0x59>
     272:	41 e0       	ldi	r20, 0x01	; 1
     274:	50 e0       	ldi	r21, 0x00	; 0
     276:	08 2e       	mov	r0, r24
     278:	02 c0       	rjmp	.+4      	; 0x27e <__stack+0x1f>
     27a:	44 0f       	add	r20, r20
     27c:	55 1f       	adc	r21, r21
     27e:	0a 94       	dec	r0
     280:	e2 f7       	brpl	.-8      	; 0x27a <__stack+0x1b>
     282:	06 c0       	rjmp	.+12     	; 0x290 <__stack+0x31>
     284:	e3 ed       	ldi	r30, 0xD3	; 211
     286:	f0 e3       	ldi	r31, 0x30	; 48
     288:	31 97       	sbiw	r30, 0x01	; 1
     28a:	f1 f7       	brne	.-4      	; 0x288 <__stack+0x29>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <__stack+0x2f>
     28e:	00 00       	nop
                    while(bit_is_clear(PIND, j)) _delay_ms(50);
     290:	60 b3       	in	r22, 0x10	; 16
     292:	70 e0       	ldi	r23, 0x00	; 0
     294:	64 23       	and	r22, r20
     296:	75 23       	and	r23, r21
     298:	61 15       	cp	r22, r1
     29a:	71 05       	cpc	r23, r1
     29c:	99 f3       	breq	.-26     	; 0x284 <__stack+0x25>
                    return keys[i][j];
     29e:	f9 01       	movw	r30, r18
     2a0:	ee 0f       	add	r30, r30
     2a2:	ff 1f       	adc	r31, r31
     2a4:	e2 0f       	add	r30, r18
     2a6:	f3 1f       	adc	r31, r19
     2a8:	ee 0f       	add	r30, r30
     2aa:	ff 1f       	adc	r31, r31
     2ac:	e8 0f       	add	r30, r24
     2ae:	f9 1f       	adc	r31, r25
     2b0:	e0 5a       	subi	r30, 0xA0	; 160
     2b2:	ff 4f       	sbci	r31, 0xFF	; 255
                }
            }
        }
    }
}
     2b4:	80 81       	ld	r24, Z
     2b6:	08 95       	ret
unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
            for(int j = 0;j < 6;j++){
     2b8:	01 96       	adiw	r24, 0x01	; 1
     2ba:	86 30       	cpi	r24, 0x06	; 6
     2bc:	91 05       	cpc	r25, r1
     2be:	79 f6       	brne	.-98     	; 0x25e <scan_key+0x24>
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0x3F;
        for(int i = 0;i<4;i++){
     2c0:	2f 5f       	subi	r18, 0xFF	; 255
     2c2:	3f 4f       	sbci	r19, 0xFF	; 255
     2c4:	24 30       	cpi	r18, 0x04	; 4
     2c6:	31 05       	cpc	r19, r1
     2c8:	09 f0       	breq	.+2      	; 0x2cc <__stack+0x6d>
     2ca:	be cf       	rjmp	.-132    	; 0x248 <scan_key+0xe>
     2cc:	b8 cf       	rjmp	.-144    	; 0x23e <scan_key+0x4>

000002ce <calculate>:

    reset();
    run();
}

double calculate(float m, char operator, float n) {
     2ce:	0f 93       	push	r16
     2d0:	1f 93       	push	r17
     2d2:	e4 2f       	mov	r30, r20
     2d4:	a9 01       	movw	r20, r18
     2d6:	98 01       	movw	r18, r16
    switch (operator) {
     2d8:	eb 32       	cpi	r30, 0x2B	; 43
     2da:	51 f0       	breq	.+20     	; 0x2f0 <calculate+0x22>
     2dc:	ec 32       	cpi	r30, 0x2C	; 44
     2de:	18 f4       	brcc	.+6      	; 0x2e6 <calculate+0x18>
     2e0:	ea 32       	cpi	r30, 0x2A	; 42
     2e2:	69 f4       	brne	.+26     	; 0x2fe <calculate+0x30>
     2e4:	09 c0       	rjmp	.+18     	; 0x2f8 <calculate+0x2a>
     2e6:	ed 32       	cpi	r30, 0x2D	; 45
     2e8:	29 f0       	breq	.+10     	; 0x2f4 <calculate+0x26>
     2ea:	ef 32       	cpi	r30, 0x2F	; 47
     2ec:	41 f4       	brne	.+16     	; 0x2fe <calculate+0x30>
     2ee:	06 c0       	rjmp	.+12     	; 0x2fc <calculate+0x2e>
    case '+':
        return r = m + n;
     2f0:	a1 d3       	rcall	.+1858   	; 0xa34 <__addsf3>
     2f2:	05 c0       	rjmp	.+10     	; 0x2fe <calculate+0x30>
    case '-':
        return r = m - n;
     2f4:	c6 d3       	rcall	.+1932   	; 0xa82 <__subsf3>
     2f6:	03 c0       	rjmp	.+6      	; 0x2fe <calculate+0x30>
    case '*':
        return r = m * n;
     2f8:	ef d3       	rcall	.+2014   	; 0xad8 <__mulsf3>
     2fa:	01 c0       	rjmp	.+2      	; 0x2fe <calculate+0x30>
    case '/':
        return r = m / n;
     2fc:	e2 d4       	rcall	.+2500   	; 0xcc2 <__divsf3>
    //case 'p':
    //    return r = pow(m,2);
    //case 't':
    //    return r = sqrt(m);
    }
    return r = m;
     2fe:	26 2f       	mov	r18, r22
     300:	37 2f       	mov	r19, r23
     302:	48 2f       	mov	r20, r24
     304:	59 2f       	mov	r21, r25
     306:	20 93 bb 01 	sts	0x01BB, r18
     30a:	30 93 bc 01 	sts	0x01BC, r19
     30e:	40 93 bd 01 	sts	0x01BD, r20
     312:	50 93 be 01 	sts	0x01BE, r21
}
     316:	1f 91       	pop	r17
     318:	0f 91       	pop	r16
     31a:	08 95       	ret

0000031c <show_result>:

void show_result() {
     31c:	ef 92       	push	r14
     31e:	ff 92       	push	r15
     320:	0f 93       	push	r16
     322:	1f 93       	push	r17
    move_to(0, 1);
     324:	80 e0       	ldi	r24, 0x00	; 0
     326:	61 e0       	ldi	r22, 0x01	; 1
     328:	75 df       	rcall	.-278    	; 0x214 <move_to>
    send_string("A=");
     32a:	88 e7       	ldi	r24, 0x78	; 120
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	5f df       	rcall	.-322    	; 0x1ee <send_string>
    char *data = buffer;
    if (r <= 999999999999)
     330:	e0 90 bb 01 	lds	r14, 0x01BB
     334:	f0 90 bc 01 	lds	r15, 0x01BC
     338:	00 91 bd 01 	lds	r16, 0x01BD
     33c:	10 91 be 01 	lds	r17, 0x01BE
     340:	c8 01       	movw	r24, r16
     342:	b7 01       	movw	r22, r14
     344:	25 ea       	ldi	r18, 0xA5	; 165
     346:	34 ed       	ldi	r19, 0xD4	; 212
     348:	48 e6       	ldi	r20, 0x68	; 104
     34a:	53 e5       	ldi	r21, 0x53	; 83
     34c:	8e d5       	rcall	.+2844   	; 0xe6a <__lesf2>
     34e:	18 16       	cp	r1, r24
     350:	4c f0       	brlt	.+18     	; 0x364 <show_result+0x48>
        dtostrf(r, -14, 12, buffer);
     352:	c8 01       	movw	r24, r16
     354:	b7 01       	movw	r22, r14
     356:	42 ef       	ldi	r20, 0xF2	; 242
     358:	2c e0       	ldi	r18, 0x0C	; 12
     35a:	04 ea       	ldi	r16, 0xA4	; 164
     35c:	11 e0       	ldi	r17, 0x01	; 1
     35e:	53 d8       	rcall	.-3930   	; 0xfffff406 <__eeprom_end+0xff7ef406>
}

void show_result() {
    move_to(0, 1);
    send_string("A=");
    char *data = buffer;
     360:	c8 01       	movw	r24, r16
     362:	02 c0       	rjmp	.+4      	; 0x368 <show_result+0x4c>
    if (r <= 999999999999)
        dtostrf(r, -14, 12, buffer);
    else data = overflow;
     364:	8c e8       	ldi	r24, 0x8C	; 140
     366:	90 e0       	ldi	r25, 0x00	; 0
    send_string(data);
     368:	42 df       	rcall	.-380    	; 0x1ee <send_string>
    state = 4;
     36a:	84 e0       	ldi	r24, 0x04	; 4
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	90 93 ba 01 	sts	0x01BA, r25
     372:	80 93 b9 01 	sts	0x01B9, r24
}
     376:	1f 91       	pop	r17
     378:	0f 91       	pop	r16
     37a:	ff 90       	pop	r15
     37c:	ef 90       	pop	r14
     37e:	08 95       	ret

00000380 <send_digit>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
     380:	80 5d       	subi	r24, 0xD0	; 208
     382:	f1 de       	rcall	.-542    	; 0x166 <send_data>
}
     384:	08 95       	ret

00000386 <reset>:
        decide(scan_key());
    }
}

void reset() {
    clear();
     386:	4d df       	rcall	.-358    	; 0x222 <clear>
    move_to(0, 0);
     388:	80 e0       	ldi	r24, 0x00	; 0
     38a:	60 e0       	ldi	r22, 0x00	; 0
     38c:	43 df       	rcall	.-378    	; 0x214 <move_to>
    r = a = b = op = state = count = 0;
     38e:	10 92 c0 01 	sts	0x01C0, r1
     392:	10 92 bf 01 	sts	0x01BF, r1
     396:	10 92 ba 01 	sts	0x01BA, r1
     39a:	10 92 b9 01 	sts	0x01B9, r1
     39e:	10 92 b4 01 	sts	0x01B4, r1
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	dc 01       	movw	r26, r24
     3a8:	80 93 b5 01 	sts	0x01B5, r24
     3ac:	90 93 b6 01 	sts	0x01B6, r25
     3b0:	a0 93 b7 01 	sts	0x01B7, r26
     3b4:	b0 93 b8 01 	sts	0x01B8, r27
     3b8:	80 93 c1 01 	sts	0x01C1, r24
     3bc:	90 93 c2 01 	sts	0x01C2, r25
     3c0:	a0 93 c3 01 	sts	0x01C3, r26
     3c4:	b0 93 c4 01 	sts	0x01C4, r27
     3c8:	80 93 bb 01 	sts	0x01BB, r24
     3cc:	90 93 bc 01 	sts	0x01BC, r25
     3d0:	a0 93 bd 01 	sts	0x01BD, r26
     3d4:	b0 93 be 01 	sts	0x01BE, r27
}
     3d8:	08 95       	ret

000003da <decide>:
2 - Middle Operator pressed, op.
3 - Input second operand, b.
4 - Result displayed.
*/

void decide(unsigned char key) {
     3da:	8f 92       	push	r8
     3dc:	9f 92       	push	r9
     3de:	af 92       	push	r10
     3e0:	bf 92       	push	r11
     3e2:	cf 92       	push	r12
     3e4:	df 92       	push	r13
     3e6:	ff 92       	push	r15
     3e8:	0f 93       	push	r16
     3ea:	1f 93       	push	r17
     3ec:	df 93       	push	r29
     3ee:	cf 93       	push	r28
     3f0:	0f 92       	push	r0
     3f2:	cd b7       	in	r28, 0x3d	; 61
     3f4:	de b7       	in	r29, 0x3e	; 62
     3f6:	f8 2e       	mov	r15, r24
    // Check if it is a digit.
    if ((key >= '0' && key <= '9') || key == '.')
     3f8:	28 2f       	mov	r18, r24
     3fa:	20 53       	subi	r18, 0x30	; 48

		if (key >= '0' && key <= '9') {
        	digit = key - '0'; // '2' --> 2
		}

		else if (key == '.') {f = 1; state=1;}
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	88 2e       	mov	r8, r24
     400:	91 2c       	mov	r9, r1
                count++;
            }
            break;
        case 4:
            if (digit) {
                line[0] = ' ';
     402:	00 e2       	ldi	r16, 0x20	; 32
                line[1] = ' ';
                move_to(0, 0);
                send_string(line); // Clear 1st line.
                move_to(0, 0);
                a = b = op = count = 0;
     404:	0f 2e       	mov	r0, r31
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	af 2e       	mov	r10, r31
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	bf 2e       	mov	r11, r31
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	cf 2e       	mov	r12, r31
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	df 2e       	mov	r13, r31
     416:	f0 2d       	mov	r31, r0
4 - Result displayed.
*/

void decide(unsigned char key) {
    // Check if it is a digit.
    if ((key >= '0' && key <= '9') || key == '.')
     418:	12 2f       	mov	r17, r18
     41a:	2a 30       	cpi	r18, 0x0A	; 10
     41c:	58 f0       	brcs	.+22     	; 0x434 <decide+0x5a>
     41e:	8f 2d       	mov	r24, r15
     420:	8e 32       	cpi	r24, 0x2E	; 46
     422:	09 f0       	breq	.+2      	; 0x426 <decide+0x4c>
     424:	e6 c0       	rjmp	.+460    	; 0x5f2 <decide+0x218>

		if (key >= '0' && key <= '9') {
        	digit = key - '0'; // '2' --> 2
		}

		else if (key == '.') {f = 1; state=1;}
     426:	90 92 ba 01 	sts	0x01BA, r9
     42a:	80 92 b9 01 	sts	0x01B9, r8
     42e:	10 e0       	ldi	r17, 0x00	; 0
     430:	31 e0       	ldi	r19, 0x01	; 1
     432:	01 c0       	rjmp	.+2      	; 0x436 <decide+0x5c>
void decide(unsigned char key) {
    // Check if it is a digit.
    if ((key >= '0' && key <= '9') || key == '.')
    {
		unsigned char digit;
		bool f = 0; //флаг (0 - целая часть, 1 - дробная часть)
     434:	30 e0       	ldi	r19, 0x00	; 0
        	digit = key - '0'; // '2' --> 2
		}

		else if (key == '.') {f = 1; state=1;}

        switch (state) {
     436:	80 91 b9 01 	lds	r24, 0x01B9
     43a:	90 91 ba 01 	lds	r25, 0x01BA
     43e:	82 30       	cpi	r24, 0x02	; 2
     440:	91 05       	cpc	r25, r1
     442:	09 f4       	brne	.+2      	; 0x446 <decide+0x6c>
     444:	67 c0       	rjmp	.+206    	; 0x514 <decide+0x13a>
     446:	83 30       	cpi	r24, 0x03	; 3
     448:	91 05       	cpc	r25, r1
     44a:	38 f4       	brcc	.+14     	; 0x45a <decide+0x80>
     44c:	00 97       	sbiw	r24, 0x00	; 0
     44e:	71 f0       	breq	.+28     	; 0x46c <decide+0x92>
     450:	81 30       	cpi	r24, 0x01	; 1
     452:	91 05       	cpc	r25, r1
     454:	09 f0       	breq	.+2      	; 0x458 <decide+0x7e>
     456:	88 c1       	rjmp	.+784    	; 0x768 <decide+0x38e>
     458:	14 c0       	rjmp	.+40     	; 0x482 <decide+0xa8>
     45a:	83 30       	cpi	r24, 0x03	; 3
     45c:	91 05       	cpc	r25, r1
     45e:	09 f4       	brne	.+2      	; 0x462 <decide+0x88>
     460:	61 c0       	rjmp	.+194    	; 0x524 <decide+0x14a>
     462:	84 30       	cpi	r24, 0x04	; 4
     464:	91 05       	cpc	r25, r1
     466:	09 f0       	breq	.+2      	; 0x46a <decide+0x90>
     468:	7f c1       	rjmp	.+766    	; 0x768 <decide+0x38e>
     46a:	96 c0       	rjmp	.+300    	; 0x598 <decide+0x1be>
        case 0:
            if (digit) {
     46c:	11 23       	and	r17, r17
     46e:	49 f0       	breq	.+18     	; 0x482 <decide+0xa8>
                clear(); // Clear screen if input is non-zero.
     470:	39 83       	std	Y+1, r19	; 0x01
     472:	d7 de       	rcall	.-594    	; 0x222 <clear>
                state = 1;
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	90 93 ba 01 	sts	0x01BA, r25
     47c:	80 93 b9 01 	sts	0x01B9, r24
     480:	39 81       	ldd	r19, Y+1	; 0x01
     482:	80 91 bf 01 	lds	r24, 0x01BF
     486:	90 91 c0 01 	lds	r25, 0x01C0
            }
        case 1:
			if (f == 0) {
     48a:	33 23       	and	r19, r19
     48c:	f9 f4       	brne	.+62     	; 0x4cc <decide+0xf2>
	            if (count == 14) return; // You cannot fillup the screen with a single operand.
     48e:	8e 30       	cpi	r24, 0x0E	; 14
     490:	91 05       	cpc	r25, r1
     492:	09 f4       	brne	.+2      	; 0x496 <decide+0xbc>
     494:	69 c1       	rjmp	.+722    	; 0x768 <decide+0x38e>
	            a = a * 10 + digit; // append to a.
     496:	60 91 c1 01 	lds	r22, 0x01C1
     49a:	70 91 c2 01 	lds	r23, 0x01C2
     49e:	80 91 c3 01 	lds	r24, 0x01C3
     4a2:	90 91 c4 01 	lds	r25, 0x01C4
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	40 e2       	ldi	r20, 0x20	; 32
     4ac:	51 e4       	ldi	r21, 0x41	; 65
     4ae:	14 d3       	rcall	.+1576   	; 0xad8 <__mulsf3>
     4b0:	5b 01       	movw	r10, r22
     4b2:	6c 01       	movw	r12, r24
     4b4:	61 2f       	mov	r22, r17
     4b6:	70 e0       	ldi	r23, 0x00	; 0
     4b8:	88 27       	eor	r24, r24
     4ba:	77 fd       	sbrc	r23, 7
     4bc:	80 95       	com	r24
     4be:	98 2f       	mov	r25, r24
     4c0:	ff d4       	rcall	.+2558   	; 0xec0 <__floatsisf>
     4c2:	9b 01       	movw	r18, r22
     4c4:	ac 01       	movw	r20, r24
     4c6:	c6 01       	movw	r24, r12
     4c8:	b5 01       	movw	r22, r10
     4ca:	16 c0       	rjmp	.+44     	; 0x4f8 <decide+0x11e>
	                send_data(key);
	                count++;
	            }
			}
			if (f == 1) {
	            if (count == 14) return; // You cannot fillup the screen with a single operand.
     4cc:	8e 30       	cpi	r24, 0x0E	; 14
     4ce:	91 05       	cpc	r25, r1
     4d0:	09 f4       	brne	.+2      	; 0x4d4 <decide+0xfa>
     4d2:	4a c1       	rjmp	.+660    	; 0x768 <decide+0x38e>
	            a = a + digit/(10*p); // append to a.
     4d4:	81 2f       	mov	r24, r17
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	6a e0       	ldi	r22, 0x0A	; 10
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	36 d7       	rcall	.+3692   	; 0x134a <__divmodhi4>
     4de:	88 27       	eor	r24, r24
     4e0:	77 fd       	sbrc	r23, 7
     4e2:	80 95       	com	r24
     4e4:	98 2f       	mov	r25, r24
     4e6:	ec d4       	rcall	.+2520   	; 0xec0 <__floatsisf>
     4e8:	20 91 c1 01 	lds	r18, 0x01C1
     4ec:	30 91 c2 01 	lds	r19, 0x01C2
     4f0:	40 91 c3 01 	lds	r20, 0x01C3
     4f4:	50 91 c4 01 	lds	r21, 0x01C4
     4f8:	9d d2       	rcall	.+1338   	; 0xa34 <__addsf3>
     4fa:	26 2f       	mov	r18, r22
     4fc:	37 2f       	mov	r19, r23
     4fe:	48 2f       	mov	r20, r24
     500:	59 2f       	mov	r21, r25
     502:	20 93 c1 01 	sts	0x01C1, r18
     506:	30 93 c2 01 	sts	0x01C2, r19
     50a:	40 93 c3 01 	sts	0x01C3, r20
     50e:	50 93 c4 01 	sts	0x01C4, r21
     512:	2f c0       	rjmp	.+94     	; 0x572 <decide+0x198>
				p++;
			}

            break;
        case 2:
            if (digit) state = 3;
     514:	11 23       	and	r17, r17
     516:	31 f0       	breq	.+12     	; 0x524 <decide+0x14a>
     518:	83 e0       	ldi	r24, 0x03	; 3
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	90 93 ba 01 	sts	0x01BA, r25
     520:	80 93 b9 01 	sts	0x01B9, r24
        case 3:
            b = b * 10 + digit; // append to b.
     524:	60 91 b5 01 	lds	r22, 0x01B5
     528:	70 91 b6 01 	lds	r23, 0x01B6
     52c:	80 91 b7 01 	lds	r24, 0x01B7
     530:	90 91 b8 01 	lds	r25, 0x01B8
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	40 e2       	ldi	r20, 0x20	; 32
     53a:	51 e4       	ldi	r21, 0x41	; 65
     53c:	cd d2       	rcall	.+1434   	; 0xad8 <__mulsf3>
     53e:	5b 01       	movw	r10, r22
     540:	6c 01       	movw	r12, r24
     542:	61 2f       	mov	r22, r17
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	88 27       	eor	r24, r24
     548:	77 fd       	sbrc	r23, 7
     54a:	80 95       	com	r24
     54c:	98 2f       	mov	r25, r24
     54e:	b8 d4       	rcall	.+2416   	; 0xec0 <__floatsisf>
     550:	9b 01       	movw	r18, r22
     552:	ac 01       	movw	r20, r24
     554:	c6 01       	movw	r24, r12
     556:	b5 01       	movw	r22, r10
     558:	6d d2       	rcall	.+1242   	; 0xa34 <__addsf3>
     55a:	26 2f       	mov	r18, r22
     55c:	37 2f       	mov	r19, r23
     55e:	48 2f       	mov	r20, r24
     560:	59 2f       	mov	r21, r25
     562:	20 93 b5 01 	sts	0x01B5, r18
     566:	30 93 b6 01 	sts	0x01B6, r19
     56a:	40 93 b7 01 	sts	0x01B7, r20
     56e:	50 93 b8 01 	sts	0x01B8, r21
            if (b > 0) {
     572:	20 e0       	ldi	r18, 0x00	; 0
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	a9 01       	movw	r20, r18
     578:	4d d4       	rcall	.+2202   	; 0xe14 <__gtsf2>
     57a:	18 16       	cp	r1, r24
     57c:	0c f0       	brlt	.+2      	; 0x580 <decide+0x1a6>
     57e:	f4 c0       	rjmp	.+488    	; 0x768 <decide+0x38e>
                send_data(key);
     580:	8f 2d       	mov	r24, r15
     582:	f1 dd       	rcall	.-1054   	; 0x166 <send_data>
                count++;
     584:	80 91 bf 01 	lds	r24, 0x01BF
     588:	90 91 c0 01 	lds	r25, 0x01C0
     58c:	01 96       	adiw	r24, 0x01	; 1
     58e:	90 93 c0 01 	sts	0x01C0, r25
     592:	80 93 bf 01 	sts	0x01BF, r24
     596:	e8 c0       	rjmp	.+464    	; 0x768 <decide+0x38e>
            }
            break;
        case 4:
            if (digit) {
     598:	11 23       	and	r17, r17
     59a:	09 f4       	brne	.+2      	; 0x59e <decide+0x1c4>
     59c:	e5 c0       	rjmp	.+458    	; 0x768 <decide+0x38e>
                line[0] = ' ';
     59e:	00 93 7b 00 	sts	0x007B, r16
                line[1] = ' ';
     5a2:	00 93 7c 00 	sts	0x007C, r16
                move_to(0, 0);
     5a6:	80 e0       	ldi	r24, 0x00	; 0
     5a8:	60 e0       	ldi	r22, 0x00	; 0
     5aa:	29 83       	std	Y+1, r18	; 0x01
     5ac:	33 de       	rcall	.-922    	; 0x214 <move_to>
                send_string(line); // Clear 1st line.
     5ae:	8b e7       	ldi	r24, 0x7B	; 123
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	1d de       	rcall	.-966    	; 0x1ee <send_string>
                move_to(0, 0);
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	60 e0       	ldi	r22, 0x00	; 0
     5b8:	2d de       	rcall	.-934    	; 0x214 <move_to>
                a = b = op = count = 0;
     5ba:	10 92 c0 01 	sts	0x01C0, r1
     5be:	10 92 bf 01 	sts	0x01BF, r1
     5c2:	10 92 b4 01 	sts	0x01B4, r1
     5c6:	a0 92 b5 01 	sts	0x01B5, r10
     5ca:	b0 92 b6 01 	sts	0x01B6, r11
     5ce:	c0 92 b7 01 	sts	0x01B7, r12
     5d2:	d0 92 b8 01 	sts	0x01B8, r13
     5d6:	a0 92 c1 01 	sts	0x01C1, r10
     5da:	b0 92 c2 01 	sts	0x01C2, r11
     5de:	c0 92 c3 01 	sts	0x01C3, r12
     5e2:	d0 92 c4 01 	sts	0x01C4, r13
                state = 1;
     5e6:	90 92 ba 01 	sts	0x01BA, r9
     5ea:	80 92 b9 01 	sts	0x01B9, r8
                decide(key); // Recursively capture digit.
                return;
     5ee:	29 81       	ldd	r18, Y+1	; 0x01
     5f0:	13 cf       	rjmp	.-474    	; 0x418 <decide+0x3e>
            break;
        }
    } 

	else {
        switch (key) {
     5f2:	ef 2d       	mov	r30, r15
     5f4:	e3 36       	cpi	r30, 0x63	; 99
     5f6:	29 f1       	breq	.+74     	; 0x642 <decide+0x268>
     5f8:	e4 36       	cpi	r30, 0x64	; 100
     5fa:	a8 f4       	brcc	.+42     	; 0x626 <decide+0x24c>
     5fc:	ef 32       	cpi	r30, 0x2F	; 47
     5fe:	09 f1       	breq	.+66     	; 0x642 <decide+0x268>
     600:	e0 33       	cpi	r30, 0x30	; 48
     602:	48 f4       	brcc	.+18     	; 0x616 <decide+0x23c>
     604:	ea 32       	cpi	r30, 0x2A	; 42
     606:	08 f4       	brcc	.+2      	; 0x60a <decide+0x230>
     608:	af c0       	rjmp	.+350    	; 0x768 <decide+0x38e>
     60a:	ec 32       	cpi	r30, 0x2C	; 44
     60c:	d0 f0       	brcs	.+52     	; 0x642 <decide+0x268>
     60e:	ed 32       	cpi	r30, 0x2D	; 45
     610:	09 f0       	breq	.+2      	; 0x614 <decide+0x23a>
     612:	aa c0       	rjmp	.+340    	; 0x768 <decide+0x38e>
     614:	16 c0       	rjmp	.+44     	; 0x642 <decide+0x268>
     616:	ff 2d       	mov	r31, r15
     618:	fd 33       	cpi	r31, 0x3D	; 61
     61a:	09 f4       	brne	.+2      	; 0x61e <decide+0x244>
     61c:	88 c0       	rjmp	.+272    	; 0x72e <decide+0x354>
     61e:	f3 34       	cpi	r31, 0x43	; 67
     620:	09 f0       	breq	.+2      	; 0x624 <decide+0x24a>
     622:	a2 c0       	rjmp	.+324    	; 0x768 <decide+0x38e>
     624:	a0 c0       	rjmp	.+320    	; 0x766 <decide+0x38c>
     626:	8f 2d       	mov	r24, r15
     628:	80 37       	cpi	r24, 0x70	; 112
     62a:	59 f0       	breq	.+22     	; 0x642 <decide+0x268>
     62c:	81 37       	cpi	r24, 0x71	; 113
     62e:	20 f4       	brcc	.+8      	; 0x638 <decide+0x25e>
     630:	8d 36       	cpi	r24, 0x6D	; 109
     632:	09 f0       	breq	.+2      	; 0x636 <decide+0x25c>
     634:	99 c0       	rjmp	.+306    	; 0x768 <decide+0x38e>
     636:	05 c0       	rjmp	.+10     	; 0x642 <decide+0x268>
     638:	8f 2d       	mov	r24, r15
     63a:	83 57       	subi	r24, 0x73	; 115
     63c:	82 30       	cpi	r24, 0x02	; 2
     63e:	08 f0       	brcs	.+2      	; 0x642 <decide+0x268>
     640:	93 c0       	rjmp	.+294    	; 0x768 <decide+0x38e>
        case 's':
        case 'c':
        case 'm':
        case 'p':
        case 't':
            switch (state) {
     642:	80 91 b9 01 	lds	r24, 0x01B9
     646:	90 91 ba 01 	lds	r25, 0x01BA
     64a:	82 30       	cpi	r24, 0x02	; 2
     64c:	91 05       	cpc	r25, r1
     64e:	81 f0       	breq	.+32     	; 0x670 <decide+0x296>
     650:	83 30       	cpi	r24, 0x03	; 3
     652:	91 05       	cpc	r25, r1
     654:	28 f4       	brcc	.+10     	; 0x660 <decide+0x286>
     656:	81 30       	cpi	r24, 0x01	; 1
     658:	91 05       	cpc	r25, r1
     65a:	09 f0       	breq	.+2      	; 0x65e <decide+0x284>
     65c:	65 c0       	rjmp	.+202    	; 0x728 <decide+0x34e>
     65e:	0b c0       	rjmp	.+22     	; 0x676 <decide+0x29c>
     660:	83 30       	cpi	r24, 0x03	; 3
     662:	91 05       	cpc	r25, r1
     664:	d1 f0       	breq	.+52     	; 0x69a <decide+0x2c0>
     666:	84 30       	cpi	r24, 0x04	; 4
     668:	91 05       	cpc	r25, r1
     66a:	09 f0       	breq	.+2      	; 0x66e <decide+0x294>
     66c:	5d c0       	rjmp	.+186    	; 0x728 <decide+0x34e>
     66e:	29 c0       	rjmp	.+82     	; 0x6c2 <decide+0x2e8>
            case 2:
                move_to(0,0); // Modify the operand displayed.
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	60 e0       	ldi	r22, 0x00	; 0
     674:	cf dd       	rcall	.-1122   	; 0x214 <move_to>
            case 1:
                send_data(key);
     676:	8f 2d       	mov	r24, r15
     678:	76 dd       	rcall	.-1300   	; 0x166 <send_data>
                count++;
     67a:	80 91 bf 01 	lds	r24, 0x01BF
     67e:	90 91 c0 01 	lds	r25, 0x01C0
     682:	01 96       	adiw	r24, 0x01	; 1
     684:	90 93 c0 01 	sts	0x01C0, r25
     688:	80 93 bf 01 	sts	0x01BF, r24
                state = 2;
     68c:	82 e0       	ldi	r24, 0x02	; 2
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	90 93 ba 01 	sts	0x01BA, r25
     694:	80 93 b9 01 	sts	0x01B9, r24
                break;
     698:	47 c0       	rjmp	.+142    	; 0x728 <decide+0x34e>
            case 3:
                calculate(a, op, b);
     69a:	60 91 c1 01 	lds	r22, 0x01C1
     69e:	70 91 c2 01 	lds	r23, 0x01C2
     6a2:	80 91 c3 01 	lds	r24, 0x01C3
     6a6:	90 91 c4 01 	lds	r25, 0x01C4
     6aa:	00 91 b5 01 	lds	r16, 0x01B5
     6ae:	10 91 b6 01 	lds	r17, 0x01B6
     6b2:	20 91 b7 01 	lds	r18, 0x01B7
     6b6:	30 91 b8 01 	lds	r19, 0x01B8
     6ba:	40 91 b4 01 	lds	r20, 0x01B4
     6be:	07 de       	rcall	.-1010   	; 0x2ce <calculate>
                show_result();
     6c0:	2d de       	rcall	.-934    	; 0x31c <show_result>
            case 4:
                move_to(0, 0);
     6c2:	80 e0       	ldi	r24, 0x00	; 0
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	a6 dd       	rcall	.-1204   	; 0x214 <move_to>
                line[0] = 'A'; // 'A' represents current result.
     6c8:	81 e4       	ldi	r24, 0x41	; 65
     6ca:	80 93 7b 00 	sts	0x007B, r24
                line[1] = key; // Operator of the operation.
     6ce:	f0 92 7c 00 	sts	0x007C, r15
                send_string(line);
     6d2:	8b e7       	ldi	r24, 0x7B	; 123
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	8b dd       	rcall	.-1258   	; 0x1ee <send_string>
                move_to(2,0);
     6d8:	82 e0       	ldi	r24, 0x02	; 2
     6da:	60 e0       	ldi	r22, 0x00	; 0
     6dc:	9b dd       	rcall	.-1226   	; 0x214 <move_to>
                count = 2;
     6de:	22 e0       	ldi	r18, 0x02	; 2
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	30 93 c0 01 	sts	0x01C0, r19
     6e6:	20 93 bf 01 	sts	0x01BF, r18
                a = r; // Put result into a.
     6ea:	80 91 bb 01 	lds	r24, 0x01BB
     6ee:	90 91 bc 01 	lds	r25, 0x01BC
     6f2:	a0 91 bd 01 	lds	r26, 0x01BD
     6f6:	b0 91 be 01 	lds	r27, 0x01BE
     6fa:	80 93 c1 01 	sts	0x01C1, r24
     6fe:	90 93 c2 01 	sts	0x01C2, r25
     702:	a0 93 c3 01 	sts	0x01C3, r26
     706:	b0 93 c4 01 	sts	0x01C4, r27
                b = 0; // Clear b.
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	dc 01       	movw	r26, r24
     710:	80 93 b5 01 	sts	0x01B5, r24
     714:	90 93 b6 01 	sts	0x01B6, r25
     718:	a0 93 b7 01 	sts	0x01B7, r26
     71c:	b0 93 b8 01 	sts	0x01B8, r27
                state = 2;
     720:	30 93 ba 01 	sts	0x01BA, r19
     724:	20 93 b9 01 	sts	0x01B9, r18
                break;
            }
            op = key;
     728:	f0 92 b4 01 	sts	0x01B4, r15
            break;
     72c:	1d c0       	rjmp	.+58     	; 0x768 <decide+0x38e>
        case '=':
            if(state == 3){
     72e:	80 91 b9 01 	lds	r24, 0x01B9
     732:	90 91 ba 01 	lds	r25, 0x01BA
     736:	83 30       	cpi	r24, 0x03	; 3
     738:	91 05       	cpc	r25, r1
     73a:	b1 f4       	brne	.+44     	; 0x768 <decide+0x38e>
                calculate(a, op, b);
     73c:	60 91 c1 01 	lds	r22, 0x01C1
     740:	70 91 c2 01 	lds	r23, 0x01C2
     744:	80 91 c3 01 	lds	r24, 0x01C3
     748:	90 91 c4 01 	lds	r25, 0x01C4
     74c:	00 91 b5 01 	lds	r16, 0x01B5
     750:	10 91 b6 01 	lds	r17, 0x01B6
     754:	20 91 b7 01 	lds	r18, 0x01B7
     758:	30 91 b8 01 	lds	r19, 0x01B8
     75c:	40 91 b4 01 	lds	r20, 0x01B4
     760:	b6 dd       	rcall	.-1172   	; 0x2ce <calculate>
                show_result();
     762:	dc dd       	rcall	.-1096   	; 0x31c <show_result>
     764:	01 c0       	rjmp	.+2      	; 0x768 <decide+0x38e>
            }
            break;
        case 'C': // "C" button.
            //if (state != 0) 
			reset();
     766:	0f de       	rcall	.-994    	; 0x386 <reset>
            break;
        }
    }
}
     768:	0f 90       	pop	r0
     76a:	cf 91       	pop	r28
     76c:	df 91       	pop	r29
     76e:	1f 91       	pop	r17
     770:	0f 91       	pop	r16
     772:	ff 90       	pop	r15
     774:	df 90       	pop	r13
     776:	cf 90       	pop	r12
     778:	bf 90       	pop	r11
     77a:	af 90       	pop	r10
     77c:	9f 90       	pop	r9
     77e:	8f 90       	pop	r8
     780:	08 95       	ret

00000782 <run>:
    send_data(digit + '0');
}

void run() {
    while (1) {
        decide(scan_key());
     782:	5b dd       	rcall	.-1354   	; 0x23a <scan_key>
     784:	2a de       	rcall	.-940    	; 0x3da <decide>
     786:	fd cf       	rjmp	.-6      	; 0x782 <run>

00000788 <init_calculator>:
     788:	8f e9       	ldi	r24, 0x9F	; 159
     78a:	96 e8       	ldi	r25, 0x86	; 134
     78c:	a1 e0       	ldi	r26, 0x01	; 1
     78e:	81 50       	subi	r24, 0x01	; 1
     790:	90 40       	sbci	r25, 0x00	; 0
     792:	a0 40       	sbci	r26, 0x00	; 0
     794:	e1 f7       	brne	.-8      	; 0x78e <init_calculator+0x6>
     796:	00 c0       	rjmp	.+0      	; 0x798 <init_calculator+0x10>
     798:	00 00       	nop
void decide(unsigned char);
void send_digit(unsigned char);

void init_calculator() {
    _delay_ms(500);
    init_display();
     79a:	f3 dc       	rcall	.-1562   	; 0x182 <init_display>
    init_keyboard();
     79c:	47 dd       	rcall	.-1394   	; 0x22c <init_keyboard>

    reset();
     79e:	f3 dd       	rcall	.-1050   	; 0x386 <reset>
    run();
     7a0:	f0 df       	rcall	.-32     	; 0x782 <run>
}
     7a2:	08 95       	ret

000007a4 <_fpadd_parts>:
     7a4:	a0 e0       	ldi	r26, 0x00	; 0
     7a6:	b0 e0       	ldi	r27, 0x00	; 0
     7a8:	e7 ed       	ldi	r30, 0xD7	; 215
     7aa:	f3 e0       	ldi	r31, 0x03	; 3
     7ac:	f9 c5       	rjmp	.+3058   	; 0x13a0 <__prologue_saves__+0x8>
     7ae:	fc 01       	movw	r30, r24
     7b0:	ea 01       	movw	r28, r20
     7b2:	80 81       	ld	r24, Z
     7b4:	82 30       	cpi	r24, 0x02	; 2
     7b6:	08 f4       	brcc	.+2      	; 0x7ba <_fpadd_parts+0x16>
     7b8:	38 c1       	rjmp	.+624    	; 0xa2a <_fpadd_parts+0x286>
     7ba:	db 01       	movw	r26, r22
     7bc:	9c 91       	ld	r25, X
     7be:	92 30       	cpi	r25, 0x02	; 2
     7c0:	08 f4       	brcc	.+2      	; 0x7c4 <_fpadd_parts+0x20>
     7c2:	30 c1       	rjmp	.+608    	; 0xa24 <_fpadd_parts+0x280>
     7c4:	84 30       	cpi	r24, 0x04	; 4
     7c6:	59 f4       	brne	.+22     	; 0x7de <_fpadd_parts+0x3a>
     7c8:	94 30       	cpi	r25, 0x04	; 4
     7ca:	09 f0       	breq	.+2      	; 0x7ce <_fpadd_parts+0x2a>
     7cc:	2e c1       	rjmp	.+604    	; 0xa2a <_fpadd_parts+0x286>
     7ce:	91 81       	ldd	r25, Z+1	; 0x01
     7d0:	11 96       	adiw	r26, 0x01	; 1
     7d2:	8c 91       	ld	r24, X
     7d4:	11 97       	sbiw	r26, 0x01	; 1
     7d6:	98 17       	cp	r25, r24
     7d8:	09 f0       	breq	.+2      	; 0x7dc <_fpadd_parts+0x38>
     7da:	21 c1       	rjmp	.+578    	; 0xa1e <_fpadd_parts+0x27a>
     7dc:	26 c1       	rjmp	.+588    	; 0xa2a <_fpadd_parts+0x286>
     7de:	94 30       	cpi	r25, 0x04	; 4
     7e0:	09 f4       	brne	.+2      	; 0x7e4 <_fpadd_parts+0x40>
     7e2:	20 c1       	rjmp	.+576    	; 0xa24 <_fpadd_parts+0x280>
     7e4:	92 30       	cpi	r25, 0x02	; 2
     7e6:	b1 f4       	brne	.+44     	; 0x814 <_fpadd_parts+0x70>
     7e8:	82 30       	cpi	r24, 0x02	; 2
     7ea:	09 f0       	breq	.+2      	; 0x7ee <_fpadd_parts+0x4a>
     7ec:	1e c1       	rjmp	.+572    	; 0xa2a <_fpadd_parts+0x286>
     7ee:	ca 01       	movw	r24, r20
     7f0:	af 01       	movw	r20, r30
     7f2:	28 e0       	ldi	r18, 0x08	; 8
     7f4:	da 01       	movw	r26, r20
     7f6:	0d 90       	ld	r0, X+
     7f8:	ad 01       	movw	r20, r26
     7fa:	dc 01       	movw	r26, r24
     7fc:	0d 92       	st	X+, r0
     7fe:	cd 01       	movw	r24, r26
     800:	21 50       	subi	r18, 0x01	; 1
     802:	c1 f7       	brne	.-16     	; 0x7f4 <_fpadd_parts+0x50>
     804:	db 01       	movw	r26, r22
     806:	11 96       	adiw	r26, 0x01	; 1
     808:	8c 91       	ld	r24, X
     80a:	11 97       	sbiw	r26, 0x01	; 1
     80c:	91 81       	ldd	r25, Z+1	; 0x01
     80e:	89 23       	and	r24, r25
     810:	89 83       	std	Y+1, r24	; 0x01
     812:	0a c1       	rjmp	.+532    	; 0xa28 <_fpadd_parts+0x284>
     814:	82 30       	cpi	r24, 0x02	; 2
     816:	09 f4       	brne	.+2      	; 0x81a <_fpadd_parts+0x76>
     818:	05 c1       	rjmp	.+522    	; 0xa24 <_fpadd_parts+0x280>
     81a:	c2 80       	ldd	r12, Z+2	; 0x02
     81c:	d3 80       	ldd	r13, Z+3	; 0x03
     81e:	db 01       	movw	r26, r22
     820:	12 96       	adiw	r26, 0x02	; 2
     822:	6d 90       	ld	r6, X+
     824:	7c 90       	ld	r7, X
     826:	13 97       	sbiw	r26, 0x03	; 3
     828:	24 81       	ldd	r18, Z+4	; 0x04
     82a:	35 81       	ldd	r19, Z+5	; 0x05
     82c:	46 81       	ldd	r20, Z+6	; 0x06
     82e:	57 81       	ldd	r21, Z+7	; 0x07
     830:	14 96       	adiw	r26, 0x04	; 4
     832:	ed 90       	ld	r14, X+
     834:	fd 90       	ld	r15, X+
     836:	0d 91       	ld	r16, X+
     838:	1c 91       	ld	r17, X
     83a:	17 97       	sbiw	r26, 0x07	; 7
     83c:	c6 01       	movw	r24, r12
     83e:	86 19       	sub	r24, r6
     840:	97 09       	sbc	r25, r7
     842:	5c 01       	movw	r10, r24
     844:	97 ff       	sbrs	r25, 7
     846:	04 c0       	rjmp	.+8      	; 0x850 <_fpadd_parts+0xac>
     848:	aa 24       	eor	r10, r10
     84a:	bb 24       	eor	r11, r11
     84c:	a8 1a       	sub	r10, r24
     84e:	b9 0a       	sbc	r11, r25
     850:	b0 e2       	ldi	r27, 0x20	; 32
     852:	ab 16       	cp	r10, r27
     854:	b1 04       	cpc	r11, r1
     856:	0c f0       	brlt	.+2      	; 0x85a <_fpadd_parts+0xb6>
     858:	61 c0       	rjmp	.+194    	; 0x91c <_fpadd_parts+0x178>
     85a:	18 16       	cp	r1, r24
     85c:	19 06       	cpc	r1, r25
     85e:	6c f5       	brge	.+90     	; 0x8ba <_fpadd_parts+0x116>
     860:	37 01       	movw	r6, r14
     862:	48 01       	movw	r8, r16
     864:	0a 2c       	mov	r0, r10
     866:	04 c0       	rjmp	.+8      	; 0x870 <_fpadd_parts+0xcc>
     868:	96 94       	lsr	r9
     86a:	87 94       	ror	r8
     86c:	77 94       	ror	r7
     86e:	67 94       	ror	r6
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <_fpadd_parts+0xc4>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	0a 2c       	mov	r0, r10
     87e:	04 c0       	rjmp	.+8      	; 0x888 <_fpadd_parts+0xe4>
     880:	88 0f       	add	r24, r24
     882:	99 1f       	adc	r25, r25
     884:	aa 1f       	adc	r26, r26
     886:	bb 1f       	adc	r27, r27
     888:	0a 94       	dec	r0
     88a:	d2 f7       	brpl	.-12     	; 0x880 <_fpadd_parts+0xdc>
     88c:	01 97       	sbiw	r24, 0x01	; 1
     88e:	a1 09       	sbc	r26, r1
     890:	b1 09       	sbc	r27, r1
     892:	8e 21       	and	r24, r14
     894:	9f 21       	and	r25, r15
     896:	a0 23       	and	r26, r16
     898:	b1 23       	and	r27, r17
     89a:	ee 24       	eor	r14, r14
     89c:	ff 24       	eor	r15, r15
     89e:	87 01       	movw	r16, r14
     8a0:	e3 94       	inc	r14
     8a2:	00 97       	sbiw	r24, 0x00	; 0
     8a4:	a1 05       	cpc	r26, r1
     8a6:	b1 05       	cpc	r27, r1
     8a8:	19 f4       	brne	.+6      	; 0x8b0 <_fpadd_parts+0x10c>
     8aa:	ee 24       	eor	r14, r14
     8ac:	ff 24       	eor	r15, r15
     8ae:	87 01       	movw	r16, r14
     8b0:	e6 28       	or	r14, r6
     8b2:	f7 28       	or	r15, r7
     8b4:	08 29       	or	r16, r8
     8b6:	19 29       	or	r17, r9
     8b8:	3c c0       	rjmp	.+120    	; 0x932 <_fpadd_parts+0x18e>
     8ba:	00 97       	sbiw	r24, 0x00	; 0
     8bc:	d1 f1       	breq	.+116    	; 0x932 <_fpadd_parts+0x18e>
     8be:	ca 0c       	add	r12, r10
     8c0:	db 1c       	adc	r13, r11
     8c2:	39 01       	movw	r6, r18
     8c4:	4a 01       	movw	r8, r20
     8c6:	0a 2c       	mov	r0, r10
     8c8:	04 c0       	rjmp	.+8      	; 0x8d2 <_fpadd_parts+0x12e>
     8ca:	96 94       	lsr	r9
     8cc:	87 94       	ror	r8
     8ce:	77 94       	ror	r7
     8d0:	67 94       	ror	r6
     8d2:	0a 94       	dec	r0
     8d4:	d2 f7       	brpl	.-12     	; 0x8ca <_fpadd_parts+0x126>
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	a0 e0       	ldi	r26, 0x00	; 0
     8dc:	b0 e0       	ldi	r27, 0x00	; 0
     8de:	0a 2c       	mov	r0, r10
     8e0:	04 c0       	rjmp	.+8      	; 0x8ea <_fpadd_parts+0x146>
     8e2:	88 0f       	add	r24, r24
     8e4:	99 1f       	adc	r25, r25
     8e6:	aa 1f       	adc	r26, r26
     8e8:	bb 1f       	adc	r27, r27
     8ea:	0a 94       	dec	r0
     8ec:	d2 f7       	brpl	.-12     	; 0x8e2 <_fpadd_parts+0x13e>
     8ee:	01 97       	sbiw	r24, 0x01	; 1
     8f0:	a1 09       	sbc	r26, r1
     8f2:	b1 09       	sbc	r27, r1
     8f4:	82 23       	and	r24, r18
     8f6:	93 23       	and	r25, r19
     8f8:	a4 23       	and	r26, r20
     8fa:	b5 23       	and	r27, r21
     8fc:	21 e0       	ldi	r18, 0x01	; 1
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	40 e0       	ldi	r20, 0x00	; 0
     902:	50 e0       	ldi	r21, 0x00	; 0
     904:	00 97       	sbiw	r24, 0x00	; 0
     906:	a1 05       	cpc	r26, r1
     908:	b1 05       	cpc	r27, r1
     90a:	19 f4       	brne	.+6      	; 0x912 <_fpadd_parts+0x16e>
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	a9 01       	movw	r20, r18
     912:	26 29       	or	r18, r6
     914:	37 29       	or	r19, r7
     916:	48 29       	or	r20, r8
     918:	59 29       	or	r21, r9
     91a:	0b c0       	rjmp	.+22     	; 0x932 <_fpadd_parts+0x18e>
     91c:	6c 14       	cp	r6, r12
     91e:	7d 04       	cpc	r7, r13
     920:	24 f4       	brge	.+8      	; 0x92a <_fpadd_parts+0x186>
     922:	ee 24       	eor	r14, r14
     924:	ff 24       	eor	r15, r15
     926:	87 01       	movw	r16, r14
     928:	04 c0       	rjmp	.+8      	; 0x932 <_fpadd_parts+0x18e>
     92a:	63 01       	movw	r12, r6
     92c:	20 e0       	ldi	r18, 0x00	; 0
     92e:	30 e0       	ldi	r19, 0x00	; 0
     930:	a9 01       	movw	r20, r18
     932:	81 81       	ldd	r24, Z+1	; 0x01
     934:	fb 01       	movw	r30, r22
     936:	91 81       	ldd	r25, Z+1	; 0x01
     938:	89 17       	cp	r24, r25
     93a:	09 f4       	brne	.+2      	; 0x93e <_fpadd_parts+0x19a>
     93c:	45 c0       	rjmp	.+138    	; 0x9c8 <_fpadd_parts+0x224>
     93e:	88 23       	and	r24, r24
     940:	49 f0       	breq	.+18     	; 0x954 <_fpadd_parts+0x1b0>
     942:	d8 01       	movw	r26, r16
     944:	c7 01       	movw	r24, r14
     946:	82 1b       	sub	r24, r18
     948:	93 0b       	sbc	r25, r19
     94a:	a4 0b       	sbc	r26, r20
     94c:	b5 0b       	sbc	r27, r21
     94e:	9c 01       	movw	r18, r24
     950:	ad 01       	movw	r20, r26
     952:	04 c0       	rjmp	.+8      	; 0x95c <_fpadd_parts+0x1b8>
     954:	2e 19       	sub	r18, r14
     956:	3f 09       	sbc	r19, r15
     958:	40 0b       	sbc	r20, r16
     95a:	51 0b       	sbc	r21, r17
     95c:	57 fd       	sbrc	r21, 7
     95e:	04 c0       	rjmp	.+8      	; 0x968 <_fpadd_parts+0x1c4>
     960:	19 82       	std	Y+1, r1	; 0x01
     962:	db 82       	std	Y+3, r13	; 0x03
     964:	ca 82       	std	Y+2, r12	; 0x02
     966:	0b c0       	rjmp	.+22     	; 0x97e <_fpadd_parts+0x1da>
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	89 83       	std	Y+1, r24	; 0x01
     96c:	db 82       	std	Y+3, r13	; 0x03
     96e:	ca 82       	std	Y+2, r12	; 0x02
     970:	50 95       	com	r21
     972:	40 95       	com	r20
     974:	30 95       	com	r19
     976:	21 95       	neg	r18
     978:	3f 4f       	sbci	r19, 0xFF	; 255
     97a:	4f 4f       	sbci	r20, 0xFF	; 255
     97c:	5f 4f       	sbci	r21, 0xFF	; 255
     97e:	2c 83       	std	Y+4, r18	; 0x04
     980:	3d 83       	std	Y+5, r19	; 0x05
     982:	4e 83       	std	Y+6, r20	; 0x06
     984:	5f 83       	std	Y+7, r21	; 0x07
     986:	0d c0       	rjmp	.+26     	; 0x9a2 <_fpadd_parts+0x1fe>
     988:	88 0f       	add	r24, r24
     98a:	99 1f       	adc	r25, r25
     98c:	aa 1f       	adc	r26, r26
     98e:	bb 1f       	adc	r27, r27
     990:	8c 83       	std	Y+4, r24	; 0x04
     992:	9d 83       	std	Y+5, r25	; 0x05
     994:	ae 83       	std	Y+6, r26	; 0x06
     996:	bf 83       	std	Y+7, r27	; 0x07
     998:	8a 81       	ldd	r24, Y+2	; 0x02
     99a:	9b 81       	ldd	r25, Y+3	; 0x03
     99c:	01 97       	sbiw	r24, 0x01	; 1
     99e:	9b 83       	std	Y+3, r25	; 0x03
     9a0:	8a 83       	std	Y+2, r24	; 0x02
     9a2:	8c 81       	ldd	r24, Y+4	; 0x04
     9a4:	9d 81       	ldd	r25, Y+5	; 0x05
     9a6:	ae 81       	ldd	r26, Y+6	; 0x06
     9a8:	bf 81       	ldd	r27, Y+7	; 0x07
     9aa:	9c 01       	movw	r18, r24
     9ac:	ad 01       	movw	r20, r26
     9ae:	21 50       	subi	r18, 0x01	; 1
     9b0:	30 40       	sbci	r19, 0x00	; 0
     9b2:	40 40       	sbci	r20, 0x00	; 0
     9b4:	50 40       	sbci	r21, 0x00	; 0
     9b6:	2f 3f       	cpi	r18, 0xFF	; 255
     9b8:	ef ef       	ldi	r30, 0xFF	; 255
     9ba:	3e 07       	cpc	r19, r30
     9bc:	ef ef       	ldi	r30, 0xFF	; 255
     9be:	4e 07       	cpc	r20, r30
     9c0:	ef e3       	ldi	r30, 0x3F	; 63
     9c2:	5e 07       	cpc	r21, r30
     9c4:	08 f3       	brcs	.-62     	; 0x988 <_fpadd_parts+0x1e4>
     9c6:	0b c0       	rjmp	.+22     	; 0x9de <_fpadd_parts+0x23a>
     9c8:	89 83       	std	Y+1, r24	; 0x01
     9ca:	db 82       	std	Y+3, r13	; 0x03
     9cc:	ca 82       	std	Y+2, r12	; 0x02
     9ce:	2e 0d       	add	r18, r14
     9d0:	3f 1d       	adc	r19, r15
     9d2:	40 1f       	adc	r20, r16
     9d4:	51 1f       	adc	r21, r17
     9d6:	2c 83       	std	Y+4, r18	; 0x04
     9d8:	3d 83       	std	Y+5, r19	; 0x05
     9da:	4e 83       	std	Y+6, r20	; 0x06
     9dc:	5f 83       	std	Y+7, r21	; 0x07
     9de:	83 e0       	ldi	r24, 0x03	; 3
     9e0:	88 83       	st	Y, r24
     9e2:	2c 81       	ldd	r18, Y+4	; 0x04
     9e4:	3d 81       	ldd	r19, Y+5	; 0x05
     9e6:	4e 81       	ldd	r20, Y+6	; 0x06
     9e8:	5f 81       	ldd	r21, Y+7	; 0x07
     9ea:	57 ff       	sbrs	r21, 7
     9ec:	1d c0       	rjmp	.+58     	; 0xa28 <_fpadd_parts+0x284>
     9ee:	da 01       	movw	r26, r20
     9f0:	c9 01       	movw	r24, r18
     9f2:	81 70       	andi	r24, 0x01	; 1
     9f4:	90 70       	andi	r25, 0x00	; 0
     9f6:	a0 70       	andi	r26, 0x00	; 0
     9f8:	b0 70       	andi	r27, 0x00	; 0
     9fa:	56 95       	lsr	r21
     9fc:	47 95       	ror	r20
     9fe:	37 95       	ror	r19
     a00:	27 95       	ror	r18
     a02:	82 2b       	or	r24, r18
     a04:	93 2b       	or	r25, r19
     a06:	a4 2b       	or	r26, r20
     a08:	b5 2b       	or	r27, r21
     a0a:	8c 83       	std	Y+4, r24	; 0x04
     a0c:	9d 83       	std	Y+5, r25	; 0x05
     a0e:	ae 83       	std	Y+6, r26	; 0x06
     a10:	bf 83       	std	Y+7, r27	; 0x07
     a12:	8a 81       	ldd	r24, Y+2	; 0x02
     a14:	9b 81       	ldd	r25, Y+3	; 0x03
     a16:	01 96       	adiw	r24, 0x01	; 1
     a18:	9b 83       	std	Y+3, r25	; 0x03
     a1a:	8a 83       	std	Y+2, r24	; 0x02
     a1c:	05 c0       	rjmp	.+10     	; 0xa28 <_fpadd_parts+0x284>
     a1e:	eb e9       	ldi	r30, 0x9B	; 155
     a20:	f0 e0       	ldi	r31, 0x00	; 0
     a22:	03 c0       	rjmp	.+6      	; 0xa2a <_fpadd_parts+0x286>
     a24:	fb 01       	movw	r30, r22
     a26:	01 c0       	rjmp	.+2      	; 0xa2a <_fpadd_parts+0x286>
     a28:	fe 01       	movw	r30, r28
     a2a:	cf 01       	movw	r24, r30
     a2c:	cd b7       	in	r28, 0x3d	; 61
     a2e:	de b7       	in	r29, 0x3e	; 62
     a30:	ee e0       	ldi	r30, 0x0E	; 14
     a32:	d2 c4       	rjmp	.+2468   	; 0x13d8 <__epilogue_restores__+0x8>

00000a34 <__addsf3>:
     a34:	a0 e2       	ldi	r26, 0x20	; 32
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	ef e1       	ldi	r30, 0x1F	; 31
     a3a:	f5 e0       	ldi	r31, 0x05	; 5
     a3c:	b9 c4       	rjmp	.+2418   	; 0x13b0 <__prologue_saves__+0x18>
     a3e:	69 83       	std	Y+1, r22	; 0x01
     a40:	7a 83       	std	Y+2, r23	; 0x02
     a42:	8b 83       	std	Y+3, r24	; 0x03
     a44:	9c 83       	std	Y+4, r25	; 0x04
     a46:	2d 83       	std	Y+5, r18	; 0x05
     a48:	3e 83       	std	Y+6, r19	; 0x06
     a4a:	4f 83       	std	Y+7, r20	; 0x07
     a4c:	58 87       	std	Y+8, r21	; 0x08
     a4e:	89 e0       	ldi	r24, 0x09	; 9
     a50:	e8 2e       	mov	r14, r24
     a52:	f1 2c       	mov	r15, r1
     a54:	ec 0e       	add	r14, r28
     a56:	fd 1e       	adc	r15, r29
     a58:	ce 01       	movw	r24, r28
     a5a:	01 96       	adiw	r24, 0x01	; 1
     a5c:	b7 01       	movw	r22, r14
     a5e:	b3 d3       	rcall	.+1894   	; 0x11c6 <__unpack_f>
     a60:	8e 01       	movw	r16, r28
     a62:	0f 5e       	subi	r16, 0xEF	; 239
     a64:	1f 4f       	sbci	r17, 0xFF	; 255
     a66:	ce 01       	movw	r24, r28
     a68:	05 96       	adiw	r24, 0x05	; 5
     a6a:	b8 01       	movw	r22, r16
     a6c:	ac d3       	rcall	.+1880   	; 0x11c6 <__unpack_f>
     a6e:	c7 01       	movw	r24, r14
     a70:	b8 01       	movw	r22, r16
     a72:	ae 01       	movw	r20, r28
     a74:	47 5e       	subi	r20, 0xE7	; 231
     a76:	5f 4f       	sbci	r21, 0xFF	; 255
     a78:	95 de       	rcall	.-726    	; 0x7a4 <_fpadd_parts>
     a7a:	d8 d2       	rcall	.+1456   	; 0x102c <__pack_f>
     a7c:	a0 96       	adiw	r28, 0x20	; 32
     a7e:	e6 e0       	ldi	r30, 0x06	; 6
     a80:	b3 c4       	rjmp	.+2406   	; 0x13e8 <__epilogue_restores__+0x18>

00000a82 <__subsf3>:
     a82:	a0 e2       	ldi	r26, 0x20	; 32
     a84:	b0 e0       	ldi	r27, 0x00	; 0
     a86:	e6 e4       	ldi	r30, 0x46	; 70
     a88:	f5 e0       	ldi	r31, 0x05	; 5
     a8a:	92 c4       	rjmp	.+2340   	; 0x13b0 <__prologue_saves__+0x18>
     a8c:	69 83       	std	Y+1, r22	; 0x01
     a8e:	7a 83       	std	Y+2, r23	; 0x02
     a90:	8b 83       	std	Y+3, r24	; 0x03
     a92:	9c 83       	std	Y+4, r25	; 0x04
     a94:	2d 83       	std	Y+5, r18	; 0x05
     a96:	3e 83       	std	Y+6, r19	; 0x06
     a98:	4f 83       	std	Y+7, r20	; 0x07
     a9a:	58 87       	std	Y+8, r21	; 0x08
     a9c:	8e 01       	movw	r16, r28
     a9e:	07 5f       	subi	r16, 0xF7	; 247
     aa0:	1f 4f       	sbci	r17, 0xFF	; 255
     aa2:	ce 01       	movw	r24, r28
     aa4:	01 96       	adiw	r24, 0x01	; 1
     aa6:	b8 01       	movw	r22, r16
     aa8:	8e d3       	rcall	.+1820   	; 0x11c6 <__unpack_f>
     aaa:	91 e1       	ldi	r25, 0x11	; 17
     aac:	e9 2e       	mov	r14, r25
     aae:	f1 2c       	mov	r15, r1
     ab0:	ec 0e       	add	r14, r28
     ab2:	fd 1e       	adc	r15, r29
     ab4:	ce 01       	movw	r24, r28
     ab6:	05 96       	adiw	r24, 0x05	; 5
     ab8:	b7 01       	movw	r22, r14
     aba:	85 d3       	rcall	.+1802   	; 0x11c6 <__unpack_f>
     abc:	8a 89       	ldd	r24, Y+18	; 0x12
     abe:	91 e0       	ldi	r25, 0x01	; 1
     ac0:	89 27       	eor	r24, r25
     ac2:	8a 8b       	std	Y+18, r24	; 0x12
     ac4:	c8 01       	movw	r24, r16
     ac6:	b7 01       	movw	r22, r14
     ac8:	ae 01       	movw	r20, r28
     aca:	47 5e       	subi	r20, 0xE7	; 231
     acc:	5f 4f       	sbci	r21, 0xFF	; 255
     ace:	6a de       	rcall	.-812    	; 0x7a4 <_fpadd_parts>
     ad0:	ad d2       	rcall	.+1370   	; 0x102c <__pack_f>
     ad2:	a0 96       	adiw	r28, 0x20	; 32
     ad4:	e6 e0       	ldi	r30, 0x06	; 6
     ad6:	88 c4       	rjmp	.+2320   	; 0x13e8 <__epilogue_restores__+0x18>

00000ad8 <__mulsf3>:
     ad8:	a0 e2       	ldi	r26, 0x20	; 32
     ada:	b0 e0       	ldi	r27, 0x00	; 0
     adc:	e1 e7       	ldi	r30, 0x71	; 113
     ade:	f5 e0       	ldi	r31, 0x05	; 5
     ae0:	5b c4       	rjmp	.+2230   	; 0x1398 <__prologue_saves__>
     ae2:	69 83       	std	Y+1, r22	; 0x01
     ae4:	7a 83       	std	Y+2, r23	; 0x02
     ae6:	8b 83       	std	Y+3, r24	; 0x03
     ae8:	9c 83       	std	Y+4, r25	; 0x04
     aea:	2d 83       	std	Y+5, r18	; 0x05
     aec:	3e 83       	std	Y+6, r19	; 0x06
     aee:	4f 83       	std	Y+7, r20	; 0x07
     af0:	58 87       	std	Y+8, r21	; 0x08
     af2:	ce 01       	movw	r24, r28
     af4:	01 96       	adiw	r24, 0x01	; 1
     af6:	be 01       	movw	r22, r28
     af8:	67 5f       	subi	r22, 0xF7	; 247
     afa:	7f 4f       	sbci	r23, 0xFF	; 255
     afc:	64 d3       	rcall	.+1736   	; 0x11c6 <__unpack_f>
     afe:	ce 01       	movw	r24, r28
     b00:	05 96       	adiw	r24, 0x05	; 5
     b02:	be 01       	movw	r22, r28
     b04:	6f 5e       	subi	r22, 0xEF	; 239
     b06:	7f 4f       	sbci	r23, 0xFF	; 255
     b08:	5e d3       	rcall	.+1724   	; 0x11c6 <__unpack_f>
     b0a:	99 85       	ldd	r25, Y+9	; 0x09
     b0c:	92 30       	cpi	r25, 0x02	; 2
     b0e:	78 f0       	brcs	.+30     	; 0xb2e <__mulsf3+0x56>
     b10:	89 89       	ldd	r24, Y+17	; 0x11
     b12:	82 30       	cpi	r24, 0x02	; 2
     b14:	c0 f0       	brcs	.+48     	; 0xb46 <__mulsf3+0x6e>
     b16:	94 30       	cpi	r25, 0x04	; 4
     b18:	19 f4       	brne	.+6      	; 0xb20 <__mulsf3+0x48>
     b1a:	82 30       	cpi	r24, 0x02	; 2
     b1c:	41 f4       	brne	.+16     	; 0xb2e <__mulsf3+0x56>
     b1e:	cb c0       	rjmp	.+406    	; 0xcb6 <__mulsf3+0x1de>
     b20:	84 30       	cpi	r24, 0x04	; 4
     b22:	19 f4       	brne	.+6      	; 0xb2a <__mulsf3+0x52>
     b24:	92 30       	cpi	r25, 0x02	; 2
     b26:	79 f4       	brne	.+30     	; 0xb46 <__mulsf3+0x6e>
     b28:	c6 c0       	rjmp	.+396    	; 0xcb6 <__mulsf3+0x1de>
     b2a:	92 30       	cpi	r25, 0x02	; 2
     b2c:	51 f4       	brne	.+20     	; 0xb42 <__mulsf3+0x6a>
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	2a 85       	ldd	r18, Y+10	; 0x0a
     b32:	9a 89       	ldd	r25, Y+18	; 0x12
     b34:	29 17       	cp	r18, r25
     b36:	09 f4       	brne	.+2      	; 0xb3a <__mulsf3+0x62>
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	8a 87       	std	Y+10, r24	; 0x0a
     b3c:	ce 01       	movw	r24, r28
     b3e:	09 96       	adiw	r24, 0x09	; 9
     b40:	bc c0       	rjmp	.+376    	; 0xcba <__mulsf3+0x1e2>
     b42:	82 30       	cpi	r24, 0x02	; 2
     b44:	51 f4       	brne	.+20     	; 0xb5a <__mulsf3+0x82>
     b46:	81 e0       	ldi	r24, 0x01	; 1
     b48:	2a 85       	ldd	r18, Y+10	; 0x0a
     b4a:	9a 89       	ldd	r25, Y+18	; 0x12
     b4c:	29 17       	cp	r18, r25
     b4e:	09 f4       	brne	.+2      	; 0xb52 <__mulsf3+0x7a>
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	8a 8b       	std	Y+18, r24	; 0x12
     b54:	ce 01       	movw	r24, r28
     b56:	41 96       	adiw	r24, 0x11	; 17
     b58:	b0 c0       	rjmp	.+352    	; 0xcba <__mulsf3+0x1e2>
     b5a:	6d 84       	ldd	r6, Y+13	; 0x0d
     b5c:	7e 84       	ldd	r7, Y+14	; 0x0e
     b5e:	8f 84       	ldd	r8, Y+15	; 0x0f
     b60:	98 88       	ldd	r9, Y+16	; 0x10
     b62:	ed 88       	ldd	r14, Y+21	; 0x15
     b64:	fe 88       	ldd	r15, Y+22	; 0x16
     b66:	0f 89       	ldd	r16, Y+23	; 0x17
     b68:	18 8d       	ldd	r17, Y+24	; 0x18
     b6a:	e0 e2       	ldi	r30, 0x20	; 32
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	dc 01       	movw	r26, r24
     b74:	aa 24       	eor	r10, r10
     b76:	bb 24       	eor	r11, r11
     b78:	65 01       	movw	r12, r10
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	a9 01       	movw	r20, r18
     b80:	b3 01       	movw	r22, r6
     b82:	61 70       	andi	r22, 0x01	; 1
     b84:	70 70       	andi	r23, 0x00	; 0
     b86:	61 15       	cp	r22, r1
     b88:	71 05       	cpc	r23, r1
     b8a:	d1 f0       	breq	.+52     	; 0xbc0 <__mulsf3+0xe8>
     b8c:	2e 0d       	add	r18, r14
     b8e:	3f 1d       	adc	r19, r15
     b90:	40 1f       	adc	r20, r16
     b92:	51 1f       	adc	r21, r17
     b94:	15 01       	movw	r2, r10
     b96:	26 01       	movw	r4, r12
     b98:	28 0e       	add	r2, r24
     b9a:	39 1e       	adc	r3, r25
     b9c:	4a 1e       	adc	r4, r26
     b9e:	5b 1e       	adc	r5, r27
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	a0 e0       	ldi	r26, 0x00	; 0
     ba6:	b0 e0       	ldi	r27, 0x00	; 0
     ba8:	2e 15       	cp	r18, r14
     baa:	3f 05       	cpc	r19, r15
     bac:	40 07       	cpc	r20, r16
     bae:	51 07       	cpc	r21, r17
     bb0:	18 f0       	brcs	.+6      	; 0xbb8 <__mulsf3+0xe0>
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	dc 01       	movw	r26, r24
     bb8:	82 0d       	add	r24, r2
     bba:	93 1d       	adc	r25, r3
     bbc:	a4 1d       	adc	r26, r4
     bbe:	b5 1d       	adc	r27, r5
     bc0:	aa 0c       	add	r10, r10
     bc2:	bb 1c       	adc	r11, r11
     bc4:	cc 1c       	adc	r12, r12
     bc6:	dd 1c       	adc	r13, r13
     bc8:	17 ff       	sbrs	r17, 7
     bca:	09 c0       	rjmp	.+18     	; 0xbde <__mulsf3+0x106>
     bcc:	61 e0       	ldi	r22, 0x01	; 1
     bce:	26 2e       	mov	r2, r22
     bd0:	31 2c       	mov	r3, r1
     bd2:	41 2c       	mov	r4, r1
     bd4:	51 2c       	mov	r5, r1
     bd6:	a2 28       	or	r10, r2
     bd8:	b3 28       	or	r11, r3
     bda:	c4 28       	or	r12, r4
     bdc:	d5 28       	or	r13, r5
     bde:	31 97       	sbiw	r30, 0x01	; 1
     be0:	49 f0       	breq	.+18     	; 0xbf4 <__mulsf3+0x11c>
     be2:	ee 0c       	add	r14, r14
     be4:	ff 1c       	adc	r15, r15
     be6:	00 1f       	adc	r16, r16
     be8:	11 1f       	adc	r17, r17
     bea:	96 94       	lsr	r9
     bec:	87 94       	ror	r8
     bee:	77 94       	ror	r7
     bf0:	67 94       	ror	r6
     bf2:	c6 cf       	rjmp	.-116    	; 0xb80 <__mulsf3+0xa8>
     bf4:	6b 89       	ldd	r22, Y+19	; 0x13
     bf6:	7c 89       	ldd	r23, Y+20	; 0x14
     bf8:	eb 85       	ldd	r30, Y+11	; 0x0b
     bfa:	fc 85       	ldd	r31, Y+12	; 0x0c
     bfc:	6e 0f       	add	r22, r30
     bfe:	7f 1f       	adc	r23, r31
     c00:	6e 5f       	subi	r22, 0xFE	; 254
     c02:	7f 4f       	sbci	r23, 0xFF	; 255
     c04:	7c 8f       	std	Y+28, r23	; 0x1c
     c06:	6b 8f       	std	Y+27, r22	; 0x1b
     c08:	61 e0       	ldi	r22, 0x01	; 1
     c0a:	ea 85       	ldd	r30, Y+10	; 0x0a
     c0c:	7a 89       	ldd	r23, Y+18	; 0x12
     c0e:	e7 17       	cp	r30, r23
     c10:	09 f4       	brne	.+2      	; 0xc14 <__mulsf3+0x13c>
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	6a 8f       	std	Y+26, r22	; 0x1a
     c16:	6b 8d       	ldd	r22, Y+27	; 0x1b
     c18:	7c 8d       	ldd	r23, Y+28	; 0x1c
     c1a:	10 c0       	rjmp	.+32     	; 0xc3c <__mulsf3+0x164>
     c1c:	fc 01       	movw	r30, r24
     c1e:	e1 70       	andi	r30, 0x01	; 1
     c20:	f0 70       	andi	r31, 0x00	; 0
     c22:	30 97       	sbiw	r30, 0x00	; 0
     c24:	29 f0       	breq	.+10     	; 0xc30 <__mulsf3+0x158>
     c26:	56 95       	lsr	r21
     c28:	47 95       	ror	r20
     c2a:	37 95       	ror	r19
     c2c:	27 95       	ror	r18
     c2e:	50 68       	ori	r21, 0x80	; 128
     c30:	b6 95       	lsr	r27
     c32:	a7 95       	ror	r26
     c34:	97 95       	ror	r25
     c36:	87 95       	ror	r24
     c38:	6f 5f       	subi	r22, 0xFF	; 255
     c3a:	7f 4f       	sbci	r23, 0xFF	; 255
     c3c:	b7 fd       	sbrc	r27, 7
     c3e:	ee cf       	rjmp	.-36     	; 0xc1c <__mulsf3+0x144>
     c40:	0c c0       	rjmp	.+24     	; 0xc5a <__mulsf3+0x182>
     c42:	88 0f       	add	r24, r24
     c44:	99 1f       	adc	r25, r25
     c46:	aa 1f       	adc	r26, r26
     c48:	bb 1f       	adc	r27, r27
     c4a:	57 fd       	sbrc	r21, 7
     c4c:	81 60       	ori	r24, 0x01	; 1
     c4e:	22 0f       	add	r18, r18
     c50:	33 1f       	adc	r19, r19
     c52:	44 1f       	adc	r20, r20
     c54:	55 1f       	adc	r21, r21
     c56:	61 50       	subi	r22, 0x01	; 1
     c58:	70 40       	sbci	r23, 0x00	; 0
     c5a:	80 30       	cpi	r24, 0x00	; 0
     c5c:	e0 e0       	ldi	r30, 0x00	; 0
     c5e:	9e 07       	cpc	r25, r30
     c60:	e0 e0       	ldi	r30, 0x00	; 0
     c62:	ae 07       	cpc	r26, r30
     c64:	e0 e4       	ldi	r30, 0x40	; 64
     c66:	be 07       	cpc	r27, r30
     c68:	60 f3       	brcs	.-40     	; 0xc42 <__mulsf3+0x16a>
     c6a:	6b 8f       	std	Y+27, r22	; 0x1b
     c6c:	7c 8f       	std	Y+28, r23	; 0x1c
     c6e:	6f e7       	ldi	r22, 0x7F	; 127
     c70:	e6 2e       	mov	r14, r22
     c72:	f1 2c       	mov	r15, r1
     c74:	01 2d       	mov	r16, r1
     c76:	11 2d       	mov	r17, r1
     c78:	e8 22       	and	r14, r24
     c7a:	f9 22       	and	r15, r25
     c7c:	0a 23       	and	r16, r26
     c7e:	1b 23       	and	r17, r27
     c80:	60 e4       	ldi	r22, 0x40	; 64
     c82:	e6 16       	cp	r14, r22
     c84:	f1 04       	cpc	r15, r1
     c86:	01 05       	cpc	r16, r1
     c88:	11 05       	cpc	r17, r1
     c8a:	61 f4       	brne	.+24     	; 0xca4 <__mulsf3+0x1cc>
     c8c:	87 fd       	sbrc	r24, 7
     c8e:	0a c0       	rjmp	.+20     	; 0xca4 <__mulsf3+0x1cc>
     c90:	21 15       	cp	r18, r1
     c92:	31 05       	cpc	r19, r1
     c94:	41 05       	cpc	r20, r1
     c96:	51 05       	cpc	r21, r1
     c98:	29 f0       	breq	.+10     	; 0xca4 <__mulsf3+0x1cc>
     c9a:	80 5c       	subi	r24, 0xC0	; 192
     c9c:	9f 4f       	sbci	r25, 0xFF	; 255
     c9e:	af 4f       	sbci	r26, 0xFF	; 255
     ca0:	bf 4f       	sbci	r27, 0xFF	; 255
     ca2:	80 78       	andi	r24, 0x80	; 128
     ca4:	8d 8f       	std	Y+29, r24	; 0x1d
     ca6:	9e 8f       	std	Y+30, r25	; 0x1e
     ca8:	af 8f       	std	Y+31, r26	; 0x1f
     caa:	b8 a3       	std	Y+32, r27	; 0x20
     cac:	83 e0       	ldi	r24, 0x03	; 3
     cae:	89 8f       	std	Y+25, r24	; 0x19
     cb0:	ce 01       	movw	r24, r28
     cb2:	49 96       	adiw	r24, 0x19	; 25
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <__mulsf3+0x1e2>
     cb6:	8b e9       	ldi	r24, 0x9B	; 155
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	b8 d1       	rcall	.+880    	; 0x102c <__pack_f>
     cbc:	a0 96       	adiw	r28, 0x20	; 32
     cbe:	e2 e1       	ldi	r30, 0x12	; 18
     cc0:	87 c3       	rjmp	.+1806   	; 0x13d0 <__epilogue_restores__>

00000cc2 <__divsf3>:
     cc2:	a8 e1       	ldi	r26, 0x18	; 24
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	e6 e6       	ldi	r30, 0x66	; 102
     cc8:	f6 e0       	ldi	r31, 0x06	; 6
     cca:	6e c3       	rjmp	.+1756   	; 0x13a8 <__prologue_saves__+0x10>
     ccc:	69 83       	std	Y+1, r22	; 0x01
     cce:	7a 83       	std	Y+2, r23	; 0x02
     cd0:	8b 83       	std	Y+3, r24	; 0x03
     cd2:	9c 83       	std	Y+4, r25	; 0x04
     cd4:	2d 83       	std	Y+5, r18	; 0x05
     cd6:	3e 83       	std	Y+6, r19	; 0x06
     cd8:	4f 83       	std	Y+7, r20	; 0x07
     cda:	58 87       	std	Y+8, r21	; 0x08
     cdc:	8e 01       	movw	r16, r28
     cde:	07 5f       	subi	r16, 0xF7	; 247
     ce0:	1f 4f       	sbci	r17, 0xFF	; 255
     ce2:	ce 01       	movw	r24, r28
     ce4:	01 96       	adiw	r24, 0x01	; 1
     ce6:	b8 01       	movw	r22, r16
     ce8:	6e d2       	rcall	.+1244   	; 0x11c6 <__unpack_f>
     cea:	81 e1       	ldi	r24, 0x11	; 17
     cec:	e8 2e       	mov	r14, r24
     cee:	f1 2c       	mov	r15, r1
     cf0:	ec 0e       	add	r14, r28
     cf2:	fd 1e       	adc	r15, r29
     cf4:	ce 01       	movw	r24, r28
     cf6:	05 96       	adiw	r24, 0x05	; 5
     cf8:	b7 01       	movw	r22, r14
     cfa:	65 d2       	rcall	.+1226   	; 0x11c6 <__unpack_f>
     cfc:	99 85       	ldd	r25, Y+9	; 0x09
     cfe:	92 30       	cpi	r25, 0x02	; 2
     d00:	08 f4       	brcc	.+2      	; 0xd04 <__divsf3+0x42>
     d02:	83 c0       	rjmp	.+262    	; 0xe0a <__divsf3+0x148>
     d04:	89 89       	ldd	r24, Y+17	; 0x11
     d06:	82 30       	cpi	r24, 0x02	; 2
     d08:	08 f4       	brcc	.+2      	; 0xd0c <__divsf3+0x4a>
     d0a:	7b c0       	rjmp	.+246    	; 0xe02 <__divsf3+0x140>
     d0c:	2a 85       	ldd	r18, Y+10	; 0x0a
     d0e:	3a 89       	ldd	r19, Y+18	; 0x12
     d10:	23 27       	eor	r18, r19
     d12:	2a 87       	std	Y+10, r18	; 0x0a
     d14:	94 30       	cpi	r25, 0x04	; 4
     d16:	11 f0       	breq	.+4      	; 0xd1c <__divsf3+0x5a>
     d18:	92 30       	cpi	r25, 0x02	; 2
     d1a:	21 f4       	brne	.+8      	; 0xd24 <__divsf3+0x62>
     d1c:	98 17       	cp	r25, r24
     d1e:	09 f0       	breq	.+2      	; 0xd22 <__divsf3+0x60>
     d20:	6c c0       	rjmp	.+216    	; 0xdfa <__divsf3+0x138>
     d22:	71 c0       	rjmp	.+226    	; 0xe06 <__divsf3+0x144>
     d24:	84 30       	cpi	r24, 0x04	; 4
     d26:	39 f4       	brne	.+14     	; 0xd36 <__divsf3+0x74>
     d28:	1d 86       	std	Y+13, r1	; 0x0d
     d2a:	1e 86       	std	Y+14, r1	; 0x0e
     d2c:	1f 86       	std	Y+15, r1	; 0x0f
     d2e:	18 8a       	std	Y+16, r1	; 0x10
     d30:	1c 86       	std	Y+12, r1	; 0x0c
     d32:	1b 86       	std	Y+11, r1	; 0x0b
     d34:	6a c0       	rjmp	.+212    	; 0xe0a <__divsf3+0x148>
     d36:	82 30       	cpi	r24, 0x02	; 2
     d38:	19 f4       	brne	.+6      	; 0xd40 <__divsf3+0x7e>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	89 87       	std	Y+9, r24	; 0x09
     d3e:	65 c0       	rjmp	.+202    	; 0xe0a <__divsf3+0x148>
     d40:	8b 85       	ldd	r24, Y+11	; 0x0b
     d42:	9c 85       	ldd	r25, Y+12	; 0x0c
     d44:	2b 89       	ldd	r18, Y+19	; 0x13
     d46:	3c 89       	ldd	r19, Y+20	; 0x14
     d48:	82 1b       	sub	r24, r18
     d4a:	93 0b       	sbc	r25, r19
     d4c:	9c 87       	std	Y+12, r25	; 0x0c
     d4e:	8b 87       	std	Y+11, r24	; 0x0b
     d50:	2d 85       	ldd	r18, Y+13	; 0x0d
     d52:	3e 85       	ldd	r19, Y+14	; 0x0e
     d54:	4f 85       	ldd	r20, Y+15	; 0x0f
     d56:	58 89       	ldd	r21, Y+16	; 0x10
     d58:	ed 88       	ldd	r14, Y+21	; 0x15
     d5a:	fe 88       	ldd	r15, Y+22	; 0x16
     d5c:	0f 89       	ldd	r16, Y+23	; 0x17
     d5e:	18 8d       	ldd	r17, Y+24	; 0x18
     d60:	2e 15       	cp	r18, r14
     d62:	3f 05       	cpc	r19, r15
     d64:	40 07       	cpc	r20, r16
     d66:	51 07       	cpc	r21, r17
     d68:	38 f4       	brcc	.+14     	; 0xd78 <__divsf3+0xb6>
     d6a:	22 0f       	add	r18, r18
     d6c:	33 1f       	adc	r19, r19
     d6e:	44 1f       	adc	r20, r20
     d70:	55 1f       	adc	r21, r21
     d72:	01 97       	sbiw	r24, 0x01	; 1
     d74:	9c 87       	std	Y+12, r25	; 0x0c
     d76:	8b 87       	std	Y+11, r24	; 0x0b
     d78:	6f e1       	ldi	r22, 0x1F	; 31
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	a1 2c       	mov	r10, r1
     d7e:	b1 2c       	mov	r11, r1
     d80:	c1 2c       	mov	r12, r1
     d82:	a0 e4       	ldi	r26, 0x40	; 64
     d84:	da 2e       	mov	r13, r26
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	dc 01       	movw	r26, r24
     d8c:	2e 15       	cp	r18, r14
     d8e:	3f 05       	cpc	r19, r15
     d90:	40 07       	cpc	r20, r16
     d92:	51 07       	cpc	r21, r17
     d94:	40 f0       	brcs	.+16     	; 0xda6 <__divsf3+0xe4>
     d96:	8a 29       	or	r24, r10
     d98:	9b 29       	or	r25, r11
     d9a:	ac 29       	or	r26, r12
     d9c:	bd 29       	or	r27, r13
     d9e:	2e 19       	sub	r18, r14
     da0:	3f 09       	sbc	r19, r15
     da2:	40 0b       	sbc	r20, r16
     da4:	51 0b       	sbc	r21, r17
     da6:	d6 94       	lsr	r13
     da8:	c7 94       	ror	r12
     daa:	b7 94       	ror	r11
     dac:	a7 94       	ror	r10
     dae:	22 0f       	add	r18, r18
     db0:	33 1f       	adc	r19, r19
     db2:	44 1f       	adc	r20, r20
     db4:	55 1f       	adc	r21, r21
     db6:	61 50       	subi	r22, 0x01	; 1
     db8:	70 40       	sbci	r23, 0x00	; 0
     dba:	41 f7       	brne	.-48     	; 0xd8c <__divsf3+0xca>
     dbc:	6f e7       	ldi	r22, 0x7F	; 127
     dbe:	e6 2e       	mov	r14, r22
     dc0:	f1 2c       	mov	r15, r1
     dc2:	01 2d       	mov	r16, r1
     dc4:	11 2d       	mov	r17, r1
     dc6:	e8 22       	and	r14, r24
     dc8:	f9 22       	and	r15, r25
     dca:	0a 23       	and	r16, r26
     dcc:	1b 23       	and	r17, r27
     dce:	60 e4       	ldi	r22, 0x40	; 64
     dd0:	e6 16       	cp	r14, r22
     dd2:	f1 04       	cpc	r15, r1
     dd4:	01 05       	cpc	r16, r1
     dd6:	11 05       	cpc	r17, r1
     dd8:	61 f4       	brne	.+24     	; 0xdf2 <__divsf3+0x130>
     dda:	87 fd       	sbrc	r24, 7
     ddc:	0a c0       	rjmp	.+20     	; 0xdf2 <__divsf3+0x130>
     dde:	21 15       	cp	r18, r1
     de0:	31 05       	cpc	r19, r1
     de2:	41 05       	cpc	r20, r1
     de4:	51 05       	cpc	r21, r1
     de6:	29 f0       	breq	.+10     	; 0xdf2 <__divsf3+0x130>
     de8:	80 5c       	subi	r24, 0xC0	; 192
     dea:	9f 4f       	sbci	r25, 0xFF	; 255
     dec:	af 4f       	sbci	r26, 0xFF	; 255
     dee:	bf 4f       	sbci	r27, 0xFF	; 255
     df0:	80 78       	andi	r24, 0x80	; 128
     df2:	8d 87       	std	Y+13, r24	; 0x0d
     df4:	9e 87       	std	Y+14, r25	; 0x0e
     df6:	af 87       	std	Y+15, r26	; 0x0f
     df8:	b8 8b       	std	Y+16, r27	; 0x10
     dfa:	8e 01       	movw	r16, r28
     dfc:	07 5f       	subi	r16, 0xF7	; 247
     dfe:	1f 4f       	sbci	r17, 0xFF	; 255
     e00:	04 c0       	rjmp	.+8      	; 0xe0a <__divsf3+0x148>
     e02:	87 01       	movw	r16, r14
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <__divsf3+0x148>
     e06:	0b e9       	ldi	r16, 0x9B	; 155
     e08:	10 e0       	ldi	r17, 0x00	; 0
     e0a:	c8 01       	movw	r24, r16
     e0c:	0f d1       	rcall	.+542    	; 0x102c <__pack_f>
     e0e:	68 96       	adiw	r28, 0x18	; 24
     e10:	ea e0       	ldi	r30, 0x0A	; 10
     e12:	e6 c2       	rjmp	.+1484   	; 0x13e0 <__epilogue_restores__+0x10>

00000e14 <__gtsf2>:
     e14:	a8 e1       	ldi	r26, 0x18	; 24
     e16:	b0 e0       	ldi	r27, 0x00	; 0
     e18:	ef e0       	ldi	r30, 0x0F	; 15
     e1a:	f7 e0       	ldi	r31, 0x07	; 7
     e1c:	c9 c2       	rjmp	.+1426   	; 0x13b0 <__prologue_saves__+0x18>
     e1e:	69 83       	std	Y+1, r22	; 0x01
     e20:	7a 83       	std	Y+2, r23	; 0x02
     e22:	8b 83       	std	Y+3, r24	; 0x03
     e24:	9c 83       	std	Y+4, r25	; 0x04
     e26:	2d 83       	std	Y+5, r18	; 0x05
     e28:	3e 83       	std	Y+6, r19	; 0x06
     e2a:	4f 83       	std	Y+7, r20	; 0x07
     e2c:	58 87       	std	Y+8, r21	; 0x08
     e2e:	8e 01       	movw	r16, r28
     e30:	07 5f       	subi	r16, 0xF7	; 247
     e32:	1f 4f       	sbci	r17, 0xFF	; 255
     e34:	ce 01       	movw	r24, r28
     e36:	01 96       	adiw	r24, 0x01	; 1
     e38:	b8 01       	movw	r22, r16
     e3a:	c5 d1       	rcall	.+906    	; 0x11c6 <__unpack_f>
     e3c:	81 e1       	ldi	r24, 0x11	; 17
     e3e:	e8 2e       	mov	r14, r24
     e40:	f1 2c       	mov	r15, r1
     e42:	ec 0e       	add	r14, r28
     e44:	fd 1e       	adc	r15, r29
     e46:	ce 01       	movw	r24, r28
     e48:	05 96       	adiw	r24, 0x05	; 5
     e4a:	b7 01       	movw	r22, r14
     e4c:	bc d1       	rcall	.+888    	; 0x11c6 <__unpack_f>
     e4e:	89 85       	ldd	r24, Y+9	; 0x09
     e50:	82 30       	cpi	r24, 0x02	; 2
     e52:	38 f0       	brcs	.+14     	; 0xe62 <__gtsf2+0x4e>
     e54:	89 89       	ldd	r24, Y+17	; 0x11
     e56:	82 30       	cpi	r24, 0x02	; 2
     e58:	20 f0       	brcs	.+8      	; 0xe62 <__gtsf2+0x4e>
     e5a:	c8 01       	movw	r24, r16
     e5c:	b7 01       	movw	r22, r14
     e5e:	1c d2       	rcall	.+1080   	; 0x1298 <__fpcmp_parts_f>
     e60:	01 c0       	rjmp	.+2      	; 0xe64 <__gtsf2+0x50>
     e62:	8f ef       	ldi	r24, 0xFF	; 255
     e64:	68 96       	adiw	r28, 0x18	; 24
     e66:	e6 e0       	ldi	r30, 0x06	; 6
     e68:	bf c2       	rjmp	.+1406   	; 0x13e8 <__epilogue_restores__+0x18>

00000e6a <__lesf2>:
     e6a:	a8 e1       	ldi	r26, 0x18	; 24
     e6c:	b0 e0       	ldi	r27, 0x00	; 0
     e6e:	ea e3       	ldi	r30, 0x3A	; 58
     e70:	f7 e0       	ldi	r31, 0x07	; 7
     e72:	9e c2       	rjmp	.+1340   	; 0x13b0 <__prologue_saves__+0x18>
     e74:	69 83       	std	Y+1, r22	; 0x01
     e76:	7a 83       	std	Y+2, r23	; 0x02
     e78:	8b 83       	std	Y+3, r24	; 0x03
     e7a:	9c 83       	std	Y+4, r25	; 0x04
     e7c:	2d 83       	std	Y+5, r18	; 0x05
     e7e:	3e 83       	std	Y+6, r19	; 0x06
     e80:	4f 83       	std	Y+7, r20	; 0x07
     e82:	58 87       	std	Y+8, r21	; 0x08
     e84:	8e 01       	movw	r16, r28
     e86:	07 5f       	subi	r16, 0xF7	; 247
     e88:	1f 4f       	sbci	r17, 0xFF	; 255
     e8a:	ce 01       	movw	r24, r28
     e8c:	01 96       	adiw	r24, 0x01	; 1
     e8e:	b8 01       	movw	r22, r16
     e90:	9a d1       	rcall	.+820    	; 0x11c6 <__unpack_f>
     e92:	81 e1       	ldi	r24, 0x11	; 17
     e94:	e8 2e       	mov	r14, r24
     e96:	f1 2c       	mov	r15, r1
     e98:	ec 0e       	add	r14, r28
     e9a:	fd 1e       	adc	r15, r29
     e9c:	ce 01       	movw	r24, r28
     e9e:	05 96       	adiw	r24, 0x05	; 5
     ea0:	b7 01       	movw	r22, r14
     ea2:	91 d1       	rcall	.+802    	; 0x11c6 <__unpack_f>
     ea4:	89 85       	ldd	r24, Y+9	; 0x09
     ea6:	82 30       	cpi	r24, 0x02	; 2
     ea8:	38 f0       	brcs	.+14     	; 0xeb8 <__lesf2+0x4e>
     eaa:	89 89       	ldd	r24, Y+17	; 0x11
     eac:	82 30       	cpi	r24, 0x02	; 2
     eae:	20 f0       	brcs	.+8      	; 0xeb8 <__lesf2+0x4e>
     eb0:	c8 01       	movw	r24, r16
     eb2:	b7 01       	movw	r22, r14
     eb4:	f1 d1       	rcall	.+994    	; 0x1298 <__fpcmp_parts_f>
     eb6:	01 c0       	rjmp	.+2      	; 0xeba <__lesf2+0x50>
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	68 96       	adiw	r28, 0x18	; 24
     ebc:	e6 e0       	ldi	r30, 0x06	; 6
     ebe:	94 c2       	rjmp	.+1320   	; 0x13e8 <__epilogue_restores__+0x18>

00000ec0 <__floatsisf>:
     ec0:	a8 e0       	ldi	r26, 0x08	; 8
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	e5 e6       	ldi	r30, 0x65	; 101
     ec6:	f7 e0       	ldi	r31, 0x07	; 7
     ec8:	73 c2       	rjmp	.+1254   	; 0x13b0 <__prologue_saves__+0x18>
     eca:	7b 01       	movw	r14, r22
     ecc:	8c 01       	movw	r16, r24
     ece:	83 e0       	ldi	r24, 0x03	; 3
     ed0:	89 83       	std	Y+1, r24	; 0x01
     ed2:	d8 01       	movw	r26, r16
     ed4:	c7 01       	movw	r24, r14
     ed6:	88 27       	eor	r24, r24
     ed8:	b7 fd       	sbrc	r27, 7
     eda:	83 95       	inc	r24
     edc:	99 27       	eor	r25, r25
     ede:	aa 27       	eor	r26, r26
     ee0:	bb 27       	eor	r27, r27
     ee2:	28 2f       	mov	r18, r24
     ee4:	8a 83       	std	Y+2, r24	; 0x02
     ee6:	e1 14       	cp	r14, r1
     ee8:	f1 04       	cpc	r15, r1
     eea:	01 05       	cpc	r16, r1
     eec:	11 05       	cpc	r17, r1
     eee:	19 f4       	brne	.+6      	; 0xef6 <__floatsisf+0x36>
     ef0:	82 e0       	ldi	r24, 0x02	; 2
     ef2:	89 83       	std	Y+1, r24	; 0x01
     ef4:	36 c0       	rjmp	.+108    	; 0xf62 <__floatsisf+0xa2>
     ef6:	8e e1       	ldi	r24, 0x1E	; 30
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	9c 83       	std	Y+4, r25	; 0x04
     efc:	8b 83       	std	Y+3, r24	; 0x03
     efe:	22 23       	and	r18, r18
     f00:	89 f0       	breq	.+34     	; 0xf24 <__floatsisf+0x64>
     f02:	80 e0       	ldi	r24, 0x00	; 0
     f04:	e8 16       	cp	r14, r24
     f06:	80 e0       	ldi	r24, 0x00	; 0
     f08:	f8 06       	cpc	r15, r24
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	08 07       	cpc	r16, r24
     f0e:	80 e8       	ldi	r24, 0x80	; 128
     f10:	18 07       	cpc	r17, r24
     f12:	59 f1       	breq	.+86     	; 0xf6a <__floatsisf+0xaa>
     f14:	10 95       	com	r17
     f16:	00 95       	com	r16
     f18:	f0 94       	com	r15
     f1a:	e0 94       	com	r14
     f1c:	e1 1c       	adc	r14, r1
     f1e:	f1 1c       	adc	r15, r1
     f20:	01 1d       	adc	r16, r1
     f22:	11 1d       	adc	r17, r1
     f24:	ed 82       	std	Y+5, r14	; 0x05
     f26:	fe 82       	std	Y+6, r15	; 0x06
     f28:	0f 83       	std	Y+7, r16	; 0x07
     f2a:	18 87       	std	Y+8, r17	; 0x08
     f2c:	c8 01       	movw	r24, r16
     f2e:	b7 01       	movw	r22, r14
     f30:	23 d0       	rcall	.+70     	; 0xf78 <__clzsi2>
     f32:	9c 01       	movw	r18, r24
     f34:	21 50       	subi	r18, 0x01	; 1
     f36:	30 40       	sbci	r19, 0x00	; 0
     f38:	12 16       	cp	r1, r18
     f3a:	13 06       	cpc	r1, r19
     f3c:	94 f4       	brge	.+36     	; 0xf62 <__floatsisf+0xa2>
     f3e:	02 2e       	mov	r0, r18
     f40:	04 c0       	rjmp	.+8      	; 0xf4a <__floatsisf+0x8a>
     f42:	ee 0c       	add	r14, r14
     f44:	ff 1c       	adc	r15, r15
     f46:	00 1f       	adc	r16, r16
     f48:	11 1f       	adc	r17, r17
     f4a:	0a 94       	dec	r0
     f4c:	d2 f7       	brpl	.-12     	; 0xf42 <__floatsisf+0x82>
     f4e:	ed 82       	std	Y+5, r14	; 0x05
     f50:	fe 82       	std	Y+6, r15	; 0x06
     f52:	0f 83       	std	Y+7, r16	; 0x07
     f54:	18 87       	std	Y+8, r17	; 0x08
     f56:	8e e1       	ldi	r24, 0x1E	; 30
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	82 1b       	sub	r24, r18
     f5c:	93 0b       	sbc	r25, r19
     f5e:	9c 83       	std	Y+4, r25	; 0x04
     f60:	8b 83       	std	Y+3, r24	; 0x03
     f62:	ce 01       	movw	r24, r28
     f64:	01 96       	adiw	r24, 0x01	; 1
     f66:	62 d0       	rcall	.+196    	; 0x102c <__pack_f>
     f68:	04 c0       	rjmp	.+8      	; 0xf72 <__floatsisf+0xb2>
     f6a:	60 e0       	ldi	r22, 0x00	; 0
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	9f ec       	ldi	r25, 0xCF	; 207
     f72:	28 96       	adiw	r28, 0x08	; 8
     f74:	e6 e0       	ldi	r30, 0x06	; 6
     f76:	38 c2       	rjmp	.+1136   	; 0x13e8 <__epilogue_restores__+0x18>

00000f78 <__clzsi2>:
     f78:	af 92       	push	r10
     f7a:	bf 92       	push	r11
     f7c:	cf 92       	push	r12
     f7e:	df 92       	push	r13
     f80:	ef 92       	push	r14
     f82:	ff 92       	push	r15
     f84:	0f 93       	push	r16
     f86:	1f 93       	push	r17
     f88:	7b 01       	movw	r14, r22
     f8a:	8c 01       	movw	r16, r24
     f8c:	80 e0       	ldi	r24, 0x00	; 0
     f8e:	e8 16       	cp	r14, r24
     f90:	80 e0       	ldi	r24, 0x00	; 0
     f92:	f8 06       	cpc	r15, r24
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	08 07       	cpc	r16, r24
     f98:	80 e0       	ldi	r24, 0x00	; 0
     f9a:	18 07       	cpc	r17, r24
     f9c:	58 f4       	brcc	.+22     	; 0xfb4 <__clzsi2+0x3c>
     f9e:	ef ef       	ldi	r30, 0xFF	; 255
     fa0:	ee 16       	cp	r14, r30
     fa2:	f1 04       	cpc	r15, r1
     fa4:	01 05       	cpc	r16, r1
     fa6:	11 05       	cpc	r17, r1
     fa8:	09 f0       	breq	.+2      	; 0xfac <__clzsi2+0x34>
     faa:	90 f4       	brcc	.+36     	; 0xfd0 <__clzsi2+0x58>
     fac:	80 e0       	ldi	r24, 0x00	; 0
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	dc 01       	movw	r26, r24
     fb2:	17 c0       	rjmp	.+46     	; 0xfe2 <__clzsi2+0x6a>
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	ef 16       	cp	r14, r31
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	ff 06       	cpc	r15, r31
     fbc:	f0 e0       	ldi	r31, 0x00	; 0
     fbe:	0f 07       	cpc	r16, r31
     fc0:	f1 e0       	ldi	r31, 0x01	; 1
     fc2:	1f 07       	cpc	r17, r31
     fc4:	50 f4       	brcc	.+20     	; 0xfda <__clzsi2+0x62>
     fc6:	80 e1       	ldi	r24, 0x10	; 16
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	a0 e0       	ldi	r26, 0x00	; 0
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	09 c0       	rjmp	.+18     	; 0xfe2 <__clzsi2+0x6a>
     fd0:	88 e0       	ldi	r24, 0x08	; 8
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	a0 e0       	ldi	r26, 0x00	; 0
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	04 c0       	rjmp	.+8      	; 0xfe2 <__clzsi2+0x6a>
     fda:	88 e1       	ldi	r24, 0x18	; 24
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	a0 e0       	ldi	r26, 0x00	; 0
     fe0:	b0 e0       	ldi	r27, 0x00	; 0
     fe2:	20 e2       	ldi	r18, 0x20	; 32
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	40 e0       	ldi	r20, 0x00	; 0
     fe8:	50 e0       	ldi	r21, 0x00	; 0
     fea:	28 1b       	sub	r18, r24
     fec:	39 0b       	sbc	r19, r25
     fee:	4a 0b       	sbc	r20, r26
     ff0:	5b 0b       	sbc	r21, r27
     ff2:	57 01       	movw	r10, r14
     ff4:	68 01       	movw	r12, r16
     ff6:	04 c0       	rjmp	.+8      	; 0x1000 <__clzsi2+0x88>
     ff8:	d6 94       	lsr	r13
     ffa:	c7 94       	ror	r12
     ffc:	b7 94       	ror	r11
     ffe:	a7 94       	ror	r10
    1000:	8a 95       	dec	r24
    1002:	d2 f7       	brpl	.-12     	; 0xff8 <__clzsi2+0x80>
    1004:	d6 01       	movw	r26, r12
    1006:	c5 01       	movw	r24, r10
    1008:	8d 55       	subi	r24, 0x5D	; 93
    100a:	9f 4f       	sbci	r25, 0xFF	; 255
    100c:	fc 01       	movw	r30, r24
    100e:	80 81       	ld	r24, Z
    1010:	28 1b       	sub	r18, r24
    1012:	31 09       	sbc	r19, r1
    1014:	41 09       	sbc	r20, r1
    1016:	51 09       	sbc	r21, r1
    1018:	c9 01       	movw	r24, r18
    101a:	1f 91       	pop	r17
    101c:	0f 91       	pop	r16
    101e:	ff 90       	pop	r15
    1020:	ef 90       	pop	r14
    1022:	df 90       	pop	r13
    1024:	cf 90       	pop	r12
    1026:	bf 90       	pop	r11
    1028:	af 90       	pop	r10
    102a:	08 95       	ret

0000102c <__pack_f>:
    102c:	ef 92       	push	r14
    102e:	ff 92       	push	r15
    1030:	0f 93       	push	r16
    1032:	1f 93       	push	r17
    1034:	cf 93       	push	r28
    1036:	df 93       	push	r29
    1038:	fc 01       	movw	r30, r24
    103a:	24 81       	ldd	r18, Z+4	; 0x04
    103c:	35 81       	ldd	r19, Z+5	; 0x05
    103e:	46 81       	ldd	r20, Z+6	; 0x06
    1040:	57 81       	ldd	r21, Z+7	; 0x07
    1042:	61 81       	ldd	r22, Z+1	; 0x01
    1044:	80 81       	ld	r24, Z
    1046:	82 30       	cpi	r24, 0x02	; 2
    1048:	20 f4       	brcc	.+8      	; 0x1052 <__pack_f+0x26>
    104a:	40 61       	ori	r20, 0x10	; 16
    104c:	ef ef       	ldi	r30, 0xFF	; 255
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	a3 c0       	rjmp	.+326    	; 0x1198 <__pack_f+0x16c>
    1052:	84 30       	cpi	r24, 0x04	; 4
    1054:	09 f4       	brne	.+2      	; 0x1058 <__pack_f+0x2c>
    1056:	9b c0       	rjmp	.+310    	; 0x118e <__pack_f+0x162>
    1058:	82 30       	cpi	r24, 0x02	; 2
    105a:	09 f4       	brne	.+2      	; 0x105e <__pack_f+0x32>
    105c:	92 c0       	rjmp	.+292    	; 0x1182 <__pack_f+0x156>
    105e:	21 15       	cp	r18, r1
    1060:	31 05       	cpc	r19, r1
    1062:	41 05       	cpc	r20, r1
    1064:	51 05       	cpc	r21, r1
    1066:	09 f4       	brne	.+2      	; 0x106a <__pack_f+0x3e>
    1068:	8f c0       	rjmp	.+286    	; 0x1188 <__pack_f+0x15c>
    106a:	02 80       	ldd	r0, Z+2	; 0x02
    106c:	f3 81       	ldd	r31, Z+3	; 0x03
    106e:	e0 2d       	mov	r30, r0
    1070:	8f ef       	ldi	r24, 0xFF	; 255
    1072:	e2 38       	cpi	r30, 0x82	; 130
    1074:	f8 07       	cpc	r31, r24
    1076:	0c f0       	brlt	.+2      	; 0x107a <__pack_f+0x4e>
    1078:	5a c0       	rjmp	.+180    	; 0x112e <__pack_f+0x102>
    107a:	c2 e8       	ldi	r28, 0x82	; 130
    107c:	df ef       	ldi	r29, 0xFF	; 255
    107e:	ce 1b       	sub	r28, r30
    1080:	df 0b       	sbc	r29, r31
    1082:	ca 31       	cpi	r28, 0x1A	; 26
    1084:	d1 05       	cpc	r29, r1
    1086:	6c f5       	brge	.+90     	; 0x10e2 <__pack_f+0xb6>
    1088:	79 01       	movw	r14, r18
    108a:	8a 01       	movw	r16, r20
    108c:	0c 2e       	mov	r0, r28
    108e:	04 c0       	rjmp	.+8      	; 0x1098 <__pack_f+0x6c>
    1090:	16 95       	lsr	r17
    1092:	07 95       	ror	r16
    1094:	f7 94       	ror	r15
    1096:	e7 94       	ror	r14
    1098:	0a 94       	dec	r0
    109a:	d2 f7       	brpl	.-12     	; 0x1090 <__pack_f+0x64>
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	a0 e0       	ldi	r26, 0x00	; 0
    10a2:	b0 e0       	ldi	r27, 0x00	; 0
    10a4:	0c 2e       	mov	r0, r28
    10a6:	04 c0       	rjmp	.+8      	; 0x10b0 <__pack_f+0x84>
    10a8:	88 0f       	add	r24, r24
    10aa:	99 1f       	adc	r25, r25
    10ac:	aa 1f       	adc	r26, r26
    10ae:	bb 1f       	adc	r27, r27
    10b0:	0a 94       	dec	r0
    10b2:	d2 f7       	brpl	.-12     	; 0x10a8 <__pack_f+0x7c>
    10b4:	01 97       	sbiw	r24, 0x01	; 1
    10b6:	a1 09       	sbc	r26, r1
    10b8:	b1 09       	sbc	r27, r1
    10ba:	82 23       	and	r24, r18
    10bc:	93 23       	and	r25, r19
    10be:	a4 23       	and	r26, r20
    10c0:	b5 23       	and	r27, r21
    10c2:	21 e0       	ldi	r18, 0x01	; 1
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	40 e0       	ldi	r20, 0x00	; 0
    10c8:	50 e0       	ldi	r21, 0x00	; 0
    10ca:	00 97       	sbiw	r24, 0x00	; 0
    10cc:	a1 05       	cpc	r26, r1
    10ce:	b1 05       	cpc	r27, r1
    10d0:	19 f4       	brne	.+6      	; 0x10d8 <__pack_f+0xac>
    10d2:	20 e0       	ldi	r18, 0x00	; 0
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	a9 01       	movw	r20, r18
    10d8:	2e 29       	or	r18, r14
    10da:	3f 29       	or	r19, r15
    10dc:	40 2b       	or	r20, r16
    10de:	51 2b       	or	r21, r17
    10e0:	03 c0       	rjmp	.+6      	; 0x10e8 <__pack_f+0xbc>
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	a9 01       	movw	r20, r18
    10e8:	da 01       	movw	r26, r20
    10ea:	c9 01       	movw	r24, r18
    10ec:	8f 77       	andi	r24, 0x7F	; 127
    10ee:	90 70       	andi	r25, 0x00	; 0
    10f0:	a0 70       	andi	r26, 0x00	; 0
    10f2:	b0 70       	andi	r27, 0x00	; 0
    10f4:	80 34       	cpi	r24, 0x40	; 64
    10f6:	91 05       	cpc	r25, r1
    10f8:	a1 05       	cpc	r26, r1
    10fa:	b1 05       	cpc	r27, r1
    10fc:	39 f4       	brne	.+14     	; 0x110c <__pack_f+0xe0>
    10fe:	27 ff       	sbrs	r18, 7
    1100:	09 c0       	rjmp	.+18     	; 0x1114 <__pack_f+0xe8>
    1102:	20 5c       	subi	r18, 0xC0	; 192
    1104:	3f 4f       	sbci	r19, 0xFF	; 255
    1106:	4f 4f       	sbci	r20, 0xFF	; 255
    1108:	5f 4f       	sbci	r21, 0xFF	; 255
    110a:	04 c0       	rjmp	.+8      	; 0x1114 <__pack_f+0xe8>
    110c:	21 5c       	subi	r18, 0xC1	; 193
    110e:	3f 4f       	sbci	r19, 0xFF	; 255
    1110:	4f 4f       	sbci	r20, 0xFF	; 255
    1112:	5f 4f       	sbci	r21, 0xFF	; 255
    1114:	e1 e0       	ldi	r30, 0x01	; 1
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	20 30       	cpi	r18, 0x00	; 0
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	38 07       	cpc	r19, r24
    111e:	80 e0       	ldi	r24, 0x00	; 0
    1120:	48 07       	cpc	r20, r24
    1122:	80 e4       	ldi	r24, 0x40	; 64
    1124:	58 07       	cpc	r21, r24
    1126:	28 f5       	brcc	.+74     	; 0x1172 <__pack_f+0x146>
    1128:	e0 e0       	ldi	r30, 0x00	; 0
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	22 c0       	rjmp	.+68     	; 0x1172 <__pack_f+0x146>
    112e:	e0 38       	cpi	r30, 0x80	; 128
    1130:	f1 05       	cpc	r31, r1
    1132:	6c f5       	brge	.+90     	; 0x118e <__pack_f+0x162>
    1134:	e1 58       	subi	r30, 0x81	; 129
    1136:	ff 4f       	sbci	r31, 0xFF	; 255
    1138:	da 01       	movw	r26, r20
    113a:	c9 01       	movw	r24, r18
    113c:	8f 77       	andi	r24, 0x7F	; 127
    113e:	90 70       	andi	r25, 0x00	; 0
    1140:	a0 70       	andi	r26, 0x00	; 0
    1142:	b0 70       	andi	r27, 0x00	; 0
    1144:	80 34       	cpi	r24, 0x40	; 64
    1146:	91 05       	cpc	r25, r1
    1148:	a1 05       	cpc	r26, r1
    114a:	b1 05       	cpc	r27, r1
    114c:	39 f4       	brne	.+14     	; 0x115c <__pack_f+0x130>
    114e:	27 ff       	sbrs	r18, 7
    1150:	09 c0       	rjmp	.+18     	; 0x1164 <__pack_f+0x138>
    1152:	20 5c       	subi	r18, 0xC0	; 192
    1154:	3f 4f       	sbci	r19, 0xFF	; 255
    1156:	4f 4f       	sbci	r20, 0xFF	; 255
    1158:	5f 4f       	sbci	r21, 0xFF	; 255
    115a:	04 c0       	rjmp	.+8      	; 0x1164 <__pack_f+0x138>
    115c:	21 5c       	subi	r18, 0xC1	; 193
    115e:	3f 4f       	sbci	r19, 0xFF	; 255
    1160:	4f 4f       	sbci	r20, 0xFF	; 255
    1162:	5f 4f       	sbci	r21, 0xFF	; 255
    1164:	57 ff       	sbrs	r21, 7
    1166:	05 c0       	rjmp	.+10     	; 0x1172 <__pack_f+0x146>
    1168:	56 95       	lsr	r21
    116a:	47 95       	ror	r20
    116c:	37 95       	ror	r19
    116e:	27 95       	ror	r18
    1170:	31 96       	adiw	r30, 0x01	; 1
    1172:	87 e0       	ldi	r24, 0x07	; 7
    1174:	56 95       	lsr	r21
    1176:	47 95       	ror	r20
    1178:	37 95       	ror	r19
    117a:	27 95       	ror	r18
    117c:	8a 95       	dec	r24
    117e:	d1 f7       	brne	.-12     	; 0x1174 <__pack_f+0x148>
    1180:	0b c0       	rjmp	.+22     	; 0x1198 <__pack_f+0x16c>
    1182:	e0 e0       	ldi	r30, 0x00	; 0
    1184:	f0 e0       	ldi	r31, 0x00	; 0
    1186:	05 c0       	rjmp	.+10     	; 0x1192 <__pack_f+0x166>
    1188:	e0 e0       	ldi	r30, 0x00	; 0
    118a:	f0 e0       	ldi	r31, 0x00	; 0
    118c:	05 c0       	rjmp	.+10     	; 0x1198 <__pack_f+0x16c>
    118e:	ef ef       	ldi	r30, 0xFF	; 255
    1190:	f0 e0       	ldi	r31, 0x00	; 0
    1192:	20 e0       	ldi	r18, 0x00	; 0
    1194:	30 e0       	ldi	r19, 0x00	; 0
    1196:	a9 01       	movw	r20, r18
    1198:	8e 2f       	mov	r24, r30
    119a:	87 95       	ror	r24
    119c:	88 27       	eor	r24, r24
    119e:	87 95       	ror	r24
    11a0:	94 2f       	mov	r25, r20
    11a2:	9f 77       	andi	r25, 0x7F	; 127
    11a4:	67 95       	ror	r22
    11a6:	66 27       	eor	r22, r22
    11a8:	67 95       	ror	r22
    11aa:	e6 95       	lsr	r30
    11ac:	e2 2e       	mov	r14, r18
    11ae:	a9 2f       	mov	r26, r25
    11b0:	a8 2b       	or	r26, r24
    11b2:	fe 2f       	mov	r31, r30
    11b4:	f6 2b       	or	r31, r22
    11b6:	62 2f       	mov	r22, r18
    11b8:	73 2f       	mov	r23, r19
    11ba:	8a 2f       	mov	r24, r26
    11bc:	9f 2f       	mov	r25, r31
    11be:	cd b7       	in	r28, 0x3d	; 61
    11c0:	de b7       	in	r29, 0x3e	; 62
    11c2:	e6 e0       	ldi	r30, 0x06	; 6
    11c4:	11 c1       	rjmp	.+546    	; 0x13e8 <__epilogue_restores__+0x18>

000011c6 <__unpack_f>:
    11c6:	dc 01       	movw	r26, r24
    11c8:	fb 01       	movw	r30, r22
    11ca:	2c 91       	ld	r18, X
    11cc:	11 96       	adiw	r26, 0x01	; 1
    11ce:	3c 91       	ld	r19, X
    11d0:	11 97       	sbiw	r26, 0x01	; 1
    11d2:	12 96       	adiw	r26, 0x02	; 2
    11d4:	8c 91       	ld	r24, X
    11d6:	12 97       	sbiw	r26, 0x02	; 2
    11d8:	48 2f       	mov	r20, r24
    11da:	4f 77       	andi	r20, 0x7F	; 127
    11dc:	50 e0       	ldi	r21, 0x00	; 0
    11de:	98 2f       	mov	r25, r24
    11e0:	99 1f       	adc	r25, r25
    11e2:	99 27       	eor	r25, r25
    11e4:	99 1f       	adc	r25, r25
    11e6:	13 96       	adiw	r26, 0x03	; 3
    11e8:	6c 91       	ld	r22, X
    11ea:	13 97       	sbiw	r26, 0x03	; 3
    11ec:	86 2f       	mov	r24, r22
    11ee:	88 0f       	add	r24, r24
    11f0:	89 2b       	or	r24, r25
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	66 1f       	adc	r22, r22
    11f6:	66 27       	eor	r22, r22
    11f8:	66 1f       	adc	r22, r22
    11fa:	61 83       	std	Z+1, r22	; 0x01
    11fc:	00 97       	sbiw	r24, 0x00	; 0
    11fe:	39 f5       	brne	.+78     	; 0x124e <__unpack_f+0x88>
    1200:	21 15       	cp	r18, r1
    1202:	31 05       	cpc	r19, r1
    1204:	41 05       	cpc	r20, r1
    1206:	51 05       	cpc	r21, r1
    1208:	11 f4       	brne	.+4      	; 0x120e <__unpack_f+0x48>
    120a:	82 e0       	ldi	r24, 0x02	; 2
    120c:	29 c0       	rjmp	.+82     	; 0x1260 <__unpack_f+0x9a>
    120e:	82 e8       	ldi	r24, 0x82	; 130
    1210:	9f ef       	ldi	r25, 0xFF	; 255
    1212:	93 83       	std	Z+3, r25	; 0x03
    1214:	82 83       	std	Z+2, r24	; 0x02
    1216:	67 e0       	ldi	r22, 0x07	; 7
    1218:	22 0f       	add	r18, r18
    121a:	33 1f       	adc	r19, r19
    121c:	44 1f       	adc	r20, r20
    121e:	55 1f       	adc	r21, r21
    1220:	6a 95       	dec	r22
    1222:	d1 f7       	brne	.-12     	; 0x1218 <__unpack_f+0x52>
    1224:	83 e0       	ldi	r24, 0x03	; 3
    1226:	80 83       	st	Z, r24
    1228:	09 c0       	rjmp	.+18     	; 0x123c <__unpack_f+0x76>
    122a:	22 0f       	add	r18, r18
    122c:	33 1f       	adc	r19, r19
    122e:	44 1f       	adc	r20, r20
    1230:	55 1f       	adc	r21, r21
    1232:	82 81       	ldd	r24, Z+2	; 0x02
    1234:	93 81       	ldd	r25, Z+3	; 0x03
    1236:	01 97       	sbiw	r24, 0x01	; 1
    1238:	93 83       	std	Z+3, r25	; 0x03
    123a:	82 83       	std	Z+2, r24	; 0x02
    123c:	20 30       	cpi	r18, 0x00	; 0
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	38 07       	cpc	r19, r24
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	48 07       	cpc	r20, r24
    1246:	80 e4       	ldi	r24, 0x40	; 64
    1248:	58 07       	cpc	r21, r24
    124a:	78 f3       	brcs	.-34     	; 0x122a <__unpack_f+0x64>
    124c:	20 c0       	rjmp	.+64     	; 0x128e <__unpack_f+0xc8>
    124e:	8f 3f       	cpi	r24, 0xFF	; 255
    1250:	91 05       	cpc	r25, r1
    1252:	79 f4       	brne	.+30     	; 0x1272 <__unpack_f+0xac>
    1254:	21 15       	cp	r18, r1
    1256:	31 05       	cpc	r19, r1
    1258:	41 05       	cpc	r20, r1
    125a:	51 05       	cpc	r21, r1
    125c:	19 f4       	brne	.+6      	; 0x1264 <__unpack_f+0x9e>
    125e:	84 e0       	ldi	r24, 0x04	; 4
    1260:	80 83       	st	Z, r24
    1262:	08 95       	ret
    1264:	44 ff       	sbrs	r20, 4
    1266:	03 c0       	rjmp	.+6      	; 0x126e <__unpack_f+0xa8>
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	80 83       	st	Z, r24
    126c:	10 c0       	rjmp	.+32     	; 0x128e <__unpack_f+0xc8>
    126e:	10 82       	st	Z, r1
    1270:	0e c0       	rjmp	.+28     	; 0x128e <__unpack_f+0xc8>
    1272:	8f 57       	subi	r24, 0x7F	; 127
    1274:	90 40       	sbci	r25, 0x00	; 0
    1276:	93 83       	std	Z+3, r25	; 0x03
    1278:	82 83       	std	Z+2, r24	; 0x02
    127a:	83 e0       	ldi	r24, 0x03	; 3
    127c:	80 83       	st	Z, r24
    127e:	87 e0       	ldi	r24, 0x07	; 7
    1280:	22 0f       	add	r18, r18
    1282:	33 1f       	adc	r19, r19
    1284:	44 1f       	adc	r20, r20
    1286:	55 1f       	adc	r21, r21
    1288:	8a 95       	dec	r24
    128a:	d1 f7       	brne	.-12     	; 0x1280 <__unpack_f+0xba>
    128c:	50 64       	ori	r21, 0x40	; 64
    128e:	24 83       	std	Z+4, r18	; 0x04
    1290:	35 83       	std	Z+5, r19	; 0x05
    1292:	46 83       	std	Z+6, r20	; 0x06
    1294:	57 83       	std	Z+7, r21	; 0x07
    1296:	08 95       	ret

00001298 <__fpcmp_parts_f>:
    1298:	fc 01       	movw	r30, r24
    129a:	db 01       	movw	r26, r22
    129c:	90 81       	ld	r25, Z
    129e:	92 30       	cpi	r25, 0x02	; 2
    12a0:	08 f4       	brcc	.+2      	; 0x12a4 <__fpcmp_parts_f+0xc>
    12a2:	49 c0       	rjmp	.+146    	; 0x1336 <__fpcmp_parts_f+0x9e>
    12a4:	8c 91       	ld	r24, X
    12a6:	82 30       	cpi	r24, 0x02	; 2
    12a8:	08 f4       	brcc	.+2      	; 0x12ac <__fpcmp_parts_f+0x14>
    12aa:	45 c0       	rjmp	.+138    	; 0x1336 <__fpcmp_parts_f+0x9e>
    12ac:	94 30       	cpi	r25, 0x04	; 4
    12ae:	51 f4       	brne	.+20     	; 0x12c4 <__fpcmp_parts_f+0x2c>
    12b0:	61 81       	ldd	r22, Z+1	; 0x01
    12b2:	84 30       	cpi	r24, 0x04	; 4
    12b4:	b1 f5       	brne	.+108    	; 0x1322 <__fpcmp_parts_f+0x8a>
    12b6:	11 96       	adiw	r26, 0x01	; 1
    12b8:	2c 91       	ld	r18, X
    12ba:	11 97       	sbiw	r26, 0x01	; 1
    12bc:	30 e0       	ldi	r19, 0x00	; 0
    12be:	26 1b       	sub	r18, r22
    12c0:	31 09       	sbc	r19, r1
    12c2:	41 c0       	rjmp	.+130    	; 0x1346 <__fpcmp_parts_f+0xae>
    12c4:	84 30       	cpi	r24, 0x04	; 4
    12c6:	21 f0       	breq	.+8      	; 0x12d0 <__fpcmp_parts_f+0x38>
    12c8:	92 30       	cpi	r25, 0x02	; 2
    12ca:	41 f4       	brne	.+16     	; 0x12dc <__fpcmp_parts_f+0x44>
    12cc:	82 30       	cpi	r24, 0x02	; 2
    12ce:	b1 f1       	breq	.+108    	; 0x133c <__fpcmp_parts_f+0xa4>
    12d0:	11 96       	adiw	r26, 0x01	; 1
    12d2:	8c 91       	ld	r24, X
    12d4:	11 97       	sbiw	r26, 0x01	; 1
    12d6:	88 23       	and	r24, r24
    12d8:	a1 f1       	breq	.+104    	; 0x1342 <__fpcmp_parts_f+0xaa>
    12da:	2d c0       	rjmp	.+90     	; 0x1336 <__fpcmp_parts_f+0x9e>
    12dc:	61 81       	ldd	r22, Z+1	; 0x01
    12de:	82 30       	cpi	r24, 0x02	; 2
    12e0:	01 f1       	breq	.+64     	; 0x1322 <__fpcmp_parts_f+0x8a>
    12e2:	11 96       	adiw	r26, 0x01	; 1
    12e4:	8c 91       	ld	r24, X
    12e6:	11 97       	sbiw	r26, 0x01	; 1
    12e8:	68 17       	cp	r22, r24
    12ea:	d9 f4       	brne	.+54     	; 0x1322 <__fpcmp_parts_f+0x8a>
    12ec:	22 81       	ldd	r18, Z+2	; 0x02
    12ee:	33 81       	ldd	r19, Z+3	; 0x03
    12f0:	12 96       	adiw	r26, 0x02	; 2
    12f2:	8d 91       	ld	r24, X+
    12f4:	9c 91       	ld	r25, X
    12f6:	13 97       	sbiw	r26, 0x03	; 3
    12f8:	82 17       	cp	r24, r18
    12fa:	93 07       	cpc	r25, r19
    12fc:	94 f0       	brlt	.+36     	; 0x1322 <__fpcmp_parts_f+0x8a>
    12fe:	28 17       	cp	r18, r24
    1300:	39 07       	cpc	r19, r25
    1302:	bc f0       	brlt	.+46     	; 0x1332 <__fpcmp_parts_f+0x9a>
    1304:	24 81       	ldd	r18, Z+4	; 0x04
    1306:	35 81       	ldd	r19, Z+5	; 0x05
    1308:	46 81       	ldd	r20, Z+6	; 0x06
    130a:	57 81       	ldd	r21, Z+7	; 0x07
    130c:	14 96       	adiw	r26, 0x04	; 4
    130e:	8d 91       	ld	r24, X+
    1310:	9d 91       	ld	r25, X+
    1312:	0d 90       	ld	r0, X+
    1314:	bc 91       	ld	r27, X
    1316:	a0 2d       	mov	r26, r0
    1318:	82 17       	cp	r24, r18
    131a:	93 07       	cpc	r25, r19
    131c:	a4 07       	cpc	r26, r20
    131e:	b5 07       	cpc	r27, r21
    1320:	18 f4       	brcc	.+6      	; 0x1328 <__fpcmp_parts_f+0x90>
    1322:	66 23       	and	r22, r22
    1324:	41 f0       	breq	.+16     	; 0x1336 <__fpcmp_parts_f+0x9e>
    1326:	0d c0       	rjmp	.+26     	; 0x1342 <__fpcmp_parts_f+0xaa>
    1328:	28 17       	cp	r18, r24
    132a:	39 07       	cpc	r19, r25
    132c:	4a 07       	cpc	r20, r26
    132e:	5b 07       	cpc	r21, r27
    1330:	28 f4       	brcc	.+10     	; 0x133c <__fpcmp_parts_f+0xa4>
    1332:	66 23       	and	r22, r22
    1334:	31 f0       	breq	.+12     	; 0x1342 <__fpcmp_parts_f+0xaa>
    1336:	21 e0       	ldi	r18, 0x01	; 1
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	05 c0       	rjmp	.+10     	; 0x1346 <__fpcmp_parts_f+0xae>
    133c:	20 e0       	ldi	r18, 0x00	; 0
    133e:	30 e0       	ldi	r19, 0x00	; 0
    1340:	02 c0       	rjmp	.+4      	; 0x1346 <__fpcmp_parts_f+0xae>
    1342:	2f ef       	ldi	r18, 0xFF	; 255
    1344:	3f ef       	ldi	r19, 0xFF	; 255
    1346:	c9 01       	movw	r24, r18
    1348:	08 95       	ret

0000134a <__divmodhi4>:
    134a:	97 fb       	bst	r25, 7
    134c:	09 2e       	mov	r0, r25
    134e:	07 26       	eor	r0, r23
    1350:	0a d0       	rcall	.+20     	; 0x1366 <__divmodhi4_neg1>
    1352:	77 fd       	sbrc	r23, 7
    1354:	04 d0       	rcall	.+8      	; 0x135e <__divmodhi4_neg2>
    1356:	0c d0       	rcall	.+24     	; 0x1370 <__udivmodhi4>
    1358:	06 d0       	rcall	.+12     	; 0x1366 <__divmodhi4_neg1>
    135a:	00 20       	and	r0, r0
    135c:	1a f4       	brpl	.+6      	; 0x1364 <__divmodhi4_exit>

0000135e <__divmodhi4_neg2>:
    135e:	70 95       	com	r23
    1360:	61 95       	neg	r22
    1362:	7f 4f       	sbci	r23, 0xFF	; 255

00001364 <__divmodhi4_exit>:
    1364:	08 95       	ret

00001366 <__divmodhi4_neg1>:
    1366:	f6 f7       	brtc	.-4      	; 0x1364 <__divmodhi4_exit>
    1368:	90 95       	com	r25
    136a:	81 95       	neg	r24
    136c:	9f 4f       	sbci	r25, 0xFF	; 255
    136e:	08 95       	ret

00001370 <__udivmodhi4>:
    1370:	aa 1b       	sub	r26, r26
    1372:	bb 1b       	sub	r27, r27
    1374:	51 e1       	ldi	r21, 0x11	; 17
    1376:	07 c0       	rjmp	.+14     	; 0x1386 <__udivmodhi4_ep>

00001378 <__udivmodhi4_loop>:
    1378:	aa 1f       	adc	r26, r26
    137a:	bb 1f       	adc	r27, r27
    137c:	a6 17       	cp	r26, r22
    137e:	b7 07       	cpc	r27, r23
    1380:	10 f0       	brcs	.+4      	; 0x1386 <__udivmodhi4_ep>
    1382:	a6 1b       	sub	r26, r22
    1384:	b7 0b       	sbc	r27, r23

00001386 <__udivmodhi4_ep>:
    1386:	88 1f       	adc	r24, r24
    1388:	99 1f       	adc	r25, r25
    138a:	5a 95       	dec	r21
    138c:	a9 f7       	brne	.-22     	; 0x1378 <__udivmodhi4_loop>
    138e:	80 95       	com	r24
    1390:	90 95       	com	r25
    1392:	bc 01       	movw	r22, r24
    1394:	cd 01       	movw	r24, r26
    1396:	08 95       	ret

00001398 <__prologue_saves__>:
    1398:	2f 92       	push	r2
    139a:	3f 92       	push	r3
    139c:	4f 92       	push	r4
    139e:	5f 92       	push	r5
    13a0:	6f 92       	push	r6
    13a2:	7f 92       	push	r7
    13a4:	8f 92       	push	r8
    13a6:	9f 92       	push	r9
    13a8:	af 92       	push	r10
    13aa:	bf 92       	push	r11
    13ac:	cf 92       	push	r12
    13ae:	df 92       	push	r13
    13b0:	ef 92       	push	r14
    13b2:	ff 92       	push	r15
    13b4:	0f 93       	push	r16
    13b6:	1f 93       	push	r17
    13b8:	cf 93       	push	r28
    13ba:	df 93       	push	r29
    13bc:	cd b7       	in	r28, 0x3d	; 61
    13be:	de b7       	in	r29, 0x3e	; 62
    13c0:	ca 1b       	sub	r28, r26
    13c2:	db 0b       	sbc	r29, r27
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	f8 94       	cli
    13c8:	de bf       	out	0x3e, r29	; 62
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	cd bf       	out	0x3d, r28	; 61
    13ce:	09 94       	ijmp

000013d0 <__epilogue_restores__>:
    13d0:	2a 88       	ldd	r2, Y+18	; 0x12
    13d2:	39 88       	ldd	r3, Y+17	; 0x11
    13d4:	48 88       	ldd	r4, Y+16	; 0x10
    13d6:	5f 84       	ldd	r5, Y+15	; 0x0f
    13d8:	6e 84       	ldd	r6, Y+14	; 0x0e
    13da:	7d 84       	ldd	r7, Y+13	; 0x0d
    13dc:	8c 84       	ldd	r8, Y+12	; 0x0c
    13de:	9b 84       	ldd	r9, Y+11	; 0x0b
    13e0:	aa 84       	ldd	r10, Y+10	; 0x0a
    13e2:	b9 84       	ldd	r11, Y+9	; 0x09
    13e4:	c8 84       	ldd	r12, Y+8	; 0x08
    13e6:	df 80       	ldd	r13, Y+7	; 0x07
    13e8:	ee 80       	ldd	r14, Y+6	; 0x06
    13ea:	fd 80       	ldd	r15, Y+5	; 0x05
    13ec:	0c 81       	ldd	r16, Y+4	; 0x04
    13ee:	1b 81       	ldd	r17, Y+3	; 0x03
    13f0:	aa 81       	ldd	r26, Y+2	; 0x02
    13f2:	b9 81       	ldd	r27, Y+1	; 0x01
    13f4:	ce 0f       	add	r28, r30
    13f6:	d1 1d       	adc	r29, r1
    13f8:	0f b6       	in	r0, 0x3f	; 63
    13fa:	f8 94       	cli
    13fc:	de bf       	out	0x3e, r29	; 62
    13fe:	0f be       	out	0x3f, r0	; 63
    1400:	cd bf       	out	0x3d, r28	; 61
    1402:	ed 01       	movw	r28, r26
    1404:	08 95       	ret

00001406 <dtostrf>:
    1406:	ef 92       	push	r14
    1408:	ff 92       	push	r15
    140a:	0f 93       	push	r16
    140c:	1f 93       	push	r17
    140e:	32 2f       	mov	r19, r18
    1410:	f0 2e       	mov	r15, r16
    1412:	47 ff       	sbrs	r20, 7
    1414:	02 c0       	rjmp	.+4      	; 0x141a <dtostrf+0x14>
    1416:	a4 e1       	ldi	r26, 0x14	; 20
    1418:	01 c0       	rjmp	.+2      	; 0x141c <dtostrf+0x16>
    141a:	a4 e0       	ldi	r26, 0x04	; 4
    141c:	e4 2f       	mov	r30, r20
    141e:	ff 27       	eor	r31, r31
    1420:	e7 fd       	sbrc	r30, 7
    1422:	f0 95       	com	r31
    1424:	f7 ff       	sbrs	r31, 7
    1426:	03 c0       	rjmp	.+6      	; 0x142e <dtostrf+0x28>
    1428:	f0 95       	com	r31
    142a:	e1 95       	neg	r30
    142c:	ff 4f       	sbci	r31, 0xFF	; 255
    142e:	4f 2d       	mov	r20, r15
    1430:	51 2f       	mov	r21, r17
    1432:	2e 2f       	mov	r18, r30
    1434:	03 2f       	mov	r16, r19
    1436:	ea 2e       	mov	r14, r26
    1438:	07 d0       	rcall	.+14     	; 0x1448 <dtoa_prf>
    143a:	8f 2d       	mov	r24, r15
    143c:	91 2f       	mov	r25, r17
    143e:	1f 91       	pop	r17
    1440:	0f 91       	pop	r16
    1442:	ff 90       	pop	r15
    1444:	ef 90       	pop	r14
    1446:	08 95       	ret

00001448 <dtoa_prf>:
    1448:	a9 e0       	ldi	r26, 0x09	; 9
    144a:	b0 e0       	ldi	r27, 0x00	; 0
    144c:	e9 e2       	ldi	r30, 0x29	; 41
    144e:	fa e0       	ldi	r31, 0x0A	; 10
    1450:	ab cf       	rjmp	.-170    	; 0x13a8 <__prologue_saves__+0x10>
    1452:	6a 01       	movw	r12, r20
    1454:	f2 2e       	mov	r15, r18
    1456:	10 2f       	mov	r17, r16
    1458:	0c 33       	cpi	r16, 0x3C	; 60
    145a:	18 f4       	brcc	.+6      	; 0x1462 <dtoa_prf+0x1a>
    145c:	b0 2e       	mov	r11, r16
    145e:	b3 94       	inc	r11
    1460:	02 c0       	rjmp	.+4      	; 0x1466 <dtoa_prf+0x1e>
    1462:	ec e3       	ldi	r30, 0x3C	; 60
    1464:	be 2e       	mov	r11, r30
    1466:	ae 01       	movw	r20, r28
    1468:	4f 5f       	subi	r20, 0xFF	; 255
    146a:	5f 4f       	sbci	r21, 0xFF	; 255
    146c:	27 e0       	ldi	r18, 0x07	; 7
    146e:	0b 2d       	mov	r16, r11
    1470:	3f d1       	rcall	.+638    	; 0x16f0 <__ftoa_engine>
    1472:	29 81       	ldd	r18, Y+1	; 0x01
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	a9 01       	movw	r20, r18
    1478:	49 70       	andi	r20, 0x09	; 9
    147a:	50 70       	andi	r21, 0x00	; 0
    147c:	41 30       	cpi	r20, 0x01	; 1
    147e:	51 05       	cpc	r21, r1
    1480:	31 f0       	breq	.+12     	; 0x148e <dtoa_prf+0x46>
    1482:	e1 fc       	sbrc	r14, 1
    1484:	06 c0       	rjmp	.+12     	; 0x1492 <dtoa_prf+0x4a>
    1486:	e0 fe       	sbrs	r14, 0
    1488:	06 c0       	rjmp	.+12     	; 0x1496 <dtoa_prf+0x4e>
    148a:	e0 e2       	ldi	r30, 0x20	; 32
    148c:	05 c0       	rjmp	.+10     	; 0x1498 <dtoa_prf+0x50>
    148e:	ed e2       	ldi	r30, 0x2D	; 45
    1490:	03 c0       	rjmp	.+6      	; 0x1498 <dtoa_prf+0x50>
    1492:	eb e2       	ldi	r30, 0x2B	; 43
    1494:	01 c0       	rjmp	.+2      	; 0x1498 <dtoa_prf+0x50>
    1496:	e0 e0       	ldi	r30, 0x00	; 0
    1498:	23 ff       	sbrs	r18, 3
    149a:	37 c0       	rjmp	.+110    	; 0x150a <dtoa_prf+0xc2>
    149c:	ee 23       	and	r30, r30
    149e:	11 f0       	breq	.+4      	; 0x14a4 <dtoa_prf+0x5c>
    14a0:	84 e0       	ldi	r24, 0x04	; 4
    14a2:	01 c0       	rjmp	.+2      	; 0x14a6 <dtoa_prf+0x5e>
    14a4:	83 e0       	ldi	r24, 0x03	; 3
    14a6:	8f 15       	cp	r24, r15
    14a8:	18 f4       	brcc	.+6      	; 0x14b0 <dtoa_prf+0x68>
    14aa:	f8 1a       	sub	r15, r24
    14ac:	8f 2d       	mov	r24, r15
    14ae:	01 c0       	rjmp	.+2      	; 0x14b2 <dtoa_prf+0x6a>
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	e4 fc       	sbrc	r14, 4
    14b4:	0b c0       	rjmp	.+22     	; 0x14cc <dtoa_prf+0x84>
    14b6:	98 2f       	mov	r25, r24
    14b8:	d6 01       	movw	r26, r12
    14ba:	20 e2       	ldi	r18, 0x20	; 32
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <dtoa_prf+0x7a>
    14be:	2d 93       	st	X+, r18
    14c0:	91 50       	subi	r25, 0x01	; 1
    14c2:	99 23       	and	r25, r25
    14c4:	e1 f7       	brne	.-8      	; 0x14be <dtoa_prf+0x76>
    14c6:	c8 0e       	add	r12, r24
    14c8:	d1 1c       	adc	r13, r1
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	ee 23       	and	r30, r30
    14ce:	19 f0       	breq	.+6      	; 0x14d6 <dtoa_prf+0x8e>
    14d0:	d6 01       	movw	r26, r12
    14d2:	ed 93       	st	X+, r30
    14d4:	6d 01       	movw	r12, r26
    14d6:	f6 01       	movw	r30, r12
    14d8:	31 96       	adiw	r30, 0x01	; 1
    14da:	e2 fe       	sbrs	r14, 2
    14dc:	05 c0       	rjmp	.+10     	; 0x14e8 <dtoa_prf+0xa0>
    14de:	9e e4       	ldi	r25, 0x4E	; 78
    14e0:	d6 01       	movw	r26, r12
    14e2:	9c 93       	st	X, r25
    14e4:	21 e4       	ldi	r18, 0x41	; 65
    14e6:	04 c0       	rjmp	.+8      	; 0x14f0 <dtoa_prf+0xa8>
    14e8:	9e e6       	ldi	r25, 0x6E	; 110
    14ea:	d6 01       	movw	r26, r12
    14ec:	9c 93       	st	X, r25
    14ee:	21 e6       	ldi	r18, 0x61	; 97
    14f0:	11 96       	adiw	r26, 0x01	; 1
    14f2:	2c 93       	st	X, r18
    14f4:	91 83       	std	Z+1, r25	; 0x01
    14f6:	32 96       	adiw	r30, 0x02	; 2
    14f8:	98 2f       	mov	r25, r24
    14fa:	df 01       	movw	r26, r30
    14fc:	20 e2       	ldi	r18, 0x20	; 32
    14fe:	02 c0       	rjmp	.+4      	; 0x1504 <dtoa_prf+0xbc>
    1500:	2d 93       	st	X+, r18
    1502:	91 50       	subi	r25, 0x01	; 1
    1504:	99 23       	and	r25, r25
    1506:	e1 f7       	brne	.-8      	; 0x1500 <dtoa_prf+0xb8>
    1508:	3d c0       	rjmp	.+122    	; 0x1584 <dtoa_prf+0x13c>
    150a:	22 ff       	sbrs	r18, 2
    150c:	41 c0       	rjmp	.+130    	; 0x1590 <dtoa_prf+0x148>
    150e:	ee 23       	and	r30, r30
    1510:	11 f0       	breq	.+4      	; 0x1516 <dtoa_prf+0xce>
    1512:	84 e0       	ldi	r24, 0x04	; 4
    1514:	01 c0       	rjmp	.+2      	; 0x1518 <dtoa_prf+0xd0>
    1516:	83 e0       	ldi	r24, 0x03	; 3
    1518:	8f 15       	cp	r24, r15
    151a:	18 f4       	brcc	.+6      	; 0x1522 <dtoa_prf+0xda>
    151c:	f8 1a       	sub	r15, r24
    151e:	8f 2d       	mov	r24, r15
    1520:	01 c0       	rjmp	.+2      	; 0x1524 <dtoa_prf+0xdc>
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	e4 fc       	sbrc	r14, 4
    1526:	0b c0       	rjmp	.+22     	; 0x153e <dtoa_prf+0xf6>
    1528:	98 2f       	mov	r25, r24
    152a:	d6 01       	movw	r26, r12
    152c:	20 e2       	ldi	r18, 0x20	; 32
    152e:	02 c0       	rjmp	.+4      	; 0x1534 <dtoa_prf+0xec>
    1530:	2d 93       	st	X+, r18
    1532:	91 50       	subi	r25, 0x01	; 1
    1534:	99 23       	and	r25, r25
    1536:	e1 f7       	brne	.-8      	; 0x1530 <dtoa_prf+0xe8>
    1538:	c8 0e       	add	r12, r24
    153a:	d1 1c       	adc	r13, r1
    153c:	80 e0       	ldi	r24, 0x00	; 0
    153e:	ee 23       	and	r30, r30
    1540:	19 f0       	breq	.+6      	; 0x1548 <dtoa_prf+0x100>
    1542:	d6 01       	movw	r26, r12
    1544:	ed 93       	st	X+, r30
    1546:	6d 01       	movw	r12, r26
    1548:	f6 01       	movw	r30, r12
    154a:	31 96       	adiw	r30, 0x01	; 1
    154c:	e2 fe       	sbrs	r14, 2
    154e:	09 c0       	rjmp	.+18     	; 0x1562 <dtoa_prf+0x11a>
    1550:	99 e4       	ldi	r25, 0x49	; 73
    1552:	d6 01       	movw	r26, r12
    1554:	9c 93       	st	X, r25
    1556:	9e e4       	ldi	r25, 0x4E	; 78
    1558:	11 96       	adiw	r26, 0x01	; 1
    155a:	9c 93       	st	X, r25
    155c:	11 97       	sbiw	r26, 0x01	; 1
    155e:	96 e4       	ldi	r25, 0x46	; 70
    1560:	07 c0       	rjmp	.+14     	; 0x1570 <dtoa_prf+0x128>
    1562:	99 e6       	ldi	r25, 0x69	; 105
    1564:	d6 01       	movw	r26, r12
    1566:	9c 93       	st	X, r25
    1568:	9e e6       	ldi	r25, 0x6E	; 110
    156a:	11 96       	adiw	r26, 0x01	; 1
    156c:	9c 93       	st	X, r25
    156e:	96 e6       	ldi	r25, 0x66	; 102
    1570:	91 83       	std	Z+1, r25	; 0x01
    1572:	32 96       	adiw	r30, 0x02	; 2
    1574:	98 2f       	mov	r25, r24
    1576:	df 01       	movw	r26, r30
    1578:	20 e2       	ldi	r18, 0x20	; 32
    157a:	02 c0       	rjmp	.+4      	; 0x1580 <dtoa_prf+0x138>
    157c:	2d 93       	st	X+, r18
    157e:	91 50       	subi	r25, 0x01	; 1
    1580:	99 23       	and	r25, r25
    1582:	e1 f7       	brne	.-8      	; 0x157c <dtoa_prf+0x134>
    1584:	e8 0f       	add	r30, r24
    1586:	f1 1d       	adc	r31, r1
    1588:	10 82       	st	Z, r1
    158a:	2e ef       	ldi	r18, 0xFE	; 254
    158c:	3f ef       	ldi	r19, 0xFF	; 255
    158e:	ac c0       	rjmp	.+344    	; 0x16e8 <dtoa_prf+0x2a0>
    1590:	41 e0       	ldi	r20, 0x01	; 1
    1592:	50 e0       	ldi	r21, 0x00	; 0
    1594:	ee 23       	and	r30, r30
    1596:	11 f4       	brne	.+4      	; 0x159c <dtoa_prf+0x154>
    1598:	40 e0       	ldi	r20, 0x00	; 0
    159a:	50 e0       	ldi	r21, 0x00	; 0
    159c:	18 16       	cp	r1, r24
    159e:	19 06       	cpc	r1, r25
    15a0:	24 f4       	brge	.+8      	; 0x15aa <dtoa_prf+0x162>
    15a2:	bc 01       	movw	r22, r24
    15a4:	6f 5f       	subi	r22, 0xFF	; 255
    15a6:	7f 4f       	sbci	r23, 0xFF	; 255
    15a8:	02 c0       	rjmp	.+4      	; 0x15ae <dtoa_prf+0x166>
    15aa:	61 e0       	ldi	r22, 0x01	; 1
    15ac:	70 e0       	ldi	r23, 0x00	; 0
    15ae:	64 0f       	add	r22, r20
    15b0:	75 1f       	adc	r23, r21
    15b2:	11 23       	and	r17, r17
    15b4:	29 f0       	breq	.+10     	; 0x15c0 <dtoa_prf+0x178>
    15b6:	41 2f       	mov	r20, r17
    15b8:	50 e0       	ldi	r21, 0x00	; 0
    15ba:	4f 5f       	subi	r20, 0xFF	; 255
    15bc:	5f 4f       	sbci	r21, 0xFF	; 255
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <dtoa_prf+0x17c>
    15c0:	40 e0       	ldi	r20, 0x00	; 0
    15c2:	50 e0       	ldi	r21, 0x00	; 0
    15c4:	46 0f       	add	r20, r22
    15c6:	57 1f       	adc	r21, r23
    15c8:	6f 2d       	mov	r22, r15
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	46 17       	cp	r20, r22
    15ce:	57 07       	cpc	r21, r23
    15d0:	1c f4       	brge	.+6      	; 0x15d8 <dtoa_prf+0x190>
    15d2:	0f 2d       	mov	r16, r15
    15d4:	04 1b       	sub	r16, r20
    15d6:	01 c0       	rjmp	.+2      	; 0x15da <dtoa_prf+0x192>
    15d8:	00 e0       	ldi	r16, 0x00	; 0
    15da:	ff 24       	eor	r15, r15
    15dc:	a7 01       	movw	r20, r14
    15de:	40 71       	andi	r20, 0x10	; 16
    15e0:	50 70       	andi	r21, 0x00	; 0
    15e2:	e4 fc       	sbrc	r14, 4
    15e4:	0d c0       	rjmp	.+26     	; 0x1600 <dtoa_prf+0x1b8>
    15e6:	e3 fc       	sbrc	r14, 3
    15e8:	0b c0       	rjmp	.+22     	; 0x1600 <dtoa_prf+0x1b8>
    15ea:	60 2f       	mov	r22, r16
    15ec:	d6 01       	movw	r26, r12
    15ee:	70 e2       	ldi	r23, 0x20	; 32
    15f0:	02 c0       	rjmp	.+4      	; 0x15f6 <dtoa_prf+0x1ae>
    15f2:	7d 93       	st	X+, r23
    15f4:	61 50       	subi	r22, 0x01	; 1
    15f6:	66 23       	and	r22, r22
    15f8:	e1 f7       	brne	.-8      	; 0x15f2 <dtoa_prf+0x1aa>
    15fa:	c0 0e       	add	r12, r16
    15fc:	d1 1c       	adc	r13, r1
    15fe:	00 e0       	ldi	r16, 0x00	; 0
    1600:	ee 23       	and	r30, r30
    1602:	19 f0       	breq	.+6      	; 0x160a <dtoa_prf+0x1c2>
    1604:	d6 01       	movw	r26, r12
    1606:	ed 93       	st	X+, r30
    1608:	6d 01       	movw	r12, r26
    160a:	41 15       	cp	r20, r1
    160c:	51 05       	cpc	r21, r1
    160e:	59 f4       	brne	.+22     	; 0x1626 <dtoa_prf+0x1de>
    1610:	40 2f       	mov	r20, r16
    1612:	f6 01       	movw	r30, r12
    1614:	50 e3       	ldi	r21, 0x30	; 48
    1616:	02 c0       	rjmp	.+4      	; 0x161c <dtoa_prf+0x1d4>
    1618:	51 93       	st	Z+, r21
    161a:	41 50       	subi	r20, 0x01	; 1
    161c:	44 23       	and	r20, r20
    161e:	e1 f7       	brne	.-8      	; 0x1618 <dtoa_prf+0x1d0>
    1620:	c0 0e       	add	r12, r16
    1622:	d1 1c       	adc	r13, r1
    1624:	00 e0       	ldi	r16, 0x00	; 0
    1626:	b8 0e       	add	r11, r24
    1628:	fa 80       	ldd	r15, Y+2	; 0x02
    162a:	a9 01       	movw	r20, r18
    162c:	40 71       	andi	r20, 0x10	; 16
    162e:	50 70       	andi	r21, 0x00	; 0
    1630:	24 ff       	sbrs	r18, 4
    1632:	04 c0       	rjmp	.+8      	; 0x163c <dtoa_prf+0x1f4>
    1634:	bf 2d       	mov	r27, r15
    1636:	b1 33       	cpi	r27, 0x31	; 49
    1638:	09 f4       	brne	.+2      	; 0x163c <dtoa_prf+0x1f4>
    163a:	ba 94       	dec	r11
    163c:	1b 14       	cp	r1, r11
    163e:	2c f4       	brge	.+10     	; 0x164a <dtoa_prf+0x202>
    1640:	ab 2d       	mov	r26, r11
    1642:	a9 30       	cpi	r26, 0x09	; 9
    1644:	18 f0       	brcs	.+6      	; 0x164c <dtoa_prf+0x204>
    1646:	a8 e0       	ldi	r26, 0x08	; 8
    1648:	01 c0       	rjmp	.+2      	; 0x164c <dtoa_prf+0x204>
    164a:	a1 e0       	ldi	r26, 0x01	; 1
    164c:	9c 01       	movw	r18, r24
    164e:	97 ff       	sbrs	r25, 7
    1650:	02 c0       	rjmp	.+4      	; 0x1656 <dtoa_prf+0x20e>
    1652:	20 e0       	ldi	r18, 0x00	; 0
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	bc 01       	movw	r22, r24
    1658:	6f 5f       	subi	r22, 0xFF	; 255
    165a:	7f 4f       	sbci	r23, 0xFF	; 255
    165c:	62 1b       	sub	r22, r18
    165e:	73 0b       	sbc	r23, r19
    1660:	fe 01       	movw	r30, r28
    1662:	31 96       	adiw	r30, 0x01	; 1
    1664:	e6 0f       	add	r30, r22
    1666:	f7 1f       	adc	r31, r23
    1668:	6e e2       	ldi	r22, 0x2E	; 46
    166a:	e6 2e       	mov	r14, r22
    166c:	bc 01       	movw	r22, r24
    166e:	6a 1b       	sub	r22, r26
    1670:	71 09       	sbc	r23, r1
    1672:	a1 2f       	mov	r26, r17
    1674:	b0 e0       	ldi	r27, 0x00	; 0
    1676:	aa 24       	eor	r10, r10
    1678:	bb 24       	eor	r11, r11
    167a:	aa 1a       	sub	r10, r26
    167c:	bb 0a       	sbc	r11, r27
    167e:	1f ef       	ldi	r17, 0xFF	; 255
    1680:	2f 3f       	cpi	r18, 0xFF	; 255
    1682:	31 07       	cpc	r19, r17
    1684:	19 f4       	brne	.+6      	; 0x168c <dtoa_prf+0x244>
    1686:	d6 01       	movw	r26, r12
    1688:	ed 92       	st	X+, r14
    168a:	6d 01       	movw	r12, r26
    168c:	82 17       	cp	r24, r18
    168e:	93 07       	cpc	r25, r19
    1690:	2c f0       	brlt	.+10     	; 0x169c <dtoa_prf+0x254>
    1692:	62 17       	cp	r22, r18
    1694:	73 07       	cpc	r23, r19
    1696:	14 f4       	brge	.+4      	; 0x169c <dtoa_prf+0x254>
    1698:	10 81       	ld	r17, Z
    169a:	01 c0       	rjmp	.+2      	; 0x169e <dtoa_prf+0x256>
    169c:	10 e3       	ldi	r17, 0x30	; 48
    169e:	21 50       	subi	r18, 0x01	; 1
    16a0:	30 40       	sbci	r19, 0x00	; 0
    16a2:	31 96       	adiw	r30, 0x01	; 1
    16a4:	2a 15       	cp	r18, r10
    16a6:	3b 05       	cpc	r19, r11
    16a8:	24 f0       	brlt	.+8      	; 0x16b2 <dtoa_prf+0x26a>
    16aa:	d6 01       	movw	r26, r12
    16ac:	1d 93       	st	X+, r17
    16ae:	6d 01       	movw	r12, r26
    16b0:	e6 cf       	rjmp	.-52     	; 0x167e <dtoa_prf+0x236>
    16b2:	28 17       	cp	r18, r24
    16b4:	39 07       	cpc	r19, r25
    16b6:	49 f4       	brne	.+18     	; 0x16ca <dtoa_prf+0x282>
    16b8:	bf 2d       	mov	r27, r15
    16ba:	b6 33       	cpi	r27, 0x36	; 54
    16bc:	28 f4       	brcc	.+10     	; 0x16c8 <dtoa_prf+0x280>
    16be:	b5 33       	cpi	r27, 0x35	; 53
    16c0:	21 f4       	brne	.+8      	; 0x16ca <dtoa_prf+0x282>
    16c2:	41 15       	cp	r20, r1
    16c4:	51 05       	cpc	r21, r1
    16c6:	09 f4       	brne	.+2      	; 0x16ca <dtoa_prf+0x282>
    16c8:	11 e3       	ldi	r17, 0x31	; 49
    16ca:	f6 01       	movw	r30, r12
    16cc:	11 93       	st	Z+, r17
    16ce:	80 2f       	mov	r24, r16
    16d0:	df 01       	movw	r26, r30
    16d2:	90 e2       	ldi	r25, 0x20	; 32
    16d4:	02 c0       	rjmp	.+4      	; 0x16da <dtoa_prf+0x292>
    16d6:	9d 93       	st	X+, r25
    16d8:	81 50       	subi	r24, 0x01	; 1
    16da:	88 23       	and	r24, r24
    16dc:	e1 f7       	brne	.-8      	; 0x16d6 <dtoa_prf+0x28e>
    16de:	e0 0f       	add	r30, r16
    16e0:	f1 1d       	adc	r31, r1
    16e2:	10 82       	st	Z, r1
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	c9 01       	movw	r24, r18
    16ea:	29 96       	adiw	r28, 0x09	; 9
    16ec:	ea e0       	ldi	r30, 0x0A	; 10
    16ee:	78 ce       	rjmp	.-784    	; 0x13e0 <__epilogue_restores__+0x10>

000016f0 <__ftoa_engine>:
    16f0:	28 30       	cpi	r18, 0x08	; 8
    16f2:	08 f0       	brcs	.+2      	; 0x16f6 <__ftoa_engine+0x6>
    16f4:	27 e0       	ldi	r18, 0x07	; 7
    16f6:	33 27       	eor	r19, r19
    16f8:	da 01       	movw	r26, r20
    16fa:	99 0f       	add	r25, r25
    16fc:	31 1d       	adc	r19, r1
    16fe:	87 fd       	sbrc	r24, 7
    1700:	91 60       	ori	r25, 0x01	; 1
    1702:	00 96       	adiw	r24, 0x00	; 0
    1704:	61 05       	cpc	r22, r1
    1706:	71 05       	cpc	r23, r1
    1708:	39 f4       	brne	.+14     	; 0x1718 <__ftoa_engine+0x28>
    170a:	32 60       	ori	r19, 0x02	; 2
    170c:	2e 5f       	subi	r18, 0xFE	; 254
    170e:	3d 93       	st	X+, r19
    1710:	30 e3       	ldi	r19, 0x30	; 48
    1712:	2a 95       	dec	r18
    1714:	e1 f7       	brne	.-8      	; 0x170e <__ftoa_engine+0x1e>
    1716:	08 95       	ret
    1718:	9f 3f       	cpi	r25, 0xFF	; 255
    171a:	30 f0       	brcs	.+12     	; 0x1728 <__ftoa_engine+0x38>
    171c:	80 38       	cpi	r24, 0x80	; 128
    171e:	71 05       	cpc	r23, r1
    1720:	61 05       	cpc	r22, r1
    1722:	09 f0       	breq	.+2      	; 0x1726 <__ftoa_engine+0x36>
    1724:	3c 5f       	subi	r19, 0xFC	; 252
    1726:	3c 5f       	subi	r19, 0xFC	; 252
    1728:	3d 93       	st	X+, r19
    172a:	91 30       	cpi	r25, 0x01	; 1
    172c:	08 f0       	brcs	.+2      	; 0x1730 <__ftoa_engine+0x40>
    172e:	80 68       	ori	r24, 0x80	; 128
    1730:	91 1d       	adc	r25, r1
    1732:	df 93       	push	r29
    1734:	cf 93       	push	r28
    1736:	1f 93       	push	r17
    1738:	0f 93       	push	r16
    173a:	ff 92       	push	r15
    173c:	ef 92       	push	r14
    173e:	19 2f       	mov	r17, r25
    1740:	98 7f       	andi	r25, 0xF8	; 248
    1742:	96 95       	lsr	r25
    1744:	e9 2f       	mov	r30, r25
    1746:	96 95       	lsr	r25
    1748:	96 95       	lsr	r25
    174a:	e9 0f       	add	r30, r25
    174c:	ff 27       	eor	r31, r31
    174e:	e4 58       	subi	r30, 0x84	; 132
    1750:	ff 4f       	sbci	r31, 0xFF	; 255
    1752:	99 27       	eor	r25, r25
    1754:	33 27       	eor	r19, r19
    1756:	ee 24       	eor	r14, r14
    1758:	ff 24       	eor	r15, r15
    175a:	a7 01       	movw	r20, r14
    175c:	e7 01       	movw	r28, r14
    175e:	05 90       	lpm	r0, Z+
    1760:	08 94       	sec
    1762:	07 94       	ror	r0
    1764:	28 f4       	brcc	.+10     	; 0x1770 <__ftoa_engine+0x80>
    1766:	36 0f       	add	r19, r22
    1768:	e7 1e       	adc	r14, r23
    176a:	f8 1e       	adc	r15, r24
    176c:	49 1f       	adc	r20, r25
    176e:	51 1d       	adc	r21, r1
    1770:	66 0f       	add	r22, r22
    1772:	77 1f       	adc	r23, r23
    1774:	88 1f       	adc	r24, r24
    1776:	99 1f       	adc	r25, r25
    1778:	06 94       	lsr	r0
    177a:	a1 f7       	brne	.-24     	; 0x1764 <__ftoa_engine+0x74>
    177c:	05 90       	lpm	r0, Z+
    177e:	07 94       	ror	r0
    1780:	28 f4       	brcc	.+10     	; 0x178c <__ftoa_engine+0x9c>
    1782:	e7 0e       	add	r14, r23
    1784:	f8 1e       	adc	r15, r24
    1786:	49 1f       	adc	r20, r25
    1788:	56 1f       	adc	r21, r22
    178a:	c1 1d       	adc	r28, r1
    178c:	77 0f       	add	r23, r23
    178e:	88 1f       	adc	r24, r24
    1790:	99 1f       	adc	r25, r25
    1792:	66 1f       	adc	r22, r22
    1794:	06 94       	lsr	r0
    1796:	a1 f7       	brne	.-24     	; 0x1780 <__ftoa_engine+0x90>
    1798:	05 90       	lpm	r0, Z+
    179a:	07 94       	ror	r0
    179c:	28 f4       	brcc	.+10     	; 0x17a8 <__ftoa_engine+0xb8>
    179e:	f8 0e       	add	r15, r24
    17a0:	49 1f       	adc	r20, r25
    17a2:	56 1f       	adc	r21, r22
    17a4:	c7 1f       	adc	r28, r23
    17a6:	d1 1d       	adc	r29, r1
    17a8:	88 0f       	add	r24, r24
    17aa:	99 1f       	adc	r25, r25
    17ac:	66 1f       	adc	r22, r22
    17ae:	77 1f       	adc	r23, r23
    17b0:	06 94       	lsr	r0
    17b2:	a1 f7       	brne	.-24     	; 0x179c <__ftoa_engine+0xac>
    17b4:	05 90       	lpm	r0, Z+
    17b6:	07 94       	ror	r0
    17b8:	20 f4       	brcc	.+8      	; 0x17c2 <__ftoa_engine+0xd2>
    17ba:	49 0f       	add	r20, r25
    17bc:	56 1f       	adc	r21, r22
    17be:	c7 1f       	adc	r28, r23
    17c0:	d8 1f       	adc	r29, r24
    17c2:	99 0f       	add	r25, r25
    17c4:	66 1f       	adc	r22, r22
    17c6:	77 1f       	adc	r23, r23
    17c8:	88 1f       	adc	r24, r24
    17ca:	06 94       	lsr	r0
    17cc:	a9 f7       	brne	.-22     	; 0x17b8 <__ftoa_engine+0xc8>
    17ce:	84 91       	lpm	r24, Z+
    17d0:	10 95       	com	r17
    17d2:	17 70       	andi	r17, 0x07	; 7
    17d4:	41 f0       	breq	.+16     	; 0x17e6 <__ftoa_engine+0xf6>
    17d6:	d6 95       	lsr	r29
    17d8:	c7 95       	ror	r28
    17da:	57 95       	ror	r21
    17dc:	47 95       	ror	r20
    17de:	f7 94       	ror	r15
    17e0:	e7 94       	ror	r14
    17e2:	1a 95       	dec	r17
    17e4:	c1 f7       	brne	.-16     	; 0x17d6 <__ftoa_engine+0xe6>
    17e6:	e2 e2       	ldi	r30, 0x22	; 34
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	68 94       	set
    17ec:	15 90       	lpm	r1, Z+
    17ee:	15 91       	lpm	r17, Z+
    17f0:	35 91       	lpm	r19, Z+
    17f2:	65 91       	lpm	r22, Z+
    17f4:	95 91       	lpm	r25, Z+
    17f6:	05 90       	lpm	r0, Z+
    17f8:	7f e2       	ldi	r23, 0x2F	; 47
    17fa:	73 95       	inc	r23
    17fc:	e1 18       	sub	r14, r1
    17fe:	f1 0a       	sbc	r15, r17
    1800:	43 0b       	sbc	r20, r19
    1802:	56 0b       	sbc	r21, r22
    1804:	c9 0b       	sbc	r28, r25
    1806:	d0 09       	sbc	r29, r0
    1808:	c0 f7       	brcc	.-16     	; 0x17fa <__ftoa_engine+0x10a>
    180a:	e1 0c       	add	r14, r1
    180c:	f1 1e       	adc	r15, r17
    180e:	43 1f       	adc	r20, r19
    1810:	56 1f       	adc	r21, r22
    1812:	c9 1f       	adc	r28, r25
    1814:	d0 1d       	adc	r29, r0
    1816:	7e f4       	brtc	.+30     	; 0x1836 <__ftoa_engine+0x146>
    1818:	70 33       	cpi	r23, 0x30	; 48
    181a:	11 f4       	brne	.+4      	; 0x1820 <__ftoa_engine+0x130>
    181c:	8a 95       	dec	r24
    181e:	e6 cf       	rjmp	.-52     	; 0x17ec <__ftoa_engine+0xfc>
    1820:	e8 94       	clt
    1822:	01 50       	subi	r16, 0x01	; 1
    1824:	30 f0       	brcs	.+12     	; 0x1832 <__ftoa_engine+0x142>
    1826:	08 0f       	add	r16, r24
    1828:	0a f4       	brpl	.+2      	; 0x182c <__ftoa_engine+0x13c>
    182a:	00 27       	eor	r16, r16
    182c:	02 17       	cp	r16, r18
    182e:	08 f4       	brcc	.+2      	; 0x1832 <__ftoa_engine+0x142>
    1830:	20 2f       	mov	r18, r16
    1832:	23 95       	inc	r18
    1834:	02 2f       	mov	r16, r18
    1836:	7a 33       	cpi	r23, 0x3A	; 58
    1838:	28 f0       	brcs	.+10     	; 0x1844 <__ftoa_engine+0x154>
    183a:	79 e3       	ldi	r23, 0x39	; 57
    183c:	7d 93       	st	X+, r23
    183e:	2a 95       	dec	r18
    1840:	e9 f7       	brne	.-6      	; 0x183c <__ftoa_engine+0x14c>
    1842:	10 c0       	rjmp	.+32     	; 0x1864 <__ftoa_engine+0x174>
    1844:	7d 93       	st	X+, r23
    1846:	2a 95       	dec	r18
    1848:	89 f6       	brne	.-94     	; 0x17ec <__ftoa_engine+0xfc>
    184a:	06 94       	lsr	r0
    184c:	97 95       	ror	r25
    184e:	67 95       	ror	r22
    1850:	37 95       	ror	r19
    1852:	17 95       	ror	r17
    1854:	17 94       	ror	r1
    1856:	e1 18       	sub	r14, r1
    1858:	f1 0a       	sbc	r15, r17
    185a:	43 0b       	sbc	r20, r19
    185c:	56 0b       	sbc	r21, r22
    185e:	c9 0b       	sbc	r28, r25
    1860:	d0 09       	sbc	r29, r0
    1862:	98 f0       	brcs	.+38     	; 0x188a <__ftoa_engine+0x19a>
    1864:	23 95       	inc	r18
    1866:	7e 91       	ld	r23, -X
    1868:	73 95       	inc	r23
    186a:	7a 33       	cpi	r23, 0x3A	; 58
    186c:	08 f0       	brcs	.+2      	; 0x1870 <__ftoa_engine+0x180>
    186e:	70 e3       	ldi	r23, 0x30	; 48
    1870:	7c 93       	st	X, r23
    1872:	20 13       	cpse	r18, r16
    1874:	b8 f7       	brcc	.-18     	; 0x1864 <__ftoa_engine+0x174>
    1876:	7e 91       	ld	r23, -X
    1878:	70 61       	ori	r23, 0x10	; 16
    187a:	7d 93       	st	X+, r23
    187c:	30 f0       	brcs	.+12     	; 0x188a <__ftoa_engine+0x19a>
    187e:	83 95       	inc	r24
    1880:	71 e3       	ldi	r23, 0x31	; 49
    1882:	7d 93       	st	X+, r23
    1884:	70 e3       	ldi	r23, 0x30	; 48
    1886:	2a 95       	dec	r18
    1888:	e1 f7       	brne	.-8      	; 0x1882 <__ftoa_engine+0x192>
    188a:	11 24       	eor	r1, r1
    188c:	ef 90       	pop	r14
    188e:	ff 90       	pop	r15
    1890:	0f 91       	pop	r16
    1892:	1f 91       	pop	r17
    1894:	cf 91       	pop	r28
    1896:	df 91       	pop	r29
    1898:	99 27       	eor	r25, r25
    189a:	87 fd       	sbrc	r24, 7
    189c:	90 95       	com	r25
    189e:	08 95       	ret

000018a0 <_exit>:
    18a0:	f8 94       	cli

000018a2 <__stop_program>:
    18a2:	ff cf       	rjmp	.-2      	; 0x18a2 <__stop_program>
