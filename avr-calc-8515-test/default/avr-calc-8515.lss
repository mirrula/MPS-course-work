
avr-calc-8515.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001bd0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  00001bd0  00001c64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  008001a4  008001a4  00001da8  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  00001da8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000110  00000000  00000000  00002eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  00002fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000038e  00000000  00000000  000031dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002cf8  00000000  00000000  0000356a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001611  00000000  00000000  00006262  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000024e5  00000000  00000000  00007873  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000340  00000000  00000000  00009d58  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006a3  00000000  00000000  0000a098  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000016f0  00000000  00000000  0000a73b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000064b  00000000  00000000  0000be2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000150  00000000  00000000  0000c476  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	a7 c0       	rjmp	.+334    	; 0x152 <__bad_interrupt>
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	a5 c0       	rjmp	.+330    	; 0x152 <__bad_interrupt>
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	a3 c0       	rjmp	.+326    	; 0x152 <__bad_interrupt>
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	a1 c0       	rjmp	.+322    	; 0x152 <__bad_interrupt>
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	9f c0       	rjmp	.+318    	; 0x152 <__bad_interrupt>
      14:	9e c0       	rjmp	.+316    	; 0x152 <__bad_interrupt>
      16:	9d c0       	rjmp	.+314    	; 0x152 <__bad_interrupt>
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	9b c0       	rjmp	.+310    	; 0x152 <__bad_interrupt>
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	99 c0       	rjmp	.+306    	; 0x152 <__bad_interrupt>
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 40       	sbci	r16, 0x00	; 0
      24:	7a 10       	cpse	r7, r10
      26:	f3 5a       	subi	r31, 0xA3	; 163
      28:	00 a0       	ldd	r0, Z+32	; 0x20
      2a:	72 4e       	sbci	r23, 0xE2	; 226
      2c:	18 09       	sbc	r17, r8
      2e:	00 10       	cpse	r0, r0
      30:	a5 d4       	rcall	.+2378   	; 0x97c <decide+0x47c>
      32:	e8 00       	.word	0x00e8	; ????
      34:	00 e8       	ldi	r16, 0x80	; 128
      36:	76 48       	sbci	r23, 0x86	; 134
      38:	17 00       	.word	0x0017	; ????
      3a:	00 e4       	ldi	r16, 0x40	; 64
      3c:	0b 54       	subi	r16, 0x4B	; 75
      3e:	02 00       	.word	0x0002	; ????
      40:	00 ca       	rjmp	.-3072   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      42:	9a 3b       	cpi	r25, 0xBA	; 186
      44:	00 00       	nop
      46:	00 e1       	ldi	r16, 0x10	; 16
      48:	f5 05       	cpc	r31, r5
      4a:	00 00       	nop
      4c:	80 96       	adiw	r24, 0x20	; 32
      4e:	98 00       	.word	0x0098	; ????
      50:	00 00       	nop
      52:	40 42       	sbci	r20, 0x20	; 32
      54:	0f 00       	.word	0x000f	; ????
      56:	00 00       	nop
      58:	a0 86       	std	Z+8, r10	; 0x08
      5a:	01 00       	.word	0x0001	; ????
      5c:	00 00       	nop
      5e:	10 27       	eor	r17, r16
      60:	00 00       	nop
      62:	00 00       	nop
      64:	e8 03       	fmulsu	r22, r16
      66:	00 00       	nop
      68:	00 00       	nop
      6a:	64 00       	.word	0x0064	; ????
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	0a 00       	.word	0x000a	; ????
      72:	00 00       	nop
      74:	00 00       	nop
      76:	01 00       	.word	0x0001	; ????
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	2c 76       	andi	r18, 0x6C	; 108
      7e:	d8 88       	ldd	r13, Y+16	; 0x10
      80:	dc 67       	ori	r29, 0x7C	; 124
      82:	4f 08       	sbc	r4, r15
      84:	23 df       	rcall	.-442    	; 0xfffffecc <__eeprom_end+0xff7efecc>
      86:	c1 df       	rcall	.-126    	; 0xa <__zero_reg__+0x9>
      88:	ae 59       	subi	r26, 0x9E	; 158
      8a:	e1 b1       	in	r30, 0x01	; 1
      8c:	b7 96       	adiw	r30, 0x27	; 39
      8e:	e5 e3       	ldi	r30, 0x35	; 53
      90:	e4 53       	subi	r30, 0x34	; 52
      92:	c6 3a       	cpi	r28, 0xA6	; 166
      94:	e6 51       	subi	r30, 0x16	; 22
      96:	99 76       	andi	r25, 0x69	; 105
      98:	96 e8       	ldi	r25, 0x86	; 134
      9a:	e6 c2       	rjmp	.+1484   	; 0x668 <decide+0x168>
      9c:	84 26       	eor	r8, r20
      9e:	eb 89       	ldd	r30, Y+19	; 0x13
      a0:	8c 9b       	sbis	0x11, 4	; 17
      a2:	62 ed       	ldi	r22, 0xD2	; 210
      a4:	40 7c       	andi	r20, 0xC0	; 192
      a6:	6f fc       	.word	0xfc6f	; ????
      a8:	ef bc       	out	0x2f, r14	; 47
      aa:	9c 9f       	mul	r25, r28
      ac:	40 f2       	brcs	.-112    	; 0x3e <__SP_H__>
      ae:	ba a5       	ldd	r27, Y+42	; 0x2a
      b0:	6f a5       	ldd	r22, Y+47	; 0x2f
      b2:	f4 90       	lpm	r15, Z+
      b4:	05 5a       	subi	r16, 0xA5	; 165
      b6:	2a f7       	brpl	.-54     	; 0x82 <__SREG__+0x43>
      b8:	5c 93       	st	X, r21
      ba:	6b 6c       	ori	r22, 0xCB	; 203
      bc:	f9 67       	ori	r31, 0x79	; 121
      be:	6d c1       	rjmp	.+730    	; 0x39a <calculate+0x12>
      c0:	1b fc       	.word	0xfc1b	; ????
      c2:	e0 e4       	ldi	r30, 0x40	; 64
      c4:	0d 47       	sbci	r16, 0x7D	; 125
      c6:	fe f5       	brtc	.+126    	; 0x146 <.do_clear_bss_loop>
      c8:	20 e6       	ldi	r18, 0x60	; 96
      ca:	b5 00       	.word	0x00b5	; ????
      cc:	d0 ed       	ldi	r29, 0xD0	; 208
      ce:	90 2e       	mov	r9, r16
      d0:	03 00       	.word	0x0003	; ????
      d2:	94 35       	cpi	r25, 0x54	; 84
      d4:	77 05       	cpc	r23, r7
      d6:	00 80       	ld	r0, Z
      d8:	84 1e       	adc	r8, r20
      da:	08 00       	.word	0x0008	; ????
      dc:	00 20       	and	r0, r0
      de:	4e 0a       	sbc	r4, r30
      e0:	00 00       	nop
      e2:	00 c8       	rjmp	.-4096   	; 0xfffff0e4 <__eeprom_end+0xff7ef0e4>
      e4:	0c 33       	cpi	r16, 0x3C	; 60
      e6:	33 33       	cpi	r19, 0x33	; 51
      e8:	33 0f       	add	r19, r19
      ea:	98 6e       	ori	r25, 0xE8	; 232
      ec:	12 83       	std	Z+2, r17	; 0x02
      ee:	11 41       	sbci	r17, 0x11	; 17
      f0:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f2:	21 14       	cp	r2, r1
      f4:	89 3b       	cpi	r24, 0xB9	; 185
      f6:	e6 55       	subi	r30, 0x56	; 86
      f8:	16 cf       	rjmp	.-468    	; 0xffffff26 <__eeprom_end+0xff7eff26>
      fa:	fe e6       	ldi	r31, 0x6E	; 110
      fc:	db 18       	sub	r13, r11
      fe:	d1 84       	ldd	r13, Z+9	; 0x09
     100:	4b 38       	cpi	r20, 0x8B	; 139
     102:	1b f7       	brvc	.-58     	; 0xca <__SREG__+0x8b>
     104:	7c 1d       	adc	r23, r12
     106:	90 1d       	adc	r25, r0
     108:	a4 bb       	out	0x14, r26	; 20
     10a:	e4 24       	eor	r14, r4
     10c:	20 32       	cpi	r18, 0x20	; 32
     10e:	84 72       	andi	r24, 0x24	; 36
     110:	5e 22       	and	r5, r30
     112:	81 00       	.word	0x0081	; ????
     114:	c9 f1       	breq	.+114    	; 0x188 <init_display+0x6>
     116:	24 ec       	ldi	r18, 0xC4	; 196
     118:	a1 e5       	ldi	r26, 0x51	; 81
     11a:	3d 27       	eor	r19, r29

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf e5       	ldi	r28, 0x5F	; 95
     122:	d2 e0       	ldi	r29, 0x02	; 2
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e6       	ldi	r26, 0x60	; 96
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	e0 ed       	ldi	r30, 0xD0	; 208
     130:	fb e1       	ldi	r31, 0x1B	; 27
     132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
     134:	05 90       	lpm	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	a4 3a       	cpi	r26, 0xA4	; 164
     13a:	b1 07       	cpc	r27, r17
     13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	a4 ea       	ldi	r26, 0xA4	; 164
     142:	b1 e0       	ldi	r27, 0x01	; 1
     144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
     146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
     148:	a9 3c       	cpi	r26, 0xC9	; 201
     14a:	b1 07       	cpc	r27, r17
     14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
     14e:	02 d0       	rcall	.+4      	; 0x154 <main>
     150:	3d cd       	rjmp	.-1414   	; 0xfffffbcc <__eeprom_end+0xff7efbcc>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <main>:
# define F_CPU 1000000UL
#include "calculator.h"

int main(void){

    init_calculator();
     154:	68 d4       	rcall	.+2256   	; 0xa26 <init_calculator>

	return 0;
}
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <trigger>:
}

//Функция генерирующая строб на линии E.
//По этому стробу производится запись команды/данных или чтение.
void trigger(){
    PORTC |= (1<<PC6); // Set PC6 (E).
     15c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	00 00       	nop
    _delay_us(1);
    PORTC &=~(1<<PC6); // Reset PC6 (E).
     160:	ae 98       	cbi	0x15, 6	; 21
     162:	00 00       	nop
	_delay_us(1);
}
     164:	08 95       	ret

00000166 <send_data>:
	_delay_us( 40 );
}

//Функция записи байта (символа) данных в lcd контроллер
void send_data(unsigned char data){
    PORTA = data;
     166:	8b bb       	out	0x1b, r24	; 27
    trigger();
     168:	f9 df       	rcall	.-14     	; 0x15c <trigger>
     16a:	8d e0       	ldi	r24, 0x0D	; 13
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <send_data+0x6>
     170:	00 00       	nop
	_delay_us( 40 );
}
     172:	08 95       	ret

00000174 <send_command>:
	on_flag = 1;
}

//Функция записи байта (символа) команды в lcd контроллер
void send_command(unsigned char command){
    PORTA = command;
     174:	8b bb       	out	0x1b, r24	; 27
    trigger();
     176:	f2 df       	rcall	.-28     	; 0x15c <trigger>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <send_command+0x6>
     17e:	00 00       	nop
	_delay_us( 40 );
}
     180:	08 95       	ret

00000182 <init_display>:

bool on_flag;

//Функция инициализации lcd контроллера hd44780
void init_display(){
    DDRC |= (1<<PC4)|(1<<PC6); 	// PC 4 is output for RS, 6 is output for Enable.
     182:	84 b3       	in	r24, 0x14	; 20
     184:	80 65       	ori	r24, 0x50	; 80
     186:	84 bb       	out	0x14, r24	; 20
    DDRA = 0xFF; 				// PA 0-7 is 8 bit data output bus.
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	8a bb       	out	0x1a, r24	; 26

	PORTC &=~(1<<PC6); // Reset PC6 (E).
     18c:	ae 98       	cbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	85 ea       	ldi	r24, 0xA5	; 165
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <init_display+0x10>
     196:	00 c0       	rjmp	.+0      	; 0x198 <init_display+0x16>
     198:	00 00       	nop

	_delay_ms(15); 

	send_command(0x38); // 2 line mode.
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	eb df       	rcall	.-42     	; 0x174 <send_command>
     19e:	81 ee       	ldi	r24, 0xE1	; 225
     1a0:	94 e0       	ldi	r25, 0x04	; 4
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <init_display+0x20>
     1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <init_display+0x26>
     1a8:	00 00       	nop
	_delay_ms(5); 
	send_command(0x38); // 2 line mode.
     1aa:	88 e3       	ldi	r24, 0x38	; 56
     1ac:	e3 df       	rcall	.-58     	; 0x174 <send_command>
     1ae:	87 ea       	ldi	r24, 0xA7	; 167
     1b0:	91 e6       	ldi	r25, 0x61	; 97
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <init_display+0x30>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <init_display+0x36>
     1b8:	00 00       	nop
	_delay_ms(100); 
	send_command(0x38); // 2 line mode.	
     1ba:	88 e3       	ldi	r24, 0x38	; 56
     1bc:	db df       	rcall	.-74     	; 0x174 <send_command>

	send_command(0x0F);	// LCD ON, cursor ON
     1be:	8f e0       	ldi	r24, 0x0F	; 15
     1c0:	d9 df       	rcall	.-78     	; 0x174 <send_command>
     1c2:	83 ec       	ldi	r24, 0xC3	; 195
     1c4:	99 e0       	ldi	r25, 0x09	; 9
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <init_display+0x44>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <init_display+0x4a>
     1cc:	00 00       	nop
	_delay_ms(10);
	send_command(0x01); // Clear display screen
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	d1 df       	rcall	.-94     	; 0x174 <send_command>
     1d2:	83 ec       	ldi	r24, 0xC3	; 195
     1d4:	99 e0       	ldi	r25, 0x09	; 9
     1d6:	01 97       	sbiw	r24, 0x01	; 1
     1d8:	f1 f7       	brne	.-4      	; 0x1d6 <init_display+0x54>
     1da:	00 c0       	rjmp	.+0      	; 0x1dc <init_display+0x5a>
     1dc:	00 00       	nop
	_delay_ms(10);
	send_command(0x81); 
     1de:	81 e8       	ldi	r24, 0x81	; 129
     1e0:	c9 df       	rcall	.-110    	; 0x174 <send_command>
     1e2:	83 ec       	ldi	r24, 0xC3	; 195
     1e4:	99 e0       	ldi	r25, 0x09	; 9
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <init_display+0x64>
     1ea:	00 c0       	rjmp	.+0      	; 0x1ec <init_display+0x6a>
     1ec:	00 00       	nop
	_delay_ms(10);

	PORTC |= (1<<PC6); // Set PC6 (E).
     1ee:	ae 9a       	sbi	0x15, 6	; 21

	on_flag = 1;
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	80 93 b4 01 	sts	0x01B4, r24
}
     1f6:	08 95       	ret

000001f8 <send_string>:
    PORTC &=~(1<<PC6); // Reset PC6 (E).
	_delay_us(1);
}

//Функция вывода строки
void send_string(const char *str){
     1f8:	ef 92       	push	r14
     1fa:	ff 92       	push	r15
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	e8 2e       	mov	r14, r24
     202:	e7 01       	movw	r28, r14
     204:	7e 01       	movw	r14, r28
     206:	f9 2e       	mov	r15, r25
     208:	e7 01       	movw	r28, r14
    while(*str) send_data(*str++); // Send characters one by one.
     20a:	01 c0       	rjmp	.+2      	; 0x20e <send_string+0x16>
     20c:	ac df       	rcall	.-168    	; 0x166 <send_data>
     20e:	89 91       	ld	r24, Y+
     210:	88 23       	and	r24, r24
     212:	e1 f7       	brne	.-8      	; 0x20c <send_string+0x14>
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	ff 90       	pop	r15
     21a:	ef 90       	pop	r14
     21c:	08 95       	ret

0000021e <move_to>:

//Функция изменения текущей позиции курсора,
//x — номер символа в строке, y — номер строки
void move_to(unsigned char x, unsigned char y){
	unsigned char address = x;
	if ( y ) {
     21e:	61 11       	cpse	r22, r1
    	address += 0x40;
     220:	80 5c       	subi	r24, 0xC0	; 192
  	}
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     222:	ac 98       	cbi	0x15, 4	; 21
    send_command(1<<7 | address);
     224:	80 68       	ori	r24, 0x80	; 128
     226:	a6 df       	rcall	.-180    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     228:	ac 9a       	sbi	0x15, 4	; 21
}
     22a:	08 95       	ret

0000022c <clear>:

void clear(){
	PORTC &=~(1<<PC4); // Reset PC4 (RS).
     22c:	ac 98       	cbi	0x15, 4	; 21
    send_command(0x01);
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	a1 df       	rcall	.-190    	; 0x174 <send_command>
	PORTC |=(1<<PC4); // Set PC4 (RS).
     232:	ac 9a       	sbi	0x15, 4	; 21
}
     234:	08 95       	ret

00000236 <disp_on_off>:

void disp_on_off(){
	if (on_flag == 1) {
     236:	80 91 b4 01 	lds	r24, 0x01B4
     23a:	88 23       	and	r24, r24
     23c:	39 f0       	breq	.+14     	; 0x24c <disp_on_off+0x16>
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     23e:	ac 98       	cbi	0x15, 4	; 21
   		send_command(0x08);
     240:	88 e0       	ldi	r24, 0x08	; 8
     242:	98 df       	rcall	.-208    	; 0x174 <send_command>
		PORTC |=(1<<PC4); // Set PC4 (RS).
     244:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 0;
     246:	10 92 b4 01 	sts	0x01B4, r1
     24a:	08 95       	ret
	}
	else {
		PORTC &=~(1<<PC4); // Reset PC4 (RS).
     24c:	ac 98       	cbi	0x15, 4	; 21

		send_command(0x0F);	// LCD ON, cursor ON
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	91 df       	rcall	.-222    	; 0x174 <send_command>
     252:	83 ec       	ldi	r24, 0xC3	; 195
     254:	99 e0       	ldi	r25, 0x09	; 9
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <disp_on_off+0x20>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <disp_on_off+0x26>
     25c:	00 00       	nop
		_delay_ms(10);
		send_command(0x01); // Clear display screen
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	89 df       	rcall	.-238    	; 0x174 <send_command>
     262:	83 ec       	ldi	r24, 0xC3	; 195
     264:	99 e0       	ldi	r25, 0x09	; 9
     266:	01 97       	sbiw	r24, 0x01	; 1
     268:	f1 f7       	brne	.-4      	; 0x266 <__stack+0x7>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <__stack+0xd>
     26c:	00 00       	nop
		_delay_ms(10);
		send_command(0x81); 
     26e:	81 e8       	ldi	r24, 0x81	; 129
     270:	81 df       	rcall	.-254    	; 0x174 <send_command>
     272:	83 ec       	ldi	r24, 0xC3	; 195
     274:	99 e0       	ldi	r25, 0x09	; 9
     276:	01 97       	sbiw	r24, 0x01	; 1
     278:	f1 f7       	brne	.-4      	; 0x276 <__stack+0x17>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <__stack+0x1d>
     27c:	00 00       	nop
		_delay_ms(10);

		PORTC |=(1<<PC4); // Set PC4 (RS).
     27e:	ac 9a       	sbi	0x15, 4	; 21
		on_flag = 1;
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	80 93 b4 01 	sts	0x01B4, r24
     286:	08 95       	ret

00000288 <init_keyboard>:
    {'1', '2', '3', '+', '-', '='},
    {'0', '.', 'p', 'u', 'A', '='}
};

void init_keyboard() {
    DDRC |= 0x0F; // PB 0-3 output for rows.
     288:	84 b3       	in	r24, 0x14	; 20
     28a:	8f 60       	ori	r24, 0x0F	; 15
     28c:	84 bb       	out	0x14, r24	; 20
    DDRD &= 0x03; // PC 2-7 input for columns.
     28e:	81 b3       	in	r24, 0x11	; 17
     290:	83 70       	andi	r24, 0x03	; 3
     292:	81 bb       	out	0x11, r24	; 17
}
     294:	08 95       	ret

00000296 <scan_key>:
unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        
		for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	70 e0       	ldi	r23, 0x00	; 0
    DDRD &= 0x03; // PC 2-7 input for columns.
}

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
     29a:	82 b3       	in	r24, 0x12	; 18
     29c:	8c 6f       	ori	r24, 0xFC	; 252
     29e:	82 bb       	out	0x12, r24	; 18
        
		for(int i = 0;i<4;i++){
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
            PORTC = ~(1 << i);
     2a4:	cb 01       	movw	r24, r22
     2a6:	02 2e       	mov	r0, r18
     2a8:	02 c0       	rjmp	.+4      	; 0x2ae <scan_key+0x18>
     2aa:	88 0f       	add	r24, r24
     2ac:	99 1f       	adc	r25, r25
     2ae:	0a 94       	dec	r0
     2b0:	e2 f7       	brpl	.-8      	; 0x2aa <scan_key+0x14>
     2b2:	80 95       	com	r24
     2b4:	85 bb       	out	0x15, r24	; 21
            for(int j = 2;j < 8;j++){
     2b6:	82 e0       	ldi	r24, 0x02	; 2
     2b8:	90 e0       	ldi	r25, 0x00	; 0
                if(bit_is_clear(PIND, j)){
     2ba:	40 b3       	in	r20, 0x10	; 16
     2bc:	50 e0       	ldi	r21, 0x00	; 0
     2be:	08 2e       	mov	r0, r24
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <scan_key+0x30>
     2c2:	55 95       	asr	r21
     2c4:	47 95       	ror	r20
     2c6:	0a 94       	dec	r0
     2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <scan_key+0x2c>
     2ca:	40 fd       	sbrc	r20, 0
     2cc:	23 c0       	rjmp	.+70     	; 0x314 <scan_key+0x7e>
     2ce:	41 e0       	ldi	r20, 0x01	; 1
     2d0:	50 e0       	ldi	r21, 0x00	; 0
     2d2:	08 2e       	mov	r0, r24
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <scan_key+0x44>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	0a 94       	dec	r0
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <scan_key+0x40>
     2de:	06 c0       	rjmp	.+12     	; 0x2ec <scan_key+0x56>
     2e0:	e3 ed       	ldi	r30, 0xD3	; 211
     2e2:	f0 e3       	ldi	r31, 0x30	; 48
     2e4:	31 97       	sbiw	r30, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <scan_key+0x4e>
     2e8:	00 c0       	rjmp	.+0      	; 0x2ea <scan_key+0x54>
     2ea:	00 00       	nop
                    while(bit_is_clear(PIND, j)) _delay_ms(50);
     2ec:	60 b3       	in	r22, 0x10	; 16
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	64 23       	and	r22, r20
     2f2:	75 23       	and	r23, r21
     2f4:	61 15       	cp	r22, r1
     2f6:	71 05       	cpc	r23, r1
     2f8:	99 f3       	breq	.-26     	; 0x2e0 <scan_key+0x4a>
                    return keys[i][j-2];
     2fa:	f9 01       	movw	r30, r18
     2fc:	ee 0f       	add	r30, r30
     2fe:	ff 1f       	adc	r31, r31
     300:	e2 0f       	add	r30, r18
     302:	f3 1f       	adc	r31, r19
     304:	ee 0f       	add	r30, r30
     306:	ff 1f       	adc	r31, r31
     308:	e8 0f       	add	r30, r24
     30a:	f9 1f       	adc	r31, r25
     30c:	e2 5a       	subi	r30, 0xA2	; 162
     30e:	ff 4f       	sbci	r31, 0xFF	; 255
                }
            }
        }

    }
}
     310:	80 81       	ld	r24, Z
     312:	08 95       	ret
    while (1) {
        PORTD |= 0xFC;
        
		for(int i = 0;i<4;i++){
            PORTC = ~(1 << i);
            for(int j = 2;j < 8;j++){
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	88 30       	cpi	r24, 0x08	; 8
     318:	91 05       	cpc	r25, r1
     31a:	79 f6       	brne	.-98     	; 0x2ba <scan_key+0x24>

unsigned char scan_key() {
    while (1) {
        PORTD |= 0xFC;
        
		for(int i = 0;i<4;i++){
     31c:	2f 5f       	subi	r18, 0xFF	; 255
     31e:	3f 4f       	sbci	r19, 0xFF	; 255
     320:	24 30       	cpi	r18, 0x04	; 4
     322:	31 05       	cpc	r19, r1
     324:	09 f0       	breq	.+2      	; 0x328 <scan_key+0x92>
     326:	be cf       	rjmp	.-132    	; 0x2a4 <scan_key+0xe>
     328:	b8 cf       	rjmp	.-144    	; 0x29a <scan_key+0x4>

0000032a <uart>:

    reset();
    run();
}

void uart() {
     32a:	ef 92       	push	r14
     32c:	ff 92       	push	r15
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	df 93       	push	r29
     334:	cf 93       	push	r28
     336:	cd b7       	in	r28, 0x3d	; 61
     338:	de b7       	in	r29, 0x3e	; 62
     33a:	c0 54       	subi	r28, 0x40	; 64
     33c:	d0 40       	sbci	r29, 0x00	; 0
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	f8 94       	cli
     342:	de bf       	out	0x3e, r29	; 62
     344:	0f be       	out	0x3f, r0	; 63
     346:	cd bf       	out	0x3d, r28	; 61
	char uart_ans[64];
	dtostrf(ans, 9, 5, uart_ans);	//float -> char* (ans -> uart_ans)
     348:	60 91 c1 01 	lds	r22, 0x01C1
     34c:	70 91 c2 01 	lds	r23, 0x01C2
     350:	80 91 c3 01 	lds	r24, 0x01C3
     354:	90 91 c4 01 	lds	r25, 0x01C4
     358:	49 e0       	ldi	r20, 0x09	; 9
     35a:	25 e0       	ldi	r18, 0x05	; 5
     35c:	7e 01       	movw	r14, r28
     35e:	08 94       	sec
     360:	e1 1c       	adc	r14, r1
     362:	f1 1c       	adc	r15, r1
     364:	87 01       	movw	r16, r14
     366:	e5 d9       	rcall	.-3126   	; 0xfffff732 <__eeprom_end+0xff7ef732>
	Transmit(uart_ans);
     368:	c7 01       	movw	r24, r14
     36a:	73 d3       	rcall	.+1766   	; 0xa52 <Transmit>
}
     36c:	c0 5c       	subi	r28, 0xC0	; 192
     36e:	df 4f       	sbci	r29, 0xFF	; 255
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf 91       	pop	r28
     37c:	df 91       	pop	r29
     37e:	1f 91       	pop	r17
     380:	0f 91       	pop	r16
     382:	ff 90       	pop	r15
     384:	ef 90       	pop	r14
     386:	08 95       	ret

00000388 <calculate>:

double calculate(float m, char operator, float n) {
     388:	ef 92       	push	r14
     38a:	ff 92       	push	r15
     38c:	0f 93       	push	r16
     38e:	1f 93       	push	r17
     390:	cf 93       	push	r28
     392:	df 93       	push	r29
     394:	78 01       	movw	r14, r16
     396:	89 01       	movw	r16, r18
    switch (operator) {
     398:	4d 36       	cpi	r20, 0x6D	; 109
     39a:	59 f1       	breq	.+86     	; 0x3f2 <calculate+0x6a>
     39c:	4e 36       	cpi	r20, 0x6E	; 110
     39e:	60 f4       	brcc	.+24     	; 0x3b8 <calculate+0x30>
     3a0:	4b 32       	cpi	r20, 0x2B	; 43
     3a2:	79 f0       	breq	.+30     	; 0x3c2 <calculate+0x3a>
     3a4:	4c 32       	cpi	r20, 0x2C	; 44
     3a6:	18 f4       	brcc	.+6      	; 0x3ae <calculate+0x26>
     3a8:	4a 32       	cpi	r20, 0x2A	; 42
     3aa:	e9 f5       	brne	.+122    	; 0x426 <calculate+0x9e>
     3ac:	12 c0       	rjmp	.+36     	; 0x3d2 <calculate+0x4a>
     3ae:	4d 32       	cpi	r20, 0x2D	; 45
     3b0:	61 f0       	breq	.+24     	; 0x3ca <calculate+0x42>
     3b2:	4f 32       	cpi	r20, 0x2F	; 47
     3b4:	c1 f5       	brne	.+112    	; 0x426 <calculate+0x9e>
     3b6:	11 c0       	rjmp	.+34     	; 0x3da <calculate+0x52>
     3b8:	40 37       	cpi	r20, 0x70	; 112
     3ba:	91 f0       	breq	.+36     	; 0x3e0 <calculate+0x58>
     3bc:	46 37       	cpi	r20, 0x76	; 118
     3be:	99 f5       	brne	.+102    	; 0x426 <calculate+0x9e>
     3c0:	26 c0       	rjmp	.+76     	; 0x40e <calculate+0x86>
    case '+':
        return r = m + n;
     3c2:	a8 01       	movw	r20, r16
     3c4:	97 01       	movw	r18, r14
     3c6:	a8 d4       	rcall	.+2384   	; 0xd18 <__addsf3>
     3c8:	2e c0       	rjmp	.+92     	; 0x426 <calculate+0x9e>
    case '-':
        return r = m - n;
     3ca:	a8 01       	movw	r20, r16
     3cc:	97 01       	movw	r18, r14
     3ce:	cb d4       	rcall	.+2454   	; 0xd66 <__subsf3>
     3d0:	2a c0       	rjmp	.+84     	; 0x426 <calculate+0x9e>
    case '*':
        return r = m * n;
     3d2:	a8 01       	movw	r20, r16
     3d4:	97 01       	movw	r18, r14
     3d6:	f2 d4       	rcall	.+2532   	; 0xdbc <__mulsf3>
     3d8:	26 c0       	rjmp	.+76     	; 0x426 <calculate+0x9e>
    case '/':
        return r = m / n;
     3da:	a8 01       	movw	r20, r16
     3dc:	97 01       	movw	r18, r14
     3de:	07 c0       	rjmp	.+14     	; 0x3ee <calculate+0x66>
    case 'p'://%
        return r = m * n / 100;
     3e0:	a8 01       	movw	r20, r16
     3e2:	97 01       	movw	r18, r14
     3e4:	eb d4       	rcall	.+2518   	; 0xdbc <__mulsf3>
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	48 ec       	ldi	r20, 0xC8	; 200
     3ec:	52 e4       	ldi	r21, 0x42	; 66
     3ee:	db d5       	rcall	.+2998   	; 0xfa6 <__divsf3>
     3f0:	1a c0       	rjmp	.+52     	; 0x426 <calculate+0x9e>
    case 'm'://mod
        return r = (int)m % (int)n;
     3f2:	09 d7       	rcall	.+3602   	; 0x1206 <__fixsfsi>
     3f4:	eb 01       	movw	r28, r22
     3f6:	c8 01       	movw	r24, r16
     3f8:	b7 01       	movw	r22, r14
     3fa:	05 d7       	rcall	.+3594   	; 0x1206 <__fixsfsi>
     3fc:	ce 01       	movw	r24, r28
     3fe:	3b d9       	rcall	.-3466   	; 0xfffff676 <__eeprom_end+0xff7ef676>
     400:	9c 01       	movw	r18, r24
     402:	b9 01       	movw	r22, r18
     404:	88 27       	eor	r24, r24
     406:	77 fd       	sbrc	r23, 7
     408:	80 95       	com	r24
     40a:	98 2f       	mov	r25, r24
     40c:	0b c0       	rjmp	.+22     	; 0x424 <calculate+0x9c>
    case 'v'://div
        return r = (int)m / (int)n;
     40e:	fb d6       	rcall	.+3574   	; 0x1206 <__fixsfsi>
     410:	eb 01       	movw	r28, r22
     412:	c8 01       	movw	r24, r16
     414:	b7 01       	movw	r22, r14
     416:	f7 d6       	rcall	.+3566   	; 0x1206 <__fixsfsi>
     418:	ce 01       	movw	r24, r28
     41a:	2d d9       	rcall	.-3494   	; 0xfffff676 <__eeprom_end+0xff7ef676>
     41c:	88 27       	eor	r24, r24
     41e:	77 fd       	sbrc	r23, 7
     420:	80 95       	com	r24
     422:	98 2f       	mov	r25, r24
     424:	94 d6       	rcall	.+3368   	; 0x114e <__floatsisf>

    }
    return r = m;
     426:	26 2f       	mov	r18, r22
     428:	37 2f       	mov	r19, r23
     42a:	48 2f       	mov	r20, r24
     42c:	59 2f       	mov	r21, r25
     42e:	20 93 bb 01 	sts	0x01BB, r18
     432:	30 93 bc 01 	sts	0x01BC, r19
     436:	40 93 bd 01 	sts	0x01BD, r20
     43a:	50 93 be 01 	sts	0x01BE, r21
}
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	1f 91       	pop	r17
     444:	0f 91       	pop	r16
     446:	ff 90       	pop	r15
     448:	ef 90       	pop	r14
     44a:	08 95       	ret

0000044c <show_result>:

void show_result() {
     44c:	ef 92       	push	r14
     44e:	ff 92       	push	r15
     450:	0f 93       	push	r16
     452:	1f 93       	push	r17
    move_to(0, 1);			//bottom line start
     454:	80 e0       	ldi	r24, 0x00	; 0
     456:	61 e0       	ldi	r22, 0x01	; 1
     458:	e2 de       	rcall	.-572    	; 0x21e <move_to>
    send_string("A=");
     45a:	88 e7       	ldi	r24, 0x78	; 120
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	cc de       	rcall	.-616    	; 0x1f8 <send_string>
    
	char* data = buffer;
    if (r <= 999999999999)
     460:	e0 90 bb 01 	lds	r14, 0x01BB
     464:	f0 90 bc 01 	lds	r15, 0x01BC
     468:	00 91 bd 01 	lds	r16, 0x01BD
     46c:	10 91 be 01 	lds	r17, 0x01BE
     470:	c8 01       	movw	r24, r16
     472:	b7 01       	movw	r22, r14
     474:	25 ea       	ldi	r18, 0xA5	; 165
     476:	34 ed       	ldi	r19, 0xD4	; 212
     478:	48 e6       	ldi	r20, 0x68	; 104
     47a:	53 e5       	ldi	r21, 0x53	; 83
     47c:	3d d6       	rcall	.+3194   	; 0x10f8 <__lesf2>
     47e:	18 16       	cp	r1, r24
     480:	4c f0       	brlt	.+18     	; 0x494 <show_result+0x48>
        dtostrf(r, 9, 5, buffer);	//float -> char* (r -> buffer)
     482:	c8 01       	movw	r24, r16
     484:	b7 01       	movw	r22, r14
     486:	49 e0       	ldi	r20, 0x09	; 9
     488:	25 e0       	ldi	r18, 0x05	; 5
     48a:	04 ea       	ldi	r16, 0xA4	; 164
     48c:	11 e0       	ldi	r17, 0x01	; 1
     48e:	51 d9       	rcall	.-3422   	; 0xfffff732 <__eeprom_end+0xff7ef732>

void show_result() {
    move_to(0, 1);			//bottom line start
    send_string("A=");
    
	char* data = buffer;
     490:	c8 01       	movw	r24, r16
     492:	02 c0       	rjmp	.+4      	; 0x498 <show_result+0x4c>
    if (r <= 999999999999)
        dtostrf(r, 9, 5, buffer);	//float -> char* (r -> buffer)
    else 
		data = overflow;
     494:	8c e8       	ldi	r24, 0x8C	; 140
     496:	90 e0       	ldi	r25, 0x00	; 0
    send_string(data);
     498:	af de       	rcall	.-674    	; 0x1f8 <send_string>

    state = result_disp;
     49a:	84 e0       	ldi	r24, 0x04	; 4
     49c:	80 93 ba 01 	sts	0x01BA, r24
}
     4a0:	1f 91       	pop	r17
     4a2:	0f 91       	pop	r16
     4a4:	ff 90       	pop	r15
     4a6:	ef 90       	pop	r14
     4a8:	08 95       	ret

000004aa <send_digit>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
     4aa:	80 5d       	subi	r24, 0xD0	; 208
     4ac:	5c de       	rcall	.-840    	; 0x166 <send_data>
}
     4ae:	08 95       	ret

000004b0 <reset>:
        decide(scan_key(), is_dec_p, paw_p);
    }
}

void reset() {
    clear();
     4b0:	bd de       	rcall	.-646    	; 0x22c <clear>
    move_to(0, 0);		//начало верхней строки
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	60 e0       	ldi	r22, 0x00	; 0
     4b6:	b3 de       	rcall	.-666    	; 0x21e <move_to>
    r = a = b = op = count = 0;
     4b8:	10 92 c0 01 	sts	0x01C0, r1
     4bc:	10 92 bf 01 	sts	0x01BF, r1
     4c0:	10 92 b5 01 	sts	0x01B5, r1
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	dc 01       	movw	r26, r24
     4ca:	80 93 b6 01 	sts	0x01B6, r24
     4ce:	90 93 b7 01 	sts	0x01B7, r25
     4d2:	a0 93 b8 01 	sts	0x01B8, r26
     4d6:	b0 93 b9 01 	sts	0x01B9, r27
     4da:	80 93 c5 01 	sts	0x01C5, r24
     4de:	90 93 c6 01 	sts	0x01C6, r25
     4e2:	a0 93 c7 01 	sts	0x01C7, r26
     4e6:	b0 93 c8 01 	sts	0x01C8, r27
     4ea:	80 93 bb 01 	sts	0x01BB, r24
     4ee:	90 93 bc 01 	sts	0x01BC, r25
     4f2:	a0 93 bd 01 	sts	0x01BD, r26
     4f6:	b0 93 be 01 	sts	0x01BE, r27
	state = start_disp;
     4fa:	10 92 ba 01 	sts	0x01BA, r1
}
     4fe:	08 95       	ret

00000500 <decide>:

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
     500:	4f 92       	push	r4
     502:	5f 92       	push	r5
     504:	6f 92       	push	r6
     506:	7f 92       	push	r7
     508:	8f 92       	push	r8
     50a:	9f 92       	push	r9
     50c:	af 92       	push	r10
     50e:	bf 92       	push	r11
     510:	cf 92       	push	r12
     512:	df 92       	push	r13
     514:	ff 92       	push	r15
     516:	0f 93       	push	r16
     518:	1f 93       	push	r17
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	f8 2e       	mov	r15, r24
     520:	eb 01       	movw	r28, r22
     522:	6a 01       	movw	r12, r20
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     524:	18 2f       	mov	r17, r24
     526:	10 53       	subi	r17, 0x30	; 48
            count++;
            break;

        case result_disp:
            if (digit) {
                line[0] = ' ';
     528:	00 e2       	ldi	r16, 0x20	; 32

                move_to(0, 0);					//начало верхней строки
                send_string(line); 				// Clear 1st line.

                move_to(0, 0);
                a = b = op = count = 0;
     52a:	0f 2e       	mov	r0, r31
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	8f 2e       	mov	r8, r31
     530:	f0 e0       	ldi	r31, 0x00	; 0
     532:	9f 2e       	mov	r9, r31
     534:	f0 e0       	ldi	r31, 0x00	; 0
     536:	af 2e       	mov	r10, r31
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	bf 2e       	mov	r11, r31
     53c:	f0 2d       	mov	r31, r0
                state = a_input;
     53e:	44 24       	eor	r4, r4
     540:	43 94       	inc	r4
}

void decide(unsigned char key, bool* is_dec_p, int* paw_p) {
    
	// Check if it is a digit.
    if (key >= '0' && key <= '9')
     542:	1a 30       	cpi	r17, 0x0A	; 10
     544:	08 f0       	brcs	.+2      	; 0x548 <decide+0x48>
     546:	2c c1       	rjmp	.+600    	; 0x7a0 <decide+0x2a0>
    {
		unsigned char digit = key - '0'; // '2' --> 2

        switch (state) {
     548:	80 91 ba 01 	lds	r24, 0x01BA
     54c:	82 30       	cpi	r24, 0x02	; 2
     54e:	09 f4       	brne	.+2      	; 0x552 <decide+0x52>
     550:	83 c0       	rjmp	.+262    	; 0x658 <decide+0x158>
     552:	83 30       	cpi	r24, 0x03	; 3
     554:	30 f4       	brcc	.+12     	; 0x562 <decide+0x62>
     556:	88 23       	and	r24, r24
     558:	59 f0       	breq	.+22     	; 0x570 <decide+0x70>
     55a:	81 30       	cpi	r24, 0x01	; 1
     55c:	09 f0       	breq	.+2      	; 0x560 <decide+0x60>
     55e:	37 c2       	rjmp	.+1134   	; 0x9ce <decide+0x4ce>
     560:	0c c0       	rjmp	.+24     	; 0x57a <decide+0x7a>
     562:	83 30       	cpi	r24, 0x03	; 3
     564:	09 f4       	brne	.+2      	; 0x568 <decide+0x68>
     566:	7d c0       	rjmp	.+250    	; 0x662 <decide+0x162>
     568:	84 30       	cpi	r24, 0x04	; 4
     56a:	09 f0       	breq	.+2      	; 0x56e <decide+0x6e>
     56c:	30 c2       	rjmp	.+1120   	; 0x9ce <decide+0x4ce>
     56e:	ef c0       	rjmp	.+478    	; 0x74e <decide+0x24e>

        case start_disp:
            if (digit) {
     570:	11 23       	and	r17, r17
     572:	19 f0       	breq	.+6      	; 0x57a <decide+0x7a>
                state = a_input;
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	80 93 ba 01 	sts	0x01BA, r24
            }

        case a_input:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.
     57a:	80 91 bf 01 	lds	r24, 0x01BF
     57e:	90 91 c0 01 	lds	r25, 0x01C0
     582:	8e 30       	cpi	r24, 0x0E	; 14
     584:	91 05       	cpc	r25, r1
     586:	09 f4       	brne	.+2      	; 0x58a <decide+0x8a>
     588:	22 c2       	rjmp	.+1092   	; 0x9ce <decide+0x4ce>

			if (*is_dec_p == 0) {
     58a:	88 81       	ld	r24, Y
     58c:	88 23       	and	r24, r24
     58e:	41 f0       	breq	.+16     	; 0x5a0 <decide+0xa0>
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     590:	f6 01       	movw	r30, r12
     592:	c0 81       	ld	r28, Z
     594:	d1 81       	ldd	r29, Z+1	; 0x01
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	61 e0       	ldi	r22, 0x01	; 1
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	2f c0       	rjmp	.+94     	; 0x5fe <decide+0xfe>

        case a_input:
            if (count == 14) return; 			// You cannot fillup the screen with a single operand.

			if (*is_dec_p == 0) {
            	a = a * 10 + digit;				// append to a
     5a0:	60 91 c5 01 	lds	r22, 0x01C5
     5a4:	70 91 c6 01 	lds	r23, 0x01C6
     5a8:	80 91 c7 01 	lds	r24, 0x01C7
     5ac:	90 91 c8 01 	lds	r25, 0x01C8
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e2       	ldi	r20, 0x20	; 32
     5b6:	51 e4       	ldi	r21, 0x41	; 65
     5b8:	01 d4       	rcall	.+2050   	; 0xdbc <__mulsf3>
     5ba:	4b 01       	movw	r8, r22
     5bc:	5c 01       	movw	r10, r24
     5be:	61 2f       	mov	r22, r17
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	88 27       	eor	r24, r24
     5c4:	77 fd       	sbrc	r23, 7
     5c6:	80 95       	com	r24
     5c8:	98 2f       	mov	r25, r24
     5ca:	c1 d5       	rcall	.+2946   	; 0x114e <__floatsisf>
     5cc:	9b 01       	movw	r18, r22
     5ce:	ac 01       	movw	r20, r24
     5d0:	c5 01       	movw	r24, r10
     5d2:	b4 01       	movw	r22, r8
     5d4:	a1 d3       	rcall	.+1858   	; 0xd18 <__addsf3>
     5d6:	60 93 c5 01 	sts	0x01C5, r22
     5da:	70 93 c6 01 	sts	0x01C6, r23
     5de:	80 93 c7 01 	sts	0x01C7, r24
     5e2:	90 93 c8 01 	sts	0x01C8, r25
     5e6:	a7 c0       	rjmp	.+334    	; 0x736 <decide+0x236>

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     5e8:	9b 01       	movw	r18, r22
     5ea:	22 0f       	add	r18, r18
     5ec:	33 1f       	adc	r19, r19
     5ee:	e3 e0       	ldi	r30, 0x03	; 3
     5f0:	66 0f       	add	r22, r22
     5f2:	77 1f       	adc	r23, r23
     5f4:	ea 95       	dec	r30
     5f6:	e1 f7       	brne	.-8      	; 0x5f0 <decide+0xf0>
     5f8:	62 0f       	add	r22, r18
     5fa:	73 1f       	adc	r23, r19
			} 

			if (*is_dec_p == 1) {				

				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     5fc:	01 96       	adiw	r24, 0x01	; 1
     5fe:	8c 17       	cp	r24, r28
     600:	9d 07       	cpc	r25, r29
     602:	94 f3       	brlt	.-28     	; 0x5e8 <decide+0xe8>
					d = d * 10;
				}

				a = (a * d + digit) / d;
     604:	88 27       	eor	r24, r24
     606:	77 fd       	sbrc	r23, 7
     608:	80 95       	com	r24
     60a:	98 2f       	mov	r25, r24
     60c:	a0 d5       	rcall	.+2880   	; 0x114e <__floatsisf>
     60e:	4b 01       	movw	r8, r22
     610:	5c 01       	movw	r10, r24
     612:	20 91 c5 01 	lds	r18, 0x01C5
     616:	30 91 c6 01 	lds	r19, 0x01C6
     61a:	40 91 c7 01 	lds	r20, 0x01C7
     61e:	50 91 c8 01 	lds	r21, 0x01C8
     622:	cc d3       	rcall	.+1944   	; 0xdbc <__mulsf3>
     624:	2b 01       	movw	r4, r22
     626:	3c 01       	movw	r6, r24
     628:	61 2f       	mov	r22, r17
     62a:	70 e0       	ldi	r23, 0x00	; 0
     62c:	88 27       	eor	r24, r24
     62e:	77 fd       	sbrc	r23, 7
     630:	80 95       	com	r24
     632:	98 2f       	mov	r25, r24
     634:	8c d5       	rcall	.+2840   	; 0x114e <__floatsisf>
     636:	9b 01       	movw	r18, r22
     638:	ac 01       	movw	r20, r24
     63a:	c3 01       	movw	r24, r6
     63c:	b2 01       	movw	r22, r4
     63e:	6c d3       	rcall	.+1752   	; 0xd18 <__addsf3>
     640:	a5 01       	movw	r20, r10
     642:	94 01       	movw	r18, r8
     644:	b0 d4       	rcall	.+2400   	; 0xfa6 <__divsf3>
     646:	60 93 c5 01 	sts	0x01C5, r22
     64a:	70 93 c6 01 	sts	0x01C6, r23
     64e:	80 93 c7 01 	sts	0x01C7, r24
     652:	90 93 c8 01 	sts	0x01C8, r25
     656:	6b c0       	rjmp	.+214    	; 0x72e <decide+0x22e>
            send_data(key);
            count++;
            break;

        case op_input:
            if (digit) {
     658:	11 23       	and	r17, r17
     65a:	19 f0       	breq	.+6      	; 0x662 <decide+0x162>
				state = b_input;
     65c:	83 e0       	ldi	r24, 0x03	; 3
     65e:	80 93 ba 01 	sts	0x01BA, r24
			}

        case b_input:
			if (*is_dec_p == 0) {
     662:	88 81       	ld	r24, Y
     664:	88 23       	and	r24, r24
     666:	41 f0       	breq	.+16     	; 0x678 <decide+0x178>
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     668:	f6 01       	movw	r30, r12
     66a:	c0 81       	ld	r28, Z
     66c:	d1 81       	ldd	r29, Z+1	; 0x01
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	61 e0       	ldi	r22, 0x01	; 1
     674:	70 e0       	ldi	r23, 0x00	; 0
     676:	2f c0       	rjmp	.+94     	; 0x6d6 <decide+0x1d6>
				state = b_input;
			}

        case b_input:
			if (*is_dec_p == 0) {
            	b = b * 10 + digit;				// append to b
     678:	60 91 b6 01 	lds	r22, 0x01B6
     67c:	70 91 b7 01 	lds	r23, 0x01B7
     680:	80 91 b8 01 	lds	r24, 0x01B8
     684:	90 91 b9 01 	lds	r25, 0x01B9
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	40 e2       	ldi	r20, 0x20	; 32
     68e:	51 e4       	ldi	r21, 0x41	; 65
     690:	95 d3       	rcall	.+1834   	; 0xdbc <__mulsf3>
     692:	4b 01       	movw	r8, r22
     694:	5c 01       	movw	r10, r24
     696:	61 2f       	mov	r22, r17
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	88 27       	eor	r24, r24
     69c:	77 fd       	sbrc	r23, 7
     69e:	80 95       	com	r24
     6a0:	98 2f       	mov	r25, r24
     6a2:	55 d5       	rcall	.+2730   	; 0x114e <__floatsisf>
     6a4:	9b 01       	movw	r18, r22
     6a6:	ac 01       	movw	r20, r24
     6a8:	c5 01       	movw	r24, r10
     6aa:	b4 01       	movw	r22, r8
     6ac:	35 d3       	rcall	.+1642   	; 0xd18 <__addsf3>
     6ae:	60 93 b6 01 	sts	0x01B6, r22
     6b2:	70 93 b7 01 	sts	0x01B7, r23
     6b6:	80 93 b8 01 	sts	0x01B8, r24
     6ba:	90 93 b9 01 	sts	0x01B9, r25
     6be:	3b c0       	rjmp	.+118    	; 0x736 <decide+0x236>
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
					d = d * 10;
     6c0:	9b 01       	movw	r18, r22
     6c2:	22 0f       	add	r18, r18
     6c4:	33 1f       	adc	r19, r19
     6c6:	43 e0       	ldi	r20, 0x03	; 3
     6c8:	66 0f       	add	r22, r22
     6ca:	77 1f       	adc	r23, r23
     6cc:	4a 95       	dec	r20
     6ce:	e1 f7       	brne	.-8      	; 0x6c8 <decide+0x1c8>
     6d0:	62 0f       	add	r22, r18
     6d2:	73 1f       	adc	r23, r19
            	b = b * 10 + digit;				// append to b
			} 

			if (*is_dec_p == 1) {
				int d = 1;
				for (int i=0; i<*paw_p; i++) {
     6d4:	01 96       	adiw	r24, 0x01	; 1
     6d6:	8c 17       	cp	r24, r28
     6d8:	9d 07       	cpc	r25, r29
     6da:	94 f3       	brlt	.-28     	; 0x6c0 <decide+0x1c0>
					d = d * 10;
				}

				b = (b * d + digit) / d;
     6dc:	88 27       	eor	r24, r24
     6de:	77 fd       	sbrc	r23, 7
     6e0:	80 95       	com	r24
     6e2:	98 2f       	mov	r25, r24
     6e4:	34 d5       	rcall	.+2664   	; 0x114e <__floatsisf>
     6e6:	4b 01       	movw	r8, r22
     6e8:	5c 01       	movw	r10, r24
     6ea:	20 91 b6 01 	lds	r18, 0x01B6
     6ee:	30 91 b7 01 	lds	r19, 0x01B7
     6f2:	40 91 b8 01 	lds	r20, 0x01B8
     6f6:	50 91 b9 01 	lds	r21, 0x01B9
     6fa:	60 d3       	rcall	.+1728   	; 0xdbc <__mulsf3>
     6fc:	2b 01       	movw	r4, r22
     6fe:	3c 01       	movw	r6, r24
     700:	61 2f       	mov	r22, r17
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	88 27       	eor	r24, r24
     706:	77 fd       	sbrc	r23, 7
     708:	80 95       	com	r24
     70a:	98 2f       	mov	r25, r24
     70c:	20 d5       	rcall	.+2624   	; 0x114e <__floatsisf>
     70e:	9b 01       	movw	r18, r22
     710:	ac 01       	movw	r20, r24
     712:	c3 01       	movw	r24, r6
     714:	b2 01       	movw	r22, r4
     716:	00 d3       	rcall	.+1536   	; 0xd18 <__addsf3>
     718:	a5 01       	movw	r20, r10
     71a:	94 01       	movw	r18, r8
     71c:	44 d4       	rcall	.+2184   	; 0xfa6 <__divsf3>
     71e:	60 93 b6 01 	sts	0x01B6, r22
     722:	70 93 b7 01 	sts	0x01B7, r23
     726:	80 93 b8 01 	sts	0x01B8, r24
     72a:	90 93 b9 01 	sts	0x01B9, r25

				*paw_p = *paw_p + 1;
     72e:	21 96       	adiw	r28, 0x01	; 1
     730:	f6 01       	movw	r30, r12
     732:	d1 83       	std	Z+1, r29	; 0x01
     734:	c0 83       	st	Z, r28
			}

            send_data(key);
     736:	8f 2d       	mov	r24, r15
     738:	16 dd       	rcall	.-1492   	; 0x166 <send_data>
            count++;
     73a:	80 91 bf 01 	lds	r24, 0x01BF
     73e:	90 91 c0 01 	lds	r25, 0x01C0
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	90 93 c0 01 	sts	0x01C0, r25
     748:	80 93 bf 01 	sts	0x01BF, r24
            break;
     74c:	40 c1       	rjmp	.+640    	; 0x9ce <decide+0x4ce>

        case result_disp:
            if (digit) {
     74e:	11 23       	and	r17, r17
     750:	09 f4       	brne	.+2      	; 0x754 <decide+0x254>
     752:	3d c1       	rjmp	.+634    	; 0x9ce <decide+0x4ce>
                line[0] = ' ';
     754:	00 93 7b 00 	sts	0x007B, r16
                line[1] = ' ';
     758:	00 93 7c 00 	sts	0x007C, r16

                move_to(0, 0);					//начало верхней строки
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	5e dd       	rcall	.-1348   	; 0x21e <move_to>
                send_string(line); 				// Clear 1st line.
     762:	8b e7       	ldi	r24, 0x7B	; 123
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	48 dd       	rcall	.-1392   	; 0x1f8 <send_string>

                move_to(0, 0);
     768:	80 e0       	ldi	r24, 0x00	; 0
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	58 dd       	rcall	.-1360   	; 0x21e <move_to>
                a = b = op = count = 0;
     76e:	10 92 c0 01 	sts	0x01C0, r1
     772:	10 92 bf 01 	sts	0x01BF, r1
     776:	10 92 b5 01 	sts	0x01B5, r1
     77a:	80 92 b6 01 	sts	0x01B6, r8
     77e:	90 92 b7 01 	sts	0x01B7, r9
     782:	a0 92 b8 01 	sts	0x01B8, r10
     786:	b0 92 b9 01 	sts	0x01B9, r11
     78a:	80 92 c5 01 	sts	0x01C5, r8
     78e:	90 92 c6 01 	sts	0x01C6, r9
     792:	a0 92 c7 01 	sts	0x01C7, r10
     796:	b0 92 c8 01 	sts	0x01C8, r11
                state = a_input;
     79a:	40 92 ba 01 	sts	0x01BA, r4

                decide(key, is_dec_p, paw_p); 	// Recursively capture digit.
                return;
     79e:	d1 ce       	rjmp	.-606    	; 0x542 <decide+0x42>
            break;

        }
    } 

	else if (key == '.') {
     7a0:	ff 2d       	mov	r31, r15
     7a2:	fe 32       	cpi	r31, 0x2E	; 46
     7a4:	21 f4       	brne	.+8      	; 0x7ae <decide+0x2ae>
		*is_dec_p = 1;
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	88 83       	st	Y, r24
		send_data(key);
     7aa:	8e e2       	ldi	r24, 0x2E	; 46
     7ac:	0b c1       	rjmp	.+534    	; 0x9c4 <decide+0x4c4>
	}

	else {
		
		*is_dec_p = 0;
     7ae:	18 82       	st	Y, r1
		*paw_p = 1;		
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	f6 01       	movw	r30, r12
     7b6:	91 83       	std	Z+1, r25	; 0x01
     7b8:	80 83       	st	Z, r24

        switch (key) {
     7ba:	ff 2d       	mov	r31, r15
     7bc:	f4 34       	cpi	r31, 0x44	; 68
     7be:	09 f4       	brne	.+2      	; 0x7c2 <decide+0x2c2>
     7c0:	fd c0       	rjmp	.+506    	; 0x9bc <decide+0x4bc>
     7c2:	f5 34       	cpi	r31, 0x45	; 69
     7c4:	c0 f4       	brcc	.+48     	; 0x7f6 <decide+0x2f6>
     7c6:	fd 33       	cpi	r31, 0x3D	; 61
     7c8:	09 f4       	brne	.+2      	; 0x7cc <decide+0x2cc>
     7ca:	ab c0       	rjmp	.+342    	; 0x922 <decide+0x422>
     7cc:	fe 33       	cpi	r31, 0x3E	; 62
     7ce:	58 f4       	brcc	.+22     	; 0x7e6 <decide+0x2e6>
     7d0:	fa 32       	cpi	r31, 0x2A	; 42
     7d2:	08 f4       	brcc	.+2      	; 0x7d6 <decide+0x2d6>
     7d4:	fc c0       	rjmp	.+504    	; 0x9ce <decide+0x4ce>
     7d6:	fc 32       	cpi	r31, 0x2C	; 44
     7d8:	08 f1       	brcs	.+66     	; 0x81c <decide+0x31c>
     7da:	fd 32       	cpi	r31, 0x2D	; 45
     7dc:	f9 f0       	breq	.+62     	; 0x81c <decide+0x31c>
     7de:	ff 32       	cpi	r31, 0x2F	; 47
     7e0:	09 f0       	breq	.+2      	; 0x7e4 <decide+0x2e4>
     7e2:	f5 c0       	rjmp	.+490    	; 0x9ce <decide+0x4ce>
     7e4:	1b c0       	rjmp	.+54     	; 0x81c <decide+0x31c>
     7e6:	8f 2d       	mov	r24, r15
     7e8:	81 34       	cpi	r24, 0x41	; 65
     7ea:	09 f4       	brne	.+2      	; 0x7ee <decide+0x2ee>
     7ec:	d1 c0       	rjmp	.+418    	; 0x990 <decide+0x490>
     7ee:	83 34       	cpi	r24, 0x43	; 67
     7f0:	09 f0       	breq	.+2      	; 0x7f4 <decide+0x2f4>
     7f2:	ed c0       	rjmp	.+474    	; 0x9ce <decide+0x4ce>
     7f4:	cb c0       	rjmp	.+406    	; 0x98c <decide+0x48c>
     7f6:	ef 2d       	mov	r30, r15
     7f8:	e0 37       	cpi	r30, 0x70	; 112
     7fa:	81 f0       	breq	.+32     	; 0x81c <decide+0x31c>
     7fc:	e1 37       	cpi	r30, 0x71	; 113
     7fe:	38 f4       	brcc	.+14     	; 0x80e <decide+0x30e>
     800:	ef 34       	cpi	r30, 0x4F	; 79
     802:	09 f4       	brne	.+2      	; 0x806 <decide+0x306>
     804:	e1 c0       	rjmp	.+450    	; 0x9c8 <decide+0x4c8>
     806:	ed 36       	cpi	r30, 0x6D	; 109
     808:	09 f0       	breq	.+2      	; 0x80c <decide+0x30c>
     80a:	e1 c0       	rjmp	.+450    	; 0x9ce <decide+0x4ce>
     80c:	07 c0       	rjmp	.+14     	; 0x81c <decide+0x31c>
     80e:	ff 2d       	mov	r31, r15
     810:	f5 37       	cpi	r31, 0x75	; 117
     812:	09 f4       	brne	.+2      	; 0x816 <decide+0x316>
     814:	db c0       	rjmp	.+438    	; 0x9cc <decide+0x4cc>
     816:	f6 37       	cpi	r31, 0x76	; 118
     818:	09 f0       	breq	.+2      	; 0x81c <decide+0x31c>
     81a:	d9 c0       	rjmp	.+434    	; 0x9ce <decide+0x4ce>
        case '+':
        case '-':
        case 'p':
        case 'm':
		case 'v':
            switch (state) {
     81c:	80 91 ba 01 	lds	r24, 0x01BA
     820:	82 30       	cpi	r24, 0x02	; 2
     822:	61 f0       	breq	.+24     	; 0x83c <decide+0x33c>
     824:	83 30       	cpi	r24, 0x03	; 3
     826:	20 f4       	brcc	.+8      	; 0x830 <decide+0x330>
     828:	81 30       	cpi	r24, 0x01	; 1
     82a:	09 f0       	breq	.+2      	; 0x82e <decide+0x32e>
     82c:	77 c0       	rjmp	.+238    	; 0x91c <decide+0x41c>
     82e:	09 c0       	rjmp	.+18     	; 0x842 <decide+0x342>
     830:	83 30       	cpi	r24, 0x03	; 3
     832:	99 f0       	breq	.+38     	; 0x85a <decide+0x35a>
     834:	84 30       	cpi	r24, 0x04	; 4
     836:	09 f0       	breq	.+2      	; 0x83a <decide+0x33a>
     838:	71 c0       	rjmp	.+226    	; 0x91c <decide+0x41c>
     83a:	3e c0       	rjmp	.+124    	; 0x8b8 <decide+0x3b8>

            case op_input:
                move_to(0,0); 		// Modify the operand displayed.
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	60 e0       	ldi	r22, 0x00	; 0
     840:	ee dc       	rcall	.-1572   	; 0x21e <move_to>

            case a_input:
                send_data(key);
     842:	8f 2d       	mov	r24, r15
     844:	90 dc       	rcall	.-1760   	; 0x166 <send_data>
                count++;
     846:	80 91 bf 01 	lds	r24, 0x01BF
     84a:	90 91 c0 01 	lds	r25, 0x01C0
     84e:	01 96       	adiw	r24, 0x01	; 1
     850:	90 93 c0 01 	sts	0x01C0, r25
     854:	80 93 bf 01 	sts	0x01BF, r24
     858:	5e c0       	rjmp	.+188    	; 0x916 <decide+0x416>
                state = op_input;
                break;

            case b_input:
                calculate(a, op, b);
     85a:	60 91 c5 01 	lds	r22, 0x01C5
     85e:	70 91 c6 01 	lds	r23, 0x01C6
     862:	80 91 c7 01 	lds	r24, 0x01C7
     866:	90 91 c8 01 	lds	r25, 0x01C8
     86a:	00 91 b6 01 	lds	r16, 0x01B6
     86e:	10 91 b7 01 	lds	r17, 0x01B7
     872:	20 91 b8 01 	lds	r18, 0x01B8
     876:	30 91 b9 01 	lds	r19, 0x01B9
     87a:	40 91 b5 01 	lds	r20, 0x01B5
     87e:	84 dd       	rcall	.-1272   	; 0x388 <calculate>
                show_result();
     880:	e5 dd       	rcall	.-1078   	; 0x44c <show_result>
				ans = calculate(a, op, b);
     882:	60 91 c5 01 	lds	r22, 0x01C5
     886:	70 91 c6 01 	lds	r23, 0x01C6
     88a:	80 91 c7 01 	lds	r24, 0x01C7
     88e:	90 91 c8 01 	lds	r25, 0x01C8
     892:	00 91 b6 01 	lds	r16, 0x01B6
     896:	10 91 b7 01 	lds	r17, 0x01B7
     89a:	20 91 b8 01 	lds	r18, 0x01B8
     89e:	30 91 b9 01 	lds	r19, 0x01B9
     8a2:	40 91 b5 01 	lds	r20, 0x01B5
     8a6:	70 dd       	rcall	.-1312   	; 0x388 <calculate>
     8a8:	60 93 c1 01 	sts	0x01C1, r22
     8ac:	70 93 c2 01 	sts	0x01C2, r23
     8b0:	80 93 c3 01 	sts	0x01C3, r24
     8b4:	90 93 c4 01 	sts	0x01C4, r25

            case result_disp:
                move_to(0, 0);
     8b8:	80 e0       	ldi	r24, 0x00	; 0
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	b0 dc       	rcall	.-1696   	; 0x21e <move_to>
                line[0] = 'A'; 		// 'A' represents current result.
     8be:	81 e4       	ldi	r24, 0x41	; 65
     8c0:	80 93 7b 00 	sts	0x007B, r24
                line[1] = key; 		// Operator of the operation.
     8c4:	f0 92 7c 00 	sts	0x007C, r15
                send_string(line);
     8c8:	8b e7       	ldi	r24, 0x7B	; 123
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	95 dc       	rcall	.-1750   	; 0x1f8 <send_string>

                move_to(2,0);
     8ce:	82 e0       	ldi	r24, 0x02	; 2
     8d0:	60 e0       	ldi	r22, 0x00	; 0
     8d2:	a5 dc       	rcall	.-1718   	; 0x21e <move_to>
                count = 2;
     8d4:	82 e0       	ldi	r24, 0x02	; 2
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	90 93 c0 01 	sts	0x01C0, r25
     8dc:	80 93 bf 01 	sts	0x01BF, r24
                a = r; 				// Put result into a.
     8e0:	80 91 bb 01 	lds	r24, 0x01BB
     8e4:	90 91 bc 01 	lds	r25, 0x01BC
     8e8:	a0 91 bd 01 	lds	r26, 0x01BD
     8ec:	b0 91 be 01 	lds	r27, 0x01BE
     8f0:	80 93 c5 01 	sts	0x01C5, r24
     8f4:	90 93 c6 01 	sts	0x01C6, r25
     8f8:	a0 93 c7 01 	sts	0x01C7, r26
     8fc:	b0 93 c8 01 	sts	0x01C8, r27
                b = 0; 				// Clear b.
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	dc 01       	movw	r26, r24
     906:	80 93 b6 01 	sts	0x01B6, r24
     90a:	90 93 b7 01 	sts	0x01B7, r25
     90e:	a0 93 b8 01 	sts	0x01B8, r26
     912:	b0 93 b9 01 	sts	0x01B9, r27
                state = op_input;
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	80 93 ba 01 	sts	0x01BA, r24

                break;
            }

            op = key;
     91c:	f0 92 b5 01 	sts	0x01B5, r15

            break;
     920:	56 c0       	rjmp	.+172    	; 0x9ce <decide+0x4ce>

        case '=':
            if(state == b_input){
     922:	80 91 ba 01 	lds	r24, 0x01BA
     926:	83 30       	cpi	r24, 0x03	; 3
     928:	09 f0       	breq	.+2      	; 0x92c <decide+0x42c>
     92a:	51 c0       	rjmp	.+162    	; 0x9ce <decide+0x4ce>
                calculate(a, op, b);
     92c:	60 91 c5 01 	lds	r22, 0x01C5
     930:	70 91 c6 01 	lds	r23, 0x01C6
     934:	80 91 c7 01 	lds	r24, 0x01C7
     938:	90 91 c8 01 	lds	r25, 0x01C8
     93c:	00 91 b6 01 	lds	r16, 0x01B6
     940:	10 91 b7 01 	lds	r17, 0x01B7
     944:	20 91 b8 01 	lds	r18, 0x01B8
     948:	30 91 b9 01 	lds	r19, 0x01B9
     94c:	40 91 b5 01 	lds	r20, 0x01B5
     950:	1b dd       	rcall	.-1482   	; 0x388 <calculate>
                show_result();
     952:	7c dd       	rcall	.-1288   	; 0x44c <show_result>
				ans = calculate(a, op, b);
     954:	60 91 c5 01 	lds	r22, 0x01C5
     958:	70 91 c6 01 	lds	r23, 0x01C6
     95c:	80 91 c7 01 	lds	r24, 0x01C7
     960:	90 91 c8 01 	lds	r25, 0x01C8
     964:	00 91 b6 01 	lds	r16, 0x01B6
     968:	10 91 b7 01 	lds	r17, 0x01B7
     96c:	20 91 b8 01 	lds	r18, 0x01B8
     970:	30 91 b9 01 	lds	r19, 0x01B9
     974:	40 91 b5 01 	lds	r20, 0x01B5
     978:	07 dd       	rcall	.-1522   	; 0x388 <calculate>
     97a:	60 93 c1 01 	sts	0x01C1, r22
     97e:	70 93 c2 01 	sts	0x01C2, r23
     982:	80 93 c3 01 	sts	0x01C3, r24
     986:	90 93 c4 01 	sts	0x01C4, r25
     98a:	21 c0       	rjmp	.+66     	; 0x9ce <decide+0x4ce>
            }
            break;

        case 'C': // "C" button.
			reset();
     98c:	91 dd       	rcall	.-1246   	; 0x4b0 <reset>
            break;
     98e:	1f c0       	rjmp	.+62     	; 0x9ce <decide+0x4ce>

        case 'A': // "ANS" button.
			send_data('A');
     990:	81 e4       	ldi	r24, 0x41	; 65
     992:	e9 db       	rcall	.-2094   	; 0x166 <send_data>
			b = ans;
     994:	80 91 c1 01 	lds	r24, 0x01C1
     998:	90 91 c2 01 	lds	r25, 0x01C2
     99c:	a0 91 c3 01 	lds	r26, 0x01C3
     9a0:	b0 91 c4 01 	lds	r27, 0x01C4
     9a4:	80 93 b6 01 	sts	0x01B6, r24
     9a8:	90 93 b7 01 	sts	0x01B7, r25
     9ac:	a0 93 b8 01 	sts	0x01B8, r26
     9b0:	b0 93 b9 01 	sts	0x01B9, r27
			state = b_input;
     9b4:	83 e0       	ldi	r24, 0x03	; 3
     9b6:	80 93 ba 01 	sts	0x01BA, r24
            break;
     9ba:	09 c0       	rjmp	.+18     	; 0x9ce <decide+0x4ce>

        case 'D': // "DEL" button.
			move_to(-1,0);
     9bc:	8f ef       	ldi	r24, 0xFF	; 255
     9be:	60 e0       	ldi	r22, 0x00	; 0
     9c0:	2e dc       	rcall	.-1956   	; 0x21e <move_to>
			send_data(' ');
     9c2:	80 e2       	ldi	r24, 0x20	; 32
     9c4:	d0 db       	rcall	.-2144   	; 0x166 <send_data>
            break;
     9c6:	03 c0       	rjmp	.+6      	; 0x9ce <decide+0x4ce>

		case 'O':// "ON/OFF" button.
			disp_on_off();
     9c8:	36 dc       	rcall	.-1940   	; 0x236 <disp_on_off>
			break;
     9ca:	01 c0       	rjmp	.+2      	; 0x9ce <decide+0x4ce>

		case 'u':// "uart" button.
			uart();
     9cc:	ae dc       	rcall	.-1700   	; 0x32a <uart>
			break;
        }
    }
}
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	1f 91       	pop	r17
     9d4:	0f 91       	pop	r16
     9d6:	ff 90       	pop	r15
     9d8:	df 90       	pop	r13
     9da:	cf 90       	pop	r12
     9dc:	bf 90       	pop	r11
     9de:	af 90       	pop	r10
     9e0:	9f 90       	pop	r9
     9e2:	8f 90       	pop	r8
     9e4:	7f 90       	pop	r7
     9e6:	6f 90       	pop	r6
     9e8:	5f 90       	pop	r5
     9ea:	4f 90       	pop	r4
     9ec:	08 95       	ret

000009ee <run>:

void send_digit(unsigned char digit) {
    send_data(digit + '0');
}

void run() {
     9ee:	ef 92       	push	r14
     9f0:	ff 92       	push	r15
     9f2:	0f 93       	push	r16
     9f4:	1f 93       	push	r17
     9f6:	df 93       	push	r29
     9f8:	cf 93       	push	r28
     9fa:	00 d0       	rcall	.+0      	; 0x9fc <run+0xe>
     9fc:	0f 92       	push	r0
     9fe:	cd b7       	in	r28, 0x3d	; 61
     a00:	de b7       	in	r29, 0x3e	; 62
	bool *is_dec_p;
	bool is_decimal = 0;		//флаг (0 - целая часть, 1 - дробная)
     a02:	19 82       	std	Y+1, r1	; 0x01
	is_dec_p = &is_decimal;

	int *paw_p;
	int paw = 1;				//разряд после запятой
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	9b 83       	std	Y+3, r25	; 0x03
     a0a:	8a 83       	std	Y+2, r24	; 0x02
	paw_p = &paw;
     a0c:	a2 e0       	ldi	r26, 0x02	; 2
     a0e:	ea 2e       	mov	r14, r26
     a10:	f1 2c       	mov	r15, r1
     a12:	ec 0e       	add	r14, r28
     a14:	fd 1e       	adc	r15, r29

    while (1) {
        decide(scan_key(), is_dec_p, paw_p);
     a16:	8e 01       	movw	r16, r28
     a18:	0f 5f       	subi	r16, 0xFF	; 255
     a1a:	1f 4f       	sbci	r17, 0xFF	; 255
     a1c:	3c dc       	rcall	.-1928   	; 0x296 <scan_key>
     a1e:	b8 01       	movw	r22, r16
     a20:	a7 01       	movw	r20, r14
     a22:	6e dd       	rcall	.-1316   	; 0x500 <decide>
     a24:	fb cf       	rjmp	.-10     	; 0xa1c <run+0x2e>

00000a26 <init_calculator>:
     a26:	8f e9       	ldi	r24, 0x9F	; 159
     a28:	96 e8       	ldi	r25, 0x86	; 134
     a2a:	a1 e0       	ldi	r26, 0x01	; 1
     a2c:	81 50       	subi	r24, 0x01	; 1
     a2e:	90 40       	sbci	r25, 0x00	; 0
     a30:	a0 40       	sbci	r26, 0x00	; 0
     a32:	e1 f7       	brne	.-8      	; 0xa2c <init_calculator+0x6>
     a34:	00 c0       	rjmp	.+0      	; 0xa36 <init_calculator+0x10>
     a36:	00 00       	nop
/////////////////////////////////////////////////////////////////////////////////////////////

void init_calculator() {
    _delay_ms(500);

    init_display();
     a38:	a4 db       	rcall	.-2232   	; 0x182 <init_display>
    init_keyboard();
     a3a:	26 dc       	rcall	.-1972   	; 0x288 <init_keyboard>
	UsartInit();
     a3c:	03 d0       	rcall	.+6      	; 0xa44 <UsartInit>

    reset();
     a3e:	38 dd       	rcall	.-1424   	; 0x4b0 <reset>
    run();
     a40:	d6 df       	rcall	.-84     	; 0x9ee <run>
}
     a42:	08 95       	ret

00000a44 <UsartInit>:

#include "uart.h"

void UsartInit()
{
	UBRRL=25;                  				//1 000 000 / (2400 * 16) - 1 = 25
     a44:	89 e1       	ldi	r24, 0x19	; 25
     a46:	89 b9       	out	0x09, r24	; 9
  	UCSRB=(1<<TXEN);              			//?ac?aoaai ia?aaa?o
     a48:	88 e0       	ldi	r24, 0x08	; 8
     a4a:	8a b9       	out	0x0a, r24	; 10
  	UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));   //?a?ei ?aaiou 8 aeo
     a4c:	86 e8       	ldi	r24, 0x86	; 134
     a4e:	80 bd       	out	0x20, r24	; 32
}
     a50:	08 95       	ret

00000a52 <Transmit>:

void Transmit(char* data)
{
     a52:	cf 93       	push	r28
     a54:	df 93       	push	r29
  	for (int i=0; i<strlen(data); i++)
     a56:	28 2f       	mov	r18, r24
     a58:	39 2f       	mov	r19, r25
     a5a:	e9 01       	movw	r28, r18
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	06 c0       	rjmp	.+12     	; 0xa6e <Transmit+0x1c>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
     a62:	5d 9b       	sbis	0x0b, 5	; 11
     a64:	fe cf       	rjmp	.-4      	; 0xa62 <Transmit+0x10>
      	UDR = data[i];
     a66:	49 91       	ld	r20, Y+
     a68:	4c b9       	out	0x0c, r20	; 12
  	UCSRC=(1<<URSEL)|(1<<UCSZ0|(1<<UCSZ1));   //?a?ei ?aaiou 8 aeo
}

void Transmit(char* data)
{
  	for (int i=0; i<strlen(data); i++)
     a6a:	2f 5f       	subi	r18, 0xFF	; 255
     a6c:	3f 4f       	sbci	r19, 0xFF	; 255
     a6e:	fc 01       	movw	r30, r24
     a70:	01 90       	ld	r0, Z+
     a72:	00 20       	and	r0, r0
     a74:	e9 f7       	brne	.-6      	; 0xa70 <Transmit+0x1e>
     a76:	31 97       	sbiw	r30, 0x01	; 1
     a78:	e8 1b       	sub	r30, r24
     a7a:	f9 0b       	sbc	r31, r25
     a7c:	2e 17       	cp	r18, r30
     a7e:	3f 07       	cpc	r19, r31
     a80:	80 f3       	brcs	.-32     	; 0xa62 <Transmit+0x10>
    {
        while(!(UCSRA&(1<<UDRE))) {}    // wait ready of port
      	UDR = data[i];
  	}
}
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	08 95       	ret

00000a88 <_fpadd_parts>:
     a88:	a0 e0       	ldi	r26, 0x00	; 0
     a8a:	b0 e0       	ldi	r27, 0x00	; 0
     a8c:	e9 e4       	ldi	r30, 0x49	; 73
     a8e:	f5 e0       	ldi	r31, 0x05	; 5
     a90:	1d c6       	rjmp	.+3130   	; 0x16cc <__prologue_saves__+0x8>
     a92:	fc 01       	movw	r30, r24
     a94:	ea 01       	movw	r28, r20
     a96:	80 81       	ld	r24, Z
     a98:	82 30       	cpi	r24, 0x02	; 2
     a9a:	08 f4       	brcc	.+2      	; 0xa9e <_fpadd_parts+0x16>
     a9c:	38 c1       	rjmp	.+624    	; 0xd0e <_fpadd_parts+0x286>
     a9e:	db 01       	movw	r26, r22
     aa0:	9c 91       	ld	r25, X
     aa2:	92 30       	cpi	r25, 0x02	; 2
     aa4:	08 f4       	brcc	.+2      	; 0xaa8 <_fpadd_parts+0x20>
     aa6:	30 c1       	rjmp	.+608    	; 0xd08 <_fpadd_parts+0x280>
     aa8:	84 30       	cpi	r24, 0x04	; 4
     aaa:	59 f4       	brne	.+22     	; 0xac2 <_fpadd_parts+0x3a>
     aac:	94 30       	cpi	r25, 0x04	; 4
     aae:	09 f0       	breq	.+2      	; 0xab2 <_fpadd_parts+0x2a>
     ab0:	2e c1       	rjmp	.+604    	; 0xd0e <_fpadd_parts+0x286>
     ab2:	91 81       	ldd	r25, Z+1	; 0x01
     ab4:	11 96       	adiw	r26, 0x01	; 1
     ab6:	8c 91       	ld	r24, X
     ab8:	11 97       	sbiw	r26, 0x01	; 1
     aba:	98 17       	cp	r25, r24
     abc:	09 f0       	breq	.+2      	; 0xac0 <_fpadd_parts+0x38>
     abe:	21 c1       	rjmp	.+578    	; 0xd02 <_fpadd_parts+0x27a>
     ac0:	26 c1       	rjmp	.+588    	; 0xd0e <_fpadd_parts+0x286>
     ac2:	94 30       	cpi	r25, 0x04	; 4
     ac4:	09 f4       	brne	.+2      	; 0xac8 <_fpadd_parts+0x40>
     ac6:	20 c1       	rjmp	.+576    	; 0xd08 <_fpadd_parts+0x280>
     ac8:	92 30       	cpi	r25, 0x02	; 2
     aca:	b1 f4       	brne	.+44     	; 0xaf8 <_fpadd_parts+0x70>
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	09 f0       	breq	.+2      	; 0xad2 <_fpadd_parts+0x4a>
     ad0:	1e c1       	rjmp	.+572    	; 0xd0e <_fpadd_parts+0x286>
     ad2:	ca 01       	movw	r24, r20
     ad4:	af 01       	movw	r20, r30
     ad6:	28 e0       	ldi	r18, 0x08	; 8
     ad8:	da 01       	movw	r26, r20
     ada:	0d 90       	ld	r0, X+
     adc:	ad 01       	movw	r20, r26
     ade:	dc 01       	movw	r26, r24
     ae0:	0d 92       	st	X+, r0
     ae2:	cd 01       	movw	r24, r26
     ae4:	21 50       	subi	r18, 0x01	; 1
     ae6:	c1 f7       	brne	.-16     	; 0xad8 <_fpadd_parts+0x50>
     ae8:	db 01       	movw	r26, r22
     aea:	11 96       	adiw	r26, 0x01	; 1
     aec:	8c 91       	ld	r24, X
     aee:	11 97       	sbiw	r26, 0x01	; 1
     af0:	91 81       	ldd	r25, Z+1	; 0x01
     af2:	89 23       	and	r24, r25
     af4:	89 83       	std	Y+1, r24	; 0x01
     af6:	0a c1       	rjmp	.+532    	; 0xd0c <_fpadd_parts+0x284>
     af8:	82 30       	cpi	r24, 0x02	; 2
     afa:	09 f4       	brne	.+2      	; 0xafe <_fpadd_parts+0x76>
     afc:	05 c1       	rjmp	.+522    	; 0xd08 <_fpadd_parts+0x280>
     afe:	c2 80       	ldd	r12, Z+2	; 0x02
     b00:	d3 80       	ldd	r13, Z+3	; 0x03
     b02:	db 01       	movw	r26, r22
     b04:	12 96       	adiw	r26, 0x02	; 2
     b06:	6d 90       	ld	r6, X+
     b08:	7c 90       	ld	r7, X
     b0a:	13 97       	sbiw	r26, 0x03	; 3
     b0c:	24 81       	ldd	r18, Z+4	; 0x04
     b0e:	35 81       	ldd	r19, Z+5	; 0x05
     b10:	46 81       	ldd	r20, Z+6	; 0x06
     b12:	57 81       	ldd	r21, Z+7	; 0x07
     b14:	14 96       	adiw	r26, 0x04	; 4
     b16:	ed 90       	ld	r14, X+
     b18:	fd 90       	ld	r15, X+
     b1a:	0d 91       	ld	r16, X+
     b1c:	1c 91       	ld	r17, X
     b1e:	17 97       	sbiw	r26, 0x07	; 7
     b20:	c6 01       	movw	r24, r12
     b22:	86 19       	sub	r24, r6
     b24:	97 09       	sbc	r25, r7
     b26:	5c 01       	movw	r10, r24
     b28:	97 ff       	sbrs	r25, 7
     b2a:	04 c0       	rjmp	.+8      	; 0xb34 <_fpadd_parts+0xac>
     b2c:	aa 24       	eor	r10, r10
     b2e:	bb 24       	eor	r11, r11
     b30:	a8 1a       	sub	r10, r24
     b32:	b9 0a       	sbc	r11, r25
     b34:	b0 e2       	ldi	r27, 0x20	; 32
     b36:	ab 16       	cp	r10, r27
     b38:	b1 04       	cpc	r11, r1
     b3a:	0c f0       	brlt	.+2      	; 0xb3e <_fpadd_parts+0xb6>
     b3c:	61 c0       	rjmp	.+194    	; 0xc00 <_fpadd_parts+0x178>
     b3e:	18 16       	cp	r1, r24
     b40:	19 06       	cpc	r1, r25
     b42:	6c f5       	brge	.+90     	; 0xb9e <_fpadd_parts+0x116>
     b44:	37 01       	movw	r6, r14
     b46:	48 01       	movw	r8, r16
     b48:	0a 2c       	mov	r0, r10
     b4a:	04 c0       	rjmp	.+8      	; 0xb54 <_fpadd_parts+0xcc>
     b4c:	96 94       	lsr	r9
     b4e:	87 94       	ror	r8
     b50:	77 94       	ror	r7
     b52:	67 94       	ror	r6
     b54:	0a 94       	dec	r0
     b56:	d2 f7       	brpl	.-12     	; 0xb4c <_fpadd_parts+0xc4>
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	a0 e0       	ldi	r26, 0x00	; 0
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	0a 2c       	mov	r0, r10
     b62:	04 c0       	rjmp	.+8      	; 0xb6c <_fpadd_parts+0xe4>
     b64:	88 0f       	add	r24, r24
     b66:	99 1f       	adc	r25, r25
     b68:	aa 1f       	adc	r26, r26
     b6a:	bb 1f       	adc	r27, r27
     b6c:	0a 94       	dec	r0
     b6e:	d2 f7       	brpl	.-12     	; 0xb64 <_fpadd_parts+0xdc>
     b70:	01 97       	sbiw	r24, 0x01	; 1
     b72:	a1 09       	sbc	r26, r1
     b74:	b1 09       	sbc	r27, r1
     b76:	8e 21       	and	r24, r14
     b78:	9f 21       	and	r25, r15
     b7a:	a0 23       	and	r26, r16
     b7c:	b1 23       	and	r27, r17
     b7e:	ee 24       	eor	r14, r14
     b80:	ff 24       	eor	r15, r15
     b82:	87 01       	movw	r16, r14
     b84:	e3 94       	inc	r14
     b86:	00 97       	sbiw	r24, 0x00	; 0
     b88:	a1 05       	cpc	r26, r1
     b8a:	b1 05       	cpc	r27, r1
     b8c:	19 f4       	brne	.+6      	; 0xb94 <_fpadd_parts+0x10c>
     b8e:	ee 24       	eor	r14, r14
     b90:	ff 24       	eor	r15, r15
     b92:	87 01       	movw	r16, r14
     b94:	e6 28       	or	r14, r6
     b96:	f7 28       	or	r15, r7
     b98:	08 29       	or	r16, r8
     b9a:	19 29       	or	r17, r9
     b9c:	3c c0       	rjmp	.+120    	; 0xc16 <_fpadd_parts+0x18e>
     b9e:	00 97       	sbiw	r24, 0x00	; 0
     ba0:	d1 f1       	breq	.+116    	; 0xc16 <_fpadd_parts+0x18e>
     ba2:	ca 0c       	add	r12, r10
     ba4:	db 1c       	adc	r13, r11
     ba6:	39 01       	movw	r6, r18
     ba8:	4a 01       	movw	r8, r20
     baa:	0a 2c       	mov	r0, r10
     bac:	04 c0       	rjmp	.+8      	; 0xbb6 <_fpadd_parts+0x12e>
     bae:	96 94       	lsr	r9
     bb0:	87 94       	ror	r8
     bb2:	77 94       	ror	r7
     bb4:	67 94       	ror	r6
     bb6:	0a 94       	dec	r0
     bb8:	d2 f7       	brpl	.-12     	; 0xbae <_fpadd_parts+0x126>
     bba:	81 e0       	ldi	r24, 0x01	; 1
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	a0 e0       	ldi	r26, 0x00	; 0
     bc0:	b0 e0       	ldi	r27, 0x00	; 0
     bc2:	0a 2c       	mov	r0, r10
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <_fpadd_parts+0x146>
     bc6:	88 0f       	add	r24, r24
     bc8:	99 1f       	adc	r25, r25
     bca:	aa 1f       	adc	r26, r26
     bcc:	bb 1f       	adc	r27, r27
     bce:	0a 94       	dec	r0
     bd0:	d2 f7       	brpl	.-12     	; 0xbc6 <_fpadd_parts+0x13e>
     bd2:	01 97       	sbiw	r24, 0x01	; 1
     bd4:	a1 09       	sbc	r26, r1
     bd6:	b1 09       	sbc	r27, r1
     bd8:	82 23       	and	r24, r18
     bda:	93 23       	and	r25, r19
     bdc:	a4 23       	and	r26, r20
     bde:	b5 23       	and	r27, r21
     be0:	21 e0       	ldi	r18, 0x01	; 1
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	40 e0       	ldi	r20, 0x00	; 0
     be6:	50 e0       	ldi	r21, 0x00	; 0
     be8:	00 97       	sbiw	r24, 0x00	; 0
     bea:	a1 05       	cpc	r26, r1
     bec:	b1 05       	cpc	r27, r1
     bee:	19 f4       	brne	.+6      	; 0xbf6 <_fpadd_parts+0x16e>
     bf0:	20 e0       	ldi	r18, 0x00	; 0
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	a9 01       	movw	r20, r18
     bf6:	26 29       	or	r18, r6
     bf8:	37 29       	or	r19, r7
     bfa:	48 29       	or	r20, r8
     bfc:	59 29       	or	r21, r9
     bfe:	0b c0       	rjmp	.+22     	; 0xc16 <_fpadd_parts+0x18e>
     c00:	6c 14       	cp	r6, r12
     c02:	7d 04       	cpc	r7, r13
     c04:	24 f4       	brge	.+8      	; 0xc0e <_fpadd_parts+0x186>
     c06:	ee 24       	eor	r14, r14
     c08:	ff 24       	eor	r15, r15
     c0a:	87 01       	movw	r16, r14
     c0c:	04 c0       	rjmp	.+8      	; 0xc16 <_fpadd_parts+0x18e>
     c0e:	63 01       	movw	r12, r6
     c10:	20 e0       	ldi	r18, 0x00	; 0
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	a9 01       	movw	r20, r18
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	fb 01       	movw	r30, r22
     c1a:	91 81       	ldd	r25, Z+1	; 0x01
     c1c:	89 17       	cp	r24, r25
     c1e:	09 f4       	brne	.+2      	; 0xc22 <_fpadd_parts+0x19a>
     c20:	45 c0       	rjmp	.+138    	; 0xcac <_fpadd_parts+0x224>
     c22:	88 23       	and	r24, r24
     c24:	49 f0       	breq	.+18     	; 0xc38 <_fpadd_parts+0x1b0>
     c26:	d8 01       	movw	r26, r16
     c28:	c7 01       	movw	r24, r14
     c2a:	82 1b       	sub	r24, r18
     c2c:	93 0b       	sbc	r25, r19
     c2e:	a4 0b       	sbc	r26, r20
     c30:	b5 0b       	sbc	r27, r21
     c32:	9c 01       	movw	r18, r24
     c34:	ad 01       	movw	r20, r26
     c36:	04 c0       	rjmp	.+8      	; 0xc40 <_fpadd_parts+0x1b8>
     c38:	2e 19       	sub	r18, r14
     c3a:	3f 09       	sbc	r19, r15
     c3c:	40 0b       	sbc	r20, r16
     c3e:	51 0b       	sbc	r21, r17
     c40:	57 fd       	sbrc	r21, 7
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <_fpadd_parts+0x1c4>
     c44:	19 82       	std	Y+1, r1	; 0x01
     c46:	db 82       	std	Y+3, r13	; 0x03
     c48:	ca 82       	std	Y+2, r12	; 0x02
     c4a:	0b c0       	rjmp	.+22     	; 0xc62 <_fpadd_parts+0x1da>
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	89 83       	std	Y+1, r24	; 0x01
     c50:	db 82       	std	Y+3, r13	; 0x03
     c52:	ca 82       	std	Y+2, r12	; 0x02
     c54:	50 95       	com	r21
     c56:	40 95       	com	r20
     c58:	30 95       	com	r19
     c5a:	21 95       	neg	r18
     c5c:	3f 4f       	sbci	r19, 0xFF	; 255
     c5e:	4f 4f       	sbci	r20, 0xFF	; 255
     c60:	5f 4f       	sbci	r21, 0xFF	; 255
     c62:	2c 83       	std	Y+4, r18	; 0x04
     c64:	3d 83       	std	Y+5, r19	; 0x05
     c66:	4e 83       	std	Y+6, r20	; 0x06
     c68:	5f 83       	std	Y+7, r21	; 0x07
     c6a:	0d c0       	rjmp	.+26     	; 0xc86 <_fpadd_parts+0x1fe>
     c6c:	88 0f       	add	r24, r24
     c6e:	99 1f       	adc	r25, r25
     c70:	aa 1f       	adc	r26, r26
     c72:	bb 1f       	adc	r27, r27
     c74:	8c 83       	std	Y+4, r24	; 0x04
     c76:	9d 83       	std	Y+5, r25	; 0x05
     c78:	ae 83       	std	Y+6, r26	; 0x06
     c7a:	bf 83       	std	Y+7, r27	; 0x07
     c7c:	8a 81       	ldd	r24, Y+2	; 0x02
     c7e:	9b 81       	ldd	r25, Y+3	; 0x03
     c80:	01 97       	sbiw	r24, 0x01	; 1
     c82:	9b 83       	std	Y+3, r25	; 0x03
     c84:	8a 83       	std	Y+2, r24	; 0x02
     c86:	8c 81       	ldd	r24, Y+4	; 0x04
     c88:	9d 81       	ldd	r25, Y+5	; 0x05
     c8a:	ae 81       	ldd	r26, Y+6	; 0x06
     c8c:	bf 81       	ldd	r27, Y+7	; 0x07
     c8e:	9c 01       	movw	r18, r24
     c90:	ad 01       	movw	r20, r26
     c92:	21 50       	subi	r18, 0x01	; 1
     c94:	30 40       	sbci	r19, 0x00	; 0
     c96:	40 40       	sbci	r20, 0x00	; 0
     c98:	50 40       	sbci	r21, 0x00	; 0
     c9a:	2f 3f       	cpi	r18, 0xFF	; 255
     c9c:	ef ef       	ldi	r30, 0xFF	; 255
     c9e:	3e 07       	cpc	r19, r30
     ca0:	ef ef       	ldi	r30, 0xFF	; 255
     ca2:	4e 07       	cpc	r20, r30
     ca4:	ef e3       	ldi	r30, 0x3F	; 63
     ca6:	5e 07       	cpc	r21, r30
     ca8:	08 f3       	brcs	.-62     	; 0xc6c <_fpadd_parts+0x1e4>
     caa:	0b c0       	rjmp	.+22     	; 0xcc2 <_fpadd_parts+0x23a>
     cac:	89 83       	std	Y+1, r24	; 0x01
     cae:	db 82       	std	Y+3, r13	; 0x03
     cb0:	ca 82       	std	Y+2, r12	; 0x02
     cb2:	2e 0d       	add	r18, r14
     cb4:	3f 1d       	adc	r19, r15
     cb6:	40 1f       	adc	r20, r16
     cb8:	51 1f       	adc	r21, r17
     cba:	2c 83       	std	Y+4, r18	; 0x04
     cbc:	3d 83       	std	Y+5, r19	; 0x05
     cbe:	4e 83       	std	Y+6, r20	; 0x06
     cc0:	5f 83       	std	Y+7, r21	; 0x07
     cc2:	83 e0       	ldi	r24, 0x03	; 3
     cc4:	88 83       	st	Y, r24
     cc6:	2c 81       	ldd	r18, Y+4	; 0x04
     cc8:	3d 81       	ldd	r19, Y+5	; 0x05
     cca:	4e 81       	ldd	r20, Y+6	; 0x06
     ccc:	5f 81       	ldd	r21, Y+7	; 0x07
     cce:	57 ff       	sbrs	r21, 7
     cd0:	1d c0       	rjmp	.+58     	; 0xd0c <_fpadd_parts+0x284>
     cd2:	da 01       	movw	r26, r20
     cd4:	c9 01       	movw	r24, r18
     cd6:	81 70       	andi	r24, 0x01	; 1
     cd8:	90 70       	andi	r25, 0x00	; 0
     cda:	a0 70       	andi	r26, 0x00	; 0
     cdc:	b0 70       	andi	r27, 0x00	; 0
     cde:	56 95       	lsr	r21
     ce0:	47 95       	ror	r20
     ce2:	37 95       	ror	r19
     ce4:	27 95       	ror	r18
     ce6:	82 2b       	or	r24, r18
     ce8:	93 2b       	or	r25, r19
     cea:	a4 2b       	or	r26, r20
     cec:	b5 2b       	or	r27, r21
     cee:	8c 83       	std	Y+4, r24	; 0x04
     cf0:	9d 83       	std	Y+5, r25	; 0x05
     cf2:	ae 83       	std	Y+6, r26	; 0x06
     cf4:	bf 83       	std	Y+7, r27	; 0x07
     cf6:	8a 81       	ldd	r24, Y+2	; 0x02
     cf8:	9b 81       	ldd	r25, Y+3	; 0x03
     cfa:	01 96       	adiw	r24, 0x01	; 1
     cfc:	9b 83       	std	Y+3, r25	; 0x03
     cfe:	8a 83       	std	Y+2, r24	; 0x02
     d00:	05 c0       	rjmp	.+10     	; 0xd0c <_fpadd_parts+0x284>
     d02:	eb e9       	ldi	r30, 0x9B	; 155
     d04:	f0 e0       	ldi	r31, 0x00	; 0
     d06:	03 c0       	rjmp	.+6      	; 0xd0e <_fpadd_parts+0x286>
     d08:	fb 01       	movw	r30, r22
     d0a:	01 c0       	rjmp	.+2      	; 0xd0e <_fpadd_parts+0x286>
     d0c:	fe 01       	movw	r30, r28
     d0e:	cf 01       	movw	r24, r30
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	ee e0       	ldi	r30, 0x0E	; 14
     d16:	f6 c4       	rjmp	.+2540   	; 0x1704 <__epilogue_restores__+0x8>

00000d18 <__addsf3>:
     d18:	a0 e2       	ldi	r26, 0x20	; 32
     d1a:	b0 e0       	ldi	r27, 0x00	; 0
     d1c:	e1 e9       	ldi	r30, 0x91	; 145
     d1e:	f6 e0       	ldi	r31, 0x06	; 6
     d20:	dd c4       	rjmp	.+2490   	; 0x16dc <__prologue_saves__+0x18>
     d22:	69 83       	std	Y+1, r22	; 0x01
     d24:	7a 83       	std	Y+2, r23	; 0x02
     d26:	8b 83       	std	Y+3, r24	; 0x03
     d28:	9c 83       	std	Y+4, r25	; 0x04
     d2a:	2d 83       	std	Y+5, r18	; 0x05
     d2c:	3e 83       	std	Y+6, r19	; 0x06
     d2e:	4f 83       	std	Y+7, r20	; 0x07
     d30:	58 87       	std	Y+8, r21	; 0x08
     d32:	89 e0       	ldi	r24, 0x09	; 9
     d34:	e8 2e       	mov	r14, r24
     d36:	f1 2c       	mov	r15, r1
     d38:	ec 0e       	add	r14, r28
     d3a:	fd 1e       	adc	r15, r29
     d3c:	ce 01       	movw	r24, r28
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	b7 01       	movw	r22, r14
     d42:	d7 d3       	rcall	.+1966   	; 0x14f2 <__unpack_f>
     d44:	8e 01       	movw	r16, r28
     d46:	0f 5e       	subi	r16, 0xEF	; 239
     d48:	1f 4f       	sbci	r17, 0xFF	; 255
     d4a:	ce 01       	movw	r24, r28
     d4c:	05 96       	adiw	r24, 0x05	; 5
     d4e:	b8 01       	movw	r22, r16
     d50:	d0 d3       	rcall	.+1952   	; 0x14f2 <__unpack_f>
     d52:	c7 01       	movw	r24, r14
     d54:	b8 01       	movw	r22, r16
     d56:	ae 01       	movw	r20, r28
     d58:	47 5e       	subi	r20, 0xE7	; 231
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	95 de       	rcall	.-726    	; 0xa88 <_fpadd_parts>
     d5e:	fc d2       	rcall	.+1528   	; 0x1358 <__pack_f>
     d60:	a0 96       	adiw	r28, 0x20	; 32
     d62:	e6 e0       	ldi	r30, 0x06	; 6
     d64:	d7 c4       	rjmp	.+2478   	; 0x1714 <__epilogue_restores__+0x18>

00000d66 <__subsf3>:
     d66:	a0 e2       	ldi	r26, 0x20	; 32
     d68:	b0 e0       	ldi	r27, 0x00	; 0
     d6a:	e8 eb       	ldi	r30, 0xB8	; 184
     d6c:	f6 e0       	ldi	r31, 0x06	; 6
     d6e:	b6 c4       	rjmp	.+2412   	; 0x16dc <__prologue_saves__+0x18>
     d70:	69 83       	std	Y+1, r22	; 0x01
     d72:	7a 83       	std	Y+2, r23	; 0x02
     d74:	8b 83       	std	Y+3, r24	; 0x03
     d76:	9c 83       	std	Y+4, r25	; 0x04
     d78:	2d 83       	std	Y+5, r18	; 0x05
     d7a:	3e 83       	std	Y+6, r19	; 0x06
     d7c:	4f 83       	std	Y+7, r20	; 0x07
     d7e:	58 87       	std	Y+8, r21	; 0x08
     d80:	8e 01       	movw	r16, r28
     d82:	07 5f       	subi	r16, 0xF7	; 247
     d84:	1f 4f       	sbci	r17, 0xFF	; 255
     d86:	ce 01       	movw	r24, r28
     d88:	01 96       	adiw	r24, 0x01	; 1
     d8a:	b8 01       	movw	r22, r16
     d8c:	b2 d3       	rcall	.+1892   	; 0x14f2 <__unpack_f>
     d8e:	91 e1       	ldi	r25, 0x11	; 17
     d90:	e9 2e       	mov	r14, r25
     d92:	f1 2c       	mov	r15, r1
     d94:	ec 0e       	add	r14, r28
     d96:	fd 1e       	adc	r15, r29
     d98:	ce 01       	movw	r24, r28
     d9a:	05 96       	adiw	r24, 0x05	; 5
     d9c:	b7 01       	movw	r22, r14
     d9e:	a9 d3       	rcall	.+1874   	; 0x14f2 <__unpack_f>
     da0:	8a 89       	ldd	r24, Y+18	; 0x12
     da2:	91 e0       	ldi	r25, 0x01	; 1
     da4:	89 27       	eor	r24, r25
     da6:	8a 8b       	std	Y+18, r24	; 0x12
     da8:	c8 01       	movw	r24, r16
     daa:	b7 01       	movw	r22, r14
     dac:	ae 01       	movw	r20, r28
     dae:	47 5e       	subi	r20, 0xE7	; 231
     db0:	5f 4f       	sbci	r21, 0xFF	; 255
     db2:	6a de       	rcall	.-812    	; 0xa88 <_fpadd_parts>
     db4:	d1 d2       	rcall	.+1442   	; 0x1358 <__pack_f>
     db6:	a0 96       	adiw	r28, 0x20	; 32
     db8:	e6 e0       	ldi	r30, 0x06	; 6
     dba:	ac c4       	rjmp	.+2392   	; 0x1714 <__epilogue_restores__+0x18>

00000dbc <__mulsf3>:
     dbc:	a0 e2       	ldi	r26, 0x20	; 32
     dbe:	b0 e0       	ldi	r27, 0x00	; 0
     dc0:	e3 ee       	ldi	r30, 0xE3	; 227
     dc2:	f6 e0       	ldi	r31, 0x06	; 6
     dc4:	7f c4       	rjmp	.+2302   	; 0x16c4 <__prologue_saves__>
     dc6:	69 83       	std	Y+1, r22	; 0x01
     dc8:	7a 83       	std	Y+2, r23	; 0x02
     dca:	8b 83       	std	Y+3, r24	; 0x03
     dcc:	9c 83       	std	Y+4, r25	; 0x04
     dce:	2d 83       	std	Y+5, r18	; 0x05
     dd0:	3e 83       	std	Y+6, r19	; 0x06
     dd2:	4f 83       	std	Y+7, r20	; 0x07
     dd4:	58 87       	std	Y+8, r21	; 0x08
     dd6:	ce 01       	movw	r24, r28
     dd8:	01 96       	adiw	r24, 0x01	; 1
     dda:	be 01       	movw	r22, r28
     ddc:	67 5f       	subi	r22, 0xF7	; 247
     dde:	7f 4f       	sbci	r23, 0xFF	; 255
     de0:	88 d3       	rcall	.+1808   	; 0x14f2 <__unpack_f>
     de2:	ce 01       	movw	r24, r28
     de4:	05 96       	adiw	r24, 0x05	; 5
     de6:	be 01       	movw	r22, r28
     de8:	6f 5e       	subi	r22, 0xEF	; 239
     dea:	7f 4f       	sbci	r23, 0xFF	; 255
     dec:	82 d3       	rcall	.+1796   	; 0x14f2 <__unpack_f>
     dee:	99 85       	ldd	r25, Y+9	; 0x09
     df0:	92 30       	cpi	r25, 0x02	; 2
     df2:	78 f0       	brcs	.+30     	; 0xe12 <__mulsf3+0x56>
     df4:	89 89       	ldd	r24, Y+17	; 0x11
     df6:	82 30       	cpi	r24, 0x02	; 2
     df8:	c0 f0       	brcs	.+48     	; 0xe2a <__mulsf3+0x6e>
     dfa:	94 30       	cpi	r25, 0x04	; 4
     dfc:	19 f4       	brne	.+6      	; 0xe04 <__mulsf3+0x48>
     dfe:	82 30       	cpi	r24, 0x02	; 2
     e00:	41 f4       	brne	.+16     	; 0xe12 <__mulsf3+0x56>
     e02:	cb c0       	rjmp	.+406    	; 0xf9a <__mulsf3+0x1de>
     e04:	84 30       	cpi	r24, 0x04	; 4
     e06:	19 f4       	brne	.+6      	; 0xe0e <__mulsf3+0x52>
     e08:	92 30       	cpi	r25, 0x02	; 2
     e0a:	79 f4       	brne	.+30     	; 0xe2a <__mulsf3+0x6e>
     e0c:	c6 c0       	rjmp	.+396    	; 0xf9a <__mulsf3+0x1de>
     e0e:	92 30       	cpi	r25, 0x02	; 2
     e10:	51 f4       	brne	.+20     	; 0xe26 <__mulsf3+0x6a>
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	2a 85       	ldd	r18, Y+10	; 0x0a
     e16:	9a 89       	ldd	r25, Y+18	; 0x12
     e18:	29 17       	cp	r18, r25
     e1a:	09 f4       	brne	.+2      	; 0xe1e <__mulsf3+0x62>
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	8a 87       	std	Y+10, r24	; 0x0a
     e20:	ce 01       	movw	r24, r28
     e22:	09 96       	adiw	r24, 0x09	; 9
     e24:	bc c0       	rjmp	.+376    	; 0xf9e <__mulsf3+0x1e2>
     e26:	82 30       	cpi	r24, 0x02	; 2
     e28:	51 f4       	brne	.+20     	; 0xe3e <__mulsf3+0x82>
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	2a 85       	ldd	r18, Y+10	; 0x0a
     e2e:	9a 89       	ldd	r25, Y+18	; 0x12
     e30:	29 17       	cp	r18, r25
     e32:	09 f4       	brne	.+2      	; 0xe36 <__mulsf3+0x7a>
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	8a 8b       	std	Y+18, r24	; 0x12
     e38:	ce 01       	movw	r24, r28
     e3a:	41 96       	adiw	r24, 0x11	; 17
     e3c:	b0 c0       	rjmp	.+352    	; 0xf9e <__mulsf3+0x1e2>
     e3e:	6d 84       	ldd	r6, Y+13	; 0x0d
     e40:	7e 84       	ldd	r7, Y+14	; 0x0e
     e42:	8f 84       	ldd	r8, Y+15	; 0x0f
     e44:	98 88       	ldd	r9, Y+16	; 0x10
     e46:	ed 88       	ldd	r14, Y+21	; 0x15
     e48:	fe 88       	ldd	r15, Y+22	; 0x16
     e4a:	0f 89       	ldd	r16, Y+23	; 0x17
     e4c:	18 8d       	ldd	r17, Y+24	; 0x18
     e4e:	e0 e2       	ldi	r30, 0x20	; 32
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	80 e0       	ldi	r24, 0x00	; 0
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	dc 01       	movw	r26, r24
     e58:	aa 24       	eor	r10, r10
     e5a:	bb 24       	eor	r11, r11
     e5c:	65 01       	movw	r12, r10
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	a9 01       	movw	r20, r18
     e64:	b3 01       	movw	r22, r6
     e66:	61 70       	andi	r22, 0x01	; 1
     e68:	70 70       	andi	r23, 0x00	; 0
     e6a:	61 15       	cp	r22, r1
     e6c:	71 05       	cpc	r23, r1
     e6e:	d1 f0       	breq	.+52     	; 0xea4 <__mulsf3+0xe8>
     e70:	2e 0d       	add	r18, r14
     e72:	3f 1d       	adc	r19, r15
     e74:	40 1f       	adc	r20, r16
     e76:	51 1f       	adc	r21, r17
     e78:	15 01       	movw	r2, r10
     e7a:	26 01       	movw	r4, r12
     e7c:	28 0e       	add	r2, r24
     e7e:	39 1e       	adc	r3, r25
     e80:	4a 1e       	adc	r4, r26
     e82:	5b 1e       	adc	r5, r27
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	a0 e0       	ldi	r26, 0x00	; 0
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	2e 15       	cp	r18, r14
     e8e:	3f 05       	cpc	r19, r15
     e90:	40 07       	cpc	r20, r16
     e92:	51 07       	cpc	r21, r17
     e94:	18 f0       	brcs	.+6      	; 0xe9c <__mulsf3+0xe0>
     e96:	80 e0       	ldi	r24, 0x00	; 0
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	dc 01       	movw	r26, r24
     e9c:	82 0d       	add	r24, r2
     e9e:	93 1d       	adc	r25, r3
     ea0:	a4 1d       	adc	r26, r4
     ea2:	b5 1d       	adc	r27, r5
     ea4:	aa 0c       	add	r10, r10
     ea6:	bb 1c       	adc	r11, r11
     ea8:	cc 1c       	adc	r12, r12
     eaa:	dd 1c       	adc	r13, r13
     eac:	17 ff       	sbrs	r17, 7
     eae:	09 c0       	rjmp	.+18     	; 0xec2 <__mulsf3+0x106>
     eb0:	61 e0       	ldi	r22, 0x01	; 1
     eb2:	26 2e       	mov	r2, r22
     eb4:	31 2c       	mov	r3, r1
     eb6:	41 2c       	mov	r4, r1
     eb8:	51 2c       	mov	r5, r1
     eba:	a2 28       	or	r10, r2
     ebc:	b3 28       	or	r11, r3
     ebe:	c4 28       	or	r12, r4
     ec0:	d5 28       	or	r13, r5
     ec2:	31 97       	sbiw	r30, 0x01	; 1
     ec4:	49 f0       	breq	.+18     	; 0xed8 <__mulsf3+0x11c>
     ec6:	ee 0c       	add	r14, r14
     ec8:	ff 1c       	adc	r15, r15
     eca:	00 1f       	adc	r16, r16
     ecc:	11 1f       	adc	r17, r17
     ece:	96 94       	lsr	r9
     ed0:	87 94       	ror	r8
     ed2:	77 94       	ror	r7
     ed4:	67 94       	ror	r6
     ed6:	c6 cf       	rjmp	.-116    	; 0xe64 <__mulsf3+0xa8>
     ed8:	6b 89       	ldd	r22, Y+19	; 0x13
     eda:	7c 89       	ldd	r23, Y+20	; 0x14
     edc:	eb 85       	ldd	r30, Y+11	; 0x0b
     ede:	fc 85       	ldd	r31, Y+12	; 0x0c
     ee0:	6e 0f       	add	r22, r30
     ee2:	7f 1f       	adc	r23, r31
     ee4:	6e 5f       	subi	r22, 0xFE	; 254
     ee6:	7f 4f       	sbci	r23, 0xFF	; 255
     ee8:	7c 8f       	std	Y+28, r23	; 0x1c
     eea:	6b 8f       	std	Y+27, r22	; 0x1b
     eec:	61 e0       	ldi	r22, 0x01	; 1
     eee:	ea 85       	ldd	r30, Y+10	; 0x0a
     ef0:	7a 89       	ldd	r23, Y+18	; 0x12
     ef2:	e7 17       	cp	r30, r23
     ef4:	09 f4       	brne	.+2      	; 0xef8 <__mulsf3+0x13c>
     ef6:	60 e0       	ldi	r22, 0x00	; 0
     ef8:	6a 8f       	std	Y+26, r22	; 0x1a
     efa:	6b 8d       	ldd	r22, Y+27	; 0x1b
     efc:	7c 8d       	ldd	r23, Y+28	; 0x1c
     efe:	10 c0       	rjmp	.+32     	; 0xf20 <__mulsf3+0x164>
     f00:	fc 01       	movw	r30, r24
     f02:	e1 70       	andi	r30, 0x01	; 1
     f04:	f0 70       	andi	r31, 0x00	; 0
     f06:	30 97       	sbiw	r30, 0x00	; 0
     f08:	29 f0       	breq	.+10     	; 0xf14 <__mulsf3+0x158>
     f0a:	56 95       	lsr	r21
     f0c:	47 95       	ror	r20
     f0e:	37 95       	ror	r19
     f10:	27 95       	ror	r18
     f12:	50 68       	ori	r21, 0x80	; 128
     f14:	b6 95       	lsr	r27
     f16:	a7 95       	ror	r26
     f18:	97 95       	ror	r25
     f1a:	87 95       	ror	r24
     f1c:	6f 5f       	subi	r22, 0xFF	; 255
     f1e:	7f 4f       	sbci	r23, 0xFF	; 255
     f20:	b7 fd       	sbrc	r27, 7
     f22:	ee cf       	rjmp	.-36     	; 0xf00 <__mulsf3+0x144>
     f24:	0c c0       	rjmp	.+24     	; 0xf3e <__mulsf3+0x182>
     f26:	88 0f       	add	r24, r24
     f28:	99 1f       	adc	r25, r25
     f2a:	aa 1f       	adc	r26, r26
     f2c:	bb 1f       	adc	r27, r27
     f2e:	57 fd       	sbrc	r21, 7
     f30:	81 60       	ori	r24, 0x01	; 1
     f32:	22 0f       	add	r18, r18
     f34:	33 1f       	adc	r19, r19
     f36:	44 1f       	adc	r20, r20
     f38:	55 1f       	adc	r21, r21
     f3a:	61 50       	subi	r22, 0x01	; 1
     f3c:	70 40       	sbci	r23, 0x00	; 0
     f3e:	80 30       	cpi	r24, 0x00	; 0
     f40:	e0 e0       	ldi	r30, 0x00	; 0
     f42:	9e 07       	cpc	r25, r30
     f44:	e0 e0       	ldi	r30, 0x00	; 0
     f46:	ae 07       	cpc	r26, r30
     f48:	e0 e4       	ldi	r30, 0x40	; 64
     f4a:	be 07       	cpc	r27, r30
     f4c:	60 f3       	brcs	.-40     	; 0xf26 <__mulsf3+0x16a>
     f4e:	6b 8f       	std	Y+27, r22	; 0x1b
     f50:	7c 8f       	std	Y+28, r23	; 0x1c
     f52:	6f e7       	ldi	r22, 0x7F	; 127
     f54:	e6 2e       	mov	r14, r22
     f56:	f1 2c       	mov	r15, r1
     f58:	01 2d       	mov	r16, r1
     f5a:	11 2d       	mov	r17, r1
     f5c:	e8 22       	and	r14, r24
     f5e:	f9 22       	and	r15, r25
     f60:	0a 23       	and	r16, r26
     f62:	1b 23       	and	r17, r27
     f64:	60 e4       	ldi	r22, 0x40	; 64
     f66:	e6 16       	cp	r14, r22
     f68:	f1 04       	cpc	r15, r1
     f6a:	01 05       	cpc	r16, r1
     f6c:	11 05       	cpc	r17, r1
     f6e:	61 f4       	brne	.+24     	; 0xf88 <__mulsf3+0x1cc>
     f70:	87 fd       	sbrc	r24, 7
     f72:	0a c0       	rjmp	.+20     	; 0xf88 <__mulsf3+0x1cc>
     f74:	21 15       	cp	r18, r1
     f76:	31 05       	cpc	r19, r1
     f78:	41 05       	cpc	r20, r1
     f7a:	51 05       	cpc	r21, r1
     f7c:	29 f0       	breq	.+10     	; 0xf88 <__mulsf3+0x1cc>
     f7e:	80 5c       	subi	r24, 0xC0	; 192
     f80:	9f 4f       	sbci	r25, 0xFF	; 255
     f82:	af 4f       	sbci	r26, 0xFF	; 255
     f84:	bf 4f       	sbci	r27, 0xFF	; 255
     f86:	80 78       	andi	r24, 0x80	; 128
     f88:	8d 8f       	std	Y+29, r24	; 0x1d
     f8a:	9e 8f       	std	Y+30, r25	; 0x1e
     f8c:	af 8f       	std	Y+31, r26	; 0x1f
     f8e:	b8 a3       	std	Y+32, r27	; 0x20
     f90:	83 e0       	ldi	r24, 0x03	; 3
     f92:	89 8f       	std	Y+25, r24	; 0x19
     f94:	ce 01       	movw	r24, r28
     f96:	49 96       	adiw	r24, 0x19	; 25
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <__mulsf3+0x1e2>
     f9a:	8b e9       	ldi	r24, 0x9B	; 155
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	dc d1       	rcall	.+952    	; 0x1358 <__pack_f>
     fa0:	a0 96       	adiw	r28, 0x20	; 32
     fa2:	e2 e1       	ldi	r30, 0x12	; 18
     fa4:	ab c3       	rjmp	.+1878   	; 0x16fc <__epilogue_restores__>

00000fa6 <__divsf3>:
     fa6:	a8 e1       	ldi	r26, 0x18	; 24
     fa8:	b0 e0       	ldi	r27, 0x00	; 0
     faa:	e8 ed       	ldi	r30, 0xD8	; 216
     fac:	f7 e0       	ldi	r31, 0x07	; 7
     fae:	92 c3       	rjmp	.+1828   	; 0x16d4 <__prologue_saves__+0x10>
     fb0:	69 83       	std	Y+1, r22	; 0x01
     fb2:	7a 83       	std	Y+2, r23	; 0x02
     fb4:	8b 83       	std	Y+3, r24	; 0x03
     fb6:	9c 83       	std	Y+4, r25	; 0x04
     fb8:	2d 83       	std	Y+5, r18	; 0x05
     fba:	3e 83       	std	Y+6, r19	; 0x06
     fbc:	4f 83       	std	Y+7, r20	; 0x07
     fbe:	58 87       	std	Y+8, r21	; 0x08
     fc0:	8e 01       	movw	r16, r28
     fc2:	07 5f       	subi	r16, 0xF7	; 247
     fc4:	1f 4f       	sbci	r17, 0xFF	; 255
     fc6:	ce 01       	movw	r24, r28
     fc8:	01 96       	adiw	r24, 0x01	; 1
     fca:	b8 01       	movw	r22, r16
     fcc:	92 d2       	rcall	.+1316   	; 0x14f2 <__unpack_f>
     fce:	81 e1       	ldi	r24, 0x11	; 17
     fd0:	e8 2e       	mov	r14, r24
     fd2:	f1 2c       	mov	r15, r1
     fd4:	ec 0e       	add	r14, r28
     fd6:	fd 1e       	adc	r15, r29
     fd8:	ce 01       	movw	r24, r28
     fda:	05 96       	adiw	r24, 0x05	; 5
     fdc:	b7 01       	movw	r22, r14
     fde:	89 d2       	rcall	.+1298   	; 0x14f2 <__unpack_f>
     fe0:	99 85       	ldd	r25, Y+9	; 0x09
     fe2:	92 30       	cpi	r25, 0x02	; 2
     fe4:	08 f4       	brcc	.+2      	; 0xfe8 <__divsf3+0x42>
     fe6:	83 c0       	rjmp	.+262    	; 0x10ee <__divsf3+0x148>
     fe8:	89 89       	ldd	r24, Y+17	; 0x11
     fea:	82 30       	cpi	r24, 0x02	; 2
     fec:	08 f4       	brcc	.+2      	; 0xff0 <__divsf3+0x4a>
     fee:	7b c0       	rjmp	.+246    	; 0x10e6 <__divsf3+0x140>
     ff0:	2a 85       	ldd	r18, Y+10	; 0x0a
     ff2:	3a 89       	ldd	r19, Y+18	; 0x12
     ff4:	23 27       	eor	r18, r19
     ff6:	2a 87       	std	Y+10, r18	; 0x0a
     ff8:	94 30       	cpi	r25, 0x04	; 4
     ffa:	11 f0       	breq	.+4      	; 0x1000 <__divsf3+0x5a>
     ffc:	92 30       	cpi	r25, 0x02	; 2
     ffe:	21 f4       	brne	.+8      	; 0x1008 <__divsf3+0x62>
    1000:	98 17       	cp	r25, r24
    1002:	09 f0       	breq	.+2      	; 0x1006 <__divsf3+0x60>
    1004:	6c c0       	rjmp	.+216    	; 0x10de <__divsf3+0x138>
    1006:	71 c0       	rjmp	.+226    	; 0x10ea <__divsf3+0x144>
    1008:	84 30       	cpi	r24, 0x04	; 4
    100a:	39 f4       	brne	.+14     	; 0x101a <__divsf3+0x74>
    100c:	1d 86       	std	Y+13, r1	; 0x0d
    100e:	1e 86       	std	Y+14, r1	; 0x0e
    1010:	1f 86       	std	Y+15, r1	; 0x0f
    1012:	18 8a       	std	Y+16, r1	; 0x10
    1014:	1c 86       	std	Y+12, r1	; 0x0c
    1016:	1b 86       	std	Y+11, r1	; 0x0b
    1018:	6a c0       	rjmp	.+212    	; 0x10ee <__divsf3+0x148>
    101a:	82 30       	cpi	r24, 0x02	; 2
    101c:	19 f4       	brne	.+6      	; 0x1024 <__divsf3+0x7e>
    101e:	84 e0       	ldi	r24, 0x04	; 4
    1020:	89 87       	std	Y+9, r24	; 0x09
    1022:	65 c0       	rjmp	.+202    	; 0x10ee <__divsf3+0x148>
    1024:	8b 85       	ldd	r24, Y+11	; 0x0b
    1026:	9c 85       	ldd	r25, Y+12	; 0x0c
    1028:	2b 89       	ldd	r18, Y+19	; 0x13
    102a:	3c 89       	ldd	r19, Y+20	; 0x14
    102c:	82 1b       	sub	r24, r18
    102e:	93 0b       	sbc	r25, r19
    1030:	9c 87       	std	Y+12, r25	; 0x0c
    1032:	8b 87       	std	Y+11, r24	; 0x0b
    1034:	2d 85       	ldd	r18, Y+13	; 0x0d
    1036:	3e 85       	ldd	r19, Y+14	; 0x0e
    1038:	4f 85       	ldd	r20, Y+15	; 0x0f
    103a:	58 89       	ldd	r21, Y+16	; 0x10
    103c:	ed 88       	ldd	r14, Y+21	; 0x15
    103e:	fe 88       	ldd	r15, Y+22	; 0x16
    1040:	0f 89       	ldd	r16, Y+23	; 0x17
    1042:	18 8d       	ldd	r17, Y+24	; 0x18
    1044:	2e 15       	cp	r18, r14
    1046:	3f 05       	cpc	r19, r15
    1048:	40 07       	cpc	r20, r16
    104a:	51 07       	cpc	r21, r17
    104c:	38 f4       	brcc	.+14     	; 0x105c <__divsf3+0xb6>
    104e:	22 0f       	add	r18, r18
    1050:	33 1f       	adc	r19, r19
    1052:	44 1f       	adc	r20, r20
    1054:	55 1f       	adc	r21, r21
    1056:	01 97       	sbiw	r24, 0x01	; 1
    1058:	9c 87       	std	Y+12, r25	; 0x0c
    105a:	8b 87       	std	Y+11, r24	; 0x0b
    105c:	6f e1       	ldi	r22, 0x1F	; 31
    105e:	70 e0       	ldi	r23, 0x00	; 0
    1060:	a1 2c       	mov	r10, r1
    1062:	b1 2c       	mov	r11, r1
    1064:	c1 2c       	mov	r12, r1
    1066:	a0 e4       	ldi	r26, 0x40	; 64
    1068:	da 2e       	mov	r13, r26
    106a:	80 e0       	ldi	r24, 0x00	; 0
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	dc 01       	movw	r26, r24
    1070:	2e 15       	cp	r18, r14
    1072:	3f 05       	cpc	r19, r15
    1074:	40 07       	cpc	r20, r16
    1076:	51 07       	cpc	r21, r17
    1078:	40 f0       	brcs	.+16     	; 0x108a <__divsf3+0xe4>
    107a:	8a 29       	or	r24, r10
    107c:	9b 29       	or	r25, r11
    107e:	ac 29       	or	r26, r12
    1080:	bd 29       	or	r27, r13
    1082:	2e 19       	sub	r18, r14
    1084:	3f 09       	sbc	r19, r15
    1086:	40 0b       	sbc	r20, r16
    1088:	51 0b       	sbc	r21, r17
    108a:	d6 94       	lsr	r13
    108c:	c7 94       	ror	r12
    108e:	b7 94       	ror	r11
    1090:	a7 94       	ror	r10
    1092:	22 0f       	add	r18, r18
    1094:	33 1f       	adc	r19, r19
    1096:	44 1f       	adc	r20, r20
    1098:	55 1f       	adc	r21, r21
    109a:	61 50       	subi	r22, 0x01	; 1
    109c:	70 40       	sbci	r23, 0x00	; 0
    109e:	41 f7       	brne	.-48     	; 0x1070 <__divsf3+0xca>
    10a0:	6f e7       	ldi	r22, 0x7F	; 127
    10a2:	e6 2e       	mov	r14, r22
    10a4:	f1 2c       	mov	r15, r1
    10a6:	01 2d       	mov	r16, r1
    10a8:	11 2d       	mov	r17, r1
    10aa:	e8 22       	and	r14, r24
    10ac:	f9 22       	and	r15, r25
    10ae:	0a 23       	and	r16, r26
    10b0:	1b 23       	and	r17, r27
    10b2:	60 e4       	ldi	r22, 0x40	; 64
    10b4:	e6 16       	cp	r14, r22
    10b6:	f1 04       	cpc	r15, r1
    10b8:	01 05       	cpc	r16, r1
    10ba:	11 05       	cpc	r17, r1
    10bc:	61 f4       	brne	.+24     	; 0x10d6 <__divsf3+0x130>
    10be:	87 fd       	sbrc	r24, 7
    10c0:	0a c0       	rjmp	.+20     	; 0x10d6 <__divsf3+0x130>
    10c2:	21 15       	cp	r18, r1
    10c4:	31 05       	cpc	r19, r1
    10c6:	41 05       	cpc	r20, r1
    10c8:	51 05       	cpc	r21, r1
    10ca:	29 f0       	breq	.+10     	; 0x10d6 <__divsf3+0x130>
    10cc:	80 5c       	subi	r24, 0xC0	; 192
    10ce:	9f 4f       	sbci	r25, 0xFF	; 255
    10d0:	af 4f       	sbci	r26, 0xFF	; 255
    10d2:	bf 4f       	sbci	r27, 0xFF	; 255
    10d4:	80 78       	andi	r24, 0x80	; 128
    10d6:	8d 87       	std	Y+13, r24	; 0x0d
    10d8:	9e 87       	std	Y+14, r25	; 0x0e
    10da:	af 87       	std	Y+15, r26	; 0x0f
    10dc:	b8 8b       	std	Y+16, r27	; 0x10
    10de:	8e 01       	movw	r16, r28
    10e0:	07 5f       	subi	r16, 0xF7	; 247
    10e2:	1f 4f       	sbci	r17, 0xFF	; 255
    10e4:	04 c0       	rjmp	.+8      	; 0x10ee <__divsf3+0x148>
    10e6:	87 01       	movw	r16, r14
    10e8:	02 c0       	rjmp	.+4      	; 0x10ee <__divsf3+0x148>
    10ea:	0b e9       	ldi	r16, 0x9B	; 155
    10ec:	10 e0       	ldi	r17, 0x00	; 0
    10ee:	c8 01       	movw	r24, r16
    10f0:	33 d1       	rcall	.+614    	; 0x1358 <__pack_f>
    10f2:	68 96       	adiw	r28, 0x18	; 24
    10f4:	ea e0       	ldi	r30, 0x0A	; 10
    10f6:	0a c3       	rjmp	.+1556   	; 0x170c <__epilogue_restores__+0x10>

000010f8 <__lesf2>:
    10f8:	a8 e1       	ldi	r26, 0x18	; 24
    10fa:	b0 e0       	ldi	r27, 0x00	; 0
    10fc:	e1 e8       	ldi	r30, 0x81	; 129
    10fe:	f8 e0       	ldi	r31, 0x08	; 8
    1100:	ed c2       	rjmp	.+1498   	; 0x16dc <__prologue_saves__+0x18>
    1102:	69 83       	std	Y+1, r22	; 0x01
    1104:	7a 83       	std	Y+2, r23	; 0x02
    1106:	8b 83       	std	Y+3, r24	; 0x03
    1108:	9c 83       	std	Y+4, r25	; 0x04
    110a:	2d 83       	std	Y+5, r18	; 0x05
    110c:	3e 83       	std	Y+6, r19	; 0x06
    110e:	4f 83       	std	Y+7, r20	; 0x07
    1110:	58 87       	std	Y+8, r21	; 0x08
    1112:	8e 01       	movw	r16, r28
    1114:	07 5f       	subi	r16, 0xF7	; 247
    1116:	1f 4f       	sbci	r17, 0xFF	; 255
    1118:	ce 01       	movw	r24, r28
    111a:	01 96       	adiw	r24, 0x01	; 1
    111c:	b8 01       	movw	r22, r16
    111e:	e9 d1       	rcall	.+978    	; 0x14f2 <__unpack_f>
    1120:	81 e1       	ldi	r24, 0x11	; 17
    1122:	e8 2e       	mov	r14, r24
    1124:	f1 2c       	mov	r15, r1
    1126:	ec 0e       	add	r14, r28
    1128:	fd 1e       	adc	r15, r29
    112a:	ce 01       	movw	r24, r28
    112c:	05 96       	adiw	r24, 0x05	; 5
    112e:	b7 01       	movw	r22, r14
    1130:	e0 d1       	rcall	.+960    	; 0x14f2 <__unpack_f>
    1132:	89 85       	ldd	r24, Y+9	; 0x09
    1134:	82 30       	cpi	r24, 0x02	; 2
    1136:	38 f0       	brcs	.+14     	; 0x1146 <__lesf2+0x4e>
    1138:	89 89       	ldd	r24, Y+17	; 0x11
    113a:	82 30       	cpi	r24, 0x02	; 2
    113c:	20 f0       	brcs	.+8      	; 0x1146 <__lesf2+0x4e>
    113e:	c8 01       	movw	r24, r16
    1140:	b7 01       	movw	r22, r14
    1142:	40 d2       	rcall	.+1152   	; 0x15c4 <__fpcmp_parts_f>
    1144:	01 c0       	rjmp	.+2      	; 0x1148 <__lesf2+0x50>
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	68 96       	adiw	r28, 0x18	; 24
    114a:	e6 e0       	ldi	r30, 0x06	; 6
    114c:	e3 c2       	rjmp	.+1478   	; 0x1714 <__epilogue_restores__+0x18>

0000114e <__floatsisf>:
    114e:	a8 e0       	ldi	r26, 0x08	; 8
    1150:	b0 e0       	ldi	r27, 0x00	; 0
    1152:	ec ea       	ldi	r30, 0xAC	; 172
    1154:	f8 e0       	ldi	r31, 0x08	; 8
    1156:	c2 c2       	rjmp	.+1412   	; 0x16dc <__prologue_saves__+0x18>
    1158:	7b 01       	movw	r14, r22
    115a:	8c 01       	movw	r16, r24
    115c:	83 e0       	ldi	r24, 0x03	; 3
    115e:	89 83       	std	Y+1, r24	; 0x01
    1160:	d8 01       	movw	r26, r16
    1162:	c7 01       	movw	r24, r14
    1164:	88 27       	eor	r24, r24
    1166:	b7 fd       	sbrc	r27, 7
    1168:	83 95       	inc	r24
    116a:	99 27       	eor	r25, r25
    116c:	aa 27       	eor	r26, r26
    116e:	bb 27       	eor	r27, r27
    1170:	28 2f       	mov	r18, r24
    1172:	8a 83       	std	Y+2, r24	; 0x02
    1174:	e1 14       	cp	r14, r1
    1176:	f1 04       	cpc	r15, r1
    1178:	01 05       	cpc	r16, r1
    117a:	11 05       	cpc	r17, r1
    117c:	19 f4       	brne	.+6      	; 0x1184 <__floatsisf+0x36>
    117e:	82 e0       	ldi	r24, 0x02	; 2
    1180:	89 83       	std	Y+1, r24	; 0x01
    1182:	36 c0       	rjmp	.+108    	; 0x11f0 <__floatsisf+0xa2>
    1184:	8e e1       	ldi	r24, 0x1E	; 30
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	9c 83       	std	Y+4, r25	; 0x04
    118a:	8b 83       	std	Y+3, r24	; 0x03
    118c:	22 23       	and	r18, r18
    118e:	89 f0       	breq	.+34     	; 0x11b2 <__floatsisf+0x64>
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	e8 16       	cp	r14, r24
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	f8 06       	cpc	r15, r24
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	08 07       	cpc	r16, r24
    119c:	80 e8       	ldi	r24, 0x80	; 128
    119e:	18 07       	cpc	r17, r24
    11a0:	59 f1       	breq	.+86     	; 0x11f8 <__floatsisf+0xaa>
    11a2:	10 95       	com	r17
    11a4:	00 95       	com	r16
    11a6:	f0 94       	com	r15
    11a8:	e0 94       	com	r14
    11aa:	e1 1c       	adc	r14, r1
    11ac:	f1 1c       	adc	r15, r1
    11ae:	01 1d       	adc	r16, r1
    11b0:	11 1d       	adc	r17, r1
    11b2:	ed 82       	std	Y+5, r14	; 0x05
    11b4:	fe 82       	std	Y+6, r15	; 0x06
    11b6:	0f 83       	std	Y+7, r16	; 0x07
    11b8:	18 87       	std	Y+8, r17	; 0x08
    11ba:	c8 01       	movw	r24, r16
    11bc:	b7 01       	movw	r22, r14
    11be:	72 d0       	rcall	.+228    	; 0x12a4 <__clzsi2>
    11c0:	9c 01       	movw	r18, r24
    11c2:	21 50       	subi	r18, 0x01	; 1
    11c4:	30 40       	sbci	r19, 0x00	; 0
    11c6:	12 16       	cp	r1, r18
    11c8:	13 06       	cpc	r1, r19
    11ca:	94 f4       	brge	.+36     	; 0x11f0 <__floatsisf+0xa2>
    11cc:	02 2e       	mov	r0, r18
    11ce:	04 c0       	rjmp	.+8      	; 0x11d8 <__floatsisf+0x8a>
    11d0:	ee 0c       	add	r14, r14
    11d2:	ff 1c       	adc	r15, r15
    11d4:	00 1f       	adc	r16, r16
    11d6:	11 1f       	adc	r17, r17
    11d8:	0a 94       	dec	r0
    11da:	d2 f7       	brpl	.-12     	; 0x11d0 <__floatsisf+0x82>
    11dc:	ed 82       	std	Y+5, r14	; 0x05
    11de:	fe 82       	std	Y+6, r15	; 0x06
    11e0:	0f 83       	std	Y+7, r16	; 0x07
    11e2:	18 87       	std	Y+8, r17	; 0x08
    11e4:	8e e1       	ldi	r24, 0x1E	; 30
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	82 1b       	sub	r24, r18
    11ea:	93 0b       	sbc	r25, r19
    11ec:	9c 83       	std	Y+4, r25	; 0x04
    11ee:	8b 83       	std	Y+3, r24	; 0x03
    11f0:	ce 01       	movw	r24, r28
    11f2:	01 96       	adiw	r24, 0x01	; 1
    11f4:	b1 d0       	rcall	.+354    	; 0x1358 <__pack_f>
    11f6:	04 c0       	rjmp	.+8      	; 0x1200 <__floatsisf+0xb2>
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	70 e0       	ldi	r23, 0x00	; 0
    11fc:	80 e0       	ldi	r24, 0x00	; 0
    11fe:	9f ec       	ldi	r25, 0xCF	; 207
    1200:	28 96       	adiw	r28, 0x08	; 8
    1202:	e6 e0       	ldi	r30, 0x06	; 6
    1204:	87 c2       	rjmp	.+1294   	; 0x1714 <__epilogue_restores__+0x18>

00001206 <__fixsfsi>:
    1206:	ac e0       	ldi	r26, 0x0C	; 12
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	e8 e0       	ldi	r30, 0x08	; 8
    120c:	f9 e0       	ldi	r31, 0x09	; 9
    120e:	6a c2       	rjmp	.+1236   	; 0x16e4 <__prologue_saves__+0x20>
    1210:	69 83       	std	Y+1, r22	; 0x01
    1212:	7a 83       	std	Y+2, r23	; 0x02
    1214:	8b 83       	std	Y+3, r24	; 0x03
    1216:	9c 83       	std	Y+4, r25	; 0x04
    1218:	ce 01       	movw	r24, r28
    121a:	01 96       	adiw	r24, 0x01	; 1
    121c:	be 01       	movw	r22, r28
    121e:	6b 5f       	subi	r22, 0xFB	; 251
    1220:	7f 4f       	sbci	r23, 0xFF	; 255
    1222:	67 d1       	rcall	.+718    	; 0x14f2 <__unpack_f>
    1224:	8d 81       	ldd	r24, Y+5	; 0x05
    1226:	82 30       	cpi	r24, 0x02	; 2
    1228:	81 f1       	breq	.+96     	; 0x128a <__fixsfsi+0x84>
    122a:	82 30       	cpi	r24, 0x02	; 2
    122c:	70 f1       	brcs	.+92     	; 0x128a <__fixsfsi+0x84>
    122e:	84 30       	cpi	r24, 0x04	; 4
    1230:	21 f4       	brne	.+8      	; 0x123a <__fixsfsi+0x34>
    1232:	8e 81       	ldd	r24, Y+6	; 0x06
    1234:	88 23       	and	r24, r24
    1236:	69 f1       	breq	.+90     	; 0x1292 <__fixsfsi+0x8c>
    1238:	0a c0       	rjmp	.+20     	; 0x124e <__fixsfsi+0x48>
    123a:	2f 81       	ldd	r18, Y+7	; 0x07
    123c:	38 85       	ldd	r19, Y+8	; 0x08
    123e:	37 fd       	sbrc	r19, 7
    1240:	24 c0       	rjmp	.+72     	; 0x128a <__fixsfsi+0x84>
    1242:	6e 81       	ldd	r22, Y+6	; 0x06
    1244:	2f 31       	cpi	r18, 0x1F	; 31
    1246:	31 05       	cpc	r19, r1
    1248:	3c f0       	brlt	.+14     	; 0x1258 <__fixsfsi+0x52>
    124a:	66 23       	and	r22, r22
    124c:	11 f1       	breq	.+68     	; 0x1292 <__fixsfsi+0x8c>
    124e:	20 e0       	ldi	r18, 0x00	; 0
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	40 e0       	ldi	r20, 0x00	; 0
    1254:	50 e8       	ldi	r21, 0x80	; 128
    1256:	21 c0       	rjmp	.+66     	; 0x129a <__fixsfsi+0x94>
    1258:	8e e1       	ldi	r24, 0x1E	; 30
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	82 1b       	sub	r24, r18
    125e:	93 0b       	sbc	r25, r19
    1260:	29 85       	ldd	r18, Y+9	; 0x09
    1262:	3a 85       	ldd	r19, Y+10	; 0x0a
    1264:	4b 85       	ldd	r20, Y+11	; 0x0b
    1266:	5c 85       	ldd	r21, Y+12	; 0x0c
    1268:	04 c0       	rjmp	.+8      	; 0x1272 <__fixsfsi+0x6c>
    126a:	56 95       	lsr	r21
    126c:	47 95       	ror	r20
    126e:	37 95       	ror	r19
    1270:	27 95       	ror	r18
    1272:	8a 95       	dec	r24
    1274:	d2 f7       	brpl	.-12     	; 0x126a <__fixsfsi+0x64>
    1276:	66 23       	and	r22, r22
    1278:	81 f0       	breq	.+32     	; 0x129a <__fixsfsi+0x94>
    127a:	50 95       	com	r21
    127c:	40 95       	com	r20
    127e:	30 95       	com	r19
    1280:	21 95       	neg	r18
    1282:	3f 4f       	sbci	r19, 0xFF	; 255
    1284:	4f 4f       	sbci	r20, 0xFF	; 255
    1286:	5f 4f       	sbci	r21, 0xFF	; 255
    1288:	08 c0       	rjmp	.+16     	; 0x129a <__fixsfsi+0x94>
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	a9 01       	movw	r20, r18
    1290:	04 c0       	rjmp	.+8      	; 0x129a <__fixsfsi+0x94>
    1292:	2f ef       	ldi	r18, 0xFF	; 255
    1294:	3f ef       	ldi	r19, 0xFF	; 255
    1296:	4f ef       	ldi	r20, 0xFF	; 255
    1298:	5f e7       	ldi	r21, 0x7F	; 127
    129a:	b9 01       	movw	r22, r18
    129c:	ca 01       	movw	r24, r20
    129e:	2c 96       	adiw	r28, 0x0c	; 12
    12a0:	e2 e0       	ldi	r30, 0x02	; 2
    12a2:	3c c2       	rjmp	.+1144   	; 0x171c <__epilogue_restores__+0x20>

000012a4 <__clzsi2>:
    12a4:	af 92       	push	r10
    12a6:	bf 92       	push	r11
    12a8:	cf 92       	push	r12
    12aa:	df 92       	push	r13
    12ac:	ef 92       	push	r14
    12ae:	ff 92       	push	r15
    12b0:	0f 93       	push	r16
    12b2:	1f 93       	push	r17
    12b4:	7b 01       	movw	r14, r22
    12b6:	8c 01       	movw	r16, r24
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	e8 16       	cp	r14, r24
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	f8 06       	cpc	r15, r24
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	08 07       	cpc	r16, r24
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	18 07       	cpc	r17, r24
    12c8:	58 f4       	brcc	.+22     	; 0x12e0 <__clzsi2+0x3c>
    12ca:	ef ef       	ldi	r30, 0xFF	; 255
    12cc:	ee 16       	cp	r14, r30
    12ce:	f1 04       	cpc	r15, r1
    12d0:	01 05       	cpc	r16, r1
    12d2:	11 05       	cpc	r17, r1
    12d4:	09 f0       	breq	.+2      	; 0x12d8 <__clzsi2+0x34>
    12d6:	90 f4       	brcc	.+36     	; 0x12fc <__clzsi2+0x58>
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	dc 01       	movw	r26, r24
    12de:	17 c0       	rjmp	.+46     	; 0x130e <__clzsi2+0x6a>
    12e0:	f0 e0       	ldi	r31, 0x00	; 0
    12e2:	ef 16       	cp	r14, r31
    12e4:	f0 e0       	ldi	r31, 0x00	; 0
    12e6:	ff 06       	cpc	r15, r31
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	0f 07       	cpc	r16, r31
    12ec:	f1 e0       	ldi	r31, 0x01	; 1
    12ee:	1f 07       	cpc	r17, r31
    12f0:	50 f4       	brcc	.+20     	; 0x1306 <__clzsi2+0x62>
    12f2:	80 e1       	ldi	r24, 0x10	; 16
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	a0 e0       	ldi	r26, 0x00	; 0
    12f8:	b0 e0       	ldi	r27, 0x00	; 0
    12fa:	09 c0       	rjmp	.+18     	; 0x130e <__clzsi2+0x6a>
    12fc:	88 e0       	ldi	r24, 0x08	; 8
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	a0 e0       	ldi	r26, 0x00	; 0
    1302:	b0 e0       	ldi	r27, 0x00	; 0
    1304:	04 c0       	rjmp	.+8      	; 0x130e <__clzsi2+0x6a>
    1306:	88 e1       	ldi	r24, 0x18	; 24
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	a0 e0       	ldi	r26, 0x00	; 0
    130c:	b0 e0       	ldi	r27, 0x00	; 0
    130e:	20 e2       	ldi	r18, 0x20	; 32
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	40 e0       	ldi	r20, 0x00	; 0
    1314:	50 e0       	ldi	r21, 0x00	; 0
    1316:	28 1b       	sub	r18, r24
    1318:	39 0b       	sbc	r19, r25
    131a:	4a 0b       	sbc	r20, r26
    131c:	5b 0b       	sbc	r21, r27
    131e:	57 01       	movw	r10, r14
    1320:	68 01       	movw	r12, r16
    1322:	04 c0       	rjmp	.+8      	; 0x132c <__clzsi2+0x88>
    1324:	d6 94       	lsr	r13
    1326:	c7 94       	ror	r12
    1328:	b7 94       	ror	r11
    132a:	a7 94       	ror	r10
    132c:	8a 95       	dec	r24
    132e:	d2 f7       	brpl	.-12     	; 0x1324 <__clzsi2+0x80>
    1330:	d6 01       	movw	r26, r12
    1332:	c5 01       	movw	r24, r10
    1334:	8d 55       	subi	r24, 0x5D	; 93
    1336:	9f 4f       	sbci	r25, 0xFF	; 255
    1338:	fc 01       	movw	r30, r24
    133a:	80 81       	ld	r24, Z
    133c:	28 1b       	sub	r18, r24
    133e:	31 09       	sbc	r19, r1
    1340:	41 09       	sbc	r20, r1
    1342:	51 09       	sbc	r21, r1
    1344:	c9 01       	movw	r24, r18
    1346:	1f 91       	pop	r17
    1348:	0f 91       	pop	r16
    134a:	ff 90       	pop	r15
    134c:	ef 90       	pop	r14
    134e:	df 90       	pop	r13
    1350:	cf 90       	pop	r12
    1352:	bf 90       	pop	r11
    1354:	af 90       	pop	r10
    1356:	08 95       	ret

00001358 <__pack_f>:
    1358:	ef 92       	push	r14
    135a:	ff 92       	push	r15
    135c:	0f 93       	push	r16
    135e:	1f 93       	push	r17
    1360:	cf 93       	push	r28
    1362:	df 93       	push	r29
    1364:	fc 01       	movw	r30, r24
    1366:	24 81       	ldd	r18, Z+4	; 0x04
    1368:	35 81       	ldd	r19, Z+5	; 0x05
    136a:	46 81       	ldd	r20, Z+6	; 0x06
    136c:	57 81       	ldd	r21, Z+7	; 0x07
    136e:	61 81       	ldd	r22, Z+1	; 0x01
    1370:	80 81       	ld	r24, Z
    1372:	82 30       	cpi	r24, 0x02	; 2
    1374:	20 f4       	brcc	.+8      	; 0x137e <__pack_f+0x26>
    1376:	40 61       	ori	r20, 0x10	; 16
    1378:	ef ef       	ldi	r30, 0xFF	; 255
    137a:	f0 e0       	ldi	r31, 0x00	; 0
    137c:	a3 c0       	rjmp	.+326    	; 0x14c4 <__pack_f+0x16c>
    137e:	84 30       	cpi	r24, 0x04	; 4
    1380:	09 f4       	brne	.+2      	; 0x1384 <__pack_f+0x2c>
    1382:	9b c0       	rjmp	.+310    	; 0x14ba <__pack_f+0x162>
    1384:	82 30       	cpi	r24, 0x02	; 2
    1386:	09 f4       	brne	.+2      	; 0x138a <__pack_f+0x32>
    1388:	92 c0       	rjmp	.+292    	; 0x14ae <__pack_f+0x156>
    138a:	21 15       	cp	r18, r1
    138c:	31 05       	cpc	r19, r1
    138e:	41 05       	cpc	r20, r1
    1390:	51 05       	cpc	r21, r1
    1392:	09 f4       	brne	.+2      	; 0x1396 <__pack_f+0x3e>
    1394:	8f c0       	rjmp	.+286    	; 0x14b4 <__pack_f+0x15c>
    1396:	02 80       	ldd	r0, Z+2	; 0x02
    1398:	f3 81       	ldd	r31, Z+3	; 0x03
    139a:	e0 2d       	mov	r30, r0
    139c:	8f ef       	ldi	r24, 0xFF	; 255
    139e:	e2 38       	cpi	r30, 0x82	; 130
    13a0:	f8 07       	cpc	r31, r24
    13a2:	0c f0       	brlt	.+2      	; 0x13a6 <__pack_f+0x4e>
    13a4:	5a c0       	rjmp	.+180    	; 0x145a <__pack_f+0x102>
    13a6:	c2 e8       	ldi	r28, 0x82	; 130
    13a8:	df ef       	ldi	r29, 0xFF	; 255
    13aa:	ce 1b       	sub	r28, r30
    13ac:	df 0b       	sbc	r29, r31
    13ae:	ca 31       	cpi	r28, 0x1A	; 26
    13b0:	d1 05       	cpc	r29, r1
    13b2:	6c f5       	brge	.+90     	; 0x140e <__pack_f+0xb6>
    13b4:	79 01       	movw	r14, r18
    13b6:	8a 01       	movw	r16, r20
    13b8:	0c 2e       	mov	r0, r28
    13ba:	04 c0       	rjmp	.+8      	; 0x13c4 <__pack_f+0x6c>
    13bc:	16 95       	lsr	r17
    13be:	07 95       	ror	r16
    13c0:	f7 94       	ror	r15
    13c2:	e7 94       	ror	r14
    13c4:	0a 94       	dec	r0
    13c6:	d2 f7       	brpl	.-12     	; 0x13bc <__pack_f+0x64>
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	a0 e0       	ldi	r26, 0x00	; 0
    13ce:	b0 e0       	ldi	r27, 0x00	; 0
    13d0:	0c 2e       	mov	r0, r28
    13d2:	04 c0       	rjmp	.+8      	; 0x13dc <__pack_f+0x84>
    13d4:	88 0f       	add	r24, r24
    13d6:	99 1f       	adc	r25, r25
    13d8:	aa 1f       	adc	r26, r26
    13da:	bb 1f       	adc	r27, r27
    13dc:	0a 94       	dec	r0
    13de:	d2 f7       	brpl	.-12     	; 0x13d4 <__pack_f+0x7c>
    13e0:	01 97       	sbiw	r24, 0x01	; 1
    13e2:	a1 09       	sbc	r26, r1
    13e4:	b1 09       	sbc	r27, r1
    13e6:	82 23       	and	r24, r18
    13e8:	93 23       	and	r25, r19
    13ea:	a4 23       	and	r26, r20
    13ec:	b5 23       	and	r27, r21
    13ee:	21 e0       	ldi	r18, 0x01	; 1
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	40 e0       	ldi	r20, 0x00	; 0
    13f4:	50 e0       	ldi	r21, 0x00	; 0
    13f6:	00 97       	sbiw	r24, 0x00	; 0
    13f8:	a1 05       	cpc	r26, r1
    13fa:	b1 05       	cpc	r27, r1
    13fc:	19 f4       	brne	.+6      	; 0x1404 <__pack_f+0xac>
    13fe:	20 e0       	ldi	r18, 0x00	; 0
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	a9 01       	movw	r20, r18
    1404:	2e 29       	or	r18, r14
    1406:	3f 29       	or	r19, r15
    1408:	40 2b       	or	r20, r16
    140a:	51 2b       	or	r21, r17
    140c:	03 c0       	rjmp	.+6      	; 0x1414 <__pack_f+0xbc>
    140e:	20 e0       	ldi	r18, 0x00	; 0
    1410:	30 e0       	ldi	r19, 0x00	; 0
    1412:	a9 01       	movw	r20, r18
    1414:	da 01       	movw	r26, r20
    1416:	c9 01       	movw	r24, r18
    1418:	8f 77       	andi	r24, 0x7F	; 127
    141a:	90 70       	andi	r25, 0x00	; 0
    141c:	a0 70       	andi	r26, 0x00	; 0
    141e:	b0 70       	andi	r27, 0x00	; 0
    1420:	80 34       	cpi	r24, 0x40	; 64
    1422:	91 05       	cpc	r25, r1
    1424:	a1 05       	cpc	r26, r1
    1426:	b1 05       	cpc	r27, r1
    1428:	39 f4       	brne	.+14     	; 0x1438 <__pack_f+0xe0>
    142a:	27 ff       	sbrs	r18, 7
    142c:	09 c0       	rjmp	.+18     	; 0x1440 <__pack_f+0xe8>
    142e:	20 5c       	subi	r18, 0xC0	; 192
    1430:	3f 4f       	sbci	r19, 0xFF	; 255
    1432:	4f 4f       	sbci	r20, 0xFF	; 255
    1434:	5f 4f       	sbci	r21, 0xFF	; 255
    1436:	04 c0       	rjmp	.+8      	; 0x1440 <__pack_f+0xe8>
    1438:	21 5c       	subi	r18, 0xC1	; 193
    143a:	3f 4f       	sbci	r19, 0xFF	; 255
    143c:	4f 4f       	sbci	r20, 0xFF	; 255
    143e:	5f 4f       	sbci	r21, 0xFF	; 255
    1440:	e1 e0       	ldi	r30, 0x01	; 1
    1442:	f0 e0       	ldi	r31, 0x00	; 0
    1444:	20 30       	cpi	r18, 0x00	; 0
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	38 07       	cpc	r19, r24
    144a:	80 e0       	ldi	r24, 0x00	; 0
    144c:	48 07       	cpc	r20, r24
    144e:	80 e4       	ldi	r24, 0x40	; 64
    1450:	58 07       	cpc	r21, r24
    1452:	28 f5       	brcc	.+74     	; 0x149e <__pack_f+0x146>
    1454:	e0 e0       	ldi	r30, 0x00	; 0
    1456:	f0 e0       	ldi	r31, 0x00	; 0
    1458:	22 c0       	rjmp	.+68     	; 0x149e <__pack_f+0x146>
    145a:	e0 38       	cpi	r30, 0x80	; 128
    145c:	f1 05       	cpc	r31, r1
    145e:	6c f5       	brge	.+90     	; 0x14ba <__pack_f+0x162>
    1460:	e1 58       	subi	r30, 0x81	; 129
    1462:	ff 4f       	sbci	r31, 0xFF	; 255
    1464:	da 01       	movw	r26, r20
    1466:	c9 01       	movw	r24, r18
    1468:	8f 77       	andi	r24, 0x7F	; 127
    146a:	90 70       	andi	r25, 0x00	; 0
    146c:	a0 70       	andi	r26, 0x00	; 0
    146e:	b0 70       	andi	r27, 0x00	; 0
    1470:	80 34       	cpi	r24, 0x40	; 64
    1472:	91 05       	cpc	r25, r1
    1474:	a1 05       	cpc	r26, r1
    1476:	b1 05       	cpc	r27, r1
    1478:	39 f4       	brne	.+14     	; 0x1488 <__pack_f+0x130>
    147a:	27 ff       	sbrs	r18, 7
    147c:	09 c0       	rjmp	.+18     	; 0x1490 <__pack_f+0x138>
    147e:	20 5c       	subi	r18, 0xC0	; 192
    1480:	3f 4f       	sbci	r19, 0xFF	; 255
    1482:	4f 4f       	sbci	r20, 0xFF	; 255
    1484:	5f 4f       	sbci	r21, 0xFF	; 255
    1486:	04 c0       	rjmp	.+8      	; 0x1490 <__pack_f+0x138>
    1488:	21 5c       	subi	r18, 0xC1	; 193
    148a:	3f 4f       	sbci	r19, 0xFF	; 255
    148c:	4f 4f       	sbci	r20, 0xFF	; 255
    148e:	5f 4f       	sbci	r21, 0xFF	; 255
    1490:	57 ff       	sbrs	r21, 7
    1492:	05 c0       	rjmp	.+10     	; 0x149e <__pack_f+0x146>
    1494:	56 95       	lsr	r21
    1496:	47 95       	ror	r20
    1498:	37 95       	ror	r19
    149a:	27 95       	ror	r18
    149c:	31 96       	adiw	r30, 0x01	; 1
    149e:	87 e0       	ldi	r24, 0x07	; 7
    14a0:	56 95       	lsr	r21
    14a2:	47 95       	ror	r20
    14a4:	37 95       	ror	r19
    14a6:	27 95       	ror	r18
    14a8:	8a 95       	dec	r24
    14aa:	d1 f7       	brne	.-12     	; 0x14a0 <__pack_f+0x148>
    14ac:	0b c0       	rjmp	.+22     	; 0x14c4 <__pack_f+0x16c>
    14ae:	e0 e0       	ldi	r30, 0x00	; 0
    14b0:	f0 e0       	ldi	r31, 0x00	; 0
    14b2:	05 c0       	rjmp	.+10     	; 0x14be <__pack_f+0x166>
    14b4:	e0 e0       	ldi	r30, 0x00	; 0
    14b6:	f0 e0       	ldi	r31, 0x00	; 0
    14b8:	05 c0       	rjmp	.+10     	; 0x14c4 <__pack_f+0x16c>
    14ba:	ef ef       	ldi	r30, 0xFF	; 255
    14bc:	f0 e0       	ldi	r31, 0x00	; 0
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	a9 01       	movw	r20, r18
    14c4:	8e 2f       	mov	r24, r30
    14c6:	87 95       	ror	r24
    14c8:	88 27       	eor	r24, r24
    14ca:	87 95       	ror	r24
    14cc:	94 2f       	mov	r25, r20
    14ce:	9f 77       	andi	r25, 0x7F	; 127
    14d0:	67 95       	ror	r22
    14d2:	66 27       	eor	r22, r22
    14d4:	67 95       	ror	r22
    14d6:	e6 95       	lsr	r30
    14d8:	e2 2e       	mov	r14, r18
    14da:	a9 2f       	mov	r26, r25
    14dc:	a8 2b       	or	r26, r24
    14de:	fe 2f       	mov	r31, r30
    14e0:	f6 2b       	or	r31, r22
    14e2:	62 2f       	mov	r22, r18
    14e4:	73 2f       	mov	r23, r19
    14e6:	8a 2f       	mov	r24, r26
    14e8:	9f 2f       	mov	r25, r31
    14ea:	cd b7       	in	r28, 0x3d	; 61
    14ec:	de b7       	in	r29, 0x3e	; 62
    14ee:	e6 e0       	ldi	r30, 0x06	; 6
    14f0:	11 c1       	rjmp	.+546    	; 0x1714 <__epilogue_restores__+0x18>

000014f2 <__unpack_f>:
    14f2:	dc 01       	movw	r26, r24
    14f4:	fb 01       	movw	r30, r22
    14f6:	2c 91       	ld	r18, X
    14f8:	11 96       	adiw	r26, 0x01	; 1
    14fa:	3c 91       	ld	r19, X
    14fc:	11 97       	sbiw	r26, 0x01	; 1
    14fe:	12 96       	adiw	r26, 0x02	; 2
    1500:	8c 91       	ld	r24, X
    1502:	12 97       	sbiw	r26, 0x02	; 2
    1504:	48 2f       	mov	r20, r24
    1506:	4f 77       	andi	r20, 0x7F	; 127
    1508:	50 e0       	ldi	r21, 0x00	; 0
    150a:	98 2f       	mov	r25, r24
    150c:	99 1f       	adc	r25, r25
    150e:	99 27       	eor	r25, r25
    1510:	99 1f       	adc	r25, r25
    1512:	13 96       	adiw	r26, 0x03	; 3
    1514:	6c 91       	ld	r22, X
    1516:	13 97       	sbiw	r26, 0x03	; 3
    1518:	86 2f       	mov	r24, r22
    151a:	88 0f       	add	r24, r24
    151c:	89 2b       	or	r24, r25
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	66 1f       	adc	r22, r22
    1522:	66 27       	eor	r22, r22
    1524:	66 1f       	adc	r22, r22
    1526:	61 83       	std	Z+1, r22	; 0x01
    1528:	00 97       	sbiw	r24, 0x00	; 0
    152a:	39 f5       	brne	.+78     	; 0x157a <__unpack_f+0x88>
    152c:	21 15       	cp	r18, r1
    152e:	31 05       	cpc	r19, r1
    1530:	41 05       	cpc	r20, r1
    1532:	51 05       	cpc	r21, r1
    1534:	11 f4       	brne	.+4      	; 0x153a <__unpack_f+0x48>
    1536:	82 e0       	ldi	r24, 0x02	; 2
    1538:	29 c0       	rjmp	.+82     	; 0x158c <__unpack_f+0x9a>
    153a:	82 e8       	ldi	r24, 0x82	; 130
    153c:	9f ef       	ldi	r25, 0xFF	; 255
    153e:	93 83       	std	Z+3, r25	; 0x03
    1540:	82 83       	std	Z+2, r24	; 0x02
    1542:	67 e0       	ldi	r22, 0x07	; 7
    1544:	22 0f       	add	r18, r18
    1546:	33 1f       	adc	r19, r19
    1548:	44 1f       	adc	r20, r20
    154a:	55 1f       	adc	r21, r21
    154c:	6a 95       	dec	r22
    154e:	d1 f7       	brne	.-12     	; 0x1544 <__unpack_f+0x52>
    1550:	83 e0       	ldi	r24, 0x03	; 3
    1552:	80 83       	st	Z, r24
    1554:	09 c0       	rjmp	.+18     	; 0x1568 <__unpack_f+0x76>
    1556:	22 0f       	add	r18, r18
    1558:	33 1f       	adc	r19, r19
    155a:	44 1f       	adc	r20, r20
    155c:	55 1f       	adc	r21, r21
    155e:	82 81       	ldd	r24, Z+2	; 0x02
    1560:	93 81       	ldd	r25, Z+3	; 0x03
    1562:	01 97       	sbiw	r24, 0x01	; 1
    1564:	93 83       	std	Z+3, r25	; 0x03
    1566:	82 83       	std	Z+2, r24	; 0x02
    1568:	20 30       	cpi	r18, 0x00	; 0
    156a:	80 e0       	ldi	r24, 0x00	; 0
    156c:	38 07       	cpc	r19, r24
    156e:	80 e0       	ldi	r24, 0x00	; 0
    1570:	48 07       	cpc	r20, r24
    1572:	80 e4       	ldi	r24, 0x40	; 64
    1574:	58 07       	cpc	r21, r24
    1576:	78 f3       	brcs	.-34     	; 0x1556 <__unpack_f+0x64>
    1578:	20 c0       	rjmp	.+64     	; 0x15ba <__unpack_f+0xc8>
    157a:	8f 3f       	cpi	r24, 0xFF	; 255
    157c:	91 05       	cpc	r25, r1
    157e:	79 f4       	brne	.+30     	; 0x159e <__unpack_f+0xac>
    1580:	21 15       	cp	r18, r1
    1582:	31 05       	cpc	r19, r1
    1584:	41 05       	cpc	r20, r1
    1586:	51 05       	cpc	r21, r1
    1588:	19 f4       	brne	.+6      	; 0x1590 <__unpack_f+0x9e>
    158a:	84 e0       	ldi	r24, 0x04	; 4
    158c:	80 83       	st	Z, r24
    158e:	08 95       	ret
    1590:	44 ff       	sbrs	r20, 4
    1592:	03 c0       	rjmp	.+6      	; 0x159a <__unpack_f+0xa8>
    1594:	81 e0       	ldi	r24, 0x01	; 1
    1596:	80 83       	st	Z, r24
    1598:	10 c0       	rjmp	.+32     	; 0x15ba <__unpack_f+0xc8>
    159a:	10 82       	st	Z, r1
    159c:	0e c0       	rjmp	.+28     	; 0x15ba <__unpack_f+0xc8>
    159e:	8f 57       	subi	r24, 0x7F	; 127
    15a0:	90 40       	sbci	r25, 0x00	; 0
    15a2:	93 83       	std	Z+3, r25	; 0x03
    15a4:	82 83       	std	Z+2, r24	; 0x02
    15a6:	83 e0       	ldi	r24, 0x03	; 3
    15a8:	80 83       	st	Z, r24
    15aa:	87 e0       	ldi	r24, 0x07	; 7
    15ac:	22 0f       	add	r18, r18
    15ae:	33 1f       	adc	r19, r19
    15b0:	44 1f       	adc	r20, r20
    15b2:	55 1f       	adc	r21, r21
    15b4:	8a 95       	dec	r24
    15b6:	d1 f7       	brne	.-12     	; 0x15ac <__unpack_f+0xba>
    15b8:	50 64       	ori	r21, 0x40	; 64
    15ba:	24 83       	std	Z+4, r18	; 0x04
    15bc:	35 83       	std	Z+5, r19	; 0x05
    15be:	46 83       	std	Z+6, r20	; 0x06
    15c0:	57 83       	std	Z+7, r21	; 0x07
    15c2:	08 95       	ret

000015c4 <__fpcmp_parts_f>:
    15c4:	fc 01       	movw	r30, r24
    15c6:	db 01       	movw	r26, r22
    15c8:	90 81       	ld	r25, Z
    15ca:	92 30       	cpi	r25, 0x02	; 2
    15cc:	08 f4       	brcc	.+2      	; 0x15d0 <__fpcmp_parts_f+0xc>
    15ce:	49 c0       	rjmp	.+146    	; 0x1662 <__fpcmp_parts_f+0x9e>
    15d0:	8c 91       	ld	r24, X
    15d2:	82 30       	cpi	r24, 0x02	; 2
    15d4:	08 f4       	brcc	.+2      	; 0x15d8 <__fpcmp_parts_f+0x14>
    15d6:	45 c0       	rjmp	.+138    	; 0x1662 <__fpcmp_parts_f+0x9e>
    15d8:	94 30       	cpi	r25, 0x04	; 4
    15da:	51 f4       	brne	.+20     	; 0x15f0 <__fpcmp_parts_f+0x2c>
    15dc:	61 81       	ldd	r22, Z+1	; 0x01
    15de:	84 30       	cpi	r24, 0x04	; 4
    15e0:	b1 f5       	brne	.+108    	; 0x164e <__fpcmp_parts_f+0x8a>
    15e2:	11 96       	adiw	r26, 0x01	; 1
    15e4:	2c 91       	ld	r18, X
    15e6:	11 97       	sbiw	r26, 0x01	; 1
    15e8:	30 e0       	ldi	r19, 0x00	; 0
    15ea:	26 1b       	sub	r18, r22
    15ec:	31 09       	sbc	r19, r1
    15ee:	41 c0       	rjmp	.+130    	; 0x1672 <__fpcmp_parts_f+0xae>
    15f0:	84 30       	cpi	r24, 0x04	; 4
    15f2:	21 f0       	breq	.+8      	; 0x15fc <__fpcmp_parts_f+0x38>
    15f4:	92 30       	cpi	r25, 0x02	; 2
    15f6:	41 f4       	brne	.+16     	; 0x1608 <__fpcmp_parts_f+0x44>
    15f8:	82 30       	cpi	r24, 0x02	; 2
    15fa:	b1 f1       	breq	.+108    	; 0x1668 <__fpcmp_parts_f+0xa4>
    15fc:	11 96       	adiw	r26, 0x01	; 1
    15fe:	8c 91       	ld	r24, X
    1600:	11 97       	sbiw	r26, 0x01	; 1
    1602:	88 23       	and	r24, r24
    1604:	a1 f1       	breq	.+104    	; 0x166e <__fpcmp_parts_f+0xaa>
    1606:	2d c0       	rjmp	.+90     	; 0x1662 <__fpcmp_parts_f+0x9e>
    1608:	61 81       	ldd	r22, Z+1	; 0x01
    160a:	82 30       	cpi	r24, 0x02	; 2
    160c:	01 f1       	breq	.+64     	; 0x164e <__fpcmp_parts_f+0x8a>
    160e:	11 96       	adiw	r26, 0x01	; 1
    1610:	8c 91       	ld	r24, X
    1612:	11 97       	sbiw	r26, 0x01	; 1
    1614:	68 17       	cp	r22, r24
    1616:	d9 f4       	brne	.+54     	; 0x164e <__fpcmp_parts_f+0x8a>
    1618:	22 81       	ldd	r18, Z+2	; 0x02
    161a:	33 81       	ldd	r19, Z+3	; 0x03
    161c:	12 96       	adiw	r26, 0x02	; 2
    161e:	8d 91       	ld	r24, X+
    1620:	9c 91       	ld	r25, X
    1622:	13 97       	sbiw	r26, 0x03	; 3
    1624:	82 17       	cp	r24, r18
    1626:	93 07       	cpc	r25, r19
    1628:	94 f0       	brlt	.+36     	; 0x164e <__fpcmp_parts_f+0x8a>
    162a:	28 17       	cp	r18, r24
    162c:	39 07       	cpc	r19, r25
    162e:	bc f0       	brlt	.+46     	; 0x165e <__fpcmp_parts_f+0x9a>
    1630:	24 81       	ldd	r18, Z+4	; 0x04
    1632:	35 81       	ldd	r19, Z+5	; 0x05
    1634:	46 81       	ldd	r20, Z+6	; 0x06
    1636:	57 81       	ldd	r21, Z+7	; 0x07
    1638:	14 96       	adiw	r26, 0x04	; 4
    163a:	8d 91       	ld	r24, X+
    163c:	9d 91       	ld	r25, X+
    163e:	0d 90       	ld	r0, X+
    1640:	bc 91       	ld	r27, X
    1642:	a0 2d       	mov	r26, r0
    1644:	82 17       	cp	r24, r18
    1646:	93 07       	cpc	r25, r19
    1648:	a4 07       	cpc	r26, r20
    164a:	b5 07       	cpc	r27, r21
    164c:	18 f4       	brcc	.+6      	; 0x1654 <__fpcmp_parts_f+0x90>
    164e:	66 23       	and	r22, r22
    1650:	41 f0       	breq	.+16     	; 0x1662 <__fpcmp_parts_f+0x9e>
    1652:	0d c0       	rjmp	.+26     	; 0x166e <__fpcmp_parts_f+0xaa>
    1654:	28 17       	cp	r18, r24
    1656:	39 07       	cpc	r19, r25
    1658:	4a 07       	cpc	r20, r26
    165a:	5b 07       	cpc	r21, r27
    165c:	28 f4       	brcc	.+10     	; 0x1668 <__fpcmp_parts_f+0xa4>
    165e:	66 23       	and	r22, r22
    1660:	31 f0       	breq	.+12     	; 0x166e <__fpcmp_parts_f+0xaa>
    1662:	21 e0       	ldi	r18, 0x01	; 1
    1664:	30 e0       	ldi	r19, 0x00	; 0
    1666:	05 c0       	rjmp	.+10     	; 0x1672 <__fpcmp_parts_f+0xae>
    1668:	20 e0       	ldi	r18, 0x00	; 0
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	02 c0       	rjmp	.+4      	; 0x1672 <__fpcmp_parts_f+0xae>
    166e:	2f ef       	ldi	r18, 0xFF	; 255
    1670:	3f ef       	ldi	r19, 0xFF	; 255
    1672:	c9 01       	movw	r24, r18
    1674:	08 95       	ret

00001676 <__divmodhi4>:
    1676:	97 fb       	bst	r25, 7
    1678:	09 2e       	mov	r0, r25
    167a:	07 26       	eor	r0, r23
    167c:	0a d0       	rcall	.+20     	; 0x1692 <__divmodhi4_neg1>
    167e:	77 fd       	sbrc	r23, 7
    1680:	04 d0       	rcall	.+8      	; 0x168a <__divmodhi4_neg2>
    1682:	0c d0       	rcall	.+24     	; 0x169c <__udivmodhi4>
    1684:	06 d0       	rcall	.+12     	; 0x1692 <__divmodhi4_neg1>
    1686:	00 20       	and	r0, r0
    1688:	1a f4       	brpl	.+6      	; 0x1690 <__divmodhi4_exit>

0000168a <__divmodhi4_neg2>:
    168a:	70 95       	com	r23
    168c:	61 95       	neg	r22
    168e:	7f 4f       	sbci	r23, 0xFF	; 255

00001690 <__divmodhi4_exit>:
    1690:	08 95       	ret

00001692 <__divmodhi4_neg1>:
    1692:	f6 f7       	brtc	.-4      	; 0x1690 <__divmodhi4_exit>
    1694:	90 95       	com	r25
    1696:	81 95       	neg	r24
    1698:	9f 4f       	sbci	r25, 0xFF	; 255
    169a:	08 95       	ret

0000169c <__udivmodhi4>:
    169c:	aa 1b       	sub	r26, r26
    169e:	bb 1b       	sub	r27, r27
    16a0:	51 e1       	ldi	r21, 0x11	; 17
    16a2:	07 c0       	rjmp	.+14     	; 0x16b2 <__udivmodhi4_ep>

000016a4 <__udivmodhi4_loop>:
    16a4:	aa 1f       	adc	r26, r26
    16a6:	bb 1f       	adc	r27, r27
    16a8:	a6 17       	cp	r26, r22
    16aa:	b7 07       	cpc	r27, r23
    16ac:	10 f0       	brcs	.+4      	; 0x16b2 <__udivmodhi4_ep>
    16ae:	a6 1b       	sub	r26, r22
    16b0:	b7 0b       	sbc	r27, r23

000016b2 <__udivmodhi4_ep>:
    16b2:	88 1f       	adc	r24, r24
    16b4:	99 1f       	adc	r25, r25
    16b6:	5a 95       	dec	r21
    16b8:	a9 f7       	brne	.-22     	; 0x16a4 <__udivmodhi4_loop>
    16ba:	80 95       	com	r24
    16bc:	90 95       	com	r25
    16be:	bc 01       	movw	r22, r24
    16c0:	cd 01       	movw	r24, r26
    16c2:	08 95       	ret

000016c4 <__prologue_saves__>:
    16c4:	2f 92       	push	r2
    16c6:	3f 92       	push	r3
    16c8:	4f 92       	push	r4
    16ca:	5f 92       	push	r5
    16cc:	6f 92       	push	r6
    16ce:	7f 92       	push	r7
    16d0:	8f 92       	push	r8
    16d2:	9f 92       	push	r9
    16d4:	af 92       	push	r10
    16d6:	bf 92       	push	r11
    16d8:	cf 92       	push	r12
    16da:	df 92       	push	r13
    16dc:	ef 92       	push	r14
    16de:	ff 92       	push	r15
    16e0:	0f 93       	push	r16
    16e2:	1f 93       	push	r17
    16e4:	cf 93       	push	r28
    16e6:	df 93       	push	r29
    16e8:	cd b7       	in	r28, 0x3d	; 61
    16ea:	de b7       	in	r29, 0x3e	; 62
    16ec:	ca 1b       	sub	r28, r26
    16ee:	db 0b       	sbc	r29, r27
    16f0:	0f b6       	in	r0, 0x3f	; 63
    16f2:	f8 94       	cli
    16f4:	de bf       	out	0x3e, r29	; 62
    16f6:	0f be       	out	0x3f, r0	; 63
    16f8:	cd bf       	out	0x3d, r28	; 61
    16fa:	09 94       	ijmp

000016fc <__epilogue_restores__>:
    16fc:	2a 88       	ldd	r2, Y+18	; 0x12
    16fe:	39 88       	ldd	r3, Y+17	; 0x11
    1700:	48 88       	ldd	r4, Y+16	; 0x10
    1702:	5f 84       	ldd	r5, Y+15	; 0x0f
    1704:	6e 84       	ldd	r6, Y+14	; 0x0e
    1706:	7d 84       	ldd	r7, Y+13	; 0x0d
    1708:	8c 84       	ldd	r8, Y+12	; 0x0c
    170a:	9b 84       	ldd	r9, Y+11	; 0x0b
    170c:	aa 84       	ldd	r10, Y+10	; 0x0a
    170e:	b9 84       	ldd	r11, Y+9	; 0x09
    1710:	c8 84       	ldd	r12, Y+8	; 0x08
    1712:	df 80       	ldd	r13, Y+7	; 0x07
    1714:	ee 80       	ldd	r14, Y+6	; 0x06
    1716:	fd 80       	ldd	r15, Y+5	; 0x05
    1718:	0c 81       	ldd	r16, Y+4	; 0x04
    171a:	1b 81       	ldd	r17, Y+3	; 0x03
    171c:	aa 81       	ldd	r26, Y+2	; 0x02
    171e:	b9 81       	ldd	r27, Y+1	; 0x01
    1720:	ce 0f       	add	r28, r30
    1722:	d1 1d       	adc	r29, r1
    1724:	0f b6       	in	r0, 0x3f	; 63
    1726:	f8 94       	cli
    1728:	de bf       	out	0x3e, r29	; 62
    172a:	0f be       	out	0x3f, r0	; 63
    172c:	cd bf       	out	0x3d, r28	; 61
    172e:	ed 01       	movw	r28, r26
    1730:	08 95       	ret

00001732 <dtostrf>:
    1732:	ef 92       	push	r14
    1734:	ff 92       	push	r15
    1736:	0f 93       	push	r16
    1738:	1f 93       	push	r17
    173a:	32 2f       	mov	r19, r18
    173c:	f0 2e       	mov	r15, r16
    173e:	47 ff       	sbrs	r20, 7
    1740:	02 c0       	rjmp	.+4      	; 0x1746 <dtostrf+0x14>
    1742:	a4 e1       	ldi	r26, 0x14	; 20
    1744:	01 c0       	rjmp	.+2      	; 0x1748 <dtostrf+0x16>
    1746:	a4 e0       	ldi	r26, 0x04	; 4
    1748:	e4 2f       	mov	r30, r20
    174a:	ff 27       	eor	r31, r31
    174c:	e7 fd       	sbrc	r30, 7
    174e:	f0 95       	com	r31
    1750:	f7 ff       	sbrs	r31, 7
    1752:	03 c0       	rjmp	.+6      	; 0x175a <dtostrf+0x28>
    1754:	f0 95       	com	r31
    1756:	e1 95       	neg	r30
    1758:	ff 4f       	sbci	r31, 0xFF	; 255
    175a:	4f 2d       	mov	r20, r15
    175c:	51 2f       	mov	r21, r17
    175e:	2e 2f       	mov	r18, r30
    1760:	03 2f       	mov	r16, r19
    1762:	ea 2e       	mov	r14, r26
    1764:	07 d0       	rcall	.+14     	; 0x1774 <dtoa_prf>
    1766:	8f 2d       	mov	r24, r15
    1768:	91 2f       	mov	r25, r17
    176a:	1f 91       	pop	r17
    176c:	0f 91       	pop	r16
    176e:	ff 90       	pop	r15
    1770:	ef 90       	pop	r14
    1772:	08 95       	ret

00001774 <dtoa_prf>:
    1774:	a9 e0       	ldi	r26, 0x09	; 9
    1776:	b0 e0       	ldi	r27, 0x00	; 0
    1778:	ef eb       	ldi	r30, 0xBF	; 191
    177a:	fb e0       	ldi	r31, 0x0B	; 11
    177c:	ab cf       	rjmp	.-170    	; 0x16d4 <__prologue_saves__+0x10>
    177e:	6a 01       	movw	r12, r20
    1780:	f2 2e       	mov	r15, r18
    1782:	10 2f       	mov	r17, r16
    1784:	0c 33       	cpi	r16, 0x3C	; 60
    1786:	18 f4       	brcc	.+6      	; 0x178e <dtoa_prf+0x1a>
    1788:	b0 2e       	mov	r11, r16
    178a:	b3 94       	inc	r11
    178c:	02 c0       	rjmp	.+4      	; 0x1792 <dtoa_prf+0x1e>
    178e:	ec e3       	ldi	r30, 0x3C	; 60
    1790:	be 2e       	mov	r11, r30
    1792:	ae 01       	movw	r20, r28
    1794:	4f 5f       	subi	r20, 0xFF	; 255
    1796:	5f 4f       	sbci	r21, 0xFF	; 255
    1798:	27 e0       	ldi	r18, 0x07	; 7
    179a:	0b 2d       	mov	r16, r11
    179c:	3f d1       	rcall	.+638    	; 0x1a1c <__ftoa_engine>
    179e:	29 81       	ldd	r18, Y+1	; 0x01
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	a9 01       	movw	r20, r18
    17a4:	49 70       	andi	r20, 0x09	; 9
    17a6:	50 70       	andi	r21, 0x00	; 0
    17a8:	41 30       	cpi	r20, 0x01	; 1
    17aa:	51 05       	cpc	r21, r1
    17ac:	31 f0       	breq	.+12     	; 0x17ba <dtoa_prf+0x46>
    17ae:	e1 fc       	sbrc	r14, 1
    17b0:	06 c0       	rjmp	.+12     	; 0x17be <dtoa_prf+0x4a>
    17b2:	e0 fe       	sbrs	r14, 0
    17b4:	06 c0       	rjmp	.+12     	; 0x17c2 <dtoa_prf+0x4e>
    17b6:	e0 e2       	ldi	r30, 0x20	; 32
    17b8:	05 c0       	rjmp	.+10     	; 0x17c4 <dtoa_prf+0x50>
    17ba:	ed e2       	ldi	r30, 0x2D	; 45
    17bc:	03 c0       	rjmp	.+6      	; 0x17c4 <dtoa_prf+0x50>
    17be:	eb e2       	ldi	r30, 0x2B	; 43
    17c0:	01 c0       	rjmp	.+2      	; 0x17c4 <dtoa_prf+0x50>
    17c2:	e0 e0       	ldi	r30, 0x00	; 0
    17c4:	23 ff       	sbrs	r18, 3
    17c6:	37 c0       	rjmp	.+110    	; 0x1836 <dtoa_prf+0xc2>
    17c8:	ee 23       	and	r30, r30
    17ca:	11 f0       	breq	.+4      	; 0x17d0 <dtoa_prf+0x5c>
    17cc:	84 e0       	ldi	r24, 0x04	; 4
    17ce:	01 c0       	rjmp	.+2      	; 0x17d2 <dtoa_prf+0x5e>
    17d0:	83 e0       	ldi	r24, 0x03	; 3
    17d2:	8f 15       	cp	r24, r15
    17d4:	18 f4       	brcc	.+6      	; 0x17dc <dtoa_prf+0x68>
    17d6:	f8 1a       	sub	r15, r24
    17d8:	8f 2d       	mov	r24, r15
    17da:	01 c0       	rjmp	.+2      	; 0x17de <dtoa_prf+0x6a>
    17dc:	80 e0       	ldi	r24, 0x00	; 0
    17de:	e4 fc       	sbrc	r14, 4
    17e0:	0b c0       	rjmp	.+22     	; 0x17f8 <dtoa_prf+0x84>
    17e2:	98 2f       	mov	r25, r24
    17e4:	d6 01       	movw	r26, r12
    17e6:	20 e2       	ldi	r18, 0x20	; 32
    17e8:	02 c0       	rjmp	.+4      	; 0x17ee <dtoa_prf+0x7a>
    17ea:	2d 93       	st	X+, r18
    17ec:	91 50       	subi	r25, 0x01	; 1
    17ee:	99 23       	and	r25, r25
    17f0:	e1 f7       	brne	.-8      	; 0x17ea <dtoa_prf+0x76>
    17f2:	c8 0e       	add	r12, r24
    17f4:	d1 1c       	adc	r13, r1
    17f6:	80 e0       	ldi	r24, 0x00	; 0
    17f8:	ee 23       	and	r30, r30
    17fa:	19 f0       	breq	.+6      	; 0x1802 <dtoa_prf+0x8e>
    17fc:	d6 01       	movw	r26, r12
    17fe:	ed 93       	st	X+, r30
    1800:	6d 01       	movw	r12, r26
    1802:	f6 01       	movw	r30, r12
    1804:	31 96       	adiw	r30, 0x01	; 1
    1806:	e2 fe       	sbrs	r14, 2
    1808:	05 c0       	rjmp	.+10     	; 0x1814 <dtoa_prf+0xa0>
    180a:	9e e4       	ldi	r25, 0x4E	; 78
    180c:	d6 01       	movw	r26, r12
    180e:	9c 93       	st	X, r25
    1810:	21 e4       	ldi	r18, 0x41	; 65
    1812:	04 c0       	rjmp	.+8      	; 0x181c <dtoa_prf+0xa8>
    1814:	9e e6       	ldi	r25, 0x6E	; 110
    1816:	d6 01       	movw	r26, r12
    1818:	9c 93       	st	X, r25
    181a:	21 e6       	ldi	r18, 0x61	; 97
    181c:	11 96       	adiw	r26, 0x01	; 1
    181e:	2c 93       	st	X, r18
    1820:	91 83       	std	Z+1, r25	; 0x01
    1822:	32 96       	adiw	r30, 0x02	; 2
    1824:	98 2f       	mov	r25, r24
    1826:	df 01       	movw	r26, r30
    1828:	20 e2       	ldi	r18, 0x20	; 32
    182a:	02 c0       	rjmp	.+4      	; 0x1830 <dtoa_prf+0xbc>
    182c:	2d 93       	st	X+, r18
    182e:	91 50       	subi	r25, 0x01	; 1
    1830:	99 23       	and	r25, r25
    1832:	e1 f7       	brne	.-8      	; 0x182c <dtoa_prf+0xb8>
    1834:	3d c0       	rjmp	.+122    	; 0x18b0 <dtoa_prf+0x13c>
    1836:	22 ff       	sbrs	r18, 2
    1838:	41 c0       	rjmp	.+130    	; 0x18bc <dtoa_prf+0x148>
    183a:	ee 23       	and	r30, r30
    183c:	11 f0       	breq	.+4      	; 0x1842 <dtoa_prf+0xce>
    183e:	84 e0       	ldi	r24, 0x04	; 4
    1840:	01 c0       	rjmp	.+2      	; 0x1844 <dtoa_prf+0xd0>
    1842:	83 e0       	ldi	r24, 0x03	; 3
    1844:	8f 15       	cp	r24, r15
    1846:	18 f4       	brcc	.+6      	; 0x184e <dtoa_prf+0xda>
    1848:	f8 1a       	sub	r15, r24
    184a:	8f 2d       	mov	r24, r15
    184c:	01 c0       	rjmp	.+2      	; 0x1850 <dtoa_prf+0xdc>
    184e:	80 e0       	ldi	r24, 0x00	; 0
    1850:	e4 fc       	sbrc	r14, 4
    1852:	0b c0       	rjmp	.+22     	; 0x186a <dtoa_prf+0xf6>
    1854:	98 2f       	mov	r25, r24
    1856:	d6 01       	movw	r26, r12
    1858:	20 e2       	ldi	r18, 0x20	; 32
    185a:	02 c0       	rjmp	.+4      	; 0x1860 <dtoa_prf+0xec>
    185c:	2d 93       	st	X+, r18
    185e:	91 50       	subi	r25, 0x01	; 1
    1860:	99 23       	and	r25, r25
    1862:	e1 f7       	brne	.-8      	; 0x185c <dtoa_prf+0xe8>
    1864:	c8 0e       	add	r12, r24
    1866:	d1 1c       	adc	r13, r1
    1868:	80 e0       	ldi	r24, 0x00	; 0
    186a:	ee 23       	and	r30, r30
    186c:	19 f0       	breq	.+6      	; 0x1874 <dtoa_prf+0x100>
    186e:	d6 01       	movw	r26, r12
    1870:	ed 93       	st	X+, r30
    1872:	6d 01       	movw	r12, r26
    1874:	f6 01       	movw	r30, r12
    1876:	31 96       	adiw	r30, 0x01	; 1
    1878:	e2 fe       	sbrs	r14, 2
    187a:	09 c0       	rjmp	.+18     	; 0x188e <dtoa_prf+0x11a>
    187c:	99 e4       	ldi	r25, 0x49	; 73
    187e:	d6 01       	movw	r26, r12
    1880:	9c 93       	st	X, r25
    1882:	9e e4       	ldi	r25, 0x4E	; 78
    1884:	11 96       	adiw	r26, 0x01	; 1
    1886:	9c 93       	st	X, r25
    1888:	11 97       	sbiw	r26, 0x01	; 1
    188a:	96 e4       	ldi	r25, 0x46	; 70
    188c:	07 c0       	rjmp	.+14     	; 0x189c <dtoa_prf+0x128>
    188e:	99 e6       	ldi	r25, 0x69	; 105
    1890:	d6 01       	movw	r26, r12
    1892:	9c 93       	st	X, r25
    1894:	9e e6       	ldi	r25, 0x6E	; 110
    1896:	11 96       	adiw	r26, 0x01	; 1
    1898:	9c 93       	st	X, r25
    189a:	96 e6       	ldi	r25, 0x66	; 102
    189c:	91 83       	std	Z+1, r25	; 0x01
    189e:	32 96       	adiw	r30, 0x02	; 2
    18a0:	98 2f       	mov	r25, r24
    18a2:	df 01       	movw	r26, r30
    18a4:	20 e2       	ldi	r18, 0x20	; 32
    18a6:	02 c0       	rjmp	.+4      	; 0x18ac <dtoa_prf+0x138>
    18a8:	2d 93       	st	X+, r18
    18aa:	91 50       	subi	r25, 0x01	; 1
    18ac:	99 23       	and	r25, r25
    18ae:	e1 f7       	brne	.-8      	; 0x18a8 <dtoa_prf+0x134>
    18b0:	e8 0f       	add	r30, r24
    18b2:	f1 1d       	adc	r31, r1
    18b4:	10 82       	st	Z, r1
    18b6:	2e ef       	ldi	r18, 0xFE	; 254
    18b8:	3f ef       	ldi	r19, 0xFF	; 255
    18ba:	ac c0       	rjmp	.+344    	; 0x1a14 <dtoa_prf+0x2a0>
    18bc:	41 e0       	ldi	r20, 0x01	; 1
    18be:	50 e0       	ldi	r21, 0x00	; 0
    18c0:	ee 23       	and	r30, r30
    18c2:	11 f4       	brne	.+4      	; 0x18c8 <dtoa_prf+0x154>
    18c4:	40 e0       	ldi	r20, 0x00	; 0
    18c6:	50 e0       	ldi	r21, 0x00	; 0
    18c8:	18 16       	cp	r1, r24
    18ca:	19 06       	cpc	r1, r25
    18cc:	24 f4       	brge	.+8      	; 0x18d6 <dtoa_prf+0x162>
    18ce:	bc 01       	movw	r22, r24
    18d0:	6f 5f       	subi	r22, 0xFF	; 255
    18d2:	7f 4f       	sbci	r23, 0xFF	; 255
    18d4:	02 c0       	rjmp	.+4      	; 0x18da <dtoa_prf+0x166>
    18d6:	61 e0       	ldi	r22, 0x01	; 1
    18d8:	70 e0       	ldi	r23, 0x00	; 0
    18da:	64 0f       	add	r22, r20
    18dc:	75 1f       	adc	r23, r21
    18de:	11 23       	and	r17, r17
    18e0:	29 f0       	breq	.+10     	; 0x18ec <dtoa_prf+0x178>
    18e2:	41 2f       	mov	r20, r17
    18e4:	50 e0       	ldi	r21, 0x00	; 0
    18e6:	4f 5f       	subi	r20, 0xFF	; 255
    18e8:	5f 4f       	sbci	r21, 0xFF	; 255
    18ea:	02 c0       	rjmp	.+4      	; 0x18f0 <dtoa_prf+0x17c>
    18ec:	40 e0       	ldi	r20, 0x00	; 0
    18ee:	50 e0       	ldi	r21, 0x00	; 0
    18f0:	46 0f       	add	r20, r22
    18f2:	57 1f       	adc	r21, r23
    18f4:	6f 2d       	mov	r22, r15
    18f6:	70 e0       	ldi	r23, 0x00	; 0
    18f8:	46 17       	cp	r20, r22
    18fa:	57 07       	cpc	r21, r23
    18fc:	1c f4       	brge	.+6      	; 0x1904 <dtoa_prf+0x190>
    18fe:	0f 2d       	mov	r16, r15
    1900:	04 1b       	sub	r16, r20
    1902:	01 c0       	rjmp	.+2      	; 0x1906 <dtoa_prf+0x192>
    1904:	00 e0       	ldi	r16, 0x00	; 0
    1906:	ff 24       	eor	r15, r15
    1908:	a7 01       	movw	r20, r14
    190a:	40 71       	andi	r20, 0x10	; 16
    190c:	50 70       	andi	r21, 0x00	; 0
    190e:	e4 fc       	sbrc	r14, 4
    1910:	0d c0       	rjmp	.+26     	; 0x192c <dtoa_prf+0x1b8>
    1912:	e3 fc       	sbrc	r14, 3
    1914:	0b c0       	rjmp	.+22     	; 0x192c <dtoa_prf+0x1b8>
    1916:	60 2f       	mov	r22, r16
    1918:	d6 01       	movw	r26, r12
    191a:	70 e2       	ldi	r23, 0x20	; 32
    191c:	02 c0       	rjmp	.+4      	; 0x1922 <dtoa_prf+0x1ae>
    191e:	7d 93       	st	X+, r23
    1920:	61 50       	subi	r22, 0x01	; 1
    1922:	66 23       	and	r22, r22
    1924:	e1 f7       	brne	.-8      	; 0x191e <dtoa_prf+0x1aa>
    1926:	c0 0e       	add	r12, r16
    1928:	d1 1c       	adc	r13, r1
    192a:	00 e0       	ldi	r16, 0x00	; 0
    192c:	ee 23       	and	r30, r30
    192e:	19 f0       	breq	.+6      	; 0x1936 <dtoa_prf+0x1c2>
    1930:	d6 01       	movw	r26, r12
    1932:	ed 93       	st	X+, r30
    1934:	6d 01       	movw	r12, r26
    1936:	41 15       	cp	r20, r1
    1938:	51 05       	cpc	r21, r1
    193a:	59 f4       	brne	.+22     	; 0x1952 <dtoa_prf+0x1de>
    193c:	40 2f       	mov	r20, r16
    193e:	f6 01       	movw	r30, r12
    1940:	50 e3       	ldi	r21, 0x30	; 48
    1942:	02 c0       	rjmp	.+4      	; 0x1948 <dtoa_prf+0x1d4>
    1944:	51 93       	st	Z+, r21
    1946:	41 50       	subi	r20, 0x01	; 1
    1948:	44 23       	and	r20, r20
    194a:	e1 f7       	brne	.-8      	; 0x1944 <dtoa_prf+0x1d0>
    194c:	c0 0e       	add	r12, r16
    194e:	d1 1c       	adc	r13, r1
    1950:	00 e0       	ldi	r16, 0x00	; 0
    1952:	b8 0e       	add	r11, r24
    1954:	fa 80       	ldd	r15, Y+2	; 0x02
    1956:	a9 01       	movw	r20, r18
    1958:	40 71       	andi	r20, 0x10	; 16
    195a:	50 70       	andi	r21, 0x00	; 0
    195c:	24 ff       	sbrs	r18, 4
    195e:	04 c0       	rjmp	.+8      	; 0x1968 <dtoa_prf+0x1f4>
    1960:	bf 2d       	mov	r27, r15
    1962:	b1 33       	cpi	r27, 0x31	; 49
    1964:	09 f4       	brne	.+2      	; 0x1968 <dtoa_prf+0x1f4>
    1966:	ba 94       	dec	r11
    1968:	1b 14       	cp	r1, r11
    196a:	2c f4       	brge	.+10     	; 0x1976 <dtoa_prf+0x202>
    196c:	ab 2d       	mov	r26, r11
    196e:	a9 30       	cpi	r26, 0x09	; 9
    1970:	18 f0       	brcs	.+6      	; 0x1978 <dtoa_prf+0x204>
    1972:	a8 e0       	ldi	r26, 0x08	; 8
    1974:	01 c0       	rjmp	.+2      	; 0x1978 <dtoa_prf+0x204>
    1976:	a1 e0       	ldi	r26, 0x01	; 1
    1978:	9c 01       	movw	r18, r24
    197a:	97 ff       	sbrs	r25, 7
    197c:	02 c0       	rjmp	.+4      	; 0x1982 <dtoa_prf+0x20e>
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	bc 01       	movw	r22, r24
    1984:	6f 5f       	subi	r22, 0xFF	; 255
    1986:	7f 4f       	sbci	r23, 0xFF	; 255
    1988:	62 1b       	sub	r22, r18
    198a:	73 0b       	sbc	r23, r19
    198c:	fe 01       	movw	r30, r28
    198e:	31 96       	adiw	r30, 0x01	; 1
    1990:	e6 0f       	add	r30, r22
    1992:	f7 1f       	adc	r31, r23
    1994:	6e e2       	ldi	r22, 0x2E	; 46
    1996:	e6 2e       	mov	r14, r22
    1998:	bc 01       	movw	r22, r24
    199a:	6a 1b       	sub	r22, r26
    199c:	71 09       	sbc	r23, r1
    199e:	a1 2f       	mov	r26, r17
    19a0:	b0 e0       	ldi	r27, 0x00	; 0
    19a2:	aa 24       	eor	r10, r10
    19a4:	bb 24       	eor	r11, r11
    19a6:	aa 1a       	sub	r10, r26
    19a8:	bb 0a       	sbc	r11, r27
    19aa:	1f ef       	ldi	r17, 0xFF	; 255
    19ac:	2f 3f       	cpi	r18, 0xFF	; 255
    19ae:	31 07       	cpc	r19, r17
    19b0:	19 f4       	brne	.+6      	; 0x19b8 <dtoa_prf+0x244>
    19b2:	d6 01       	movw	r26, r12
    19b4:	ed 92       	st	X+, r14
    19b6:	6d 01       	movw	r12, r26
    19b8:	82 17       	cp	r24, r18
    19ba:	93 07       	cpc	r25, r19
    19bc:	2c f0       	brlt	.+10     	; 0x19c8 <dtoa_prf+0x254>
    19be:	62 17       	cp	r22, r18
    19c0:	73 07       	cpc	r23, r19
    19c2:	14 f4       	brge	.+4      	; 0x19c8 <dtoa_prf+0x254>
    19c4:	10 81       	ld	r17, Z
    19c6:	01 c0       	rjmp	.+2      	; 0x19ca <dtoa_prf+0x256>
    19c8:	10 e3       	ldi	r17, 0x30	; 48
    19ca:	21 50       	subi	r18, 0x01	; 1
    19cc:	30 40       	sbci	r19, 0x00	; 0
    19ce:	31 96       	adiw	r30, 0x01	; 1
    19d0:	2a 15       	cp	r18, r10
    19d2:	3b 05       	cpc	r19, r11
    19d4:	24 f0       	brlt	.+8      	; 0x19de <dtoa_prf+0x26a>
    19d6:	d6 01       	movw	r26, r12
    19d8:	1d 93       	st	X+, r17
    19da:	6d 01       	movw	r12, r26
    19dc:	e6 cf       	rjmp	.-52     	; 0x19aa <dtoa_prf+0x236>
    19de:	28 17       	cp	r18, r24
    19e0:	39 07       	cpc	r19, r25
    19e2:	49 f4       	brne	.+18     	; 0x19f6 <dtoa_prf+0x282>
    19e4:	bf 2d       	mov	r27, r15
    19e6:	b6 33       	cpi	r27, 0x36	; 54
    19e8:	28 f4       	brcc	.+10     	; 0x19f4 <dtoa_prf+0x280>
    19ea:	b5 33       	cpi	r27, 0x35	; 53
    19ec:	21 f4       	brne	.+8      	; 0x19f6 <dtoa_prf+0x282>
    19ee:	41 15       	cp	r20, r1
    19f0:	51 05       	cpc	r21, r1
    19f2:	09 f4       	brne	.+2      	; 0x19f6 <dtoa_prf+0x282>
    19f4:	11 e3       	ldi	r17, 0x31	; 49
    19f6:	f6 01       	movw	r30, r12
    19f8:	11 93       	st	Z+, r17
    19fa:	80 2f       	mov	r24, r16
    19fc:	df 01       	movw	r26, r30
    19fe:	90 e2       	ldi	r25, 0x20	; 32
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <dtoa_prf+0x292>
    1a02:	9d 93       	st	X+, r25
    1a04:	81 50       	subi	r24, 0x01	; 1
    1a06:	88 23       	and	r24, r24
    1a08:	e1 f7       	brne	.-8      	; 0x1a02 <dtoa_prf+0x28e>
    1a0a:	e0 0f       	add	r30, r16
    1a0c:	f1 1d       	adc	r31, r1
    1a0e:	10 82       	st	Z, r1
    1a10:	20 e0       	ldi	r18, 0x00	; 0
    1a12:	30 e0       	ldi	r19, 0x00	; 0
    1a14:	c9 01       	movw	r24, r18
    1a16:	29 96       	adiw	r28, 0x09	; 9
    1a18:	ea e0       	ldi	r30, 0x0A	; 10
    1a1a:	78 ce       	rjmp	.-784    	; 0x170c <__epilogue_restores__+0x10>

00001a1c <__ftoa_engine>:
    1a1c:	28 30       	cpi	r18, 0x08	; 8
    1a1e:	08 f0       	brcs	.+2      	; 0x1a22 <__ftoa_engine+0x6>
    1a20:	27 e0       	ldi	r18, 0x07	; 7
    1a22:	33 27       	eor	r19, r19
    1a24:	da 01       	movw	r26, r20
    1a26:	99 0f       	add	r25, r25
    1a28:	31 1d       	adc	r19, r1
    1a2a:	87 fd       	sbrc	r24, 7
    1a2c:	91 60       	ori	r25, 0x01	; 1
    1a2e:	00 96       	adiw	r24, 0x00	; 0
    1a30:	61 05       	cpc	r22, r1
    1a32:	71 05       	cpc	r23, r1
    1a34:	39 f4       	brne	.+14     	; 0x1a44 <__ftoa_engine+0x28>
    1a36:	32 60       	ori	r19, 0x02	; 2
    1a38:	2e 5f       	subi	r18, 0xFE	; 254
    1a3a:	3d 93       	st	X+, r19
    1a3c:	30 e3       	ldi	r19, 0x30	; 48
    1a3e:	2a 95       	dec	r18
    1a40:	e1 f7       	brne	.-8      	; 0x1a3a <__ftoa_engine+0x1e>
    1a42:	08 95       	ret
    1a44:	9f 3f       	cpi	r25, 0xFF	; 255
    1a46:	30 f0       	brcs	.+12     	; 0x1a54 <__ftoa_engine+0x38>
    1a48:	80 38       	cpi	r24, 0x80	; 128
    1a4a:	71 05       	cpc	r23, r1
    1a4c:	61 05       	cpc	r22, r1
    1a4e:	09 f0       	breq	.+2      	; 0x1a52 <__ftoa_engine+0x36>
    1a50:	3c 5f       	subi	r19, 0xFC	; 252
    1a52:	3c 5f       	subi	r19, 0xFC	; 252
    1a54:	3d 93       	st	X+, r19
    1a56:	91 30       	cpi	r25, 0x01	; 1
    1a58:	08 f0       	brcs	.+2      	; 0x1a5c <__ftoa_engine+0x40>
    1a5a:	80 68       	ori	r24, 0x80	; 128
    1a5c:	91 1d       	adc	r25, r1
    1a5e:	df 93       	push	r29
    1a60:	cf 93       	push	r28
    1a62:	1f 93       	push	r17
    1a64:	0f 93       	push	r16
    1a66:	ff 92       	push	r15
    1a68:	ef 92       	push	r14
    1a6a:	19 2f       	mov	r17, r25
    1a6c:	98 7f       	andi	r25, 0xF8	; 248
    1a6e:	96 95       	lsr	r25
    1a70:	e9 2f       	mov	r30, r25
    1a72:	96 95       	lsr	r25
    1a74:	96 95       	lsr	r25
    1a76:	e9 0f       	add	r30, r25
    1a78:	ff 27       	eor	r31, r31
    1a7a:	e4 58       	subi	r30, 0x84	; 132
    1a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a7e:	99 27       	eor	r25, r25
    1a80:	33 27       	eor	r19, r19
    1a82:	ee 24       	eor	r14, r14
    1a84:	ff 24       	eor	r15, r15
    1a86:	a7 01       	movw	r20, r14
    1a88:	e7 01       	movw	r28, r14
    1a8a:	05 90       	lpm	r0, Z+
    1a8c:	08 94       	sec
    1a8e:	07 94       	ror	r0
    1a90:	28 f4       	brcc	.+10     	; 0x1a9c <__ftoa_engine+0x80>
    1a92:	36 0f       	add	r19, r22
    1a94:	e7 1e       	adc	r14, r23
    1a96:	f8 1e       	adc	r15, r24
    1a98:	49 1f       	adc	r20, r25
    1a9a:	51 1d       	adc	r21, r1
    1a9c:	66 0f       	add	r22, r22
    1a9e:	77 1f       	adc	r23, r23
    1aa0:	88 1f       	adc	r24, r24
    1aa2:	99 1f       	adc	r25, r25
    1aa4:	06 94       	lsr	r0
    1aa6:	a1 f7       	brne	.-24     	; 0x1a90 <__ftoa_engine+0x74>
    1aa8:	05 90       	lpm	r0, Z+
    1aaa:	07 94       	ror	r0
    1aac:	28 f4       	brcc	.+10     	; 0x1ab8 <__ftoa_engine+0x9c>
    1aae:	e7 0e       	add	r14, r23
    1ab0:	f8 1e       	adc	r15, r24
    1ab2:	49 1f       	adc	r20, r25
    1ab4:	56 1f       	adc	r21, r22
    1ab6:	c1 1d       	adc	r28, r1
    1ab8:	77 0f       	add	r23, r23
    1aba:	88 1f       	adc	r24, r24
    1abc:	99 1f       	adc	r25, r25
    1abe:	66 1f       	adc	r22, r22
    1ac0:	06 94       	lsr	r0
    1ac2:	a1 f7       	brne	.-24     	; 0x1aac <__ftoa_engine+0x90>
    1ac4:	05 90       	lpm	r0, Z+
    1ac6:	07 94       	ror	r0
    1ac8:	28 f4       	brcc	.+10     	; 0x1ad4 <__ftoa_engine+0xb8>
    1aca:	f8 0e       	add	r15, r24
    1acc:	49 1f       	adc	r20, r25
    1ace:	56 1f       	adc	r21, r22
    1ad0:	c7 1f       	adc	r28, r23
    1ad2:	d1 1d       	adc	r29, r1
    1ad4:	88 0f       	add	r24, r24
    1ad6:	99 1f       	adc	r25, r25
    1ad8:	66 1f       	adc	r22, r22
    1ada:	77 1f       	adc	r23, r23
    1adc:	06 94       	lsr	r0
    1ade:	a1 f7       	brne	.-24     	; 0x1ac8 <__ftoa_engine+0xac>
    1ae0:	05 90       	lpm	r0, Z+
    1ae2:	07 94       	ror	r0
    1ae4:	20 f4       	brcc	.+8      	; 0x1aee <__ftoa_engine+0xd2>
    1ae6:	49 0f       	add	r20, r25
    1ae8:	56 1f       	adc	r21, r22
    1aea:	c7 1f       	adc	r28, r23
    1aec:	d8 1f       	adc	r29, r24
    1aee:	99 0f       	add	r25, r25
    1af0:	66 1f       	adc	r22, r22
    1af2:	77 1f       	adc	r23, r23
    1af4:	88 1f       	adc	r24, r24
    1af6:	06 94       	lsr	r0
    1af8:	a9 f7       	brne	.-22     	; 0x1ae4 <__ftoa_engine+0xc8>
    1afa:	84 91       	lpm	r24, Z+
    1afc:	10 95       	com	r17
    1afe:	17 70       	andi	r17, 0x07	; 7
    1b00:	41 f0       	breq	.+16     	; 0x1b12 <__ftoa_engine+0xf6>
    1b02:	d6 95       	lsr	r29
    1b04:	c7 95       	ror	r28
    1b06:	57 95       	ror	r21
    1b08:	47 95       	ror	r20
    1b0a:	f7 94       	ror	r15
    1b0c:	e7 94       	ror	r14
    1b0e:	1a 95       	dec	r17
    1b10:	c1 f7       	brne	.-16     	; 0x1b02 <__ftoa_engine+0xe6>
    1b12:	e2 e2       	ldi	r30, 0x22	; 34
    1b14:	f0 e0       	ldi	r31, 0x00	; 0
    1b16:	68 94       	set
    1b18:	15 90       	lpm	r1, Z+
    1b1a:	15 91       	lpm	r17, Z+
    1b1c:	35 91       	lpm	r19, Z+
    1b1e:	65 91       	lpm	r22, Z+
    1b20:	95 91       	lpm	r25, Z+
    1b22:	05 90       	lpm	r0, Z+
    1b24:	7f e2       	ldi	r23, 0x2F	; 47
    1b26:	73 95       	inc	r23
    1b28:	e1 18       	sub	r14, r1
    1b2a:	f1 0a       	sbc	r15, r17
    1b2c:	43 0b       	sbc	r20, r19
    1b2e:	56 0b       	sbc	r21, r22
    1b30:	c9 0b       	sbc	r28, r25
    1b32:	d0 09       	sbc	r29, r0
    1b34:	c0 f7       	brcc	.-16     	; 0x1b26 <__ftoa_engine+0x10a>
    1b36:	e1 0c       	add	r14, r1
    1b38:	f1 1e       	adc	r15, r17
    1b3a:	43 1f       	adc	r20, r19
    1b3c:	56 1f       	adc	r21, r22
    1b3e:	c9 1f       	adc	r28, r25
    1b40:	d0 1d       	adc	r29, r0
    1b42:	7e f4       	brtc	.+30     	; 0x1b62 <__ftoa_engine+0x146>
    1b44:	70 33       	cpi	r23, 0x30	; 48
    1b46:	11 f4       	brne	.+4      	; 0x1b4c <__ftoa_engine+0x130>
    1b48:	8a 95       	dec	r24
    1b4a:	e6 cf       	rjmp	.-52     	; 0x1b18 <__ftoa_engine+0xfc>
    1b4c:	e8 94       	clt
    1b4e:	01 50       	subi	r16, 0x01	; 1
    1b50:	30 f0       	brcs	.+12     	; 0x1b5e <__ftoa_engine+0x142>
    1b52:	08 0f       	add	r16, r24
    1b54:	0a f4       	brpl	.+2      	; 0x1b58 <__ftoa_engine+0x13c>
    1b56:	00 27       	eor	r16, r16
    1b58:	02 17       	cp	r16, r18
    1b5a:	08 f4       	brcc	.+2      	; 0x1b5e <__ftoa_engine+0x142>
    1b5c:	20 2f       	mov	r18, r16
    1b5e:	23 95       	inc	r18
    1b60:	02 2f       	mov	r16, r18
    1b62:	7a 33       	cpi	r23, 0x3A	; 58
    1b64:	28 f0       	brcs	.+10     	; 0x1b70 <__ftoa_engine+0x154>
    1b66:	79 e3       	ldi	r23, 0x39	; 57
    1b68:	7d 93       	st	X+, r23
    1b6a:	2a 95       	dec	r18
    1b6c:	e9 f7       	brne	.-6      	; 0x1b68 <__ftoa_engine+0x14c>
    1b6e:	10 c0       	rjmp	.+32     	; 0x1b90 <__ftoa_engine+0x174>
    1b70:	7d 93       	st	X+, r23
    1b72:	2a 95       	dec	r18
    1b74:	89 f6       	brne	.-94     	; 0x1b18 <__ftoa_engine+0xfc>
    1b76:	06 94       	lsr	r0
    1b78:	97 95       	ror	r25
    1b7a:	67 95       	ror	r22
    1b7c:	37 95       	ror	r19
    1b7e:	17 95       	ror	r17
    1b80:	17 94       	ror	r1
    1b82:	e1 18       	sub	r14, r1
    1b84:	f1 0a       	sbc	r15, r17
    1b86:	43 0b       	sbc	r20, r19
    1b88:	56 0b       	sbc	r21, r22
    1b8a:	c9 0b       	sbc	r28, r25
    1b8c:	d0 09       	sbc	r29, r0
    1b8e:	98 f0       	brcs	.+38     	; 0x1bb6 <__ftoa_engine+0x19a>
    1b90:	23 95       	inc	r18
    1b92:	7e 91       	ld	r23, -X
    1b94:	73 95       	inc	r23
    1b96:	7a 33       	cpi	r23, 0x3A	; 58
    1b98:	08 f0       	brcs	.+2      	; 0x1b9c <__ftoa_engine+0x180>
    1b9a:	70 e3       	ldi	r23, 0x30	; 48
    1b9c:	7c 93       	st	X, r23
    1b9e:	20 13       	cpse	r18, r16
    1ba0:	b8 f7       	brcc	.-18     	; 0x1b90 <__ftoa_engine+0x174>
    1ba2:	7e 91       	ld	r23, -X
    1ba4:	70 61       	ori	r23, 0x10	; 16
    1ba6:	7d 93       	st	X+, r23
    1ba8:	30 f0       	brcs	.+12     	; 0x1bb6 <__ftoa_engine+0x19a>
    1baa:	83 95       	inc	r24
    1bac:	71 e3       	ldi	r23, 0x31	; 49
    1bae:	7d 93       	st	X+, r23
    1bb0:	70 e3       	ldi	r23, 0x30	; 48
    1bb2:	2a 95       	dec	r18
    1bb4:	e1 f7       	brne	.-8      	; 0x1bae <__ftoa_engine+0x192>
    1bb6:	11 24       	eor	r1, r1
    1bb8:	ef 90       	pop	r14
    1bba:	ff 90       	pop	r15
    1bbc:	0f 91       	pop	r16
    1bbe:	1f 91       	pop	r17
    1bc0:	cf 91       	pop	r28
    1bc2:	df 91       	pop	r29
    1bc4:	99 27       	eor	r25, r25
    1bc6:	87 fd       	sbrc	r24, 7
    1bc8:	90 95       	com	r25
    1bca:	08 95       	ret

00001bcc <_exit>:
    1bcc:	f8 94       	cli

00001bce <__stop_program>:
    1bce:	ff cf       	rjmp	.-2      	; 0x1bce <__stop_program>
